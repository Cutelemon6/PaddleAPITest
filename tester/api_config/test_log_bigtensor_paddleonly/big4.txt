paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=30, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(bool), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(float32), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(float64), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(uint8), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 3, 3, 59652324],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 3, 59652324, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 59652324, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(bool), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(float32), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(float64), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(uint8), )
paddle.nn.functional.sequence_mask(Tensor([2, 39768216, 3, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"float64"), maxlen=20, )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"int64"), 10, Dtype(float64), None, )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"int64"), 12, Dtype(float64), None, )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"int64"), 12, VarType(float64), None, )
paddle.nn.functional.sequence_mask(Tensor([39768216, 2, 3, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([4294967295],"int32"), )
paddle.nn.functional.sequence_mask(Tensor([4294967295],"int32"), maxlen=4, dtype="float32", )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=-1, dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=10, dtype=VarType(bool), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=10, dtype=VarType(float32), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=10, dtype=VarType(float64), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=10, dtype=VarType(int32), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=10, dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=10, dtype=VarType(uint8), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=30, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(bool), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(float32), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(float64), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(int32), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([715827883, 3],"int64"), maxlen=Tensor([1],"int32"), dtype=VarType(uint8), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([108, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([11, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([110484, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([117, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([1200, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([122760, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([135036, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([1620, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 39768216],"float32"), Tensor([108, 39768216],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 39768216],"float32"), Tensor([108, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 4],"float32"), Tensor([108, 39768216],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 390451573],"float32"), Tensor([11, 390451573],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 390451573],"float32"), Tensor([11, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 4],"float32"), Tensor([11, 390451573],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 38875],"float32"), Tensor([110484, 38875],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 38875],"float32"), Tensor([110484, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 4],"float32"), Tensor([110484, 38875],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 36709123],"float32"), Tensor([117, 36709123],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 36709123],"float32"), Tensor([117, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 4],"float32"), Tensor([117, 36709123],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 3579140],"float32"), Tensor([1200, 3579140],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 3579140],"float32"), Tensor([1200, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 4],"float32"), Tensor([1200, 3579140],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 34987],"float32"), Tensor([122760, 34987],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 34987],"float32"), Tensor([122760, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 4],"float32"), Tensor([122760, 34987],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 31807],"float32"), Tensor([135036, 31807],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 31807],"float32"), Tensor([135036, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 4],"float32"), Tensor([135036, 31807],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 2651215],"float32"), Tensor([1620, 2651215],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 2651215],"float32"), Tensor([1620, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 4],"float32"), Tensor([1620, 2651215],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 22492],"float32"), Tensor([190960, 22492],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 22492],"float32"), Tensor([190960, 80],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 80],"float32"), Tensor([190960, 22492],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 80],"float32"), Tensor([53687092, 80],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3],"float32"), Tensor([2, 3],"float32"), normalizer=Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 20447],"float32"), Tensor([210056, 20447],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 20447],"float32"), Tensor([210056, 80],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 80],"float32"), Tensor([210056, 20447],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 80],"float32"), Tensor([53687092, 80],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2147483648, 2],"float32"), label=Tensor([5, 2],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 2],"float32"), label=Tensor([2147483648, 2],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 2],"float32"), label=Tensor([5, 2],"float32"), normalizer=Tensor([4294967295],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 2],"float32"), label=Tensor([5, 858993459],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 858993459],"float32"), label=Tensor([5, 2],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([53687092, 80],"float32"), Tensor([190960, 80],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([53687092, 80],"float32"), Tensor([210056, 80],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([53687092, 80],"float32"), Tensor([53687092, 80],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float16"), Tensor([10, 429496730],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float32"), Tensor([10, 429496730],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 429496730],"float16"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 429496730],"float32"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float16"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float16"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4],"float16"), Tensor([1014, 4235668],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4235668],"float16"), Tensor([1014, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4235668],"float16"), Tensor([1014, 4235668],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([1014, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float32"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float32"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741825, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741825, 2],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741825, 2],"float64"), Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1556],"float32"), Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([17530479, 5, 7, 7],"float32"), Tensor([17530479, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([17530479, 5, 7, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 2243975],"float32"), Tensor([1914, 2243975],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 2243975],"float32"), Tensor([1914, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 50],"float32"), Tensor([1914, 2243975],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 50],"float32"), Tensor([85899346, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 21474837],"float32"), Tensor([200, 21474837],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 21474837],"float32"), Tensor([200, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 50],"float32"), Tensor([200, 21474837],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 50],"float32"), Tensor([85899346, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2160],"float32"), Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 1132640],"float32"), Tensor([24, 158, 1132640],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 1132640],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([24, 158, 1132640],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([24, 22369622, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([3397918, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 22369622, 8],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 22369622, 8],"float32"), Tensor([24, 22369622, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2870968, 187, 8],"float32"), Tensor([2870968, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2870968, 187, 8],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([3397918, 158, 8],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([3397918, 158, 8],"float32"), Tensor([3397918, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4],"float32"), Tensor([4294967295],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([1556],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([2160],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), label=Tensor([5, 429496730],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), Tensor([1073741825, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 429496730],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 429496730],"float64"), label=Tensor([5, 429496730],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 429496730],"float64"), Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5113057, 105, 8],"float32"), Tensor([5113057, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5113057, 105, 8],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5212339, 103, 8],"float32"), Tensor([5212339, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5212339, 103, 8],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5263441, 102, 8],"float32"), Tensor([5263441, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5263441, 102, 8],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 358871],"float32"), Tensor([64, 187, 358871],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 358871],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([2870968, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([64, 187, 358871],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([64, 8388608, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 8388608, 8],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 8388608, 8],"float32"), Tensor([64, 8388608, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 50000],"float32"), Tensor([7, 613566757],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 50000],"float32"), Tensor([85900, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 613566757],"float32"), Tensor([7, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 613566757],"float32"), Tensor([7, 613566757],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 5263441],"float32"), Tensor([8, 102, 5263441],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 5263441],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([5263441, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([8, 102, 5263441],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 5212339],"float32"), Tensor([8, 103, 5212339],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 5212339],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([5212339, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([8, 103, 5212339],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 5113057],"float32"), Tensor([8, 105, 5113057],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 5113057],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([5113057, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([8, 105, 5113057],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 10956550, 7, 7],"float32"), Tensor([8, 10956550, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 10956550, 7, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 15339169, 7],"float32"), Tensor([8, 5, 15339169, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 15339169, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 15339169],"float32"), Tensor([8, 5, 7, 15339169],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 15339169],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([17530479, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 10956550, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 5, 15339169, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 5, 7, 15339169],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([85899346, 50],"float32"), Tensor([1914, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([85899346, 50],"float32"), Tensor([200, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([85899346, 50],"float32"), Tensor([85899346, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([85900, 50000],"float32"), Tensor([7, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([85900, 50000],"float32"), Tensor([85900, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"int64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"int64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"int64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"int64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"int64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"int64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"int64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"int64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"int64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="sum", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), "none", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), "sum", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="mean", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="none", )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="sum", )
paddle.nn.functional.softmax(Tensor([1, 107374183, 2, 5, 4],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 3, 2, 5, 143165577],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 3, 71582789, 5, 4],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 4294967295],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([10, 1, 429496730],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 1, 429496730],"float32"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 119305, 3600],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 18348, 153, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 21620, 154, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 26562, 154, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 28940, 153, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 29827, 14400],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 29827, 14400],"float32"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 31542, 153, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 429496730],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([10, 429496730],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 153, 350897],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 154, 348618],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 350897, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 416180, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 511306, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 553476, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 603226, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([100, 42949673],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 42949673],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([1000, 4294968],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([1008, 608698, 7],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([1008, 7, 608698],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([1024, 1747, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 203, 144, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 4, 21400, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 4, 49, 21400],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 6, 14267, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 6, 49, 14267],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 8, 10700, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 8, 144, 3641],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 8, 3641, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([1024, 8, 49, 10700],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([104, 127463, 18, 18],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 127463, 18, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 117324, 22],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 122911, 21],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 122911, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 143396, 18],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 143396, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 18, 143396],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 18, 143396],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 21, 122911],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 21, 122911],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 22, 117324],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 85326, 22, 22],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 93646, 21, 21],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 93646, 21, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 2, )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([1059, 4, 1007, 1007],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([10737419, 16, 5, 5],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([10737419, 4, 10, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([108, 16564, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([108, 6, 135267, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([108, 6, 49, 135267],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([11, 4, 13944700, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([11, 4, 7, 13944700],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([11, 7968400, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([110, 150, 512, 512],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([111802, 1, 16, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([111802, 1, 16, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([112, 165, 232412],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 186, 206172],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 206172, 186],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 232412, 165],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 304349, 126],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([1193047, 1, 3600],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([124147, 186, 186],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([127675, 10, 3364],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([128, 1, 13976, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 13976, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 42800, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 42800, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 49, 42800],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 49, 42800],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 10700, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 10700, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 49, 10700],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 49, 10700],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 874, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 874, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1747, 8, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 33554432],"float32"), )
paddle.nn.functional.softmax(Tensor([128, 3494, 4, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 3494, 4, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 3494, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 8, 21400, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 8, 49, 21400],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 874, 16, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 874, 16, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([13, 11012737, 3, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 326, 1007, 1007],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 3303821, 10, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 3337193, 99],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 10, 8259553],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 1007, 82022],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 11799361, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 11799361, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 4, 2, 41297763],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 20648882, 4],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 3, 27531842],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 41297763, 2],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 5, 1, 16519105],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 5, 2359873, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 7, 11799361],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 4, 82022, 1007],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 8259553, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 41297763, 2, 4],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 6742492, 7, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 7, 47197443],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 82595525, 2, 2],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 9439489, 5, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([131072, 8, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([134217728, 4, 2, 4],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([14, 4, 10956550, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 7, 10956550],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 8, 9586981],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 9586981, 8],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4793491, 8, 8],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 5478275, 8, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 6260886, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([1431655765, 3, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([1431655765, 3],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([1431655765, 3],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([1431655765, 3],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([1431655765, 3],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([1431655765, 3],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([1431655765, 3],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([157759, 165, 165],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([157904, 17, 400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 10, 26843546],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 2, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([16, 11, 381301, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 11, 64, 381301],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 134217729],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 134217729],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([16, 134217729],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 2, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([16, 65536, 64, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 79797, 3364],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([16208, 40, 6625],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([16777216, 256, 1],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([16777216, 256, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16777216, 4, 8, 8],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([16777217, 128],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16777217, 128],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([16777217, 128],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([178956971, 3, 4],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([178956971, 3, 4],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([178956971, 3, 4],"float64"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([178956971, 3, 4],"float64"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([17895698, 6, 5, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([1814, 1, 81, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([182, 23598722, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([182, 23598722],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([182, 3, 7866241],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([183264, 186, 126],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([19173962, 4, 8, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([2, 1, 2147483648],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 1048576, 2048],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([2, 1073741825],"float64"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 107374183, 4, 5],"float32"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 107374183, 4, 5],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([2, 107374183, 4, 5],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([2, 1342178, 400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 16, 1, 134217728],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 10, 13421773],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 13421773, 10],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 19173962, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 22369622, 6],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 26843546, 5],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 5, 26843546],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16647161, 1, 129],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 17, 1600, 78952],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 17, 31580642, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 17, 400, 315807],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 17, 6400, 19738],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 20648882, 104],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 20849356, 103],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 21053762, 102],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 21262215, 101],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 2147483648],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 21474837, 10, 10],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 21474837, 100],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2, 262144, 64, 128],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 268435456, 8],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 268435457, 4],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 268435457, 4],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 268435457, 4],"float64"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 268435457, 4],"float64"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([2, 268435457, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 143165577, 5],"float32"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 143165577, 5],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([2, 3, 143165577, 5],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 5, 71582789],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 5, 71582789],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 71582789, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 71582789, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 28633116, 5, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 3, 28633116, 5, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 357913942],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 357913942],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 357913942],"float64"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 357913942],"float64"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 4, 178956971],"float32"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 4, 178956971],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([2, 3, 4, 178956971],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 300, 7158279],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([2, 306783379, 1, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 33038210, 1, 65],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 335545, 1600, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 357913942, 1, 6],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 42949673, 2, 5, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 42949673, 2, 5, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 524288, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 53687092, 5, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 178956971],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 44739243, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 5, 35791395],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 8, 1, 268435456],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 2080896, 129],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 2097152, 128],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 268435456],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 4129777, 65],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 4194304, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 64, 4194304],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 83887, 6400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 85899346, 5, 5],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([206589, 165, 126],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2147483649],"float64"), axis=-1, )
paddle.nn.functional.softmax(Tensor([214748365, 20],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([21913099, 4, 7, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([21913099, 4, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([223604, 8, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([22935, 8, 153, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([24, 178956971, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([24, 256, 699051],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([252645135, 17],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([252645135, 17],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([256, 8388609],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([25891, 8, 144, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([25928, 25, 6626],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([268435456, 16],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([268435456, 4, 2, 2],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([2684355, 16, 10, 10],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([27025, 8, 154, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([27951, 16, 4, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([27951, 16, 4, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([28633116, 3, 2, 5, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([28633116, 3, 2, 5, 5],"float32"), )
paddle.nn.functional.softmax(Tensor([298138, 6, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([298262, 1, 14400],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([298262, 1, 14400],"float32"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([3, 16, 1398102, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([3, 16, 64, 1398102],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([3, 349526, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([30678338, 4, 5, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([32, 134217728, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([32, 256, 524288],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([33202, 8, 154, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=0, dtype="float64", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=-1, dtype="float64", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([35791395, 3, 2, 5, 4],"float32"), )
paddle.nn.functional.softmax(Tensor([35791395, 4, 3, 10],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([36175, 8, 153, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([38347923, 16, 1, 7],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([39427, 8, 153, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([39476, 17, 1600, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 1, 36730, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1, 81, 42625, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1, 81, 94, 141023],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1073741824, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 137, 7837532],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 146446, 7332],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 150, 13982, 512],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 150, 512, 13982],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 188, 5711393],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 21474837, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 21913099, 7, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([4, 256, 4194304],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 4, 268435456],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 4, 268435456],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4, 4, 38347923, 7],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([4, 4, 7, 38347923],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([4, 4096, 512, 512],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 454, 81, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 67108864, 16],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 67108864, 16],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4, 81, 13256072],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([41297763, 1, 104],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([4161791, 8, 1, 129],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([41698712, 1, 103],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([42107523, 1, 102],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([42107523, 102],"float16"), )
paddle.nn.functional.softmax(Tensor([42107523, 102],"float32"), )
paddle.nn.functional.softmax(Tensor([42524429, 1, 101],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([4294967295],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4294967295],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([42949673, 1, 100],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([42949673, 100],"float32"), )
paddle.nn.functional.softmax(Tensor([429496730, 10],"float32"), )
paddle.nn.functional.softmax(Tensor([429496730, 10],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([429496730, 10],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([447207, 4, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([44739243, 16, 1, 6],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([456912, 188, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([5, 858993459],"float32"), axis=-1, dtype=VarType(float32), )
paddle.nn.functional.softmax(Tensor([52, 2359873, 5, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([52, 4, 2949841, 1, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([52, 4, 5, 1, 4129777],"float32"), )
paddle.nn.functional.softmax(Tensor([52, 4, 5, 589969, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([536870912, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([536871, 8000],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([554619, 16, 22, 22],"float16"), )
paddle.nn.functional.softmax(Tensor([55901, 4, 8, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([608698, 16, 21, 21],"float16"), )
paddle.nn.functional.softmax(Tensor([608698, 16, 21, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([6197645, 7, 99],"float32"), )
paddle.nn.functional.softmax(Tensor([627003, 137, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 10129, 6626],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([64, 10130, 6625],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([64, 25, 2684355],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([64, 256, 262144],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([64, 40, 1677722],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([64, 67108864, 1],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([65536, 16, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([65536, 8, 64, 128],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([67108864, 4, 16],"float32"), )
paddle.nn.functional.softmax(Tensor([67108864, 4, 16],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([67108864, 8, 8],"float32"), )
paddle.nn.functional.softmax(Tensor([6991, 300, 2048],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([715827883, 3],"float64"), axis=-1, )
paddle.nn.functional.softmax(Tensor([71582789, 3, 4, 5],"float32"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([71582789, 3, 4, 5],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([71582789, 3, 4, 5],"float32"), dtype=type(numpy.float64), )
paddle.nn.functional.softmax(Tensor([7232, 81, 7332],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([8259553, 8, 1, 65],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([82811, 51865],"float32"), axis=-1, dtype=VarType(float32), )
paddle.nn.functional.softmax(Tensor([828505, 16, 18, 18],"float16"), )
paddle.nn.functional.softmax(Tensor([828505, 16, 18, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([87652394, 7, 7],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([89478486, 6, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([95326, 11, 64, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([9869, 17, 6400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([13, 2294321, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([13, 4, 12, 6882961],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([13, 4, 6882961, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 1864136, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 4, 12, 5592406],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 4, 5592406, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([178956971, 3, 4],"float64"), )
paddle.nn.functional.softmax(x=Tensor([178956971, 3, 4],"float64"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([178956971, 3, 4],"float64"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([178956971, 3, 4],"float64"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([2, 268435457, 4],"float64"), )
paddle.nn.functional.softmax(x=Tensor([2, 268435457, 4],"float64"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([2, 268435457, 4],"float64"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 268435457, 4],"float64"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 357913942],"float64"), )
paddle.nn.functional.softmax(x=Tensor([2, 3, 357913942],"float64"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 357913942],"float64"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 357913942],"float64"), axis=2, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 715827883],"float32"), )
paddle.nn.functional.softmax(x=Tensor([2, 536870912, 4],"float32"), )
paddle.nn.functional.softmax(x=Tensor([3, 4, 12, 29826162],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([3, 4, 29826162, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([3, 9942054, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([32, 4, 12, 2796203],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([32, 4, 2796203, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([32, 932068, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([357913942, 3, 4],"float32"), )
paddle.nn.functional.softmax(x=Tensor([4, 4, 12, 22369622],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([4, 4, 22369622, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([4, 7456541, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([7456541, 4, 12, 12],"float32"), axis=-1, )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 2147483648],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 2147483648],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([4294967295, 1],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([4294967295, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([3, 2, 1, 357913942],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([3, 2, 178956971, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([3, 357913942, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([536870913, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 357913942],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 357913942],"float64"), label=Tensor([3, 2, 1, 357913942],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 178956971, 2],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 178956971, 2],"float64"), label=Tensor([3, 2, 178956971, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 357913942, 1, 2],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([3, 357913942, 1, 2],"float64"), label=Tensor([3, 357913942, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([429497, 100, 100],"float16"), Tensor([429497, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([429497, 100, 100],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([429497, 100, 100],"float32"), Tensor([429497, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([429497, 100, 100],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([536870913, 2, 1, 2],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([536870913, 2, 1, 2],"float64"), label=Tensor([536870913, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([429497, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([8, 100, 5368710],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([8, 5368710, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([429497, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([8, 100, 5368710],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([8, 5368710, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 5368710],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 5368710],"float16"), Tensor([8, 100, 5368710],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 5368710],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 5368710],"float32"), Tensor([8, 100, 5368710],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 5368710, 100],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 5368710, 100],"float16"), Tensor([8, 5368710, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 5368710, 100],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 5368710, 100],"float32"), Tensor([8, 5368710, 100],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 104858, 40],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 110377, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 116509, 36],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 123362, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 131072, 32],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 32, 131072],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 34, 123362],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 36, 116509],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 38, 110377],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 40, 104858],"float32"), )
paddle.nn.functional.swish(Tensor([1, 2684355, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([1, 2974355, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 3314018, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([1, 3715370, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 4194304, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([104858, 1024, 1, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([104858, 1024, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 1024, 1, 32768],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 1024, 1, 32768],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 1024, 820, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 1024, 820, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 120, 1, 279621],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 120, 1, 279621],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 120, 6991, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 120, 6991, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 128, 1, 262144],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 128, 6554, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 139811, 240],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 139811, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 40, 838861],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 40, 838861],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 838861, 1, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([128, 838861, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([192, 40, 559241],"float16"), None, )
paddle.nn.functional.swish(Tensor([192, 93207, 240],"float16"), None, )
paddle.nn.functional.swish(Tensor([2, 1048576, 2048],"float32"), )
paddle.nn.functional.swish(Tensor([2, 300, 7158279],"float32"), )
paddle.nn.functional.swish(Tensor([209716, 40, 512],"float32"), None, )
paddle.nn.functional.swish(Tensor([2622, 1024, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2905, 1024, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([3237, 1024, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([3629, 1024, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([4, 2097152, 512],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 40, 26843546],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 4473925, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([4096, 1024, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([447393, 40, 240],"float16"), None, )
paddle.nn.functional.swish(Tensor([447393, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([6991, 300, 2048],"float32"), )
paddle.nn.functional.swish(Tensor([838861, 128, 1, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([894785, 120, 1, 40],"float16"), None, )
paddle.nn.functional.swish(Tensor([894785, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(x=Tensor([238609295, 1, 3, 3],"float64"), )
paddle.nn.functional.swish(x=Tensor([23860930, 10, 3, 3],"float64"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 23860930, 3],"float64"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 3, 23860930],"float64"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 3, 47721859],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 10, 47721859, 3],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 159072863, 3, 3],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 79536432, 3, 3],"float64"), )
paddle.nn.functional.swish(x=Tensor([4, 1, 178956971, 3],"float64"), )
paddle.nn.functional.swish(x=Tensor([4, 1, 3, 178956971],"float64"), )
paddle.nn.functional.swish(x=Tensor([4, 59652324, 3, 3],"float64"), )
paddle.nn.functional.swish(x=Tensor([47721859, 10, 3, 3],"float32"), )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 14, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 14, 2341],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 2341, 14],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 2341, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 10700, 56, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 171197, 14, 14],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 171197, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 2341, 7],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 2341, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 7, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 7, 2341],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 2341, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 28, 4682],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 4682, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 56, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 42800, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 684785, 7, 7],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 684785, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([21400, 1024, 14, 14],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([21400, 1024, 14, 14],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([21400, 1024, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([21400, 1024, 14, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([21400, 256, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 1249, 14],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 1249, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 14, 1249],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 14, 1249],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 1249, 7],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 1249, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 7, 1249],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 7, 1249],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 1249, 56],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 56, 1249],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 365219, 7, 7],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 365219, 7, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 5707, 56, 56],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 91305, 14, 14],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 91305, 14, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([32, 171197, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([32, 256, 18725, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([32, 256, 28, 18725],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([42800, 2048, 7, 7],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([42800, 2048, 7, 7],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([42800, 2048, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([42800, 2048, 7, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([5350, 256, 56, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([5350, 256, 56, 56],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(x=Tensor([134217729, 4, 2, 2],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([178956971, 2, 4, 3],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 119304648, 3, 3],"float64"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 119304648, 3, 3],"float64"), seg_num=2, shift_ratio=0.4, data_format="NHWC", )
paddle.nn.functional.temporal_shift(x=Tensor([2, 178956971, 4, 3],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 178956971, 3],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 357913942, 3],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 4, 134217729],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 4, 268435456],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 4, 3, 89478486],"float64"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 4, 3, 89478486],"float64"), seg_num=2, shift_ratio=0.4, data_format="NHWC", )
paddle.nn.functional.temporal_shift(x=Tensor([2, 4, 89478486, 3],"float64"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 4, 89478486, 3],"float64"), seg_num=2, shift_ratio=0.4, data_format="NHWC", )
paddle.nn.functional.temporal_shift(x=Tensor([2, 89478486, 4, 3],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([268435456, 4, 2, 2],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 4, 3, 44739243],"float64"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 4, 44739243, 3],"float64"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 59652324, 3, 3],"float64"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([59652324, 4, 3, 3],"float64"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([59652324, 4, 3, 3],"float64"), seg_num=2, shift_ratio=0.4, data_format="NHWC", )
paddle.nn.functional.temporal_shift(x=Tensor([59652324, 4, 3, 3],"float64"), seg_num=4, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 178956971, 2, 2],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 4, 2, 44739243],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 4, 2, 89478486],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 4, 44739243, 2],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 4, 89478486, 2],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 89478486, 2, 2],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([89478486, 2, 4, 3],"float64"), seg_num=2, )
paddle.nn.functional.thresholded_relu(Tensor([10, 20, 21474837],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([10, 429496730, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([214748365, 20, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 53687092],"float64"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 53687092],"float64"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 71582789, 3],"float64"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 71582789, 3],"float64"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 17895698, 4, 3],"float64"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 17895698, 4, 3],"float64"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 2386093, 3, 3],"float64"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 1789570, 3],"float64"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 1789570],"float64"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3579140],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3579140, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4772186, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([119304648, 4, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([178956971, 1, 4, 3],"float64"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([178956971, 1, 4, 3],"float64"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([59652324, 4, 3, 3],"float64"), )
paddle.nn.functional.unfold(Tensor([1789570, 3, 20, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.nn.functional.unfold(Tensor([3, 1789570, 20, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.nn.functional.unfold(Tensor([3, 3, 11930465, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.nn.functional.unfold(Tensor([3, 3, 20, 11930465],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.nn.functional.zeropad2d(Tensor([14267, 3, 224, 224],"float64"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([28533, 3, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 10700, 224, 224],"float64"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 21400, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 1597831, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 1597831],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 798916],"float64"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 798916, 224],"float64"), list[2,2,2,2,], )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 128],"float16"), Tensor([288, 14913081],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 128],"float16"), Tensor([33554432, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 134217728],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 134217728],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 134217728],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([128, 33554432],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([256, 16777216],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([67108864, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([67108864, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 33554432, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 67108864, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 67108864, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([100, 320],"float16"), weight=Tensor([13421773, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 320],"float16"), weight=Tensor([512, 8388608],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([1024, 4194304],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([512, 8388608],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([640, 6710887],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([8388608, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([8388608, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([8388608, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 256],"float16"), weight=Tensor([16777216, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 256],"float16"), weight=Tensor([64, 67108864],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 42524429],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 42524429],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 42524429],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([128, 33554432],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([67108864, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([67108864, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 41297763],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([1024, 4194304],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([8388608, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([1048576, 32, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([123, 34918434],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 32786010],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([13421773, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 31580642],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 29620465],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 27889399],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([16777216, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 2147483648],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 2147483648],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([1024, 4194304],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([8388608, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([67108864, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 33554432, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 4194304, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2097152, 32, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([2097152, 32, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([5592406, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([67108864, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 74051161],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([4294967295],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([67108864, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 72796056],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67108864, 1, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67108864, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67108864, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 1, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_quantize(Tensor([11008, 390168],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([256, 16777216],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([320, 13421773],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([4194304, 1024],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([512, 8388608],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([5592406, 768],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([67108864, 64],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([8388608, 512],"float16"), algo="weight_only_int8", )
paddle.nonzero(Tensor([1, 2, 28, 76695845],"float32"), )
paddle.nonzero(Tensor([1, 2, 76695845, 28],"float32"), )
paddle.nonzero(Tensor([1, 4294967295],"float32"), )
paddle.nonzero(Tensor([1, 4294967295],"int32"), )
paddle.nonzero(Tensor([1, 5478275, 28, 28],"float32"), )
paddle.nonzero(Tensor([10, 2, 28, 7669585],"float32"), )
paddle.nonzero(Tensor([10, 2, 7669585, 28],"float32"), )
paddle.nonzero(Tensor([10, 429496730],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([10, 547828, 28, 28],"float32"), )
paddle.nonzero(Tensor([106, 51682, 28, 28],"float32"), )
paddle.nonzero(Tensor([106, 80, 18089, 28],"float32"), )
paddle.nonzero(Tensor([106, 80, 28, 18089],"float32"), )
paddle.nonzero(Tensor([10956550, 2, 14, 14],"float32"), )
paddle.nonzero(Tensor([11, 1992100, 14, 14],"float32"), )
paddle.nonzero(Tensor([11, 2, 13944700, 14],"float32"), )
paddle.nonzero(Tensor([11, 2, 14, 13944700],"float32"), )
paddle.nonzero(Tensor([11, 2, 28, 6972350],"float32"), )
paddle.nonzero(Tensor([11, 2, 6972350, 28],"float32"), )
paddle.nonzero(Tensor([11, 498025, 28, 28],"float32"), )
paddle.nonzero(Tensor([1431655765, 3],"float32"), True, )
paddle.nonzero(Tensor([21474837, 200],"float32"), )
paddle.nonzero(Tensor([21913099, 196],"float32"), )
paddle.nonzero(Tensor([22369622, 192],"float32"), )
paddle.nonzero(Tensor([268435457, 2, 2, 2],"float64"), True, )
paddle.nonzero(Tensor([2739138, 2, 28, 28],"float32"), )
paddle.nonzero(Tensor([3, 1431655765],"float32"), True, )
paddle.nonzero(Tensor([3, 178956971, 2, 2],"float64"), True, )
paddle.nonzero(Tensor([3, 2, 178956971, 2],"float64"), True, )
paddle.nonzero(Tensor([3, 2, 2, 178956971],"float64"), True, )
paddle.nonzero(Tensor([4294967295, 1],"int32"), )
paddle.nonzero(Tensor([4294967295],"bool"), )
paddle.nonzero(Tensor([4294967295],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([4294967295],"int32"), True, )
paddle.nonzero(Tensor([42949673, 100],"float32"), )
paddle.nonzero(Tensor([429496730, 10],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([68479, 80, 28, 28],"float32"), )
paddle.nonzero(x=Tensor([12, 357913942],"bfloat16"), )
paddle.nonzero(x=Tensor([1431655765, 3],"float32"), as_tuple=False, )
paddle.nonzero(x=Tensor([1431655765, 3],"int32"), as_tuple=False, )
paddle.nonzero(x=Tensor([153391690, 4, 7],"float16"), )
paddle.nonzero(x=Tensor([153391690, 4, 7],"float32"), )
paddle.nonzero(x=Tensor([2, 10, 214748365],"float32"), )
paddle.nonzero(x=Tensor([2, 1073741824, 2],"float32"), )
paddle.nonzero(x=Tensor([2147483649],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([214748365, 10, 2],"float32"), )
paddle.nonzero(x=Tensor([268435457, 2, 2, 2],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([268435457, 8],"float64"), )
paddle.nonzero(x=Tensor([3, 1431655765],"float32"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 1431655765],"int32"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 178956971, 2, 2],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 2, 178956971, 2],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 2, 2, 178956971],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 204522253, 7],"float16"), )
paddle.nonzero(x=Tensor([3, 204522253, 7],"float32"), )
paddle.nonzero(x=Tensor([3, 4, 357913942],"float16"), )
paddle.nonzero(x=Tensor([3, 4, 357913942],"float32"), )
paddle.nonzero(x=Tensor([3, 715827883],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 715827883],"int64"), as_tuple=False, )
paddle.nonzero(x=Tensor([477218589, 9],"bfloat16"), )
paddle.nonzero(x=Tensor([715827883, 3],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([715827883, 3],"int64"), as_tuple=False, )
paddle.nonzero(x=Tensor([8, 268435457],"float64"), )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.not_equal(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.not_equal(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.not_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.not_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.not_equal(Tensor([13, 165191050],"int64"), Tensor([13, 165191050],"int64"), )
paddle.not_equal(Tensor([13, 165191050],"int64"), Tensor([13, 7],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 1290556, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 10324441, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 5162221],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 645278, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([8388609, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1290556],"int64"), Tensor([13, 2, 16, 1, 1290556],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1290556],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 5162221, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 5162221, 1],"int64"), Tensor([13, 2, 16, 5162221, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 20648882, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2581111, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 2581111, 16, 4, 1],"int64"), Tensor([13, 2581111, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([13, 7],"int64"), Tensor([13, 165191050],"int64"), )
paddle.not_equal(Tensor([13, 7],"int64"), Tensor([306783379, 7],"int64"), )
paddle.not_equal(Tensor([14, 306783379],"int32"), Tensor([14, 306783379],"int32"), )
paddle.not_equal(Tensor([14, 306783379],"int32"), Tensor([14, 7],"int32"), )
paddle.not_equal(Tensor([14, 7],"int32"), Tensor([14, 306783379],"int32"), )
paddle.not_equal(Tensor([14, 7],"int32"), Tensor([613566757, 7],"int32"), )
paddle.not_equal(Tensor([16777217, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([16777217, 2, 16, 4, 1],"int64"), Tensor([16777217, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([20],"int64"), Tensor([2147483649],"int64"), )
paddle.not_equal(Tensor([2112],"int64"), Tensor([2147483649],"int64"), )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([20],"int64"), )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([2112],"int64"), )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([2944],"int64"), )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([4224],"int64"), )
paddle.not_equal(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.not_equal(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.not_equal(Tensor([2944],"int64"), Tensor([2147483649],"int64"), )
paddle.not_equal(Tensor([306783379, 7],"int64"), Tensor([13, 7],"int64"), )
paddle.not_equal(Tensor([306783379, 7],"int64"), Tensor([306783379, 7],"int64"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.not_equal(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.not_equal(Tensor([4224],"int64"), Tensor([2147483649],"int64"), )
paddle.not_equal(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.not_equal(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.not_equal(Tensor([613566757, 7],"int32"), Tensor([14, 7],"int32"), )
paddle.not_equal(Tensor([613566757, 7],"int32"), Tensor([613566757, 7],"int32"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 238609295, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 238609295, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 238609295, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([238609295, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), y=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), y=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 238609295, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 238609295, 3, 3],"float64"), y=Tensor([1, 1, 1, 238609295, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 1, 238609295, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 238609295, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 238609295, 1, 3, 3],"float64"), y=Tensor([1, 1, 238609295, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 1, 238609295, 1, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.not_equal(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.not_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.not_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.not_equal(x=Tensor([1, 238609295, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 238609295, 1, 1, 3, 3],"float64"), y=Tensor([1, 238609295, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 238609295, 1, 1, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 1, 3, 715827883],"float64"), )
paddle.not_equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 1, 715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 238609295, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 238609295, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 3],"float64"), y=Tensor([238609295, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([1, 715827883, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.not_equal(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.not_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.not_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.not_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.not_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.not_equal(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.not_equal(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.not_equal(x=Tensor([238609295, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([238609295, 1, 1, 1, 3, 3],"float64"), y=Tensor([238609295, 1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([238609295, 1, 1, 1, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.not_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.not_equal(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.not_equal(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([1, 3],"float64"), )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([1, 715827883],"float64"), )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3],"float64"), )
paddle.not_equal(x=Tensor([357913942, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([1, 1, 1, 3, 3],"float64"), )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([1, 3],"float64"), )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3],"float64"), )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.numel(Tensor([1, 1, 2147483649],"float64"), )
paddle.numel(Tensor([1, 1, 4294967295],"float32"), )
paddle.numel(Tensor([1, 107374183, 4, 10],"float32"), )
paddle.numel(Tensor([1, 119304648, 36],"float32"), )
paddle.numel(Tensor([1, 2147483649],"float64"), )
paddle.numel(Tensor([1, 3, 143165577, 10],"float32"), )
paddle.numel(Tensor([1, 3, 4, 178956971],"float64"), )
paddle.numel(Tensor([1, 3, 4, 357913942],"float32"), )
paddle.numel(Tensor([1, 3, 71582789, 10],"float64"), )
paddle.numel(Tensor([1, 4294967295, 1],"float32"), )
paddle.numel(Tensor([1, 4294967295],"float16"), )
paddle.numel(Tensor([1, 4294967295],"float32"), )
paddle.numel(Tensor([1, 53687092, 4, 10],"float64"), )
paddle.numel(Tensor([1, 715827883, 3],"float64"), )
paddle.numel(Tensor([1, 79536432, 54],"float32"), )
paddle.numel(Tensor([1, 95443718, 45],"float32"), )
paddle.numel(Tensor([1073741824, 4],"float32"), )
paddle.numel(Tensor([119304648, 1, 36],"float32"), )
paddle.numel(Tensor([134217728, 32, 1, 1],"float32"), )
paddle.numel(Tensor([16, 1, 1, 268435456],"float32"), )
paddle.numel(Tensor([16, 1, 268435456, 1],"float32"), )
paddle.numel(Tensor([16, 16, 3, 5592406],"float32"), )
paddle.numel(Tensor([16, 16, 5592406, 3],"float32"), )
paddle.numel(Tensor([16, 268435456, 1, 1],"float32"), )
paddle.numel(Tensor([16, 29826162, 3, 3],"float32"), )
paddle.numel(Tensor([16, 32, 1, 8388608],"float32"), )
paddle.numel(Tensor([16, 32, 8388608, 1],"float32"), )
paddle.numel(Tensor([17895698, 3, 4, 10],"float64"), )
paddle.numel(Tensor([2, 1, 134217728, 4, 4],"float32"), )
paddle.numel(Tensor([2, 1, 512, 1048576, 4],"float32"), )
paddle.numel(Tensor([2, 1, 512, 4, 1048576],"float32"), )
paddle.numel(Tensor([2, 262144, 512, 4, 4],"float32"), )
paddle.numel(Tensor([214748365, 10],"float64"), )
paddle.numel(Tensor([262144, 2, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([29826162, 16, 3, 3],"float32"), )
paddle.numel(Tensor([35791395, 3, 4, 10],"float32"), )
paddle.numel(Tensor([4, 131072, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([4, 2, 1, 33554432, 4, 4],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 262144, 4],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 4, 262144],"float32"), )
paddle.numel(Tensor([4, 2, 65536, 512, 4, 4],"float32"), )
paddle.numel(Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.numel(Tensor([4294967295, 1, 1],"float32"), )
paddle.numel(Tensor([4294967295, 1],"float32"), )
paddle.numel(Tensor([4294967295],"bool"), )
paddle.numel(Tensor([4294967295],"float32"), )
paddle.numel(Tensor([429496730, 10],"float16"), )
paddle.numel(Tensor([524288, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([536870913, 4],"float64"), )
paddle.numel(Tensor([715827883, 1, 3],"float64"), )
paddle.numel(Tensor([79536432, 1, 54],"float32"), )
paddle.numel(Tensor([95443718, 1, 45],"float32"), )
paddle.numel(x=Tensor([4, 1073741824],"float16"), )
paddle.numel(x=Tensor([4, 1073741824],"float32"), )
paddle.numel(x=Tensor([4, 1073741824],"int32"), )
paddle.numel(x=Tensor([4, 536870913],"float64"), )
paddle.numel(x=Tensor([4, 536870913],"int64"), )
paddle.numel(x=Tensor([429496730, 5],"float64"), )
paddle.numel(x=Tensor([429496730, 5],"int64"), )
paddle.numel(x=Tensor([858993459, 5],"float16"), )
paddle.numel(x=Tensor([858993459, 5],"float32"), )
paddle.numel(x=Tensor([858993459, 5],"int32"), )
paddle.ones_like(Tensor([1, 1, 4294967295],"int32"), dtype=VarType(float32), )
paddle.ones_like(Tensor([1, 1073741825, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([1, 2147483649],"int64"), dtype="bool", )
paddle.ones_like(Tensor([1, 2147483649],"int64"), dtype="int64", )
paddle.ones_like(Tensor([1, 2147483649],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([1, 3, 2, 715827883],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 3, 357913942, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 3, 715827883],"float64"), dtype="float64", )
paddle.ones_like(Tensor([1, 4294967295, 1],"int32"), dtype=VarType(float32), )
paddle.ones_like(Tensor([1, 536870912, 2, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1073741824, 2, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([1073741824, 2, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([107374183, 20],"int64"), dtype="int64", )
paddle.ones_like(Tensor([12, 357913942],"int32"), dtype="int64", )
paddle.ones_like(Tensor([128, 16777217],"int64"), dtype="int64", )
paddle.ones_like(Tensor([13, 165191050],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([13, 330382100],"int32"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([14, 153391690],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([1431655765, 3],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([1431655765, 3],"bool"), dtype="bool", )
paddle.ones_like(Tensor([1431655765, 3],"float16"), dtype="bool", )
paddle.ones_like(Tensor([1431655765, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([1431655765, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([16777217, 128],"int64"), dtype="int64", )
paddle.ones_like(Tensor([178956971, 3, 2, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([178956971, 3, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 1, 1073741824, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1, 5, 429496730],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1073741824, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 1073741824, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1073741825],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 107374183, 5, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 107374183, 5, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 1073741824],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 1073741824],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 536870913],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 2147483648],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([2, 2147483648],"bool"), dtype="bool", )
paddle.ones_like(Tensor([2, 2147483648],"float16"), dtype="bool", )
paddle.ones_like(Tensor([2, 2147483648],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2147483648],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 214748365, 5, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 268435457, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 178956971, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 178956971, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 357913942],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 5, 143165577],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 5, 143165577],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 5, 71582789],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 715827883],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 715827883],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 89478486, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 357913942, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 429496730, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 429496730, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 536870912, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 536870912, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 536870913, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 53687092, 5, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 715827883, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 715827883, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2147483649, 1],"int64"), dtype="bool", )
paddle.ones_like(Tensor([2147483649, 1],"int64"), dtype="int64", )
paddle.ones_like(Tensor([2147483649, 1],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([2147483649],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2147483649],"int64"), dtype="int32", )
paddle.ones_like(Tensor([286331153, 3, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([286331153, 3, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([306783379, 7],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([357913942, 2, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([357913942, 3, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([357913942, 3, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([357913942, 3, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([35791395, 3, 5, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([4294967295, 1, 1],"int32"), dtype=VarType(float32), )
paddle.ones_like(Tensor([4294967295],"float16"), dtype="float16", )
paddle.ones_like(Tensor([4294967295],"float32"), dtype="float32", )
paddle.ones_like(Tensor([429496730, 1, 5, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([429496730, 5],"int64"), dtype="bool", )
paddle.ones_like(Tensor([429496730, 5],"int64"), dtype="int64", )
paddle.ones_like(Tensor([536870913, 2, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([613566757, 7],"int32"), dtype="int64", )
paddle.ones_like(Tensor([613566757, 7],"int32"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([715827883, 2, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([715827883, 2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([715827883, 3, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([715827883, 3, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([715827883, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([715827883, 3],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([71582789, 3, 5, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([71582789, 3, 5, 4],"float32"), dtype="float32", )
paddle.outer(Tensor([20, 107374183],"float64"), Tensor([50],"float64"), )
paddle.outer(Tensor([20, 50],"float64"), Tensor([2147483649],"float64"), )
paddle.outer(Tensor([21474837, 10, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.outer(Tensor([42949673, 50],"float64"), Tensor([50],"float64"), )
paddle.outer(Tensor([5, 10, 10],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.outer(Tensor([5, 10, 10],"float64"), Tensor([214748365, 10],"float64"), )
paddle.outer(Tensor([5, 10, 42949673],"float64"), Tensor([2, 10],"float64"), )
paddle.outer(Tensor([5, 42949673, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.outer(x=Tensor([1, 2147483649],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.outer(x=Tensor([1, 2147483649],"float64"), y=Tensor([1, 4],"float64"), )
paddle.outer(x=Tensor([1, 4],"float32"), y=Tensor([1, 4294967295],"float32"), )
paddle.outer(x=Tensor([1, 4],"float32"), y=Tensor([1073741824, 4],"float32"), )
paddle.outer(x=Tensor([1, 4],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.outer(x=Tensor([1, 4],"float64"), y=Tensor([536870913, 4],"float64"), )
paddle.outer(x=Tensor([1, 4294967295],"float32"), y=Tensor([1, 4],"float32"), )
paddle.outer(x=Tensor([1, 4294967295],"float32"), y=Tensor([1, 4294967295],"float32"), )
paddle.outer(x=Tensor([1073741824, 4],"float32"), y=Tensor([1, 4],"float32"), )
paddle.outer(x=Tensor([1073741824, 4],"float32"), y=Tensor([1073741824, 4],"float32"), )
paddle.outer(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.outer(x=Tensor([107374183, 2, 5, 2],"float64"), y=Tensor([107374183, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([107374183, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([2147483649, 1],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.outer(x=Tensor([2147483649, 1],"float64"), y=Tensor([4, 1],"float64"), )
paddle.outer(x=Tensor([357913942, 2, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.outer(x=Tensor([357913942, 2, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.outer(x=Tensor([4, 1],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.outer(x=Tensor([4, 1],"float64"), y=Tensor([4, 536870913],"float64"), )
paddle.outer(x=Tensor([4, 178956971, 3],"float64"), y=Tensor([4, 178956971, 3],"float64"), )
paddle.outer(x=Tensor([4, 178956971, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.outer(x=Tensor([4, 2, 134217729, 2],"float64"), y=Tensor([2, 3, 134217729, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 134217729, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 268435457],"float64"), y=Tensor([4, 2, 268435457],"float64"), )
paddle.outer(x=Tensor([4, 2, 268435457],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 178956971, 3],"float64"), )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 2, 268435457],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 89478486],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 89478486, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 67108865, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([44739243, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 53687092],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 53687092],"float64"), y=Tensor([2, 3, 4, 53687092],"float64"), )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([178956971, 3, 4],"float64"), )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 268435457, 4],"float64"), )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 3, 357913942],"float64"), )
paddle.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 1],"float64"), )
paddle.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 536870913],"float64"), )
paddle.outer(x=Tensor([4, 53687092, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 53687092, 5, 2],"float64"), y=Tensor([2, 53687092, 4, 4],"float64"), )
paddle.outer(x=Tensor([536870913, 4],"float64"), y=Tensor([1, 4],"float64"), )
paddle.outer(x=Tensor([536870913, 4],"float64"), y=Tensor([536870913, 4],"float64"), )
paddle.polar(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.polar(Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.polar(Tensor([2147483649],"float64"), Tensor([2],"float64"), )
paddle.polar(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.polar(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.polar(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.positive(Tensor([10, 429496730],"float32"), )
paddle.positive(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.positive(Tensor([2, 107374183, 4, 5],"float32"), )
paddle.positive(Tensor([2, 107374183, 4, 5],"int16"), )
paddle.positive(Tensor([2, 107374183, 4, 5],"int32"), )
paddle.positive(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.positive(Tensor([2, 3, 143165577, 5],"float32"), )
paddle.positive(Tensor([2, 3, 143165577, 5],"int16"), )
paddle.positive(Tensor([2, 3, 143165577, 5],"int32"), )
paddle.positive(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.positive(Tensor([2, 3, 4, 178956971],"float32"), )
paddle.positive(Tensor([2, 3, 4, 178956971],"int16"), )
paddle.positive(Tensor([2, 3, 4, 178956971],"int32"), )
paddle.positive(Tensor([2, 3, 4, 89478486],"float64"), )
paddle.positive(Tensor([2, 3, 71582789, 5],"float64"), )
paddle.positive(Tensor([2, 53687092, 4, 5],"float64"), )
paddle.positive(Tensor([35791395, 3, 4, 5],"float64"), )
paddle.positive(Tensor([4194304, 1024],"float32"), )
paddle.positive(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.positive(Tensor([71582789, 3, 4, 5],"float32"), )
paddle.positive(Tensor([71582789, 3, 4, 5],"int16"), )
paddle.positive(Tensor([71582789, 3, 4, 5],"int32"), )
paddle.quantile(Tensor([1431655765, 3],"float32"), list[0.3,0.7,], 1, )
paddle.quantile(Tensor([178956971, 3, 4],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([178956971, 3, 4],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.quantile(Tensor([178956971, 3, 4],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.quantile(Tensor([2, 2147483648],"float32"), list[0.3,0.7,], 1, )
paddle.quantile(Tensor([4, 7, 76695845],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([4, 7, 76695845],"float64"), q=0.75, axis=list[0,2,], )
paddle.quantile(Tensor([4, 89478486, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([4, 89478486, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.quantile(Tensor([4294967295],"float32"), list[0.55,0.7,], 0, )
paddle.quantile(Tensor([5, 107374183, 4],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 107374183, 4],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.quantile(Tensor([5, 107374183, 4],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.quantile(Tensor([5, 3, 143165577],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 3, 143165577],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.quantile(Tensor([5, 3, 143165577],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.quantile(Tensor([51130564, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([51130564, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.quantile(x=Tensor([2982617, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([2982617, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(x=Tensor([3, 5965233, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 5965233, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 2982617, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 2982617, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 3976822, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 3976822, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 1988411, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 1988411, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 4971027],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 4971027],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.rank(input=Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.rank(input=Tensor([1, 1, 1, 2147483649],"int64"), )
paddle.rank(input=Tensor([1, 1, 1, 4294967295],"bool"), )
paddle.rank(input=Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.rank(input=Tensor([1, 1, 1, 4294967295],"int32"), )
paddle.rank(input=Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.rank(input=Tensor([1, 1, 2147483649, 1],"int64"), )
paddle.rank(input=Tensor([1, 1, 4294967295, 1],"bool"), )
paddle.rank(input=Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.rank(input=Tensor([1, 1, 4294967295, 1],"int32"), )
paddle.rank(input=Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.rank(input=Tensor([1, 2147483649, 1, 1],"int64"), )
paddle.rank(input=Tensor([1, 4294967295, 1, 1],"bool"), )
paddle.rank(input=Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.rank(input=Tensor([1, 4294967295, 1, 1],"int32"), )
paddle.rank(input=Tensor([1073741825, 2],"float64"), )
paddle.rank(input=Tensor([2, 1073741825],"float64"), )
paddle.rank(input=Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.rank(input=Tensor([2147483649, 1, 1, 1],"int64"), )
paddle.rank(input=Tensor([2147483649, 1],"float64"), )
paddle.rank(input=Tensor([2147483649],"float64"), )
paddle.rank(input=Tensor([4, 536870913],"float64"), )
paddle.rank(input=Tensor([4294967295, 1, 1, 1],"bool"), )
paddle.rank(input=Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.rank(input=Tensor([4294967295, 1, 1, 1],"int32"), )
paddle.rank(Tensor([3, 1431655765],"float32"), )
paddle.rank(Tensor([858993459, 5],"float32"), )
paddle.reduce_as(Tensor([30, 200, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.reduce_as(Tensor([30, 200, 40],"float32"), Tensor([200, 21474837],"float32"), )
paddle.reduce_as(Tensor([30, 200, 715828],"float32"), Tensor([200, 40],"float32"), )
paddle.reduce_as(Tensor([30, 3579140, 40],"float32"), Tensor([200, 40],"float32"), )
paddle.reduce_as(Tensor([536871, 200, 40],"float32"), Tensor([200, 40],"float32"), )
paddle.remainder(Tensor([1, 1, 2147483649],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 1, 2147483649],"int64"), Tensor([2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 1, 4294967295],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 1, 4294967295],"int32"), Tensor([2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"float32"), Tensor([2, 107374183, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 1, 5],"float32"), Tensor([2, 3, 143165577, 5],"float32"), )
paddle.remainder(Tensor([1, 1, 5],"float32"), Tensor([2, 3, 4, 178956971],"float32"), )
paddle.remainder(Tensor([1, 1, 5],"float32"), Tensor([71582789, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 1, 5],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.remainder(Tensor([1, 1, 5],"float64"), Tensor([2, 3, 71582789, 5],"float64"), )
paddle.remainder(Tensor([1, 1, 5],"float64"), Tensor([2, 53687092, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 1, 5],"float64"), Tensor([35791395, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([2, 107374183, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([2, 3, 143165577, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([2, 3, 4, 178956971],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([71582789, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([2, 3, 4, 89478486],"int64"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([2, 3, 71582789, 5],"int64"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([2, 53687092, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([35791395, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"float32"), Tensor([1, 2, 107374183, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"int32"), Tensor([1, 2, 107374183, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"float32"), Tensor([1, 2, 3, 143165577, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"int32"), Tensor([1, 2, 3, 143165577, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"float32"), Tensor([1, 2, 3, 4, 178956971],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"int32"), Tensor([1, 2, 3, 4, 178956971],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 2, 107374183, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 2, 3, 143165577, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 2, 3, 4, 178956971],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 71582789, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([35791395, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 2, 3, 4, 89478486],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 2, 3, 71582789, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 2, 53687092, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 35791395, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([17895698, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 2, 107374183, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 2, 3, 143165577, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 2, 3, 4, 178956971],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 71582789, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([35791395, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 2, 3, 4, 89478486],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 2, 3, 71582789, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 2, 53687092, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 35791395, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([17895698, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"float64"), Tensor([1, 2, 3, 4, 89478486],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"int64"), Tensor([1, 2, 3, 4, 89478486],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"float64"), Tensor([1, 2, 3, 71582789, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"int64"), Tensor([1, 2, 3, 71582789, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"float64"), Tensor([1, 2, 53687092, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"int64"), Tensor([1, 2, 53687092, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 3, 1, 1431655765],"float32"), Tensor([2, 1, 4, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 1431655765],"float32"), Tensor([2, 1, 4, 1431655765],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 1431655765],"int32"), Tensor([2, 1, 4, 1],"int32"), )
paddle.remainder(Tensor([1, 3, 1, 1431655765],"int32"), Tensor([2, 1, 4, 1431655765],"int32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([1073741824, 1, 4, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([2, 1, 2147483648, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([2, 1, 4, 536870912],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([2, 536870912, 4, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float64"), Tensor([2, 1, 1073741825, 1],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float64"), Tensor([2, 1, 4, 268435457],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float64"), Tensor([2, 268435457, 4, 1],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float64"), Tensor([536870913, 1, 4, 1],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([1073741824, 1, 4, 1],"int32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([2, 1, 2147483648, 1],"int32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([2, 1, 4, 536870912],"int32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([2, 536870912, 4, 1],"int32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int64"), Tensor([2, 1, 1073741825, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int64"), Tensor([2, 1, 4, 268435457],"int64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int64"), Tensor([2, 268435457, 4, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"int64"), Tensor([536870913, 1, 4, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 1, 715827883],"float64"), Tensor([2, 1, 4, 1],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 715827883],"float64"), Tensor([2, 1, 4, 715827883],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 715827883],"int64"), Tensor([2, 1, 4, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 1, 715827883],"int64"), Tensor([2, 1, 4, 715827883],"int64"), )
paddle.remainder(Tensor([1, 3, 143165577, 5],"float64"), Tensor([2, 1, 143165577, 1],"float64"), )
paddle.remainder(Tensor([1, 3, 143165577, 5],"float64"), Tensor([2, 1, 4, 1],"float64"), )
paddle.remainder(Tensor([1, 3, 143165577, 5],"int64"), Tensor([2, 1, 143165577, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 143165577, 5],"int64"), Tensor([2, 1, 4, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 286331153, 5],"float32"), Tensor([2, 1, 286331153, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 286331153, 5],"float32"), Tensor([2, 1, 4, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 286331153, 5],"int32"), Tensor([2, 1, 286331153, 1],"int32"), )
paddle.remainder(Tensor([1, 3, 286331153, 5],"int32"), Tensor([2, 1, 4, 1],"int32"), )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"float64"), Tensor([1, 35791395, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"int64"), Tensor([1, 35791395, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 429496730, 1, 5],"float64"), Tensor([2, 1, 4, 1],"float64"), )
paddle.remainder(Tensor([1, 429496730, 1, 5],"float64"), Tensor([2, 429496730, 4, 1],"float64"), )
paddle.remainder(Tensor([1, 429496730, 1, 5],"int64"), Tensor([2, 1, 4, 1],"int64"), )
paddle.remainder(Tensor([1, 429496730, 1, 5],"int64"), Tensor([2, 429496730, 4, 1],"int64"), )
paddle.remainder(Tensor([1, 429496730, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([1, 429496730, 5],"int64"), Tensor([2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"float32"), Tensor([1, 71582789, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"int32"), Tensor([1, 71582789, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 858993459, 1, 5],"float32"), Tensor([2, 1, 4, 1],"float32"), )
paddle.remainder(Tensor([1, 858993459, 1, 5],"float32"), Tensor([2, 858993459, 4, 1],"float32"), )
paddle.remainder(Tensor([1, 858993459, 1, 5],"int32"), Tensor([2, 1, 4, 1],"int32"), )
paddle.remainder(Tensor([1, 858993459, 1, 5],"int32"), Tensor([2, 858993459, 4, 1],"int32"), )
paddle.remainder(Tensor([1, 858993459, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([1, 858993459, 5],"int32"), Tensor([2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1],"int32"), Tensor([4294967295],"int32"), )
paddle.remainder(Tensor([1073741824, 1, 4, 1],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([1073741824, 1, 4, 1],"float32"), Tensor([1073741824, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([143165577, 3, 1, 5],"float64"), Tensor([143165577, 1, 4, 1],"float64"), )
paddle.remainder(Tensor([143165577, 3, 1, 5],"float64"), Tensor([2, 1, 4, 1],"float64"), )
paddle.remainder(Tensor([143165577, 3, 1, 5],"int64"), Tensor([143165577, 1, 4, 1],"int64"), )
paddle.remainder(Tensor([143165577, 3, 1, 5],"int64"), Tensor([2, 1, 4, 1],"int64"), )
paddle.remainder(Tensor([17895698, 2, 3, 4, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([17895698, 2, 3, 4, 5],"float64"), Tensor([17895698, 2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([17895698, 2, 3, 4, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([17895698, 2, 3, 4, 5],"int64"), Tensor([17895698, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([1, 3, 2147483648, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 4, 1],"float32"), Tensor([1, 3, 1, 1431655765],"float32"), )
paddle.remainder(Tensor([2, 1, 4, 1],"float32"), Tensor([1, 3, 286331153, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 4, 1],"float32"), Tensor([1, 858993459, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 4, 1],"float32"), Tensor([286331153, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 4, 536870912],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 4, 536870912],"float32"), Tensor([1, 3, 1, 536870912],"float32"), )
paddle.remainder(Tensor([2, 107374183, 4, 5],"float32"), Tensor([1, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 107374183, 4, 5],"int32"), Tensor([1, 1, 5],"int32"), )
paddle.remainder(Tensor([2, 3, 143165577, 5],"float32"), Tensor([1, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 3, 143165577, 5],"int32"), Tensor([1, 1, 5],"int32"), )
paddle.remainder(Tensor([2, 3, 4, 178956971],"float32"), Tensor([1, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 3, 4, 178956971],"int32"), Tensor([1, 1, 5],"int32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float32"), Tensor([1, 858993459, 5],"float32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float32"), Tensor([858993459, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float64"), Tensor([1, 429496730, 5],"float64"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float64"), Tensor([429496730, 1, 5],"float64"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int32"), Tensor([1, 1, 4294967295],"int32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int32"), Tensor([1, 858993459, 5],"int32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int32"), Tensor([858993459, 1, 5],"int32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int64"), Tensor([1, 1, 2147483649],"int64"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int64"), Tensor([1, 429496730, 5],"int64"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int64"), Tensor([429496730, 1, 5],"int64"), )
paddle.remainder(Tensor([2, 3, 4, 89478486],"float64"), Tensor([1, 1, 5],"float64"), )
paddle.remainder(Tensor([2, 3, 4, 89478486],"int64"), Tensor([1, 1, 5],"int64"), )
paddle.remainder(Tensor([2, 3, 71582789, 5],"float64"), Tensor([1, 1, 5],"float64"), )
paddle.remainder(Tensor([2, 3, 71582789, 5],"int64"), Tensor([1, 1, 5],"int64"), )
paddle.remainder(Tensor([2, 536870912, 4, 1],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 536870912, 4, 1],"float32"), Tensor([1, 536870912, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 53687092, 4, 5],"float64"), Tensor([1, 1, 5],"float64"), )
paddle.remainder(Tensor([2, 53687092, 4, 5],"int64"), Tensor([1, 1, 5],"int64"), )
paddle.remainder(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), None, )
paddle.remainder(Tensor([2147483649],"int64"), Tensor([4],"int64"), None, )
paddle.remainder(Tensor([268435457, 8],"int64"), Tensor([1],"int64"), )
paddle.remainder(Tensor([286331153, 3, 1, 5],"float32"), Tensor([2, 1, 4, 1],"float32"), )
paddle.remainder(Tensor([286331153, 3, 1, 5],"float32"), Tensor([286331153, 1, 4, 1],"float32"), )
paddle.remainder(Tensor([286331153, 3, 1, 5],"int32"), Tensor([2, 1, 4, 1],"int32"), )
paddle.remainder(Tensor([286331153, 3, 1, 5],"int32"), Tensor([286331153, 1, 4, 1],"int32"), )
paddle.remainder(Tensor([35791395, 2, 3, 4, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([35791395, 2, 3, 4, 5],"float32"), Tensor([35791395, 2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([35791395, 2, 3, 4, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([35791395, 2, 3, 4, 5],"int32"), Tensor([35791395, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([35791395, 3, 4, 5],"float64"), Tensor([1, 1, 5],"float64"), )
paddle.remainder(Tensor([35791395, 3, 4, 5],"int64"), Tensor([1, 1, 5],"int64"), )
paddle.remainder(Tensor([4, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.remainder(Tensor([4, 536870913],"int64"), Tensor([1],"int64"), )
paddle.remainder(Tensor([4, 8],"int64"), Tensor([2147483649],"int64"), )
paddle.remainder(Tensor([4],"int64"), Tensor([2147483649],"int64"), None, )
paddle.remainder(Tensor([4294967295],"int32"), Tensor([1],"int32"), )
paddle.remainder(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), )
paddle.remainder(Tensor([429496730, 1, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.remainder(Tensor([429496730, 1, 5],"int64"), Tensor([2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([536870913, 4],"int64"), Tensor([1],"int64"), )
paddle.remainder(Tensor([71582789, 3, 4, 5],"float32"), Tensor([1, 1, 5],"float32"), )
paddle.remainder(Tensor([71582789, 3, 4, 5],"int32"), Tensor([1, 1, 5],"int32"), )
paddle.remainder(Tensor([8, 268435457],"int64"), Tensor([1],"int64"), )
paddle.remainder(Tensor([8, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.remainder(Tensor([858993459, 1, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.remainder(Tensor([858993459, 1, 5],"int32"), Tensor([2, 3, 4, 5],"int32"), )
paddle.reverse(Tensor([1, 1, 4294967295],"float32"), axis=1, )
paddle.reverse(Tensor([1, 1, 4294967295],"float32"), axis=list[0,], )
paddle.reverse(Tensor([1, 1073741824, 4],"float32"), axis=1, )
paddle.reverse(Tensor([1, 2147483648, 2],"float32"), axis=list[0,], )
paddle.reverse(Tensor([1073741824, 1, 4],"float32"), axis=0, )
paddle.reverse(Tensor([1073741824, 1, 4],"float32"), axis=1, )
paddle.reverse(Tensor([12, 11184811, 16],"float64"), axis=list[0,], )
paddle.reverse(Tensor([12, 178956971],"float64"), axis=list[0,], )
paddle.reverse(Tensor([12, 22369622, 8],"float64"), axis=0, )
paddle.reverse(Tensor([12, 4, 44739243],"float64"), axis=0, )
paddle.reverse(Tensor([12, 4, 44739243],"float64"), axis=list[0,], )
paddle.reverse(Tensor([13, 165191050],"int64"), list[1,], )
paddle.reverse(Tensor([1431655765, 1, 3],"float32"), axis=0, )
paddle.reverse(Tensor([2, 1, 2147483648],"float32"), axis=0, )
paddle.reverse(Tensor([2, 1, 2147483648],"float32"), axis=list[0,], )
paddle.reverse(Tensor([2, 1073741824, 2],"float32"), axis=list[0,], )
paddle.reverse(Tensor([2, 536870912, 4],"float32"), axis=0, )
paddle.reverse(Tensor([2, 715827883, 3],"float32"), axis=0, )
paddle.reverse(Tensor([2147483648, 1, 2],"float32"), axis=list[0,], )
paddle.reverse(Tensor([22369622, 12, 8],"float64"), axis=1, )
paddle.reverse(Tensor([306783379, 7],"int64"), list[1,], )
paddle.reverse(Tensor([33554433, 4, 16],"float64"), axis=list[0,], )
paddle.reverse(Tensor([4, 12, 44739243],"float64"), axis=1, )
paddle.reverse(Tensor([4, 16777217, 32],"float64"), axis=1, )
paddle.reverse(Tensor([4, 67108865, 8],"float64"), axis=1, )
paddle.reverse(Tensor([536870913, 4],"float64"), axis=list[0,], )
paddle.reverse(Tensor([55063684, 13, 3],"int64"), list[0,], )
paddle.reverse(Tensor([5592406, 12, 32],"float64"), axis=1, )
paddle.reverse(Tensor([6, 119304648, 3],"int64"), list[0,], )
paddle.reverse(Tensor([6, 13, 27531842],"int64"), list[0,], )
paddle.reverse(Tensor([67108865, 4, 8],"float64"), axis=0, )
paddle.roll(Tensor([10],"float32"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.roll(Tensor([10],"float64"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.roll(Tensor([107374183, 5, 4],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([2, 4, 2],"float64"), Tensor([2147483649],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([2, 4, 268435457],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([2, 536870913, 2],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([2147483649],"float64"), Tensor([1],"int64"), list[0,], name=None, )
paddle.roll(Tensor([2147483649],"float64"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.roll(Tensor([268435457, 4, 2],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([26843546, 5, 4, 4],"float64"), Tensor([4],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([3, 3],"int64"), shifts=Tensor([2147483649],"int64"), axis=list[0,1,], )
paddle.roll(Tensor([3, 715827883],"int64"), shifts=Tensor([2],"int64"), axis=list[0,1,], )
paddle.roll(Tensor([4, 134217729, 4],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([4, 33554433, 4, 4],"float64"), Tensor([4],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([4, 5, 107374183],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([4, 5, 26843546, 4],"float64"), Tensor([4],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([4, 5, 4, 26843546],"float64"), Tensor([4],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([4, 5, 4, 4],"float64"), Tensor([2147483649],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([4, 5, 4],"float64"), Tensor([2147483649],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([4294967295],"float32"), Tensor([1],"int64"), list[0,], name=None, )
paddle.roll(Tensor([4294967295],"float32"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.roll(Tensor([5],"float32"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.roll(Tensor([5],"float64"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.roll(Tensor([715827883, 3],"int64"), shifts=Tensor([2],"int64"), axis=list[0,1,], )
paddle.round(Tensor([1, 3, 715827883],"float64"), )
paddle.round(Tensor([1, 536870913, 4],"float64"), )
paddle.round(Tensor([1048576, 4096],"float16"), )
paddle.round(Tensor([128, 33554432],"float16"), )
paddle.round(Tensor([128, 33554432],"float32"), )
paddle.round(Tensor([131072, 8, 64, 64],"float16"), )
paddle.round(Tensor([16, 134217729],"float64"), )
paddle.round(Tensor([16, 268435456],"float16"), )
paddle.round(Tensor([16777216, 256],"float16"), )
paddle.round(Tensor([178956971, 3, 4],"float64"), )
paddle.round(Tensor([2, 2147483648],"float16"), )
paddle.round(Tensor([2, 524288, 64, 64],"float16"), )
paddle.round(Tensor([2, 8, 4194304, 64],"float16"), )
paddle.round(Tensor([2, 8, 64, 4194304],"float16"), )
paddle.round(Tensor([2147483649],"float64"), )
paddle.round(Tensor([33554432, 128],"float32"), )
paddle.round(Tensor([4294967295],"float32"), )
paddle.round(Tensor([8388608, 512],"float16"), )
paddle.round(Tensor([8388609, 256],"float64"), )
paddle.round(x=Tensor([238609295, 3, 3],"float64"), )
paddle.round(x=Tensor([3, 238609295, 3],"float64"), )
paddle.round(x=Tensor([3, 3, 238609295],"float64"), )
paddle.round(x=Tensor([3, 3, 477218589],"float32"), )
paddle.round(x=Tensor([3, 477218589, 3],"float32"), )
paddle.round(x=Tensor([477218589, 3, 3],"float32"), )
paddle.scale(Tensor([1, 128, 1048576, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 1048576, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 1048576, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 128, 32, 1048576],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 32, 1048576],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 32, 1048576],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 16, 32, 8388608],"float32"), 0.25, )
paddle.scale(Tensor([1, 16, 8388608, 32],"float32"), 0.25, )
paddle.scale(Tensor([1, 262144, 128, 128],"float32"), 0.25, )
paddle.scale(Tensor([1, 4194304, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 4194304, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([1, 4194304, 32, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 4194304, 32, 32],"float32"), 0.25, )
paddle.scale(Tensor([1, 4194304, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([1, 8, 128, 4194304],"float32"), 0.25, )
paddle.scale(Tensor([1, 8, 16777216, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([1, 8, 32, 16777216],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([1, 8, 4194304, 128],"float32"), 0.25, )
paddle.scale(Tensor([1024, 256, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=0.0, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=1.0, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([107374183, 40],"float32"), scale=0.0, )
paddle.scale(Tensor([107374183, 40],"float32"), scale=1.0, )
paddle.scale(Tensor([107374183, 40],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([109566, 2, 140, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([11930465, 3, 4, 5, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([13, 2581111, 4, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([13, 8, 1290556, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([13, 8, 4, 10324441],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([1431655765, 3],"float32"), scale=0.0, )
paddle.scale(Tensor([1431655765, 3],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([1431655765, 3],"float32"), scale=1.0, )
paddle.scale(Tensor([1431655765, 3],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([1431655765, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([1431656, 10, 15, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([1431656, 10, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([16, 128, 32, 65536],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([16, 128, 65536, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([16, 262144, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([16384, 16, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([16384, 16, 128, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([171798692, 25],"float32"), 2.0, 3.0, )
paddle.scale(Tensor([2, 1, 1, 2, 1073741824],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 1, 2, 536870913],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 1, 1, 357913942, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 1, 1, 715827883, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 178956971, 2, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 1, 2, 1073741824],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 2, 536870913],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 1, 357913942, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 1, 357913942, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 1, 715827883, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 131072, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 178956971, 1, 2, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 178956971, 2, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([2, 17895698, 4, 5, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 2147483648],"float32"), 2.0, 3.0, )
paddle.scale(Tensor([2, 2147483648],"float32"), scale=0.0, )
paddle.scale(Tensor([2, 2147483648],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([2, 2147483648],"float32"), scale=1.0, )
paddle.scale(Tensor([2, 2147483648],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([2, 2147483648],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([2, 2147483648],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 256, 128, 65536],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 16, 524288],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 256, 32768],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 32768, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 524288, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 256, 65536, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 268435456, 8],"float32"), scale=0.25, )
paddle.scale(Tensor([2, 3, 23860930, 5, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 3, 4, 29826162, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 3, 4, 5, 35791395],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 3, 4, 5, 6],"float32"), scale=Tensor([4294967295],"float32"), )
paddle.scale(Tensor([2, 32768, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 357913942, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 357913942, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 768, 128, 21846],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 768, 21846, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 8, 268435456],"float32"), scale=0.25, )
paddle.scale(Tensor([2, 8388608, 16, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([2080896, 16, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([2147483648, 2],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([2147483649],"float64"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([256, 256, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([262144, 16, 32, 32],"float32"), 0.25, )
paddle.scale(Tensor([2684355, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([298262, 3, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([298262, 3, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 11930465, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 1431655765],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([3, 298262, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 298262, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 11930465, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 298262, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 3, 3976822, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 3, 40, 3976822],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 3976822, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 40, 11930465],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 40, 3976822, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 3, 40, 40, 298262],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 35791395, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 11930465, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 35791395],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 40, 894785],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 894785, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([32, 8, 4, 4194304],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([32, 8, 4194304, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([32, 8388608, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([32768, 128, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([32768, 128, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([32768, 128, 32, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([32768, 8, 128, 128],"float32"), 0.25, )
paddle.scale(Tensor([33554432, 8, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([342, 768, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([357913942, 1, 1, 2, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([357913942, 1, 2, 3],"float64"), scale=2.0, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=0.0, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=1.0, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([40, 107374183],"float32"), scale=0.0, )
paddle.scale(Tensor([40, 107374183],"float32"), scale=1.0, )
paddle.scale(Tensor([40, 107374183],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([4194304, 8, 4, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([4294967295, 1],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([4294967295],"float16"), 0.125, )
paddle.scale(Tensor([4294967295],"float16"), 0.25, )
paddle.scale(Tensor([4294967295],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([5, 10, 15, 5726624],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([5, 10, 15, 5726624],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([5, 10, 4294968, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([5, 10, 4294968, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([5, 2863312, 15, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([5, 2863312, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([524288, 8, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([58, 2, 140, 264469],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([58, 2, 264469, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([58, 3779, 140, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([65536, 256, 16, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([67108864, 8, 8],"float32"), scale=0.25, )
paddle.scale(Tensor([715827883, 1, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([715827883, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([8, 16, 1, 33554432],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 128, 262144],"float16"), scale=0.125, )
paddle.scale(Tensor([8, 16, 128, 262144],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 260112, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 16, 262144, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([8, 16, 262144, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 32768, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([8, 32768, 128, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([8, 4161791, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([894785, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([894785, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(x=Tensor([2097152, 4, 512],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([219131, 140, 140],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.scale(x=Tensor([238609295, 3, 3],"float64"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([238609295, 3, 3],"float64"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(x=Tensor([238609295, 3, 3],"float64"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([238609295, 3, 3],"int64"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 238609295, 3],"float64"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 238609295, 3],"float64"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(x=Tensor([3, 238609295, 3],"float64"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 238609295, 3],"int64"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 238609295],"float64"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 238609295],"float64"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(x=Tensor([3, 3, 238609295],"float64"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 238609295],"int64"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 477218589],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 477218589],"int32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 477218589, 3],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 477218589, 3],"int32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([32, 262144, 512],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([32, 4, 33554432],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([477218589, 3, 3],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([477218589, 3, 3],"int32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([58, 140, 528937],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.scale(x=Tensor([58, 528937, 140],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.searchsorted(sorted_sequence=Tensor([2, 1073741825],"float64"), values=Tensor([2, 1073741825],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 1073741825],"float64"), values=Tensor([2, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 1073741825],"int64"), values=Tensor([2, 1073741825],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 1073741825],"int64"), values=Tensor([2, 3],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 2147483648],"float32"), values=Tensor([2, 2147483648],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 2147483648],"float32"), values=Tensor([2, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 2147483648],"int32"), values=Tensor([2, 2147483648],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 2147483648],"int32"), values=Tensor([2, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"float32"), values=Tensor([1431655765, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"float32"), values=Tensor([2, 2147483648],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"float64"), values=Tensor([2, 1073741825],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"float64"), values=Tensor([715827883, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"int32"), values=Tensor([1431655765, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"int32"), values=Tensor([2, 2147483648],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"int64"), values=Tensor([2, 1073741825],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"int64"), values=Tensor([715827883, 3],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"float64"), values=Tensor([2, 2, 2],"float64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"float64"), values=Tensor([2, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"float64"), values=Tensor([2],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"float64"), values=Tensor([2147483649],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"float64"), values=Tensor([3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"float64"), values=Tensor([4, 2],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2147483649],"int64"), values=Tensor([2, 2, 2],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"float32"), values=Tensor([2, 2, 2],"float32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"float32"), values=Tensor([2, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"float32"), values=Tensor([2],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"float32"), values=Tensor([3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"float32"), values=Tensor([4, 2],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"float32"), values=Tensor([4294967295],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"int32"), values=Tensor([2, 2, 2],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"int32"), values=Tensor([2, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"int32"), values=Tensor([2],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([4294967295],"int32"), values=Tensor([4294967295],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([429496730, 5],"float64"), values=Tensor([2, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([429496730, 5],"float64"), values=Tensor([429496730, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([429496730, 5],"int64"), values=Tensor([2, 3],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([429496730, 5],"int64"), values=Tensor([429496730, 3],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float32"), values=Tensor([1431655765, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float32"), values=Tensor([2, 2147483648],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float32"), values=Tensor([2147483648, 2],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float32"), values=Tensor([4, 1073741824],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float32"), values=Tensor([4294967295],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float64"), values=Tensor([1073741825, 2],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float64"), values=Tensor([2, 1073741825],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float64"), values=Tensor([2147483649],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float64"), values=Tensor([4, 536870913],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"float64"), values=Tensor([715827883, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([1431655765, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([2, 2147483648],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([4294967295],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"float32"), values=Tensor([1073741824, 2, 2],"float32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"float32"), values=Tensor([2, 1073741824, 2],"float32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"float32"), values=Tensor([2, 2, 1073741824],"float32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"float64"), values=Tensor([2, 2, 536870913],"float64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"float64"), values=Tensor([2, 536870913, 2],"float64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"float64"), values=Tensor([536870913, 2, 2],"float64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([1073741824, 2, 2],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([2, 1073741824, 2],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([2, 2, 1073741824],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([2, 2, 536870913],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([2, 536870913, 2],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([536870913, 2, 2],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([858993459, 5],"float32"), values=Tensor([2, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([858993459, 5],"float32"), values=Tensor([858993459, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([858993459, 5],"int32"), values=Tensor([2, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([858993459, 5],"int32"), values=Tensor([858993459, 3],"int32"), )
paddle.searchsorted(Tensor([1024],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.searchsorted(Tensor([1024],"float16"), Tensor([4294967295],"float16"), )
paddle.searchsorted(Tensor([1024],"float32"), Tensor([4294967295],"float32"), )
paddle.searchsorted(Tensor([1024],"float64"), Tensor([2147483649],"float64"), )
paddle.searchsorted(Tensor([1024],"int32"), Tensor([4294967295],"int32"), )
paddle.searchsorted(Tensor([2],"float64"), Tensor([2147483649],"float64"), right=True, )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([2, 3],"float64"), out_int32=True, )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([2, 3],"float64"), right=True, )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), right=True, )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([4],"float64"), right=True, )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([512],"float64"), )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([8],"float64"), right=True, )
paddle.searchsorted(Tensor([3],"float32"), Tensor([4294967295],"float32"), right=True, )
paddle.searchsorted(Tensor([3],"float64"), Tensor([2147483649],"float64"), right=True, )
paddle.searchsorted(Tensor([4],"float64"), Tensor([2147483649],"float64"), right=True, )
paddle.searchsorted(Tensor([4294967295],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.searchsorted(Tensor([4294967295],"bfloat16"), Tensor([512],"bfloat16"), )
paddle.searchsorted(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.searchsorted(Tensor([4294967295],"float16"), Tensor([512],"float16"), )
paddle.searchsorted(Tensor([4294967295],"float32"), Tensor([4],"float32"), right=True, )
paddle.searchsorted(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.searchsorted(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), right=True, )
paddle.searchsorted(Tensor([4294967295],"float32"), Tensor([512],"float32"), )
paddle.searchsorted(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), )
paddle.searchsorted(Tensor([4294967295],"int32"), Tensor([512],"int32"), )
paddle.searchsorted(Tensor([5],"float64"), Tensor([2, 1073741825],"float64"), out_int32=True, )
paddle.searchsorted(Tensor([5],"float64"), Tensor([2, 1073741825],"float64"), right=True, )
paddle.searchsorted(Tensor([5],"float64"), Tensor([715827883, 3],"float64"), out_int32=True, )
paddle.searchsorted(Tensor([5],"float64"), Tensor([715827883, 3],"float64"), right=True, )
paddle.shape(Tensor([1, 1, 1, 4294967295],"float16"), )
paddle.shape(Tensor([1, 1, 4294967295],"float16"), )
paddle.shape(Tensor([1, 1, 4294967295],"float32"), )
paddle.shape(Tensor([1, 1, 85899346, 50],"float16"), )
paddle.shape(Tensor([1, 10, 429496730],"float32"), )
paddle.shape(Tensor([1, 128, 128, 262144],"float32"), )
paddle.shape(Tensor([1, 128, 131072, 256],"float32"), )
paddle.shape(Tensor([1, 128, 256, 131072],"float32"), )
paddle.shape(Tensor([1, 128, 262144, 128],"float32"), )
paddle.shape(Tensor([1, 134217728, 32],"float16"), )
paddle.shape(Tensor([1, 134217728, 32],"float32"), )
paddle.shape(Tensor([1, 160, 10, 2684355],"float32"), )
paddle.shape(Tensor([1, 160, 11, 2440323],"float32"), )
paddle.shape(Tensor([1, 160, 2440323, 11],"float32"), )
paddle.shape(Tensor([1, 160, 2684355, 10],"float32"), )
paddle.shape(Tensor([1, 2147483649],"float64"), )
paddle.shape(Tensor([1, 2147483649],"int64"), )
paddle.shape(Tensor([1, 262144, 128, 128],"float32"), )
paddle.shape(Tensor([1, 268435456, 16],"float32"), )
paddle.shape(Tensor([1, 35495598, 11, 11],"float32"), )
paddle.shape(Tensor([1, 4294967295],"float32"), )
paddle.shape(Tensor([1, 42949673, 10, 10],"float32"), )
paddle.shape(Tensor([1, 65536, 256, 256],"float32"), )
paddle.shape(Tensor([1, 8388608, 512],"float32"), )
paddle.shape(Tensor([1, 85899346, 1, 50],"float16"), )
paddle.shape(Tensor([1048577, 2048],"int64"), )
paddle.shape(Tensor([1073741824, 4],"float32"), )
paddle.shape(Tensor([134217728, 1, 32],"float16"), )
paddle.shape(Tensor([134217728, 1, 32],"float32"), )
paddle.shape(Tensor([140, 10226113, 1, 1, 3],"float32"), )
paddle.shape(Tensor([140, 188, 1, 1, 163183],"float32"), )
paddle.shape(Tensor([140, 188, 1, 1, 2, 81592],"float32"), )
paddle.shape(Tensor([140, 188, 1, 1, 27198, 6],"float32"), )
paddle.shape(Tensor([140, 188, 1, 13599, 2, 6],"float32"), )
paddle.shape(Tensor([140, 188, 1, 54395, 3],"float32"), )
paddle.shape(Tensor([140, 188, 13599, 1, 2, 6],"float32"), )
paddle.shape(Tensor([140, 188, 54395, 1, 3],"float32"), )
paddle.shape(Tensor([140, 2556529, 1, 1, 2, 6],"float32"), )
paddle.shape(Tensor([1431655765, 3],"float32"), )
paddle.shape(Tensor([1789570, 3, 5, 5, 2, 1, 2, 2, 2],"float64"), )
paddle.shape(Tensor([1903798, 188, 1, 1, 2, 6],"float32"), )
paddle.shape(Tensor([2, 2684355, 5, 5, 2, 1, 2, 2, 2],"float64"), )
paddle.shape(Tensor([2, 3, 4473925, 5, 2, 1, 2, 2, 2],"float64"), )
paddle.shape(Tensor([2, 3, 5, 4473925, 2, 1, 2, 2, 2],"float64"), )
paddle.shape(Tensor([2, 3, 5, 5, 1789570, 1, 2, 2, 2],"float64"), )
paddle.shape(Tensor([2, 3, 5, 5, 2, 1, 1789570, 2, 2],"float64"), )
paddle.shape(Tensor([2, 3, 5, 5, 2, 1, 2, 1789570, 2],"float64"), )
paddle.shape(Tensor([2, 3, 5, 5, 2, 1, 2, 2, 1789570],"float64"), )
paddle.shape(Tensor([2, 3, 5, 5, 2, 894785, 2, 2, 2],"float64"), )
paddle.shape(Tensor([2048, 128, 128, 128],"float32"), )
paddle.shape(Tensor([2147483649],"float64"), )
paddle.shape(Tensor([2147483649],"int64"), )
paddle.shape(Tensor([21474837, 100],"float64"), )
paddle.shape(Tensor([221848, 160, 11, 11],"float32"), )
paddle.shape(Tensor([268435456, 1, 16],"float32"), )
paddle.shape(Tensor([268436, 160, 10, 10],"float32"), )
paddle.shape(Tensor([4, 280, 376, 25, 408],"bool"), )
paddle.shape(Tensor([4, 280, 376, 25, 408],"float32"), )
paddle.shape(Tensor([4, 280, 376, 3400, 3],"bool"), )
paddle.shape(Tensor([4, 280, 376, 3400, 3],"float32"), )
paddle.shape(Tensor([4, 280, 51131, 25, 3],"bool"), )
paddle.shape(Tensor([4, 280, 51131, 25, 3],"float32"), )
paddle.shape(Tensor([4, 38076, 376, 25, 3],"bool"), )
paddle.shape(Tensor([4, 38076, 376, 25, 3],"float32"), )
paddle.shape(Tensor([4129777, 26, 1, 40, 1],"float16"), )
paddle.shape(Tensor([4129777, 26, 1, 40, 1],"float32"), )
paddle.shape(Tensor([4294967295],"float32"), )
paddle.shape(Tensor([512, 128, 256, 256],"float32"), )
paddle.shape(Tensor([544, 280, 376, 25, 3],"bool"), )
paddle.shape(Tensor([544, 280, 376, 25, 3],"float32"), )
paddle.shape(Tensor([64, 1677722, 1, 40, 1],"float16"), )
paddle.shape(Tensor([64, 1677722, 1, 40, 1],"float32"), )
paddle.shape(Tensor([64, 26, 1, 2581111, 1],"float16"), )
paddle.shape(Tensor([64, 26, 1, 2581111, 1],"float32"), )
paddle.shape(Tensor([64, 26, 1, 40, 64528],"float16"), )
paddle.shape(Tensor([64, 26, 1, 40, 64528],"float32"), )
paddle.shape(Tensor([64, 26, 64528, 40, 1],"float16"), )
paddle.shape(Tensor([64, 26, 64528, 40, 1],"float32"), )
paddle.shape(Tensor([7615191, 188, 1, 1, 3],"float32"), )
paddle.shape(Tensor([8388608, 1, 512],"float32"), )
paddle.shape(Tensor([838861, 10, 512],"float32"), )
paddle.shape(Tensor([85899346, 1, 1, 50],"float16"), )
paddle.signal.stft(n_fft=400, x=Tensor([4294967295],"float32"), )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, 255, 499, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, 255, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, None, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, 255, 499, Tensor([499],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, 255, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, None, None, None, False, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, None, None, None, True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([13422, 160000],"float64"), 512, 255, 499, Tensor([499],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([13422, 160000],"float64"), 512, 255, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([13422, 160000],"float64"), 512, None, None, None, False, "reflect", False, True, )
paddle.signal.stft(Tensor([13422, 160000],"float64"), 512, None, None, None, True, "reflect", False, True, )
paddle.signal.stft(Tensor([13422, 160000],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([16, 25500],"float32"), 1024, 120, 600, window=Tensor([4294967295],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 25500],"float32"), 2048, 240, 1200, window=Tensor([4294967295],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 25500],"float32"), 512, 50, 240, window=Tensor([4294967295],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 268435456],"float32"), 1024, 120, 600, window=Tensor([600],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 268435456],"float32"), 2048, 240, 1200, window=Tensor([1200],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 268435456],"float32"), 512, 50, 240, window=Tensor([240],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([160000],"float64"), 512, None, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([168431, 25500],"float32"), 1024, 120, 600, window=Tensor([600],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([168431, 25500],"float32"), 2048, 240, 1200, window=Tensor([1200],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([168431, 25500],"float32"), 512, 50, 240, window=Tensor([240],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([2147483649],"float64"), 512, None, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([2147483649],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([4294967295],"float32"), 400, 160, window=Tensor([400],"float32"), )
paddle.signal.stft(Tensor([4294967295],"float32"), 400, 160, window=Tensor([4294967295],"float32"), )
paddle.signal.stft(Tensor([79949],"float32"), 400, 160, window=Tensor([4294967295],"float32"), )
paddle.slice(input=Tensor([15339169, 140, 2],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(input=Tensor([58, 140, 528937],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(input=Tensor([58, 37025581, 2],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1, 2, 1073741825],"int64"), list[1,2,], list[0,0,], list[2,2,], )
paddle.slice(Tensor([1, 2147483649],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1, 2147483649],"int64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1, 4, 1073741824],"float32"), axes=list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1, 429496730, 10],"float32"), axes=list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1, 536870913, 4],"int64"), list[1,2,], list[0,0,], list[2,2,], )
paddle.slice(Tensor([10, 214748365],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([10, 214748365],"int64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1000, 2147484],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1000, 2147484],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([1004, 2138928],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1004, 2138928],"int64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1007, 2132556],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1007, 2132556],"int64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1008, 2130441],"int64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([1024, 16, 262144],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[0,], ends=list[256,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[256,], ends=list[512,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[512,], ends=list[768,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[768,], ends=list[1024,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([1024, 2, 2097152],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[256,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[512,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[768,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[1024,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([1024, 4096, 1024],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([1073741824, 1, 4],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1073741824, 1, 4],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1073741824, 1, 4],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([1073741824, 1, 4],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([1073741824, 4],"float16"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1073741824, 4],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1073741824, 4],"float32"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([1073741825, 2],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([1073741825, 2],"int64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([1073741825, 2],"int64"), list[0,1,], tuple(0,0,), list[2,2,], )
paddle.slice(Tensor([107374183, 4, 10],"float32"), axes=list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[0,], list[1,], list[2,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[0,1,2,], list[0,1,2,], list[3,3,4,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[0,2,], list[2,2,], list[3,4,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[-1,], list[0,], list[2,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[1,], list[2,], list[3,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[1,2,], list[2,2,], list[3,4,], )
paddle.slice(Tensor([107374183, 4, 5],"int64"), list[-3,-2,-1,], list[1,-3,2,], list[3,3,4,], )
paddle.slice(Tensor([10737419, 20, 20],"float16"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([10737419, 20, 20],"float16"), list[0,], list[0,], list[4,], )
paddle.slice(Tensor([10737419, 20, 20],"float16"), list[0,], list[2,], list[4,], )
paddle.slice(Tensor([10737419, 20, 20],"float16"), list[0,], list[4,], list[8,], )
paddle.slice(Tensor([11, 1, 390451573],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([11, 1, 390451573],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([11, 1, 390451573],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([11, 1, 390451573],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([11, 97612894, 4],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([11, 97612894, 4],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([11, 97612894, 4],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([11, 97612894, 4],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([119304648, 3, 6],"int64"), axes=list[2,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([119304648, 6, 3],"int64"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([11930465, 3, 4, 5, 6],"float32"), axes=list[0,1,2,], starts=list[1,0,2,], ends=list[3,3,4,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,0,], list[13,1,16,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,16,], list[13,1,32,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,24,], list[13,1,40,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,32,], list[13,1,48,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,40,], list[13,1,56,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,48,], list[13,1,64,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,56,], list[13,1,72,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,64,], list[13,1,80,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,72,], list[13,1,88,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,8,], list[13,1,24,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,80,], list[13,1,96,], )
paddle.slice(Tensor([13, 1, 330382100],"float32"), list[0,1,2,], list[0,0,88,], list[13,1,104,], )
paddle.slice(Tensor([13, 165191050],"int64"), list[0,1,], tuple(0,0,), list[13,8,], )
paddle.slice(Tensor([13, 20648882, 16],"float32"), axes=list[1,], starts=list[0,], ends=list[7,], )
paddle.slice(Tensor([13, 20648882, 16],"float32"), axes=list[1,], starts=list[1,], ends=list[8,], )
paddle.slice(Tensor([13, 20648882, 16],"float32"), axes=list[1,], starts=list[2,], ends=list[9,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,0,], list[13,1,16,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,16,], list[13,1,32,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,24,], list[13,1,40,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,32,], list[13,1,48,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,40,], list[13,1,56,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,48,], list[13,1,64,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,56,], list[13,1,72,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,64,], list[13,1,80,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,72,], list[13,1,88,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,8,], list[13,1,24,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,80,], list[13,1,96,], )
paddle.slice(Tensor([13, 3176751, 104],"float32"), list[0,1,2,], list[0,0,88,], list[13,1,104,], )
paddle.slice(Tensor([13, 9, 36709123],"float32"), axes=list[1,], starts=list[0,], ends=list[7,], )
paddle.slice(Tensor([13, 9, 36709123],"float32"), axes=list[1,], starts=list[1,], ends=list[8,], )
paddle.slice(Tensor([13, 9, 36709123],"float32"), axes=list[1,], starts=list[2,], ends=list[9,], )
paddle.slice(Tensor([1431655765, 3],"float16"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([1431655765, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([143165577, 3, 10],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([143165577, 5, 6],"float32"), axes=list[0,1,2,], starts=list[-3,0,2,], ends=list[3,2,4,], )
paddle.slice(Tensor([15, 143165577],"int64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([15, 143165577],"int64"), axes=list[1,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,0,], list[16,1,16,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,16,], list[16,1,32,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,24,], list[16,1,40,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,32,], list[16,1,48,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,40,], list[16,1,56,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,48,], list[16,1,64,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,56,], list[16,1,72,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,64,], list[16,1,80,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,72,], list[16,1,88,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,8,], list[16,1,24,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,80,], list[16,1,96,], )
paddle.slice(Tensor([16, 1, 268435456],"float32"), list[0,1,2,], list[0,0,88,], list[16,1,104,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,0,], list[16,2,16,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,16,], list[16,2,32,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,24,], list[16,2,40,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,32,], list[16,2,48,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,40,], list[16,2,56,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,48,], list[16,2,64,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,56,], list[16,2,72,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,64,], list[16,2,80,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,72,], list[16,2,88,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,8,], list[16,2,24,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,80,], list[16,2,96,], )
paddle.slice(Tensor([16, 2, 134217728],"float32"), list[0,1,2,], list[0,0,88,], list[16,2,104,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,0,], list[16,1,16,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,0,], list[16,2,16,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,16,], list[16,1,32,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,16,], list[16,2,32,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,24,], list[16,1,40,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,24,], list[16,2,40,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,32,], list[16,1,48,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,32,], list[16,2,48,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,40,], list[16,1,56,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,40,], list[16,2,56,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,48,], list[16,1,64,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,48,], list[16,2,64,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,56,], list[16,1,72,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,56,], list[16,2,72,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,64,], list[16,1,80,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,64,], list[16,2,80,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,72,], list[16,1,88,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,72,], list[16,2,88,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,8,], list[16,1,24,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,8,], list[16,2,24,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,80,], list[16,1,96,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,80,], list[16,2,96,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,88,], list[16,1,104,], )
paddle.slice(Tensor([16, 2581111, 104],"float32"), list[0,1,2,], list[0,0,88,], list[16,2,104,], )
paddle.slice(Tensor([178956971, 3, 4],"int64"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([178956971, 3, 4],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([178956971, 3, 8],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([178956971, 3, 8],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([178956971, 3, 8],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[4,], ends=list[7,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([178956971, 4, 3],"int64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([17895698, 4, 5, 6],"float64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([19173962, 4, 4, 7],"int64"), axes=list[3,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([19173962, 4, 7, 4],"int64"), axes=list[-2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([2, 10, 214748365],"float32"), list[0,], list[0,], list[1,], )
paddle.slice(Tensor([2, 10, 214748365],"float32"), list[0,], list[1,], list[2,], )
paddle.slice(Tensor([2, 1073741824, 2],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 1073741824, 2],"int32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 1073741825],"float64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 1073741825],"int64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 1073741825],"int64"), axes=list[1,], starts=list[49,], ends=list[50,], )
paddle.slice(Tensor([2, 1073741825],"int64"), list[0,1,], list[0,0,], list[2,2,], )
paddle.slice(Tensor([2, 1073741825],"int64"), list[0,1,], list[0,1,], list[2,3,], )
paddle.slice(Tensor([2, 1073741825],"int64"), list[0,1,], tuple(0,0,), list[2,2,], )
paddle.slice(Tensor([2, 119304648, 3, 3],"float64"), list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 119304648, 3, 3],"float64"), list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 17895698, 4, 5, 6],"float32"), axes=list[0,1,2,], starts=list[1,0,2,], ends=list[3,3,4,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,0,], list[2,2,16,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,16,], list[2,2,32,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,24,], list[2,2,40,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,32,], list[2,2,48,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,40,], list[2,2,56,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,48,], list[2,2,64,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,56,], list[2,2,72,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,64,], list[2,2,80,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,72,], list[2,2,88,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,8,], list[2,2,24,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,80,], list[2,2,96,], )
paddle.slice(Tensor([2, 2, 1073741824],"float32"), list[0,1,2,], list[0,0,88,], list[2,2,104,], )
paddle.slice(Tensor([2, 2, 536870913],"float64"), list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 2, 536870913],"float64"), list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 2, 536870913],"float64"), list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,0,], list[2,2,16,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,16,], list[2,2,32,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,24,], list[2,2,40,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,32,], list[2,2,48,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,40,], list[2,2,56,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,48,], list[2,2,64,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,56,], list[2,2,72,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,64,], list[2,2,80,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,72,], list[2,2,88,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,8,], list[2,2,24,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,80,], list[2,2,96,], )
paddle.slice(Tensor([2, 20648882, 104],"float32"), list[0,1,2,], list[0,0,88,], list[2,2,104,], )
paddle.slice(Tensor([2, 2147483648],"float16"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 2147483648],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 2147483648],"float32"), axes=list[1,], starts=list[49,], ends=list[50,], )
paddle.slice(Tensor([2, 268435456, 8],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 268435456, 8],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 268435456, 8],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([2, 268435457, 4],"int64"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 268435457, 4],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 3, 11930465, 5, 6],"int64"), list[0,1,2,4,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([2, 3, 23860930, 5, 6],"float32"), axes=list[0,1,2,], starts=list[1,0,2,], ends=list[3,3,4,], )
paddle.slice(Tensor([2, 3, 357913942],"int64"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 3, 357913942],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 3, 4, 14913081, 6],"int64"), list[0,1,2,4,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([2, 3, 4, 29826162, 6],"float32"), axes=list[0,1,2,], starts=list[1,0,2,], ends=list[3,3,4,], )
paddle.slice(Tensor([2, 3, 4, 5, 17895698],"int64"), list[0,1,2,4,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([2, 3, 4, 5, 35791395],"float32"), axes=list[0,1,2,], starts=list[1,0,2,], ends=list[3,3,4,], )
paddle.slice(Tensor([2, 3, 4, 89478486],"int64"), list[0,1,2,3,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([2, 3, 715827883],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 3, 715827883],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 3, 715827883],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([2, 3, 71582789, 5],"int64"), list[0,1,2,3,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([2, 4, 268435457],"float64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 268435457],"int64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 3, 89478486],"float64"), list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 3, 89478486],"float64"), list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 536870912],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 536870912],"int32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 89478486, 3],"float64"), list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 4, 89478486, 3],"float64"), list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2, 429496730, 5],"float32"), list[0,], list[0,], list[1,], )
paddle.slice(Tensor([2, 429496730, 5],"float32"), list[0,], list[1,], list[2,], )
paddle.slice(Tensor([2, 536870913, 2],"float64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 536870913, 2],"float64"), list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 536870913, 2],"float64"), list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 536870913, 2],"float64"), list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 536870913, 2],"int64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 53687092, 4, 5],"int64"), list[0,1,2,3,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([2, 8, 268435456],"float32"), axes=list[1,], starts=list[7,], ends=list[8,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([2, 89478486, 24],"float32"), axes=list[1,], starts=list[7,], ends=list[8,], )
paddle.slice(Tensor([2, 8947849, 4, 5, 6],"int64"), list[0,1,2,4,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,0,], list[16,2,16,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,0,], list[2,2,16,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,16,], list[16,2,32,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,16,], list[2,2,32,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,24,], list[16,2,40,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,24,], list[2,2,40,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,32,], list[16,2,48,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,32,], list[2,2,48,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,40,], list[16,2,56,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,40,], list[2,2,56,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,48,], list[16,2,64,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,48,], list[2,2,64,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,56,], list[16,2,72,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,56,], list[2,2,72,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,64,], list[16,2,80,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,64,], list[2,2,80,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,72,], list[16,2,88,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,72,], list[2,2,88,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,8,], list[16,2,24,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,8,], list[2,2,24,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,80,], list[16,2,96,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,80,], list[2,2,96,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,88,], list[16,2,104,], )
paddle.slice(Tensor([20648882, 2, 104],"float32"), list[0,1,2,], list[0,0,88,], list[2,2,104,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[256,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[512,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[768,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[1024,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([2097152, 2, 1024],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([21, 1, 204522253],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([21, 1, 204522253],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([21, 1, 204522253],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([21, 1, 204522253],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([21, 51130564, 4],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([21, 51130564, 4],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([21, 51130564, 4],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([21, 51130564, 4],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[11,], ends=list[12,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[12,], ends=list[13,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[19,], ends=list[20,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[20,], ends=list[21,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([2147483649],"float64"), axes=list[0,], starts=list[9,], ends=list[10,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[0,], ends=list[3,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[11,], ends=list[12,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[12,], ends=list[13,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[19,], ends=list[20,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[2,], ends=list[16,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[2,], ends=list[5,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[20,], ends=list[21,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[3,], ends=list[16,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[4,], ends=list[7,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[6,], ends=list[16,], )
paddle.slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([2147483649],"int64"), list[0,], list[-3,], list[-1,], )
paddle.slice(Tensor([2147483649],"int64"), list[0,], list[3,], list[5,], )
paddle.slice(Tensor([214748365, 10],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([214748365, 4, 5],"bool"), list[0,1,2,], list[0,1,2,], list[3,5,4,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float16"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float16"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([22, 1, 195225787],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([22, 1, 195225787],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([22, 1, 195225787],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([22, 1, 195225787],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([22, 48806447, 4],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([22, 48806447, 4],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([22, 48806447, 4],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([22, 48806447, 4],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([22369622, 8, 24],"float32"), axes=list[1,], starts=list[7,], ends=list[8,], )
paddle.slice(Tensor([238609295, 3, 3],"float64"), list[0,2,], starts=list[0,0,], ends=list[1,2,], )
paddle.slice(Tensor([238609295, 3, 3],"float64"), list[1,2,], starts=list[0,0,], ends=list[1,2,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([262144, 16, 1024],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([268435456, 4, 4],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([268435456, 4, 4],"float32"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([268435457, 2, 4],"int64"), list[1,2,], list[0,0,], list[2,2,], )
paddle.slice(Tensor([268435457, 4, 2],"float64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([268435457, 4, 2],"float64"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([268435457, 4, 2],"int64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([268435457, 8],"int64"), list[0,1,], tuple(0,0,), list[13,8,], )
paddle.slice(Tensor([27531842, 78],"int64"), list[0,-1,], list[32,58,], list[-2,-1,], )
paddle.slice(Tensor([29826162, 9, 16],"float32"), axes=list[1,], starts=list[0,], ends=list[7,], )
paddle.slice(Tensor([29826162, 9, 16],"float32"), axes=list[1,], starts=list[1,], ends=list[8,], )
paddle.slice(Tensor([29826162, 9, 16],"float32"), axes=list[1,], starts=list[2,], ends=list[9,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,0,], list[3,1,16,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,16,], list[3,1,32,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,24,], list[3,1,40,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,32,], list[3,1,48,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,40,], list[3,1,56,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,48,], list[3,1,64,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,56,], list[3,1,72,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,64,], list[3,1,80,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,72,], list[3,1,88,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,8,], list[3,1,24,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,80,], list[3,1,96,], )
paddle.slice(Tensor([3, 1, 1431655765],"float32"), list[0,1,2,], list[0,0,88,], list[3,1,104,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,0,], list[3,1,16,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,16,], list[3,1,32,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,24,], list[3,1,40,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,32,], list[3,1,48,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,40,], list[3,1,56,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,48,], list[3,1,64,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,56,], list[3,1,72,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,64,], list[3,1,80,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,72,], list[3,1,88,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,8,], list[3,1,24,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,80,], list[3,1,96,], )
paddle.slice(Tensor([3, 13765921, 104],"float32"), list[0,1,2,], list[0,0,88,], list[3,1,104,], )
paddle.slice(Tensor([3, 1431655765],"float16"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 1431655765],"float32"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 1431655765],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 1431655765],"float32"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([3, 23860930, 5, 6],"float64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 286331153, 5],"bool"), list[0,1,2,], list[0,1,2,], list[3,5,4,], )
paddle.slice(Tensor([3, 3, 238609295],"float64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 3, 238609295],"float64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 3, 477218589],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 3, 477218589],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 3, 477218589],"int32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 3, 477218589],"int32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 357913942, 2],"float64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 357913942, 2],"float64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 357913942, 2],"float64"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 357913942, 4],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 357913942, 4],"float32"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 4, 178956971],"float64"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 4, 29826162, 6],"float64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 4, 357913942],"bool"), list[0,1,2,], list[0,1,2,], list[3,5,4,], )
paddle.slice(Tensor([3, 4, 357913942],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 4, 357913942],"float32"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 4, 357913942],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([3, 4, 357913942],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 4, 5, 35791395],"float64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 715827883, 2],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 715827883, 2],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 715827883, 2],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([3, 715827883, 2],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 715827883, 2],"int32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 715827883, 2],"int32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 715827883],"float64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 715827883],"float64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 715827883],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([3, 715827883],"int64"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([3, 715827883],"int64"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([3, 715827883],"int64"), list[1,], list[-3,], list[2,], )
paddle.slice(Tensor([3, 715827883],"int64"), list[-2,-1,], list[-3,0,], list[2,-1,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([306783379, 7],"int64"), axes=list[1,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([357913942, 3, 2],"float64"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([357913942, 3, 2],"float64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([357913942, 3, 2],"float64"), list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([357913942, 3, 2],"float64"), list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([357913942, 6],"int64"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([35791395, 3, 4, 5],"int64"), list[0,1,2,3,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([4, 10, 107374183],"float32"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([4, 10, 107374183],"float32"), list[0,], list[2,], list[4,], )
paddle.slice(Tensor([4, 107374183, 10],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[0,], list[1,], list[2,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[0,1,2,], list[0,1,2,], list[3,3,4,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[0,2,], list[2,2,], list[3,4,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[-1,], list[0,], list[2,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[1,], list[2,], list[3,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[1,2,], list[2,2,], list[3,4,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[-3,-2,-1,], list[1,-3,2,], list[3,3,4,], )
paddle.slice(Tensor([4, 178956971, 3],"float64"), list[0,2,], starts=list[0,0,], ends=list[1,2,], )
paddle.slice(Tensor([4, 178956971, 3],"float64"), list[1,2,], starts=list[0,0,], ends=list[1,2,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 178956971, 3],"int64"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([4, 178956971, 6],"float32"), axes=list[0,1,2,], starts=list[-3,0,2,], ends=list[3,2,4,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 19173962, 4, 7],"int64"), axes=list[3,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 19173962, 7, 4],"int64"), axes=list[-2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 20, 53687092],"float16"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([4, 20, 53687092],"float16"), list[0,], list[2,], list[4,], )
paddle.slice(Tensor([4, 214748365, 5],"float32"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([4, 214748365, 5],"float32"), list[0,], list[2,], list[4,], )
paddle.slice(Tensor([4, 268435457, 2],"float64"), list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 268435457, 2],"float64"), list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 3, 178956971],"float64"), list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 3, 178956971],"float64"), list[0,2,], starts=list[0,0,], ends=list[1,2,], )
paddle.slice(Tensor([4, 3, 178956971],"float64"), list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 3, 178956971],"float64"), list[1,2,], starts=list[0,0,], ends=list[1,2,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 3, 178956971],"int64"), axes=list[2,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([4, 3, 357913942],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 4, 134217729],"float64"), list[1,2,], starts=list[0,0,], ends=list[2,4,], )
paddle.slice(Tensor([4, 4, 134217729],"float64"), list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), axes=list[2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[0,], list[1,], list[2,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[0,1,2,], list[0,1,2,], list[3,3,4,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[0,2,], list[2,2,], list[3,4,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[-1,], list[0,], list[2,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[1,], list[2,], list[3,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[1,2,], list[2,2,], list[3,4,], )
paddle.slice(Tensor([4, 4, 134217729],"int64"), list[-3,-2,-1,], list[1,-3,2,], list[3,3,4,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 19173962, 7],"int64"), axes=list[3,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 33554433, 4],"int64"), axes=list[-2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 4, 33554433],"int64"), axes=list[3,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 6, 22369622],"float64"), list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 67108865, 2],"float64"), list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 4, 7, 19173962],"int64"), axes=list[-2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 44739243, 6, 2],"float64"), list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 5, 214748365],"float32"), axes=list[0,1,2,], starts=list[-3,0,2,], ends=list[3,2,4,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([4, 536870913],"int64"), axes=list[1,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 53687092, 20],"float16"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([4, 53687092, 20],"float16"), list[0,], list[2,], list[4,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 6, 89478486],"int64"), axes=list[1,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 76695845, 7],"int64"), axes=list[2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4, 89478486, 6],"float64"), list[1,2,], starts=list[0,0,], ends=list[2,4,], )
paddle.slice(Tensor([4, 89478486, 6],"float64"), list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([4, 89478486, 6],"int64"), axes=list[2,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,0,], list[13,1,16,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,0,], list[16,1,16,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,0,], list[3,1,16,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,16,], list[13,1,32,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,16,], list[16,1,32,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,16,], list[3,1,32,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,24,], list[13,1,40,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,24,], list[16,1,40,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,24,], list[3,1,40,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,32,], list[13,1,48,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,32,], list[16,1,48,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,32,], list[3,1,48,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,40,], list[13,1,56,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,40,], list[16,1,56,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,40,], list[3,1,56,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,48,], list[13,1,64,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,48,], list[16,1,64,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,48,], list[3,1,64,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,56,], list[13,1,72,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,56,], list[16,1,72,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,56,], list[3,1,72,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,64,], list[13,1,80,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,64,], list[16,1,80,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,64,], list[3,1,80,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,72,], list[13,1,88,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,72,], list[16,1,88,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,72,], list[3,1,88,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,8,], list[13,1,24,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,8,], list[16,1,24,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,8,], list[3,1,24,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,80,], list[13,1,96,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,80,], list[16,1,96,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,80,], list[3,1,96,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,88,], list[13,1,104,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,88,], list[16,1,104,], )
paddle.slice(Tensor([41297763, 1, 104],"float32"), list[0,1,2,], list[0,0,88,], list[3,1,104,], )
paddle.slice(Tensor([42107523, 51],"int64"), axes=list[1,], starts=list[49,], ends=list[50,], )
paddle.slice(Tensor([4294967295],"float16"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([4294967295],"float16"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[11,], ends=list[12,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[12,], ends=list[13,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[19,], ends=list[20,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[20,], ends=list[21,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[391999,], ends=list[392000,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[392000,], ends=list[392001,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[7,], ends=list[8,], )
paddle.slice(Tensor([4294967295],"float32"), axes=list[0,], starts=list[9,], ends=list[10,], )
paddle.slice(Tensor([4294967295],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([4294967295],"int32"), axes=list[0,], starts=list[0,], ends=list[384,], )
paddle.slice(Tensor([4294967295],"int32"), axes=list[0,], starts=list[11,], ends=list[12,], )
paddle.slice(Tensor([4294967295],"int32"), axes=list[0,], starts=list[12,], ends=list[13,], )
paddle.slice(Tensor([4294967295],"int32"), axes=list[0,], starts=list[19,], ends=list[20,], )
paddle.slice(Tensor([4294967295],"int32"), axes=list[0,], starts=list[20,], ends=list[21,], )
paddle.slice(Tensor([429496730, 5],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([44739243, 4, 6, 2],"float64"), list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([52, 5162221, 16],"float32"), axes=list[1,], starts=list[0,], ends=list[7,], )
paddle.slice(Tensor([52, 5162221, 16],"float32"), axes=list[1,], starts=list[1,], ends=list[8,], )
paddle.slice(Tensor([52, 5162221, 16],"float32"), axes=list[1,], starts=list[2,], ends=list[9,], )
paddle.slice(Tensor([52, 9, 9177281],"float32"), axes=list[1,], starts=list[0,], ends=list[7,], )
paddle.slice(Tensor([52, 9, 9177281],"float32"), axes=list[1,], starts=list[1,], ends=list[8,], )
paddle.slice(Tensor([52, 9, 9177281],"float32"), axes=list[1,], starts=list[2,], ends=list[9,], )
paddle.slice(Tensor([536870912, 4, 2],"float32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([536870912, 4, 2],"float32"), axes=list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([536870912, 4, 2],"float32"), axes=list[2,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([536870912, 4, 2],"int32"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([536870913, 2, 2],"float64"), list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([536870913, 2, 2],"float64"), list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([536870913, 2, 2],"float64"), list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([536870913, 4],"float64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([536870913, 4],"float64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[4,], ends=list[7,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([536870913, 4],"int64"), axes=list[1,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([536870913, 4],"int64"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([536870913, 4],"int64"), list[0,1,], list[0,0,], list[2,2,], )
paddle.slice(Tensor([536870913, 4],"int64"), list[0,1,], list[0,1,], list[2,3,], )
paddle.slice(Tensor([536870913, 4],"int64"), list[1,], list[-3,], list[2,], )
paddle.slice(Tensor([536870913, 4],"int64"), list[-2,-1,], list[-3,0,], list[2,-1,], )
paddle.slice(Tensor([59652324, 4, 3, 3],"float64"), list[1,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([59652324, 4, 3, 3],"float64"), list[3,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([5965233, 3, 4, 5, 6],"int64"), list[0,1,2,4,], list[0,1,2,-4,], list[3,3,4,-2,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([6, 119304648, 3],"int64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([6, 357913942],"int64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[0,], ends=list[5,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[1,], ends=list[3,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[3,], ends=list[6,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([6, 4, 89478486],"int64"), axes=list[0,], starts=list[5,], ends=list[6,], )
paddle.slice(Tensor([67108864, 8, 8],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[4,], ends=list[7,], )
paddle.slice(Tensor([7, 102261127, 3],"int64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[4,], ends=list[7,], )
paddle.slice(Tensor([7, 306783379],"int64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[4,], ends=list[7,], )
paddle.slice(Tensor([7, 4, 76695845],"int64"), axes=list[0,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([715827883, 3, 2],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([715827883, 3, 2],"float32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([715827883, 3, 2],"int32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([715827883, 3, 2],"int32"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([715827883, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([715827883, 6],"float32"), axes=list[1,], starts=list[4,], ends=list[5,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[0,], ends=list[2,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[2,], ends=list[4,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[2,], ends=list[6,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[3,], ends=list[7,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[4,], ends=list[6,], )
paddle.slice(Tensor([76695845, 4, 7],"int64"), axes=list[2,], starts=list[6,], ends=list[7,], )
paddle.slice(Tensor([78, 27531842],"int64"), list[0,-1,], list[32,58,], list[-2,-1,], )
paddle.slice(Tensor([8, 2, 100, 2684355],"float16"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([8, 2, 100, 2684355],"float16"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([8, 2, 100, 2684355],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([8, 2, 100, 2684355],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([8, 2, 2684355, 100],"float16"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([8, 2, 2684355, 100],"float16"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([8, 2, 2684355, 100],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([8, 2, 2684355, 100],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([8, 20, 26843546],"float16"), list[0,], list[0,], list[4,], )
paddle.slice(Tensor([8, 20, 26843546],"float16"), list[0,], list[4,], list[8,], )
paddle.slice(Tensor([8, 26843546, 20],"float16"), list[0,], list[0,], list[4,], )
paddle.slice(Tensor([8, 26843546, 20],"float16"), list[0,], list[4,], list[8,], )
paddle.slice(Tensor([8, 53688, 100, 100],"float16"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([8, 53688, 100, 100],"float16"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([8, 53688, 100, 100],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([8, 53688, 100, 100],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([84215045, 51],"float32"), axes=list[1,], starts=list[49,], ends=list[50,], )
paddle.slice(Tensor([85899346, 10, 5],"float32"), list[0,], list[0,], list[1,], )
paddle.slice(Tensor([85899346, 10, 5],"float32"), list[0,], list[0,], list[2,], )
paddle.slice(Tensor([85899346, 10, 5],"float32"), list[0,], list[1,], list[2,], )
paddle.slice(Tensor([85899346, 10, 5],"float32"), list[0,], list[2,], list[4,], )
paddle.slice(Tensor([89478486, 4, 6],"float64"), list[1,2,], starts=list[0,0,], ends=list[2,4,], )
paddle.slice(Tensor([89478486, 4, 6],"float64"), list[2,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([9, 1, 477218589],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([9, 1, 477218589],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice(Tensor([9, 119304648, 4],"float32"), axes=list[2,], starts=list[2,], ends=list[3,], )
paddle.slice(Tensor([9, 119304648, 4],"float32"), axes=list[2,], starts=list[3,], ends=list[4,], )
paddle.slice_scatter(Tensor([119304648, 6, 3],"float64"), Tensor([119304648, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([119304648, 6, 3],"float64"), Tensor([8, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([13256072, 6, 3, 9],"float64"), Tensor([13256072, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([13256072, 6, 3, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([238609295, 6, 3],"float32"), Tensor([238609295, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([238609295, 6, 3],"float32"), Tensor([8, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([23860930, 6, 3, 5],"float64"), Tensor([23860930, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([23860930, 6, 3, 5],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([26512144, 6, 3, 9],"float32"), Tensor([26512144, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([26512144, 6, 3, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([39768216, 9, 6],"float64"), Tensor([1, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([39768216, 9, 6],"float64"), Tensor([39768216, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([47721859, 6, 3, 5],"float32"), Tensor([47721859, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([47721859, 6, 3, 5],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"bfloat16"), Tensor([715827883, 2],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"bfloat16"), Tensor([8, 2],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"bool"), Tensor([715827883, 2],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"bool"), Tensor([8, 2],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"float16"), Tensor([715827883, 2],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"float16"), Tensor([8, 2],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([79536432, 9, 6],"float32"), Tensor([1, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([79536432, 9, 6],"float32"), Tensor([79536432, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 178956971, 3],"float32"), Tensor([8, 178956971, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 178956971, 3],"float32"), Tensor([8, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 17895698, 3, 5],"float64"), Tensor([8, 17895698, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 17895698, 3, 5],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 19884108, 3, 9],"float32"), Tensor([8, 19884108, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 19884108, 3, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 35791395, 3, 5],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 35791395, 3, 5],"float32"), Tensor([8, 35791395, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 44739243, 6],"float64"), Tensor([1, 44739243, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 44739243, 6],"float64"), Tensor([1, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 536870912],"bfloat16"), Tensor([8, 2],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 536870912],"bfloat16"), Tensor([8, 536870912],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 536870912],"bool"), Tensor([8, 2],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 536870912],"bool"), Tensor([8, 536870912],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 536870912],"float16"), Tensor([8, 2],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 536870912],"float16"), Tensor([8, 536870912],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 17895698, 5],"float32"), Tensor([8, 2, 17895698, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 17895698, 5],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 14913081],"float64"), Tensor([8, 2, 3, 14913081],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 14913081],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 14913081],"float64"), Tensor([8, 6, 3, 14913081],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 14913081],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 29826162],"float32"), Tensor([8, 2, 3, 29826162],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 29826162],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 29826162],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 29826162],"float32"), Tensor([8, 6, 3, 29826162],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([143165577, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([8, 2, 3, 89478486],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([8, 2, 53687092, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([8, 35791395, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([71582789, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([8, 17895698, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([8, 2, 26843546, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([8, 2, 3, 44739243],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([119304648, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 6, 3, 29826162],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 6, 44739243, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 89478486, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([59652324, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 44739243, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 6, 22369622, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 6, 3, 14913081],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3],"float32"), Tensor([715827883, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3],"float32"), Tensor([8, 178956971, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3],"float32"), Tensor([8, 2, 268435456],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3],"float64"), Tensor([357913942, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3],"float64"), Tensor([8, 2, 134217729],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3],"float64"), Tensor([8, 89478486, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 44739243],"float64"), Tensor([8, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 44739243],"float64"), Tensor([8, 2, 44739243],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 4971027, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 4971027, 9],"float64"), Tensor([8, 6, 4971027, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 89478486],"float32"), Tensor([8, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 89478486],"float32"), Tensor([8, 2, 89478486],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 8947849, 5],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 8947849, 5],"float64"), Tensor([8, 2, 8947849, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 9942054, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 9942054, 9],"float32"), Tensor([8, 6, 9942054, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bfloat16"), Tensor([2147483648, 2],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bfloat16"), Tensor([8, 536870912],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bool"), Tensor([2147483648, 2],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bool"), Tensor([8, 536870912],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"float16"), Tensor([2147483648, 2],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"float16"), Tensor([8, 536870912],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 89478486, 3],"float64"), Tensor([8, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 89478486, 3],"float64"), Tensor([8, 89478486, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 89478486, 6],"float32"), Tensor([1, 89478486, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 89478486, 6],"float32"), Tensor([1, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 29826162],"float64"), Tensor([1, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 29826162],"float64"), Tensor([1, 9, 29826162],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 59652324],"float32"), Tensor([1, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 59652324],"float32"), Tensor([1, 9, 59652324],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float32"), Tensor([1, 4294967295, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float32"), Tensor([1, 9, 477218589],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float32"), Tensor([477218589, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float64"), Tensor([1, 2147483649, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float64"), Tensor([1, 9, 238609295],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float64"), Tensor([238609295, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9942054, 3, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 9942054, 3, 9],"float64"), Tensor([8, 9942054, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.sort(Tensor([1, 4294967295],"float16"), descending=True, )
paddle.sort(Tensor([1, 4294967295],"float32"), descending=True, )
paddle.sort(Tensor([10, 214748365],"float64"), )
paddle.sort(Tensor([10, 214748365],"float64"), axis=-1, )
paddle.sort(Tensor([1073741824, 4],"float32"), descending=True, )
paddle.sort(Tensor([134218, 32000],"float16"), descending=True, )
paddle.sort(Tensor([1431655765, 3],"float32"), 1, )
paddle.sort(Tensor([143166, 30000],"float32"), descending=True, )
paddle.sort(Tensor([178956971, 12],"float64"), 1, )
paddle.sort(Tensor([178956971, 3, 4],"float64"), 0, )
paddle.sort(Tensor([178956971, 3, 4],"float64"), 1, )
paddle.sort(Tensor([2, 1073741825],"float64"), 0, )
paddle.sort(Tensor([2, 2147483648],"float32"), 1, )
paddle.sort(Tensor([2, 2147483648],"float32"), descending=True, )
paddle.sort(Tensor([2, 268435457, 4],"float64"), 0, )
paddle.sort(Tensor([2, 3, 357913942],"float64"), 0, )
paddle.sort(Tensor([2147483649],"float64"), )
paddle.sort(Tensor([2147483649],"float64"), 0, )
paddle.sort(Tensor([2147483649],"float64"), axis=0, )
paddle.sort(Tensor([214748365, 10],"float64"), )
paddle.sort(Tensor([214748365, 10],"float64"), axis=-1, )
paddle.sort(Tensor([238609295, 3, 3],"float64"), 0, )
paddle.sort(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), 3, )
paddle.sort(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), 4, )
paddle.sort(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 238609295, 3],"float64"), 0, )
paddle.sort(Tensor([3, 3, 238609295],"float64"), 0, )
paddle.sort(Tensor([3, 3, 477218589],"float32"), 0, )
paddle.sort(Tensor([3, 477218589, 3],"float32"), 0, )
paddle.sort(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), 3, )
paddle.sort(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), 4, )
paddle.sort(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), 3, )
paddle.sort(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), 4, )
paddle.sort(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), 3, )
paddle.sort(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), 4, )
paddle.sort(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), 3, )
paddle.sort(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), 4, )
paddle.sort(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), 3, )
paddle.sort(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), 4, )
paddle.sort(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), 5, )
paddle.sort(Tensor([306783379, 7],"float64"), 1, )
paddle.sort(Tensor([4, 1073741824],"float32"), 1, )
paddle.sort(Tensor([4, 536870913],"float64"), 1, )
paddle.sort(Tensor([4, 7, 76695845],"float64"), 1, )
paddle.sort(Tensor([4, 7, 76695845],"float64"), 2, )
paddle.sort(Tensor([4, 89478486, 6],"float64"), 1, )
paddle.sort(Tensor([4, 89478486, 6],"float64"), 2, )
paddle.sort(Tensor([4294967295],"bfloat16"), )
paddle.sort(Tensor([4294967295],"float16"), )
paddle.sort(Tensor([4294967295],"float32"), )
paddle.sort(Tensor([4294967295],"float32"), 0, )
paddle.sort(Tensor([4294967295],"int32"), )
paddle.sort(Tensor([429496730, 10],"float32"), descending=True, )
paddle.sort(Tensor([477218589, 3, 3],"float32"), 0, )
paddle.sort(Tensor([5, 107374183, 4],"float64"), 1, )
paddle.sort(Tensor([5, 3, 143165577],"float64"), 1, )
paddle.sort(Tensor([5, 429496730],"float64"), 1, )
paddle.sort(Tensor([51130564, 42],"float64"), 1, )
paddle.sort(Tensor([51130564, 7, 6],"float64"), 1, )
paddle.sort(Tensor([51130564, 7, 6],"float64"), 2, )
paddle.sort(Tensor([613566757, 7],"float32"), 1, )
paddle.sort(Tensor([715827883, 3],"float64"), 0, )
paddle.sort(Tensor([85381, 50304],"float32"), descending=True, )
paddle.sort(x=Tensor([1073741824, 2, 2],"float32"), axis=0, )
paddle.sort(x=Tensor([1073741824, 2, 2],"int32"), axis=0, )
paddle.sort(x=Tensor([3, 2, 357913942],"float64"), axis=0, )
paddle.sort(x=Tensor([3, 2, 357913942],"float64"), axis=0, descending=True, )
paddle.sort(x=Tensor([3, 2, 357913942],"float64"), axis=1, )
paddle.sort(x=Tensor([3, 2, 357913942],"float64"), axis=-1, )
paddle.sort(x=Tensor([3, 2, 357913942],"int64"), axis=0, )
paddle.sort(x=Tensor([3, 2, 715827883],"float32"), axis=0, )
paddle.sort(x=Tensor([3, 2, 715827883],"int32"), axis=0, )
paddle.sort(x=Tensor([3, 357913942, 2],"float64"), axis=0, )
paddle.sort(x=Tensor([3, 357913942, 2],"float64"), axis=0, descending=True, )
paddle.sort(x=Tensor([3, 357913942, 2],"float64"), axis=1, )
paddle.sort(x=Tensor([3, 357913942, 2],"float64"), axis=-1, )
paddle.sort(x=Tensor([3, 357913942, 2],"int64"), axis=0, )
paddle.sort(x=Tensor([3, 715827883, 2],"float32"), axis=0, )
paddle.sort(x=Tensor([3, 715827883, 2],"int32"), axis=0, )
paddle.sort(x=Tensor([536870913, 2, 2],"float64"), axis=0, )
paddle.sort(x=Tensor([536870913, 2, 2],"float64"), axis=0, descending=True, )
paddle.sort(x=Tensor([536870913, 2, 2],"float64"), axis=1, )
paddle.sort(x=Tensor([536870913, 2, 2],"float64"), axis=-1, )
paddle.sort(x=Tensor([536870913, 2, 2],"int64"), axis=0, )
paddle.split(Tensor([1, 1, 16, 268435456],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1, 178956971, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 1, 22369622, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1, 4, 1073741824],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[27648,6912,1728,432,108,30,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[28800,7200,1800,450,117,35,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[4800,1200,300,80,20,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[6408,1620,414,108,30,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 10, 429496730],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 100, 42949673],"float32"), 2, -1, )
paddle.split(Tensor([1, 101, 42524429],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 101, 42524429],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 1024, 16, 262144],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1024, 21846, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1024, 4194304],"bfloat16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1024, 4194304],"float32"), 2, -1, )
paddle.split(Tensor([1, 1031205, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 1073741824, 4],"float32"), 2, -1, )
paddle.split(Tensor([1, 1073741824, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 1073741824, 4],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 1073741824, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 11, 16, 24403224],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 11, 16, 24403224],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([1, 11, 390451573],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 11, 390451573],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 11, 4067204, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 11, 4067204, 96],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([1, 111843, 38402],"float32"), list[28800,7200,1800,450,117,35,], axis=-1, )
paddle.split(Tensor([1, 1156, 3715370],"float32"), 2, -1, )
paddle.split(Tensor([1, 116509, 192, 192],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 116528, 36858],"float32"), list[27648,6912,1728,432,108,30,], axis=-1, )
paddle.split(Tensor([1, 1193710, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 121, 35495598],"float32"), 2, -1, )
paddle.split(Tensor([1, 126860, 184, 184],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 1296, 3314018],"float32"), 2, -1, )
paddle.split(Tensor([1, 13, 16, 20648882],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 13, 1720741, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 13, 330382100],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 13, 330382100],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 138655, 176, 176],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 1398102, 16, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1398102, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 14, 306783379],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 14, 306783379],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 14, 306783379],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 16, 257, 1044496],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([1, 16, 268435456],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 16, 268435456],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 16, 268435456],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 16, 268435456],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 16, 4194304, 64],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([1, 171798692, 5, 5],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([1, 192, 22369622],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 196, 21913099],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 20, 214748365],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([1, 2048, 2097152],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 2147483648, 2],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 2147483648, 2],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([1, 2147483649],"float64"), num_or_sections=3, axis=1, )
paddle.split(Tensor([1, 2147483649],"float64"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 22369622, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 22369622, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 24, 10, 17895698],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([1, 24, 17895698, 10],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([1, 25, 171798692],"float32"), 5, axis=-1, )
paddle.split(Tensor([1, 261124, 257, 64],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([1, 2796203, 16, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 2796203, 16, 96],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([1, 3, 1431655765],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 3, 1431655765],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 3, 1431655765],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 3, 192, 7456541],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([1, 3, 4971027, 288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([1, 300, 14316558],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 349526, 12288],"bfloat16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 400, 10737419],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 176, 61009],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 184, 58356],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 192, 55925],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 55925, 192],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 58356, 184],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 400, 61009, 176],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 417596, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 4294967295],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 4294967295],"float32"), 7, axis=-1, )
paddle.split(Tensor([1, 4294967295],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([1, 4294967295],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 4294967295],"float32"), num_or_sections=list[10,10,], axis=1, )
paddle.split(Tensor([1, 42949673, 10, 10],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([1, 44739243, 4, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 44739243, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 457789, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 477218589, 3, 3],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([1, 48, 17895698, 5],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([1, 48, 5, 17895698],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([1, 5, 858993459],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 5, 858993459],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 5, 858993459],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 500579, 8580],"float32"), list[6408,1620,414,108,30,], axis=-1, )
paddle.split(Tensor([1, 505291, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 559168, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 58, 74051161],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 6, 715827883],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 623816, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 671089, 6400],"float32"), list[4800,1200,300,80,20,], axis=-1, )
paddle.split(Tensor([1, 698369, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 77673, 192, 288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([1, 789517, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 8, 536870912],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 8, 536870912],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 8388608, 512],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 858993459, 5],"float32"), 5, axis=-1, )
paddle.split(Tensor([1, 896841, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 9, 477218589],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 9, 477218589],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 9, 477218589],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 96, 14913081, 3],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([1, 96, 3, 14913081],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([10, 2, 8, 26843546],"float32"), 3, axis=-1, )
paddle.split(Tensor([10, 2, 8947849, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([10, 214748365],"float64"), 2, axis=0, )
paddle.split(Tensor([10, 2236963, 8, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([10, 429496730],"bfloat16"), 2, axis=0, )
paddle.split(Tensor([10, 429496730],"bool"), 2, axis=0, )
paddle.split(Tensor([10, 429496730],"float16"), 2, axis=0, )
paddle.split(Tensor([10, 429496730],"float32"), 2, axis=0, )
paddle.split(Tensor([10, 429496730],"float32"), 7, axis=-1, )
paddle.split(Tensor([100, 42949673],"float32"), 2, axis=-1, )
paddle.split(Tensor([100, 42949673],"float32"), 7, axis=-1, )
paddle.split(Tensor([100257, 14, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([100850, 12, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([101, 42524429],"float32"), 2, axis=-1, )
paddle.split(Tensor([1010581, 2, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([101450, 14, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([1024, 10923, 2, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1024, 16, 1366, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1024, 16, 2, 131072],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([10240, 419431],"float32"), 3, axis=-1, )
paddle.split(Tensor([103, 41698712],"float32"), 7, axis=-1, )
paddle.split(Tensor([1031205, 1, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([104166, 16, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([104399, 4, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1048576, 1024, 4],"float32"), 2, -1, )
paddle.split(Tensor([105642, 16, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([10631108, 101, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([10631108, 101, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([10700, 32, 112, 112],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([10700, 32, 112, 112],"float32"), list[16,16,], axis=1, )
paddle.split(Tensor([1073741824, 1, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([1073741824, 1, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1073741824, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([1073741824, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1073741824, 4],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.split(Tensor([1073741825, 2],"int64"), 2, axis=1, )
paddle.split(Tensor([107374183, 20, 2],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([10737419, 100, 4],"float32"), 2, -1, )
paddle.split(Tensor([10737419, 20, 20],"float16"), 2, )
paddle.split(Tensor([1073742, 2, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([107547, 13, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1075625, 33, 11, 11],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([1078055, 2, 498, 4],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([108, 39768216],"float32"), 7, axis=-1, )
paddle.split(Tensor([1091202, 2, 492, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([10923, 2, 2, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([10923, 2048, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([11, 390451573],"float32"), 2, axis=-1, )
paddle.split(Tensor([110018, 11, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([111843, 1, 38402],"float32"), list[28800,7200,1800,450,117,35,], axis=-1, )
paddle.split(Tensor([11184811, 2, 8, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([111849, 384, 10, 10],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([111849, 384, 10, 10],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([112685, 15, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([114, 196225, 1, 192],"float16"), 3, axis=-1, )
paddle.split(Tensor([114, 4, 1, 9418788],"float16"), 3, axis=-1, )
paddle.split(Tensor([114, 4, 49057, 192],"float16"), 3, axis=-1, )
paddle.split(Tensor([114131, 48, 28, 28],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([11414, 120, 56, 56],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([11414, 120, 56, 56],"float32"), list[60,60,], axis=1, )
paddle.split(Tensor([116528, 1, 36858],"float32"), list[27648,6912,1728,432,108,30,], axis=-1, )
paddle.split(Tensor([119304648, 6, 6],"bool"), num_or_sections=3, axis=1, )
paddle.split(Tensor([119304648, 6, 6],"float32"), num_or_sections=list[5,0,3,], )
paddle.split(Tensor([119304648, 6, 6],"int32"), list[2,2,2,], axis=1, )
paddle.split(Tensor([119304648, 6, 6],"int32"), list[6,], axis=1, )
paddle.split(Tensor([119304648, 6, 6],"int32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([119304648, 6, 6],"int32"), num_or_sections=list[2,2,2,], axis=1, )
paddle.split(Tensor([1193710, 1, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([12, 27, 10, 1325608],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12, 27, 10, 1325608],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12, 27, 1325608, 10],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12, 27, 1325608, 10],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12, 3579140, 10, 10],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12, 3579140, 10, 10],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([12006, 43, 104, 80],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([120734, 14, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([124420, 20, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([124507, 704, 7, 7],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([124764, 5, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([125445, 1007, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([12632257, 10, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([126323, 16, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([126323, 4, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([127259, 54, 25, 25],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([127259, 54, 25, 25],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([127827, 16, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([128, 33554432],"float32"), 2, axis=-1, )
paddle.split(Tensor([128121, 7, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([128205, 13, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([128901, 8, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([13, 10, 33038210],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([13, 1007, 328086],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([13, 1635555, 202],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([13, 165191050, 2],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([13, 23598722, 7, 2],"float32"), 2, -1, )
paddle.split(Tensor([13, 3, 110127367],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([13, 3441481, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([13, 4, 2, 41297763],"float32"), 2, -1, )
paddle.split(Tensor([13, 4, 4, 20648882],"float32"), 2, -1, )
paddle.split(Tensor([13, 4, 41297763, 2],"float32"), 2, -1, )
paddle.split(Tensor([13, 4, 7, 11799361],"float32"), 2, -1, )
paddle.split(Tensor([13, 41297763, 4, 2],"float32"), 2, -1, )
paddle.split(Tensor([13, 7, 47197443],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([13, 7, 47197443],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([13, 7, 47197443],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([13, 7, 47197443],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([13, 82595525, 2, 2],"float32"), 2, -1, )
paddle.split(Tensor([13, 9717121, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([130021, 13, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([1301506, 33, 10, 10],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([130969, 19, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([13143, 43, 100, 76],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([13169, 104, 56, 56],"float16"), 4, 1, )
paddle.split(Tensor([13169, 104, 56, 56],"float32"), 4, 1, )
paddle.split(Tensor([134217728, 4, 4, 2],"float32"), 2, -1, )
paddle.split(Tensor([1342178, 2, 400, 4],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([134745, 15, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([136349, 15, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([1366, 1024, 16, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([136957, 160, 14, 14],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([136957, 160, 14, 14],"float32"), list[80,80,], axis=1, )
paddle.split(Tensor([136957, 640, 7, 7],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([136957, 640, 7, 7],"float32"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([138245, 18, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([139199, 3, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([139674, 5, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([139792, 4, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1398102, 1, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([14, 1, 12782641, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 1, 4, 76695845],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 10, 1278265, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 10, 4, 7669585],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 3195661, 4, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 3195661, 96],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 7, 43826197],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 7, 43826197],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([14, 9023041, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([1403585, 1, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([140986, 16, 476, 4],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([14267, 96, 56, 56],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([14267, 96, 56, 56],"float32"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([1431655765, 3],"float32"), 3, axis=-1, )
paddle.split(Tensor([144369, 14, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([146088, 14, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([146377, 17, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([152175, 576, 7, 7],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([152175, 576, 7, 7],"float32"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([1536, 116, 28, 861],"float16"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 116, 28, 861],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 116, 861, 28],"float16"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 116, 861, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 14267, 14, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([1536, 14267, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([1536, 232, 14, 861],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([1536, 232, 14, 861],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([1536, 232, 861, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([1536, 232, 861, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([1536, 3567, 28, 28],"float16"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 3567, 28, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 464, 7, 861],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([1536, 464, 7, 861],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([1536, 464, 861, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([1536, 464, 861, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([1536, 57066, 7, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([1536, 57066, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([157904, 20, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([1590729, 27, 10, 10],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([1590729, 27, 10, 10],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 105642, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 126323, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([16, 127827, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 134217729],"int64"), 8, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 17, 15790321],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 17, 15790321],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 18, 14913081],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 2, 134217728],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([16, 2, 134217728],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([16, 22193, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 24164, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([16, 26411, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([16, 268435456],"float32"), 8, )
paddle.split(Tensor([16, 268435456],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([16, 28986, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 3, 89478486],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([16, 31957, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 35409, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([16, 39453, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 44231, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 49933, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([16, 5, 53687092],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([16, 56812, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([16, 65218, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 75637, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 87725, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([16, 88769, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16305, 336, 28, 28],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([16305, 336, 28, 28],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([16305, 336, 28, 28],"float32"), list[112,112,112,], axis=1, )
paddle.split(Tensor([16305, 336, 28, 28],"float32"), list[168,168,], axis=1, )
paddle.split(Tensor([16321, 16, 257, 64],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([16384, 1024, 16, 16],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([16384, 1024, 16, 16],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([16384, 2, 32, 32, 128],"float16"), 2, axis=0, )
paddle.split(Tensor([165893, 15, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([166214, 19, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([1666654, 1, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([16777217, 128],"float64"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([169027, 10, 2541],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([170436, 112, 15, 15],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([170436, 12, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([171197, 32, 28, 28],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([17120, 80, 56, 56],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([17120, 80, 56, 56],"float32"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([174593, 4, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([175449, 18, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([1784, 192, 112, 112],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([1784, 192, 112, 112],"float32"), list[64,64,64,], axis=1, )
paddle.split(Tensor([178956971, 12],"float64"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1789570, 24, 10, 10],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([18046082, 7, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([1820, 2359873],"float32"), 3, axis=-1, )
paddle.split(Tensor([185769, 17, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([185930, 11, 2100],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([188907, 464, 7, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([188907, 464, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([1947831, 5, 21, 21],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([195653, 112, 14, 14],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([197380, 4, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([2, 1, 2147483648],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([2, 1, 2147483648],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([2, 10, 214748365],"float32"), 2, )
paddle.split(Tensor([2, 10, 214748365],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([2, 1073741824, 2],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 10923, 2, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 116, 28, 661172],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([2, 116, 661172, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([2, 116106, 136, 136],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 1217395, 42, 42],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 128, 2396746, 7],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([2, 128, 7, 2396746],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([2, 14, 153391690],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([2, 16384, 16, 128, 64],"float32"), 2, )
paddle.split(Tensor([2, 16384, 32, 32, 128],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 176, 28, 435772],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([2, 176, 435772, 28],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([2, 17747799, 11, 11],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 192, 1597831, 7],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([2, 192, 7, 1597831],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([2, 2, 1, 8, 128, 1048576],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 1, 8, 1398102, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 1, 87382, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 10923, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 2, 43691, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 2, 8, 128, 524288],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 2, 8, 699051, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 262144, 32, 128],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 32, 262144, 128],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 2, 32, 32, 1048576],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 21474837, 10, 10],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 21846, 1, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([2, 224, 28, 342393],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([2, 224, 342393, 28],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([2, 228895, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([2, 232, 14, 661172],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([2, 232, 661172, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([2, 2386093, 30, 30],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 24, 28, 3195661],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([2, 24, 3195661, 28],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([2, 279584, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([2, 32, 2396746, 28],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([2, 32, 28, 2396746],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.split(Tensor([2, 32, 3, 22369622],"float16"), 3, axis=2, )
paddle.split(Tensor([2, 32, 524288, 128],"float16"), 3, axis=2, )
paddle.split(Tensor([2, 33, 10, 6507527],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 11, 5915933],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 18, 3615293],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 19, 3425014],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 20, 3253764],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 3253764, 20],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 3425014, 19],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 3615293, 18],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 5915933, 11],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 33, 6507527, 10],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 349185, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([2, 352, 14, 435772],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([2, 352, 435772, 14],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([2, 400, 136, 39476],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 400, 39476, 136],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 400, 5368710],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 429496730, 5],"float32"), 2, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([2, 448421, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([2, 464, 661172, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([2, 464, 7, 661172],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([2, 48, 14, 3195661],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 48, 1597831, 28],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 48, 28, 1597831],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 48, 3195661, 14],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 4869578, 21, 21],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 488, 14, 314328],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([2, 488, 314328, 14],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([2, 5, 10226113, 42],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 14316558, 30],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 15, 28633116],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 20452226, 21],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 21, 20452226],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 28633116, 15],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 30, 14316558],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 42, 10226113],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 60, 7158279],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 5, 7158279, 60],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 536870912, 4],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 5368710, 20, 20],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 5592406, 3, 128],"float16"), 3, axis=2, )
paddle.split(Tensor([2, 5948709, 19, 19],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 596524, 60, 60],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 64, 14, 2396746],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([2, 64, 2396746, 14],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([2, 6628036, 18, 18],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 704, 435772, 7],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([2, 704, 7, 435772],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.split(Tensor([2, 8, 16, 128, 131072],"float32"), 2, )
paddle.split(Tensor([2, 8, 16, 262144, 64],"float32"), 2, )
paddle.split(Tensor([2, 8, 32768, 128, 64],"float32"), 2, )
paddle.split(Tensor([2, 9544372, 15, 15],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([2, 96, 14, 1597831],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 96, 1597831, 14],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 96, 3195661, 7],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 96, 7, 3195661],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 976, 314328, 7],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([2, 976, 7, 314328],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([20, 27, 152, 52327],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 27, 152, 52327],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 27, 19, 418613],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 27, 233931, 34],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 27, 29242, 272],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 27, 29242, 272],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 332428, 19, 34],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 5195, 152, 272],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 5195, 152, 272],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([206241, 5, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([2097153, 1024],"int64"), 8, )
paddle.split(Tensor([210538, 15, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([210703, 104, 14, 14],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([210703, 104, 14, 14],"float32"), list[52,52,], axis=1, )
paddle.split(Tensor([2147483649],"int64"), 2, axis=0, )
paddle.split(Tensor([2147483649],"int64"), list[100,], )
paddle.split(Tensor([2147483649],"int64"), list[100,100,], )
paddle.split(Tensor([2147483649],"int64"), list[100,100,100,100,], )
paddle.split(Tensor([2147483649],"int64"), list[100,100,100,100,100,100,100,100,], )
paddle.split(Tensor([2147483649],"int64"), list[33,99,], )
paddle.split(Tensor([2147483649],"int64"), list[4,8,8,20,32,88,20,20,72,12,36,16,4,8,44,12,], )
paddle.split(Tensor([2147483649],"int64"), list[5,4,0,4,], )
paddle.split(Tensor([2147483649],"int64"), list[96,], )
paddle.split(Tensor([2147483649],"int64"), list[96,32,], )
paddle.split(Tensor([2147483649],"int64"), list[98,], )
paddle.split(Tensor([214748365, 10],"int64"), 2, axis=1, )
paddle.split(Tensor([214748365, 20],"float32"), num_or_sections=list[10,10,], axis=1, )
paddle.split(Tensor([21474837, 10, 20],"float32"), 2, axis=1, )
paddle.split(Tensor([2147484, 1, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([2147484, 1000],"float64"), 2, axis=0, )
paddle.split(Tensor([2164803, 1, 496, 4],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([2182403, 1, 492, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([21846, 2, 1, 8, 128, 96],"float16"), 2, axis=0, )
paddle.split(Tensor([224211, 4, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([226911, 112, 13, 13],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([228262, 24, 28, 28],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.split(Tensor([228262, 96, 14, 14],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([22827, 960, 14, 14],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([22827, 960, 14, 14],"float32"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([228895, 2, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([231211, 43, 24, 18],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([238609295, 9],"float64"), num_or_sections=3, axis=1, )
paddle.split(Tensor([238610, 5, 60, 60],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([24, 10923, 128, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 10923, 128, 128],"float32"), 2, axis=1, )
paddle.split(Tensor([24, 1376593, 13, 10],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 1657009, 12, 9],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 21510, 104, 80],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 23547, 100, 76],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 34, 128, 41121],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 34, 128, 41121],"float32"), 2, axis=1, )
paddle.split(Tensor([24, 34, 41121, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 34, 41121, 128],"float32"), 2, axis=1, )
paddle.split(Tensor([24, 414253, 24, 18],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 100, 41618],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 104, 40018],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 12, 346816],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 13, 320138],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 231211, 18],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 24, 173408],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 416180, 10],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 462422, 9],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 52023, 80],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 43, 54761, 76],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([2430, 1767477],"float32"), 3, axis=-1, )
paddle.split(Tensor([24404, 2, 1100, 80],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([24457, 224, 28, 28],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.split(Tensor([246243, 27, 19, 34],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([25363, 14, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([254201, 11, 16, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([254201, 11, 16, 96],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([25775, 15, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([25891, 3, 192, 288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.split(Tensor([263173, 3, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([26338, 208, 28, 28],"float16"), 4, 1, )
paddle.split(Tensor([26338, 208, 28, 28],"float32"), 4, 1, )
paddle.split(Tensor([266306, 112, 12, 12],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([268435456, 16],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([268435456, 4, 2, 2],"float32"), 2, -1, )
paddle.split(Tensor([268435456, 4, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([2684355, 1, 400, 4],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([2684355, 2, 400, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([2684355, 400, 4],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([27314, 13, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([27616, 14, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([279584, 2, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([2796203, 1536],"float32"), 48, axis=-1, )
paddle.split(Tensor([27963, 300, 512],"float32"), 2, axis=2, )
paddle.split(Tensor([28, 153391690],"float32"), 3, axis=-1, )
paddle.split(Tensor([280717, 5, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([28172, 15, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([282600, 15199],"float32"), 3, axis=-1, )
paddle.split(Tensor([28533, 192, 28, 28],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([28533, 192, 28, 28],"float32"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([28986, 16, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([291, 2, 400, 136, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([29128, 9, 128, 128],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([292, 1, 400, 192, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([292, 400, 192, 192],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([29590, 12, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([29741, 13, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([298428, 4, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([298947, 3, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([3, 143165577, 5],"float64"), num_or_sections=2, axis=1, )
paddle.split(Tensor([3, 4, 500, 715828],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([3, 4, 89478486, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([3, 715828, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([3, 8, 89478486],"float64"), num_or_sections=2, axis=1, )
paddle.split(Tensor([300, 14316558],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.split(Tensor([30184, 14, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([3037460, 7, 202],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([304, 14128182],"float32"), list[2,2,1,], axis=-1, )
paddle.split(Tensor([306783379, 7, 2],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([30918, 15, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([31127, 176, 28, 28],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.split(Tensor([316925, 112, 11, 11],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([318, 1, 400, 184, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([318, 400, 184, 184],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([31815, 54, 50, 50],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([32, 1109238, 11, 11],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 108943, 11],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 11, 108943],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 12, 99865],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 13, 92183],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 14, 85599],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 15, 79892],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 79892, 15],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 85599, 14],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 92183, 13],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 112, 99865, 12],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 596524, 15, 15],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 684785, 14, 14],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 794188, 13, 13],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 932068, 12, 12],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([3200, 671089],"int64"), 2, axis=1, )
paddle.split(Tensor([32123, 13, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([32219, 12, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([32280, 11, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([32506, 13, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([325377, 33, 20, 20],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([32700, 14, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([32768, 8, 128, 128],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([342, 1024, 12288],"bfloat16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([342393, 64, 14, 14],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.split(Tensor([34240, 160, 28, 28],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([34240, 160, 28, 28],"float32"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([34240, 40, 56, 56],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([34240, 40, 56, 56],"float32"), list[20,20,], axis=1, )
paddle.split(Tensor([34359739, 25, 5],"float32"), 5, axis=-1, )
paddle.split(Tensor([347, 1, 400, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([347, 400, 176, 176],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([34800, 12, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([349526, 32, 3, 128],"float16"), 3, axis=2, )
paddle.split(Tensor([35118, 624, 14, 14],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([35118, 624, 14, 14],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([35118, 624, 14, 14],"float32"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([35118, 624, 14, 14],"float32"), list[312,312,], axis=1, )
paddle.split(Tensor([35214, 12, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([35508, 10, 12096],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([35675, 13, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([357913942, 12],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([357913942, 12],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([3579140, 48, 5, 5],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([360528, 33, 19, 19],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([36522, 14, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([37770, 15, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([38150, 12, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([3817749, 5, 15, 15],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([38416, 11, 10164],"float32"), list[484,1936,7744,], axis=-1, )
paddle.split(Tensor([3848, 27, 152, 272],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([3848, 27, 152, 272],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([385684, 58, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([38648, 12, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([38663, 10, 11109],"float32"), list[529,2116,8464,], axis=-1, )
paddle.split(Tensor([38989, 16, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([39332, 13, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([39453, 16, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([394759, 2, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([4, 1, 1073741824],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([4, 1, 1073741824],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([4, 10, 107374183],"float32"), 2, )
paddle.split(Tensor([4, 10, 107374183],"float32"), 2, axis=1, )
paddle.split(Tensor([4, 178956971, 6],"bool"), num_or_sections=3, axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), list[2,2,2,], axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), list[6,], axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), num_or_sections=list[2,2,2,], axis=1, )
paddle.split(Tensor([4, 2, 536870912],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([4, 2, 536870912],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([4, 20, 53687092],"float16"), 2, )
paddle.split(Tensor([4, 214748365, 5],"float32"), 2, )
paddle.split(Tensor([4, 3, 357913942],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([4, 350897, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([4, 416664, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([4, 536870913],"int64"), 2, axis=1, )
paddle.split(Tensor([4, 53687092, 20],"float16"), 2, )
paddle.split(Tensor([4, 53687092, 20],"float32"), 2, axis=1, )
paddle.split(Tensor([4, 6, 178956971],"bool"), num_or_sections=3, axis=1, )
paddle.split(Tensor([4, 6, 178956971],"int32"), list[2,2,2,], axis=1, )
paddle.split(Tensor([4, 6, 178956971],"int32"), list[6,], axis=1, )
paddle.split(Tensor([4, 6, 178956971],"int32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([4, 6, 178956971],"int32"), num_or_sections=list[2,2,2,], axis=1, )
paddle.split(Tensor([401700, 33, 18, 18],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([40468, 14, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([4096, 8, 16, 128, 64],"float32"), 2, )
paddle.split(Tensor([41629, 17, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([417596, 1, 10285],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([4194304, 1024, 1, 1],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([4194304, 1024, 1, 1],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([4194304, 1024],"float32"), 8, )
paddle.split(Tensor([42107523, 3, 34],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([42609, 12, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([4294967295],"bool"), list[27648,6912,1728,432,108,30,], )
paddle.split(Tensor([4294967295],"bool"), list[28800,7200,1800,450,117,35,], )
paddle.split(Tensor([4294967295],"bool"), list[4800,1200,300,80,20,], )
paddle.split(Tensor([4294967295],"bool"), list[6408,1620,414,108,30,], )
paddle.split(Tensor([4294967295],"float32"), 100, )
paddle.split(Tensor([4294967295],"float32"), 16, axis=-1, )
paddle.split(Tensor([4294967295],"float32"), 48, axis=-1, )
paddle.split(Tensor([4294967295],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([4294968, 1000],"bfloat16"), 2, axis=0, )
paddle.split(Tensor([4294968, 1000],"bool"), 2, axis=0, )
paddle.split(Tensor([4294968, 1000],"float16"), 2, axis=0, )
paddle.split(Tensor([4294968, 1000],"float32"), 2, axis=0, )
paddle.split(Tensor([4312217, 2, 498, 1],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([43581, 13, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([4364805, 2, 492, 1],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([43691, 128, 768],"float32"), 3, axis=-1, )
paddle.split(Tensor([43691, 96, 32, 32],"float16"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([43691, 96, 32, 32],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([44739243, 1, 4, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([44739243, 1, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([44739243, 96],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([4473925, 10, 4, 24],"float32"), 3, axis=-1, )
paddle.split(Tensor([44904, 488, 14, 14],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([45089, 14, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([456523, 192, 7, 7],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([456523, 48, 14, 14],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([45653, 120, 28, 28],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([45653, 120, 28, 28],"float32"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([45653, 480, 14, 14],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([45653, 480, 14, 14],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([45653, 480, 14, 14],"float32"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([45653, 480, 14, 14],"float32"), list[240,240,], axis=1, )
paddle.split(Tensor([457789, 1, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([46377, 10, 9261],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([46483, 11, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([47180, 15, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([47212, 12, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([47227, 116, 28, 28],"float16"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([47227, 116, 28, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([477218589, 9],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([48558, 13, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([486958, 5, 42, 42],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([488065, 2, 1100, 4],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([4971027, 96, 3, 3],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([49884, 14, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([500579, 1, 8580],"float32"), list[6408,1620,414,108,30,], axis=-1, )
paddle.split(Tensor([505291, 1, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([50550, 14, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([51131, 10, 8400],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([512, 10700, 28, 28],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 10700, 28, 28],"float32"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 120, 2497, 28],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 120, 2497, 28],"float32"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 120, 28, 2497],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 120, 28, 2497],"float32"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 171197, 7, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 171197, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 232, 14, 2583],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 232, 14, 2583],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 232, 2583, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 232, 2583, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 42800, 14, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 42800, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 464, 2583, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 464, 2583, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 464, 7, 2583],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 464, 7, 2583],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 8388608],"float32"), 16, axis=-1, )
paddle.split(Tensor([512, 8388608],"float32"), 48, axis=-1, )
paddle.split(Tensor([515603, 2, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([52, 408889, 202],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([52, 7, 11799361],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([52604, 12, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([536870912, 2, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([53687092, 8, 5],"float64"), num_or_sections=2, axis=1, )
paddle.split(Tensor([536871, 4, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([5368710, 1, 400, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([5368710, 400, 2],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([54438, 13, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([5478275, 196, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([55337, 1584, 7, 7],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([55337, 1584, 7, 7],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([55337, 1584, 7, 7],"float32"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([55337, 1584, 7, 7],"float32"), list[792,792,], axis=1, )
paddle.split(Tensor([555552, 3, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([559168, 1, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([5592406, 192, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([5592406, 4, 1, 192],"float16"), 3, axis=-1, )
paddle.split(Tensor([56144, 9, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([56395, 14, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([56655, 10, 7581],"float32"), list[361,1444,5776,], axis=-1, )
paddle.split(Tensor([57066, 14, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([5707, 240, 56, 56],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([5707, 240, 56, 56],"float32"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([57224, 8, 9382],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([581, 400, 136, 136],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 1, 19419, 192, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 21144, 184, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 23110, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 357913942, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 10169, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 176, 10169],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 1789570],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 184, 9726],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 192, 9321],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 9321, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 400, 9726, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 492, 1454935],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1, 496, 1443202],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 1, 500, 1431656],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 1, 65075263, 11],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1, 65075263, 11],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 1, 65075263, 11],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 1145325, 25, 25],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 1145325, 25, 25],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 130151, 500, 11],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 131201, 496, 11],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 132267, 492, 11],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1437406, 498, 1],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 1454935, 492, 1],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 16, 11184811, 4],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 16, 476, 93991],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 16, 559241, 80],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 162689, 1100, 4],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([6, 18799, 476, 80],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 2, 1100, 325377],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([6, 2, 178956971, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 19351, 136, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 357913942, 1],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 2, 357913942, 1],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 2, 400, 136, 6580],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 400, 6580, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 400, 894785],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 4473925, 80],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([6, 2, 492, 727468],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 2, 498, 718703],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 2, 500, 715828],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([6, 286332, 50, 50],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 357913942],"float64"), 3, )
paddle.split(Tensor([6, 357914, 500, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 359352, 498, 4],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 360801, 496, 4],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 363734, 492, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 375961, 476, 4],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 4, 44739243, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 4, 500, 357914],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 447393, 400, 4],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 49, 400, 192, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 53, 400, 184, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 54, 100, 132561],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 100, 132561],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 132561, 100],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 132561, 100],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 25, 530243],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 25, 530243],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 265122, 50],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 50, 265122],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 530243, 25],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 54, 530243, 25],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 58, 400, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 71583, 100, 100],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 71583, 100, 100],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 8135, 1100, 80],"float32"), list[200,900,], axis=2, )
paddle.split(Tensor([6, 894785, 400, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 97, 400, 136, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([613566757, 7],"float32"), 7, axis=-1, )
paddle.split(Tensor([61456, 13, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([62130, 9, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([62254, 352, 14, 14],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.split(Tensor([623816, 1, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([62382, 10, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([63125, 10, 6804],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([6380, 673193],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.split(Tensor([6391321, 7, 96],"float32"), 3, axis=-1, )
paddle.split(Tensor([6391321, 7, 96],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([64, 1024, 1, 65536],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 1, 65536],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 16, 4096],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 16, 4096],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 4096, 16],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 4096, 16],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 65536, 1],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 65536, 1],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 8, 8192],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 1024, 8192, 8],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 104, 11523, 56],"float16"), 4, 1, )
paddle.split(Tensor([64, 104, 11523, 56],"float32"), 4, 1, )
paddle.split(Tensor([64, 104, 14, 46092],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 104, 14, 46092],"float32"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 104, 46092, 14],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 104, 46092, 14],"float32"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 104, 56, 11523],"float16"), 4, 1, )
paddle.split(Tensor([64, 104, 56, 11523],"float32"), 4, 1, )
paddle.split(Tensor([64, 1048576, 8, 8],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 120, 56, 9987],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 120, 56, 9987],"float32"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 120, 9987, 56],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 120, 9987, 56],"float32"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 13, 5162221],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 14, 4793491],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([64, 14, 4793491],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([64, 15, 4473925],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 15, 4473925],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 15, 4473925],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([64, 1584, 6053, 7],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1584, 6053, 7],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1584, 6053, 7],"float32"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1584, 6053, 7],"float32"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1584, 7, 6053],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1584, 7, 6053],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1584, 7, 6053],"float32"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1584, 7, 6053],"float32"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 16, 4194304],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([64, 16, 4194304],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([64, 160, 14, 29960],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 160, 14, 29960],"float32"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 160, 14980, 28],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 160, 14980, 28],"float32"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 160, 28, 14980],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 160, 28, 14980],"float32"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 160, 29960, 14],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 160, 29960, 14],"float32"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 17, 3947581],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 17, 3947581],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 18, 3728271],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 18, 3728271],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 19, 3532046],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 19, 3532046],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 192, 112, 3121],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 192, 112, 3121],"float32"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 192, 12484, 28],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 192, 12484, 28],"float32"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 192, 16, 21846],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 16, 21846],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 18, 19419],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 18, 19419],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 19419, 18],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 19419, 18],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 21846, 16],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 21846, 16],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 28, 12484],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 192, 28, 12484],"float32"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 192, 3121, 112],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 192, 3121, 112],"float32"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 192, 56, 6242],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 56, 6242],"float32"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 6242, 56],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 192, 6242, 56],"float32"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 20, 3355444],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 20, 3355444],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 207127, 18, 18],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 207127, 18, 18],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 208, 11523, 28],"float16"), 4, 1, )
paddle.split(Tensor([64, 208, 11523, 28],"float32"), 4, 1, )
paddle.split(Tensor([64, 208, 28, 11523],"float16"), 4, 1, )
paddle.split(Tensor([64, 208, 28, 11523],"float32"), 4, 1, )
paddle.split(Tensor([64, 208, 56, 5762],"float16"), 4, 1, )
paddle.split(Tensor([64, 208, 5762, 56],"float16"), 4, 1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), 4, 1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), 4, 1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 21932, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([64, 240, 4994, 56],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 240, 4994, 56],"float32"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 240, 56, 4994],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 240, 56, 4994],"float32"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 26042, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([64, 262144, 16, 16],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 262144, 16, 16],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 262144, 16, 16],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 262144, 16, 16],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 288, 14, 16645],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 288, 14, 16645],"float32"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 288, 16645, 14],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 288, 16645, 14],"float32"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 31581, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([64, 32, 112, 18725],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 32, 112, 18725],"float32"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 32, 18725, 112],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 32, 18725, 112],"float32"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 320, 14, 14980],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 320, 14, 14980],"float32"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 320, 14980, 14],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 320, 14980, 14],"float32"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 336, 28, 7134],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 336, 28, 7134],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 336, 28, 7134],"float32"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 336, 28, 7134],"float32"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 336, 7134, 28],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 336, 7134, 28],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 336, 7134, 28],"float32"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 336, 7134, 28],"float32"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 384, 10, 17477],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 10, 17477],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 11, 15888],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 11, 15888],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 12, 14564],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 14564, 12],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 15888, 11],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 15888, 11],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 17477, 10],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 384, 17477, 10],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 38882, 1726],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 40, 29960, 56],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 40, 29960, 56],"float32"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 40, 56, 29960],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 40, 56, 29960],"float32"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 466034, 12, 12],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 480, 14, 9987],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 480, 14, 9987],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 480, 14, 9987],"float32"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 480, 14, 9987],"float32"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 480, 9987, 14],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 480, 9987, 14],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 480, 9987, 14],"float32"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 480, 9987, 14],"float32"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 49345, 1360],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 5350, 112, 112],"float16"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 5350, 112, 112],"float16"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 5350, 112, 112],"float32"), list[16,16,], axis=1, )
paddle.split(Tensor([64, 5350, 112, 112],"float32"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 554619, 11, 11],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 554619, 11, 11],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 56, 28, 42800],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 56, 28, 42800],"float32"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 56, 42800, 28],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 56, 42800, 28],"float32"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 576, 16645, 7],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 576, 16645, 7],"float32"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 576, 7, 16645],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 576, 7, 16645],"float32"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 624, 14, 7682],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 624, 14, 7682],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 624, 14, 7682],"float32"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 624, 14, 7682],"float32"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 624, 7682, 14],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 624, 7682, 14],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 624, 7682, 14],"float32"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 624, 7682, 14],"float32"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 640, 14980, 7],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 640, 14980, 7],"float32"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 640, 7, 14980],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 640, 7, 14980],"float32"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 65536, 32, 32],"float16"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 65536, 32, 32],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 67108864, 1, 1],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 67108864, 1, 1],"float32"), num_or_sections=2, axis=1, )
paddle.split(Tensor([64, 671089, 10, 10],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 671089, 10, 10],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 80, 14980, 56],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 80, 14980, 56],"float32"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 80, 56, 14980],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 80, 56, 14980],"float32"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), 4, 1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), 4, 1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 96, 12484, 56],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 96, 12484, 56],"float32"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 96, 21846, 32],"float16"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 96, 21846, 32],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 96, 32, 21846],"float16"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 96, 32, 21846],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 96, 56, 12484],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 96, 56, 12484],"float32"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 960, 14, 4994],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 960, 14, 4994],"float32"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 960, 4994, 14],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 960, 4994, 14],"float32"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64061, 14, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([64928, 14, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([65218, 16, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([65536, 1024, 8, 8],"float16"), num_or_sections=2, axis=1, )
paddle.split(Tensor([6585, 208, 56, 56],"float16"), 4, 1, )
paddle.split(Tensor([66577, 12, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([67108864, 16, 4],"float32"), 2, axis=-1, )
paddle.split(Tensor([67108864, 16, 4],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([671089, 1, 6400],"float32"), list[4800,1200,300,80,20,], axis=-1, )
paddle.split(Tensor([673721, 3, 2125],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([684785, 128, 7, 7],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([68479, 320, 14, 14],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([68479, 320, 14, 14],"float32"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([69043, 192, 18, 18],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([69043, 192, 18, 18],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([69566, 15, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([698369, 1, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([69837, 10, 6150],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([699051, 16, 2, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([69923, 13, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([701793, 2, 3060],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([7050, 16, 476, 80],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([70769, 10, 6069],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([7134, 192, 56, 56],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([7134, 192, 56, 56],"float32"), list[96,96,], axis=1, )
paddle.split(Tensor([715827883, 3],"float64"), 3, )
paddle.split(Tensor([72185, 7, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([72629, 11, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([74535, 14, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([74607, 16, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([75637, 16, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([75749, 12, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([76088, 288, 14, 14],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([76088, 288, 14, 14],"float32"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([762601, 11, 512],"float32"), 2, axis=2, )
paddle.split(Tensor([76695845, 4, 7, 2],"float32"), 2, -1, )
paddle.split(Tensor([768331, 43, 13, 10],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([7711, 34, 128, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([7711, 34, 128, 128],"float32"), 2, axis=1, )
paddle.split(Tensor([77673, 384, 12, 12],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([780904, 1, 500, 11],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([787201, 1, 496, 11],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([78906, 18, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([789517, 1, 5440],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([793601, 1, 492, 11],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([7954, 54, 100, 100],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([7954, 54, 100, 100],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([79882, 7, 7681],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([79892, 10, 5376],"float32"), list[256,1024,4096,], axis=-1, )
paddle.split(Tensor([8, 128, 4194304],"float32"), 3, axis=-1, )
paddle.split(Tensor([8, 20, 26843546],"float16"), 2, )
paddle.split(Tensor([8, 268435457],"int64"), 8, )
paddle.split(Tensor([8, 26843546, 20],"float16"), 2, )
paddle.split(Tensor([8, 32768, 128, 128],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([8, 32768, 128, 128],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([8, 536870912],"float32"), 8, )
paddle.split(Tensor([8, 6, 89478486],"float32"), num_or_sections=list[5,0,3,], )
paddle.split(Tensor([8, 699051, 768],"float32"), 3, axis=-1, )
paddle.split(Tensor([8, 8, 128, 524288],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([8, 8, 524288, 128],"float32"), num_or_sections=8, axis=1, )
paddle.split(Tensor([8, 89478486, 6],"float32"), num_or_sections=list[5,0,3,], )
paddle.split(Tensor([8, 9, 128, 466034],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([8, 9, 466034, 128],"float32"), num_or_sections=9, axis=1, )
paddle.split(Tensor([80268, 13, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([80680, 15, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([81531, 11, 4789],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([82636, 11, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([828505, 1296, 4],"float32"), 2, -1, )
paddle.split(Tensor([833327, 2, 2577],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([83547, 17, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([8388608, 512],"float32"), 16, axis=-1, )
paddle.split(Tensor([84216, 6, 8500],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([8550, 502336],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.split(Tensor([858993459, 5],"float32"), list[2,2,1,], axis=-1, )
paddle.split(Tensor([85899346, 10, 5],"float32"), 2, )
paddle.split(Tensor([85934, 12, 4165],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([87382, 192, 16, 16],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([87382, 192, 16, 16],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([8873900, 121, 4],"float32"), 2, -1, )
paddle.split(Tensor([88769, 16, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([89117, 7, 6885],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([89478486, 48],"float32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([89808, 976, 7, 7],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.split(Tensor([900, 4772186],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.split(Tensor([90899, 10, 4725],"float32"), list[225,900,3600,], axis=-1, )
paddle.split(Tensor([913046, 96, 7, 7],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([91824, 13, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([92437, 384, 11, 11],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([92437, 384, 11, 11],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([924843, 43, 12, 9],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([928843, 1156, 4],"float32"), 2, -1, )
paddle.split(Tensor([93092, 13, 3549],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([932068, 9, 512],"float32"), 2, axis=2, )
paddle.split(Tensor([94454, 232, 14, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([94454, 232, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([94687, 15, 3024],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([94862, 11, 4116],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([954438, 5, 30, 30],"float32"), list[4,1,], axis=1, )
paddle.split(Tensor([97827, 56, 28, 28],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([97827, 56, 28, 28],"float32"), list[28,28,], axis=1, )
paddle.split(Tensor([99476, 12, 3598],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(x=Tensor([1, 4294967295],"float32"), axis=1, num_or_sections=3, )
paddle.split(x=Tensor([10700, 128, 56, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([114131, 768, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 1024, 4833, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([124, 1024, 7, 4833],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 128, 28, 9665],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 128, 4833, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 128, 56, 4833],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 128, 9665, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 160, 14, 15463],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([124, 160, 15463, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([124, 192, 28, 6443],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([124, 192, 6443, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([124, 256, 14, 9665],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 256, 28, 4833],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 256, 4833, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 256, 9665, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 320, 15463, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([124, 320, 7, 15463],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([124, 384, 14, 6443],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([124, 384, 6443, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([124, 40, 15463, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([124, 40, 56, 15463],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 512, 14, 4833],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 512, 4833, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 512, 7, 9665],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 512, 9665, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 64, 56, 9665],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 64, 9665, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([124, 768, 6443, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 768, 7, 6443],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 80, 15463, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([124, 80, 28, 15463],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([124, 96, 56, 6443],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([124, 96, 6443, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([128, 1024, 4682, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([128, 1024, 7, 4682],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 128, 28, 9363],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 128, 4682, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 128, 56, 4682],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 128, 9363, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 160, 14, 14980],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([128, 160, 14980, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([128, 192, 28, 6242],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([128, 192, 6242, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([128, 256, 14, 9363],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 256, 28, 4682],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 256, 4682, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 256, 9363, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 320, 14980, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([128, 320, 7, 14980],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([128, 384, 14, 6242],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([128, 384, 6242, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([128, 40, 14980, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([128, 40, 56, 14980],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 512, 14, 4682],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 512, 4682, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 512, 7, 9363],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 512, 9363, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 64, 56, 9363],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([128, 64, 9363, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([128, 768, 6242, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([128, 768, 7, 6242],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([128, 80, 14980, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([128, 80, 28, 14980],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([128, 96, 56, 6242],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([128, 96, 6242, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([136957, 160, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([14267, 384, 28, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([14267, 96, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([171197, 512, 7, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([19022, 288, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([2, 1073741825],"float64"), num_or_sections=2, )
paddle.split(x=Tensor([2, 1073741825],"float64"), num_or_sections=list[2,-1,], axis=-1, )
paddle.split(x=Tensor([2, 1073741825],"float64"), num_or_sections=tuple(2,1,), axis=1, )
paddle.split(x=Tensor([21400, 256, 28, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([21400, 64, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([273914, 320, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([28533, 192, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([28533, 768, 14, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([34240, 40, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([38044, 576, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([4, 1024, 149797, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([4, 1024, 7, 149797],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([4, 1152, 133153, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([4, 1152, 7, 133153],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([4, 128, 28, 299594],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([4, 128, 299594, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([4, 144, 133153, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([4, 144, 56, 133153],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([4, 1536, 7, 99865],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([4, 1536, 99865, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([4, 160, 14, 479350],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([4, 160, 479350, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([4, 192, 199729, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 192, 28, 199729],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 192, 56, 99865],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 192, 99865, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([4, 256, 14, 299594],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([4, 256, 299594, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([4, 288, 133153, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([4, 288, 28, 133153],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([4, 320, 479350, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([4, 320, 7, 479350],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 384, 14, 199729],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([4, 384, 199729, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([4, 384, 28, 99865],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([4, 384, 99865, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([4, 40, 479350, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([4, 40, 56, 479350],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([4, 512, 14, 149797],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([4, 512, 149797, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([4, 576, 133153, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([4, 576, 14, 133153],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([4, 64, 299594, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([4, 64, 56, 299594],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([4, 768, 14, 99865],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 768, 199729, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 768, 7, 199729],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 768, 99865, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 80, 28, 479350],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([4, 80, 479350, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([4, 96, 199729, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([4, 96, 56, 199729],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([42800, 128, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([42800, 512, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([4294967295],"bool"), num_or_sections=3, axis=0, )
paddle.split(x=Tensor([57066, 1536, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([57066, 384, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([60, 1152, 7, 8877],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([60, 1152, 8877, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([60, 144, 56, 8877],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([60, 144, 8877, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([60, 1460874, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([60, 1460874, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([60, 1536, 6658, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([60, 1536, 7, 6658],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([60, 192, 56, 6658],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([60, 192, 6658, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([60, 22827, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([60, 22827, 56, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([60, 288, 28, 8877],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([60, 288, 8877, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([60, 365219, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([60, 365219, 14, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([60, 384, 28, 6658],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([60, 384, 6658, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([60, 576, 14, 8877],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([60, 576, 8877, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([60, 768, 14, 6658],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([60, 768, 6658, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([60, 91305, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([60, 91305, 28, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([64, 1152, 7, 8323],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([64, 1152, 8323, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([64, 144, 56, 8323],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([64, 144, 8323, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([64, 1536, 6242, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([64, 1536, 7, 6242],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([64, 21400, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([64, 288, 28, 8323],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([64, 288, 8323, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([64, 342393, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([64, 576, 14, 8323],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([64, 576, 8323, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([64, 85599, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([68479, 80, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([7134, 192, 56, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([715827883, 3],"float64"), num_or_sections=2, )
paddle.split(x=Tensor([715827883, 3],"float64"), num_or_sections=list[2,-1,], axis=-1, )
paddle.split(x=Tensor([715827883, 3],"float64"), num_or_sections=tuple(2,1,), axis=1, )
paddle.split(x=Tensor([715827883, 6],"float32"), axis=1, num_or_sections=3, )
paddle.split(x=Tensor([76088, 1152, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([85599, 1024, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([85599, 256, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([9511, 144, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.stanh(x=Tensor([1, 2147483649],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1, 2147483649],"float64"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1, 4294967295],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1, 4294967295],"float32"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1073741825, 2],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1073741825, 2],"float64"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1073741825, 2],"float64"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([178956971, 3, 2, 2],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 1073741825],"float64"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 2147483648],"float32"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 268435457, 2, 2],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 3, 178956971, 2],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 3, 2, 178956971],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2147483648, 2],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2147483648, 2],"float32"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([2147483648, 2],"float32"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2147483649],"float64"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([4294967295],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.strided_slice(Tensor([2147483649],"int64"), axes=list[0,], starts=list[3,], ends=list[1,], strides=list[-2,], )
paddle.strided_slice(Tensor([357913942, 6],"int64"), axes=list[0,1,], starts=list[8,-1,], ends=list[1,-5,], strides=list[-2,-3,], )
paddle.strided_slice(Tensor([38347923, 7, 8],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(Tensor([6, 357913942],"int64"), axes=list[0,1,], starts=list[8,-1,], ends=list[1,-5,], strides=list[-2,-3,], )
paddle.strided_slice(Tensor([6, 44739243, 8],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(Tensor([6, 7, 51130564],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([17895698, 4, 5, 6],"float64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([17895698, 4, 5, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 23860930, 5, 6],"float64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 23860930, 5, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 29826162, 6],"float64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 29826162, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 35791395],"float64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 35791395],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 71582789],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 71582789],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 59652324, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 59652324, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 47721859, 5, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 47721859, 5, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([35791395, 4, 5, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([35791395, 4, 5, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([4294967295],"float32"), axes=list[0,], starts=list[3,], ends=list[1,], strides=list[-2,], )
paddle.strided_slice(x=Tensor([5, 1491309, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([5, 1491309, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 1118482, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([5, 8, 1118482, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 1118482],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 1118482],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 372828, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 372828, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 745655, 2, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 745655, 2, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([6, 715827883],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[1,-2,], )
paddle.strided_slice(x=Tensor([6, 715827883],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[4,-2,], )
paddle.strided_slice(x=Tensor([715827883, 6],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[1,-2,], )
paddle.strided_slice(x=Tensor([715827883, 6],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[4,-2,], )
paddle.strided_slice(x=Tensor([932068, 8, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([932068, 8, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.subtract(Tensor([1, 1, 143165577, 30],"float32"), Tensor([1, 1, 143165577, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 143165577, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 143165577],"float32"), Tensor([1, 1, 30, 143165577],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 143165577],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 143165577, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 30, 143165577],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 4772186, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([4772186, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 256, 5592406],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 5592406, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 65536, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([21846, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 5592406],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 5592406],"float32"), Tensor([1, 3, 256, 5592406],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 3, 32, 44739243],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 3, 44739243, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 4194304, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1398102, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 44739243],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 44739243],"float32"), Tensor([1, 3, 32, 44739243],"float32"), )
paddle.subtract(Tensor([1, 3, 44739243, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 44739243, 32],"float32"), Tensor([1, 3, 44739243, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 5592406, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 5592406, 256],"float32"), Tensor([1, 3, 5592406, 256],"float32"), )
paddle.subtract(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 4194304, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 4294967295],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([1, 4294967295],"float32"), Tensor([4, 4294967295],"float32"), )
paddle.subtract(Tensor([1, 4772186, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 4772186, 30, 30],"float32"), Tensor([1, 4772186, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 65536, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 65536, 256, 256],"float32"), Tensor([1, 65536, 256, 256],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.subtract(Tensor([1],"float64"), Tensor([2147483649],"float64"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([10, 1],"float32"), Tensor([10, 429496730],"float32"), )
paddle.subtract(Tensor([10, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.subtract(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.subtract(Tensor([10, 15],"float32"), Tensor([10, 429496730],"float32"), )
paddle.subtract(Tensor([10, 15],"float32"), Tensor([286331153, 15],"float32"), )
paddle.subtract(Tensor([10, 15],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([10, 1],"float32"), )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([10, 15],"float32"), )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([15],"float32"), )
paddle.subtract(Tensor([100, 1],"float32"), Tensor([100, 42949673],"float32"), )
paddle.subtract(Tensor([100, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([100, 42949673],"float32"), Tensor([100, 1],"float32"), )
paddle.subtract(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([119304648, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([119304648, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([1398102, 3, 32, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1398102, 3, 32, 32],"float32"), Tensor([1398102, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([16, 134217728, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.subtract(Tensor([16, 134217728, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.subtract(Tensor([16, 268435456, 1],"float32"), Tensor([16, 268435456, 1],"float32"), )
paddle.subtract(Tensor([16, 268435456, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([16, 268435456, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.subtract(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.subtract(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.subtract(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), )
paddle.subtract(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), )
paddle.subtract(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), )
paddle.subtract(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), )
paddle.subtract(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 214748365],"float32"), )
paddle.subtract(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.subtract(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.subtract(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 178956971, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 178956971, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), )
paddle.subtract(Tensor([2, 214748365, 10],"float32"), Tensor([2, 214748365, 10],"float32"), )
paddle.subtract(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 178956971, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 178956971, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 178956971, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 238609295],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 238609295],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([1073741824, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([1431655765, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 178956971, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 715827883, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 536870912, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 357913942, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([357913942, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.subtract(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.subtract(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.subtract(Tensor([2, 536870912, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.subtract(Tensor([2, 96, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.subtract(Tensor([2, 96, 2],"float32"), Tensor([2, 96, 22369622],"float32"), )
paddle.subtract(Tensor([2, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.subtract(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.subtract(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 22369622],"float32"), )
paddle.subtract(Tensor([2],"float64"), Tensor([2147483649],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([1],"float64"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([2],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.subtract(Tensor([2147483649],"int64"), Tensor([3],"int64"), )
paddle.subtract(Tensor([21846, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([21846, 3, 256, 256],"float32"), Tensor([21846, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([22369622, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.subtract(Tensor([22369622, 96, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.subtract(Tensor([22369622, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.subtract(Tensor([286331153, 15],"float32"), Tensor([10, 15],"float32"), )
paddle.subtract(Tensor([286331153, 15],"float32"), Tensor([15],"float32"), )
paddle.subtract(Tensor([286331153, 15],"float32"), Tensor([286331153, 15],"float32"), )
paddle.subtract(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([3],"float32"), Tensor([4294967295],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([3],"float32"), Tensor([4294967295],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([3],"int64"), Tensor([2147483649],"int64"), )
paddle.subtract(Tensor([32],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.subtract(Tensor([357913942, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.subtract(Tensor([4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.subtract(Tensor([4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([10, 1],"float32"), )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([100, 1],"float32"), )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([3],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([3],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([32],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), )
paddle.subtract(Tensor([42949673, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), )
paddle.subtract(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.subtract(Tensor([429496730, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.subtract(Tensor([44739243, 96, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([44739243, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.subtract(Tensor([4772186, 1, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([4772186, 1, 30, 30],"float32"), Tensor([4772186, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([715827883, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_log_prob", )
paddle.subtract(x=Tensor([1073741825, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.subtract(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.subtract(x=Tensor([1073741825, 2],"int64"), y=Tensor([1073741825, 2],"int64"), )
paddle.subtract(x=Tensor([1073741825, 2],"int64"), y=Tensor([2, 2],"int64"), )
paddle.subtract(x=Tensor([2, 1073741825],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.subtract(x=Tensor([2, 1073741825],"float64"), y=Tensor([2, 2],"float64"), )
paddle.subtract(x=Tensor([2, 1073741825],"int64"), y=Tensor([2, 1073741825],"int64"), )
paddle.subtract(x=Tensor([2, 1073741825],"int64"), y=Tensor([2, 2],"int64"), )
paddle.subtract(x=Tensor([2, 2],"float32"), y=Tensor([2, 2147483648],"float32"), )
paddle.subtract(x=Tensor([2, 2],"float32"), y=Tensor([2147483648, 2],"float32"), )
paddle.subtract(x=Tensor([2, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.subtract(x=Tensor([2, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.subtract(x=Tensor([2, 2],"int32"), y=Tensor([2, 2147483648],"int32"), )
paddle.subtract(x=Tensor([2, 2],"int32"), y=Tensor([2147483648, 2],"int32"), )
paddle.subtract(x=Tensor([2, 2],"int64"), y=Tensor([1073741825, 2],"int64"), )
paddle.subtract(x=Tensor([2, 2],"int64"), y=Tensor([2, 1073741825],"int64"), )
paddle.subtract(x=Tensor([2, 2147483648],"float32"), y=Tensor([2, 2],"float32"), )
paddle.subtract(x=Tensor([2, 2147483648],"float32"), y=Tensor([2, 2147483648],"float32"), )
paddle.subtract(x=Tensor([2, 2147483648],"int32"), y=Tensor([2, 2],"int32"), )
paddle.subtract(x=Tensor([2, 2147483648],"int32"), y=Tensor([2, 2147483648],"int32"), )
paddle.subtract(x=Tensor([2147483648, 2],"float32"), y=Tensor([2, 2],"float32"), )
paddle.subtract(x=Tensor([2147483648, 2],"float32"), y=Tensor([2147483648, 2],"float32"), )
paddle.subtract(x=Tensor([2147483648, 2],"int32"), y=Tensor([2, 2],"int32"), )
paddle.subtract(x=Tensor([2147483648, 2],"int32"), y=Tensor([2147483648, 2],"int32"), )
paddle.subtract(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.subtract(x=Tensor([2147483649],"float64"), y=Tensor([3],"float64"), )
paddle.subtract(x=Tensor([3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.sum(Tensor([107374183, 2, 10],"float64"), None, "float64", False, None, )
paddle.sum(Tensor([13, 330382100],"int32"), axis=1, dtype="int64", )
paddle.sum(Tensor([2, 1073741825],"float64"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 1073741825],"float64"), -1, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 1073741825],"float64"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 1073741825],"float64"), None, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 2147483648],"float32"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 2147483648],"float32"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([3, 1431655765],"float32"), keepdim=True, )
paddle.sum(Tensor([429496730, 5],"float64"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([429496730, 5],"float64"), -1, keepdim=True, dtype="float32", )
paddle.sum(Tensor([429496730, 5],"float64"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([429496730, 5],"float64"), None, keepdim=True, dtype="float32", )
paddle.sum(Tensor([6, 2, 178956971],"float64"), None, "float64", False, None, )
paddle.sum(Tensor([6, 35791395, 10],"float64"), None, "float64", False, None, )
paddle.sum(Tensor([613566757, 7],"int32"), axis=1, dtype="int64", )
paddle.sum(Tensor([858993459, 5],"float32"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([858993459, 5],"float32"), keepdim=True, )
paddle.sum(Tensor([858993459, 5],"float32"), None, keepdim=False, dtype="float32", )
paddle.sum(x=Tensor([1073741825, 2],"float64"), dtype="float64", )
paddle.sum(x=Tensor([2, 1073741825],"float64"), dtype="float64", )
paddle.sum(x=Tensor([2, 2147483648],"float32"), dtype="float64", )
paddle.sum(x=Tensor([2, 3, 4, 89478486],"float64"), keepdim=True, )
paddle.sum(x=Tensor([2, 3, 71582789, 5],"float64"), keepdim=True, )
paddle.sum(x=Tensor([2, 53687092, 4, 5],"float64"), keepdim=True, )
paddle.sum(x=Tensor([2147483648, 2],"float32"), dtype="float64", )
paddle.sum(x=Tensor([35791395, 3, 4, 5],"float64"), keepdim=True, )
paddle.take(Tensor([1073741824, 4],"float32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([1073741824, 4],"float32"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.take(Tensor([1073741824, 4],"int32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([1073741824, 4],"int32"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 1431655765],"float32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 1431655765],"float32"), Tensor([2, 715827883],"int64"), mode="raise", )
paddle.take(Tensor([3, 1431655765],"int32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 1431655765],"int32"), Tensor([2, 715827883],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"float32"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"float32"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"float64"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"float64"), Tensor([268435457, 8],"int64"), mode="clip", )
paddle.take(Tensor([3, 4],"float64"), Tensor([268435457, 8],"int64"), mode="wrap", )
paddle.take(Tensor([3, 4],"float64"), Tensor([5, 429496730],"int64"), mode="clip", )
paddle.take(Tensor([3, 4],"float64"), Tensor([5, 429496730],"int64"), mode="wrap", )
paddle.take(Tensor([3, 4],"float64"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"int32"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"int32"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"int64"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.take(Tensor([3, 4],"int64"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([2, 715827883],"int64"), mode="raise", )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 715827883],"int64"), mode="clip", )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 715827883],"int64"), mode="wrap", )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 8],"int64"), mode="clip", )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.take(Tensor([3, 715827883],"int64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 715827883],"int64"), Tensor([2, 715827883],"int64"), mode="raise", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([5, 8],"int64"), mode="clip", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([536870913, 8],"int64"), mode="clip", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([536870913, 8],"int64"), mode="wrap", )
paddle.take(Tensor([536870913, 4],"int64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([536870913, 4],"int64"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.tanh(Tensor([1, 1, 4294967295],"float32"), )
paddle.tanh(Tensor([1, 116080198, 37],"float32"), )
paddle.tanh(Tensor([1, 20, 214748365],"float32"), )
paddle.tanh(Tensor([1, 2147483649],"float64"), )
paddle.tanh(Tensor([1, 2396746, 1792],"float32"), )
paddle.tanh(Tensor([1, 3, 256, 5592406],"float32"), )
paddle.tanh(Tensor([1, 3, 32, 44739243],"float32"), )
paddle.tanh(Tensor([1, 3, 44739243, 32],"float32"), )
paddle.tanh(Tensor([1, 3, 5592406, 256],"float32"), )
paddle.tanh(Tensor([1, 33554432, 128],"float32"), )
paddle.tanh(Tensor([1, 4194304, 32, 32],"float32"), )
paddle.tanh(Tensor([1, 4294967295],"float32"), )
paddle.tanh(Tensor([1, 58, 74051161],"float32"), )
paddle.tanh(Tensor([1, 65536, 256, 256],"float32"), )
paddle.tanh(Tensor([1, 67108864, 64],"float32"), )
paddle.tanh(Tensor([1073741824, 4],"float32"), )
paddle.tanh(Tensor([1157050, 58, 64],"float32"), )
paddle.tanh(Tensor([116080198, 1, 37],"float32"), )
paddle.tanh(Tensor([119304648, 3, 3, 4],"float32"), )
paddle.tanh(Tensor([134217728, 32],"float32"), )
paddle.tanh(Tensor([1398102, 3, 32, 32],"float32"), )
paddle.tanh(Tensor([1431655765, 3],"float32"), )
paddle.tanh(Tensor([16777216, 4, 8, 8],"float32"), )
paddle.tanh(Tensor([1677722, 20, 128],"float32"), )
paddle.tanh(Tensor([2, 178956971, 3, 4],"float32"), )
paddle.tanh(Tensor([2, 2097152, 32, 32],"float32"), )
paddle.tanh(Tensor([2, 3, 178956971, 4],"float32"), )
paddle.tanh(Tensor([2, 3, 22369622, 32],"float32"), )
paddle.tanh(Tensor([2, 3, 3, 238609295],"float32"), )
paddle.tanh(Tensor([2, 3, 32, 22369622],"float32"), )
paddle.tanh(Tensor([2, 33554432, 8, 8],"float32"), )
paddle.tanh(Tensor([2, 4, 67108864, 8],"float32"), )
paddle.tanh(Tensor([2, 4, 8, 67108864],"float32"), )
paddle.tanh(Tensor([2147483649],"float64"), )
paddle.tanh(Tensor([21846, 3, 256, 256],"float32"), )
paddle.tanh(Tensor([2396746, 1, 1792],"float32"), )
paddle.tanh(Tensor([33554432, 1, 128],"float32"), )
paddle.tanh(Tensor([4294967295],"float32"), )
paddle.tanh(Tensor([64, 26, 512, 1, 5042],"float16"), )
paddle.tanh(Tensor([64, 26, 512, 1, 5042],"float32"), )
paddle.tanh(Tensor([64, 26, 512, 127, 40],"float16"), )
paddle.tanh(Tensor([64, 26, 512, 127, 40],"float32"), )
paddle.tanh(Tensor([64, 26, 64528, 1, 40],"float16"), )
paddle.tanh(Tensor([64, 26, 64528, 1, 40],"float32"), )
paddle.tanh(Tensor([64, 3277, 512, 1, 40],"float16"), )
paddle.tanh(Tensor([64, 3277, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([67108865, 32],"float64"), )
paddle.tanh(Tensor([715827883, 3],"float64"), )
paddle.tanh(Tensor([8, 26, 512, 1, 40330],"float32"), )
paddle.tanh(Tensor([8, 26, 512, 1009, 40],"float32"), )
paddle.tanh(Tensor([8, 26, 516223, 1, 40],"float32"), )
paddle.tanh(Tensor([8, 26215, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([8066, 26, 512, 1, 40],"float16"), )
paddle.tanh(Tensor([8066, 26, 512, 1, 40],"float32"), )
paddle.tanh(x=Tensor([178956971, 3, 4],"float64"), )
paddle.tanh(x=Tensor([2, 268435456, 8],"float32"), )
paddle.tanh(x=Tensor([2, 268435457, 4],"float64"), )
paddle.tanh(x=Tensor([2, 3, 357913942],"float64"), )
paddle.tanh(x=Tensor([2, 8, 268435456],"float32"), )
paddle.tanh(x=Tensor([2147483649],"float64"), )
paddle.tanh(x=Tensor([238609295, 3, 3],"float64"), )
paddle.tanh(x=Tensor([3, 238609295, 3],"float64"), )
paddle.tanh(x=Tensor([3, 3, 238609295],"float64"), )
paddle.tanh(x=Tensor([3, 715827883],"float64"), )
paddle.tanh(x=Tensor([4294967295],"float32"), )
paddle.tanh(x=Tensor([429496730, 5],"float64"), )
paddle.tanh(x=Tensor([67108864, 8, 8],"float32"), )
paddle.Tensor.__rmul__(Tensor([4294968, 1000],"int32"), 0, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006891271056661541, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006896551724137945, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006901840490797562, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0069071373752878085, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00691244239631339, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006917755572636408, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006923076923076921, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006928406466512715, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006933744221879867, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006939090208172738, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00694444444444442, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006949806949806958, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00695517774343124, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00696055684454755, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00696594427244579, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006971340046475594, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006976744186046546, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006982156710628407, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006987577639751552, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006993006993006978, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.006998444790046632, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007003891050583633, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007009345794392496, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007014809041309467, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0070202808112324044, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007025761124121788, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007031250000000044, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0070367474589523304, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007042253521126751, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007047768206734584, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007053291536050166, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007058823529411784, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007064364207221341, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0070699135899450205, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007075471698113178, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007081038552321006, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007086614173228312, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007092198581560294, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007097791798107211, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007103393843725381, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007109004739336511, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007114624505928813, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007120253164557, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0071258907363420665, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007131537242472286, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007137192704202988, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0071428571428571175, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00714853057982523, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007154213036565937, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007159904534606243, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0071656050955414274, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007171314741035828, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0071770334928229484, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0071827613727054596, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007188498402555865, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007194244604316502, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007199999999999984, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007205764611689314, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007211538461538436, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007217321571772239, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007223113964687, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0072289156626506035, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007234726688102877, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007240547063555924, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007246376811594235, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00725221595487513, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007258064516128981, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007263922518159771, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007269789983844865, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007275666936135794, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007281553398058249, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0072874493927125306, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007293354943273878, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007299270072992692, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007305194805194759, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007311129163281915, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007317073170731714, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007323026851098424, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007328990228013033, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007334963325183352, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007340946166394802, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007346938775510181, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007352941176470562, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007358953393295176, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0073649754500818565, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0073710073710073765, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007377049180327888, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007383100902379036, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007389162561576401, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007395234182415722, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0074013157894736725, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007407407407407418, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007413509060955503, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007419620774938185, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007425742574257432, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007431874483897594, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007438016528925617, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007444168734491274, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007450331125827825, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0074565037282519064, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007462686567164201, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007468879668049766, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007475083056478371, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007481296758104716, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0074875207986688785, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007493755203996644, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007499999999999951, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007506255212677226, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0075125208681134925, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007518796992481258, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007525083612040184, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007531380753138084, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007537688442211032, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007544006705783701, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007550335570469802, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007556675062972307, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007563025210084007, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007569386038687953, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007575757575757569, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0075821398483572056, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007588532883642474, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0075949367088608, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007601351351351315, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0076077768385460764, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0076142131979695105, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007620660457239636, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007627118644067843, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007633587786259555, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007640067911714787, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007646559048428259, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007653061224489832, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007659574468085073, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0076660988074956915, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007672634271099765, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007679180887371961, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0076857386848847575, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007692307692307665, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007698887938408894, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0077054794520547976, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007712082262210762, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007718696397941649, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007725321888412018, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0077319587628865705, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007738607050730817, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0077452667814114085, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007751937984496138, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00775862068965516, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007765314926660882, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007772020725388629, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007778738115816752, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007785467128027634, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007792207792207795, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0077989601386482255, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0078057241977450564, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0078125, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007819287576020906, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00782608695652176, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007832898172323799, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007839721254355392, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007846556233653046, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007853403141361293, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007860262008733576, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00786713286713292, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007874015748031482, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007880910683012221, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007887817703768674, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007894736842105288, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007901668129938533, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00790861159929701, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0079155672823219, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007922535211267623, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007929515418502175, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007936507936507908, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007943512797881747, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007950530035335635, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007957559681697646, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007964601769911539, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00797165633303809, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007978723404255317, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007985803016858917, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.007992895204262829, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008000000000000007, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008007117437722422, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00801424755120217, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008021390374331583, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00802854594112401, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008035714285714257, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008042895442359255, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00805008944543828, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008057296329453845, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008064516129032251, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008071748878923812, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008078994614003632, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008086253369272267, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008093525179856065, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008100810081008047, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008108108108108136, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008115419296663706, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008122743682310474, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008130081300813052, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008137432188065064, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008144796380090469, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008152173913043459, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008159564823209453, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008166969147005432, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008174386920980936, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008181818181818179, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008189262966333044, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008196721311475419, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008204193254329972, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00821167883211682, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008219178082191747, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00822669104204754, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008234217749313766, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008241758241758212, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008249312557286892, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008256880733944927, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008264462809917328, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008272058823529438, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008279668813247487, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008287292817679592, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00829493087557609, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008302583025830312, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008310249307479256, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008317929759704246, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008325624421831601, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008333333333333304, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008341056533827662, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008348794063079756, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00835654596100277, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008364312267657992, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008372093023255811, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008379888268156388, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008387698042870428, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00839552238805974, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008403361344537785, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008411214953271018, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008419083255378879, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008426966292134797, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008434864104967188, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008442776735459678, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008450704225352101, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008458646616541388, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008466603951081897, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008474576271186418, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008482563619227168, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008490566037735903, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008498583569405138, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008506616257088817, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008514664143803197, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008678881388621051, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008687258687258725, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008695652173912993, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008704061895551285, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00871248789932233, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008720930232558155, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008729388942773975, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008737864077669855, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008746355685131157, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008754863813229541, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008763388510223957, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.00877192982456143, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008780487804878057, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.0087890625, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008797653958944274, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008806262230919737, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008814887365328095, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.008823529411764675, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010765550239234423, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010778443113772407, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010791366906474864, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010804321728691502, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.01081730769230771, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010830324909747335, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010843373493975905, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010856453558504175, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010869565217391353, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010882708585247869, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010895883777239712, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010909090909090868, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.01092233009708743, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010935601458080146, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010948905109489093, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.010962241169305775, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.01097560975609757, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.01098901098901095, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.011002444987775029, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.011015911872705009, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.011029411764705843, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.011042944785276121, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9889570552147239, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9889705882352942, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.988984088127295, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.988997555012225, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.989010989010989, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9890243902439024, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9890377588306942, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9890510948905109, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9890643985419199, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9890776699029126, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9890909090909091, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891041162227603, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891172914147521, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891304347826086, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891435464414958, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891566265060241, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891696750902527, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891826923076923, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9891956782713085, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892086330935251, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892215568862276, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892344497607656, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.989247311827957, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892601431980907, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892729439809297, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892857142857143, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9892984542211652, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893111638954869, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893238434163701, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893364928909952, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893491124260355, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893617021276596, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893742621015348, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893867924528302, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9893992932862191, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894117647058823, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894242068155111, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894366197183099, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894490035169988, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894613583138173, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894736842105263, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894859813084113, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9894982497082847, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895104895104895, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.989522700814901, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895348837209302, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895470383275261, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895591647331786, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895712630359212, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895833333333334, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9895953757225433, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896073903002309, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896193771626297, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896313364055299, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896432681242808, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896551724137931, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896670493685419, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896788990825688, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9896907216494846, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9897025171624714, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898074745186863, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898190045248869, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898305084745763, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.989841986455982, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898534385569335, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898648648648649, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898762654668166, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9898876404494382, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.98989898989899, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899103139013453, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899216125419933, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899328859060402, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899441340782122, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899553571428571, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899665551839465, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899777282850779, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9899888765294772, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.99, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900110987791343, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900221729490022, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900332225913622, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900442477876106, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900552486187846, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900662251655629, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900771775082691, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900881057268722, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9900990099009901, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9901098901098901, )
paddle.Tensor.__rmul__(Tensor([44739243, 96, 1, 1],"float32"), 0.9901207464324918, )
paddle.Tensor.__rmul__(Tensor([44739243, 96],"float32"), 0.9999, )
paddle.Tensor.__rmul__(Tensor([44739243, 96],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([4661, 1, 960, 960],"float32"), -50, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011056511056511065, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011070110701106972, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011083743842364546, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011097410604192337, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011111111111111072, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011124845488257096, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011138613861386149, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01115241635687736, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011166253101737023, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011180124223602483, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011194029850746245, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011207970112079746, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01122194513715713, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011235955056179803, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011249999999999982, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01126408010012514, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011278195488721776, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01129234629861986, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011306532663316604, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01132075471698113, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01133501259445846, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011349306431273631, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011363636363636354, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011378002528445008, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011392405063291089, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011406844106463865, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011421319796954266, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01143583227445999, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011450381679389277, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01146496815286624, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011479591836734748, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011494252873563204, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011508951406649648, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011523687580025643, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011538461538461497, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011553273427471145, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011568123393316143, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01158301158301156, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011597938144329856, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011612903225806437, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011627906976744207, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011642949547218673, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011658031088082943, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011673151750972721, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011688311688311637, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011703511053316018, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01171875, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011734028683181186, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011749347258485643, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0117647058823529, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011780104712041939, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011795543905635641, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011811023622047223, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01182654402102501, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011842105263157876, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011857707509881465, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01187335092348285, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011889035667106973, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011904761904761862, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01192052980132452, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011936339522546469, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01195219123505975, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01196808510638303, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.011984021304926817, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01200000000000001, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012016021361815787, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012032085561497374, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012048192771084376, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012064343163538882, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012080536912751683, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012096774193548376, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012113055181695809, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0121293800539084, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012145748987854255, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012162162162162149, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012178619756427644, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012195121951219523, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012211668928086894, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012228260869565188, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01224489795918371, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012261580381471404, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012278308321964526, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012295081967213073, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012311901504788003, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012328767123287676, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012345679012345734, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012362637362637319, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012396694214875992, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012413793103448256, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012430939226519389, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012448132780082943, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012465373961218829, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012482662968099856, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012499999999999956, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012517385257301838, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012534818941504211, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012552301255230103, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012569832402234637, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012587412587412583, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012605042016806678, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012622720897615736, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012640449438202195, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012658227848101222, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012676056338028152, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012693935119887145, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012711864406779627, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012729844413012725, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012747875354107596, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012765957446808529, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01278409090909094, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012802275960170695, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012820512820512775, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012838801711840264, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0128571428571429, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012875536480686733, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012893982808022897, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012912482065997155, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012931034482758674, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012949640287769792, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012968299711815567, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.012987012987012991, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013005780346820761, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013043478260869601, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013062409288824406, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013100436681222738, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013119533527696792, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013138686131386912, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013157894736842146, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013177159590043952, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01319648093841641, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013215859030836996, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013235294117647012, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013254786450662692, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013274336283185861, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013293943870014813, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013313609467455634, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013333333333333308, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013353115727002929, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013372956909361022, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013392857142857095, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01341281669150518, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013432835820895495, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013452914798206317, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013473053892215536, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013493253373313308, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013513513513513487, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013533834586466176, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013554216867469826, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013574660633484115, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013595166163142047, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013615733736762503, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013636363636363669, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01365705614567525, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01367781155015202, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013698630136986356, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013719512195121908, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013740458015267132, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013761467889908285, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013782542113323082, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013803680981595123, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01382488479262678, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013846153846153841, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013867488443759624, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01388888888888884, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01391035548686248, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01393188854489169, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013953488372092981, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013975155279503104, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.013996889580093264, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014018691588784993, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01404056162246492, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014062499999999978, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014084507042253502, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014106583072100332, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014128728414442682, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014150943396226467, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014173228346456734, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014195583596214534, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014218009478673022, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014240506329113889, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014263074484944571, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014285714285714235, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014308426073131986, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014331210191082855, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014354066985645897, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014376996805111841, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014399999999999968, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014423076923076872, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014446227929374, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014469453376205754, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01449275362318836, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014516129032258074, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014539579967689842, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014563106796116498, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014586709886547866, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01461038961038963, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014634146341463428, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014657980456026065, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014681892332789603, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014705882352941124, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014729950900163713, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014754098360655776, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014778325123152691, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014802631578947345, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014827018121911006, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014851485148514865, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014876033057851235, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014925373134328401, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014950166112956853, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.014975041597337757, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015000000000000013, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015025041736227096, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015050167224080258, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015075376884422065, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015100671140939603, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015126050420168013, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015151515151515138, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015177065767284947, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015202702702702742, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015228426395939132, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015254237288135575, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015280135823429575, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015306122448979553, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015332197614991494, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015358361774744034, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01538461538461533, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015437392795883409, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015463917525773141, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015490533562822706, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01551724137931032, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015544041450777257, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01557093425605538, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01559792027729634, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015625, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01565217391304352, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015679442508710784, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015706806282722474, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01573426573426573, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015761821366024553, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015789473684210575, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01581722319859402, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015845070422535246, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015873015873015928, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01590106007067138, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015929203539822967, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.015957446808510634, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01598579040852577, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016014234875444844, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016042780748663055, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016071428571428625, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01610017889087656, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016129032258064502, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016157989228007152, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01618705035971224, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01621621621621616, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016245487364620947, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016274864376130238, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016304347826086918, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016333938294010864, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016363636363636358, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016393442622950838, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01642335766423353, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01645338208409508, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016483516483516536, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016513761467889854, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016544117647058876, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016574585635359074, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016605166051660514, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01663585951940849, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01666666666666672, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016697588126159513, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016728624535315983, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016759776536312887, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016791044776119368, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016822429906542036, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016853932584269704, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016885553470919357, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016949152542372836, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.016981132075471694, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017013232514177745, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017045454545454586, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017077798861480087, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017110266159695797, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017142857142857126, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01717557251908397, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017208413001912004, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017241379310344862, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017274472168905985, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017307692307692357, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017341040462427793, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01737451737451734, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01740812379110257, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01744186046511631, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01747572815533982, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017509727626459193, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01754385964912286, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017578125, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017612524461839585, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01764705882352946, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017681728880157177, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017716535433070835, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017751479289940808, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017786561264822143, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017821782178217838, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017857142857142905, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017892644135188873, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017928286852589626, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.017964071856287456, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018000000000000016, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018036072144288595, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01807228915662651, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01810865191146882, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01814516129032262, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018181818181818188, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018218623481781382, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018255578093306246, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018292682926829285, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018329938900203624, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01836734693877551, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018404907975460127, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018442622950819665, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01848049281314168, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01851851851851849, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01855670103092788, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018595041322314043, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018633540372670843, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018672199170124526, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018711018711018657, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018750000000000044, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018789144050104345, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018867924528301883, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.018907563025210128, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0189473684210526, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01898734177215189, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019027484143763207, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01906779661016944, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019108280254777066, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019148936170212738, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019189765458422214, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019230769230769273, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01927194860813708, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01931330472102999, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01935483870967747, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0193965517241379, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01943844492440605, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01948051948051943, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0195227765726681, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019565217391304346, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019607843137254943, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01965065502183405, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01969365426695846, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019736842105263164, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01978021978021982, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.01982378854625555, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019867549668874163, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019911504424778736, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.019955654101995512, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020000000000000018, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020044543429844075, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0200892857142857, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020134228187919434, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020179372197309364, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020224719101123556, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020270270270270285, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020316027088036148, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020361990950226283, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020408163265306145, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020454545454545503, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02050113895216399, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020547945205479423, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020594965675057253, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020642201834862428, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020689655172413834, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020737327188940058, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020785219399538146, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02083333333333337, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02088167053364265, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020930232558139528, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.020979020979020935, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.0210280373831776, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021077283372365363, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021126760563380254, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02117647058823524, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021226415094339646, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021276595744680882, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021327014218009532, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02137767220902609, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021428571428571463, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021479713603818618, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021531100478468845, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021582733812949617, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02163461538461542, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02168674698795181, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021739130434782594, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021791767554479424, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021844660194174748, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.021897810218978075, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02195121951219514, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022004889975550168, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022058823529411797, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02211302211302213, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022167487684729092, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022222222222222254, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022277227722772297, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022332506203473934, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02238805970149249, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.02244389027431426, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.022499999999999964, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.8888888888888888, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.8902439024390244, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.891566265060241, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.8928571428571429, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.8941176470588236, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.8953488372093024, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.896551724137931, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.8977272727272727, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.898876404494382, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9010989010989011, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9021739130434783, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9032258064516129, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9042553191489362, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9052631578947369, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.90625, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9072164948453608, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9081632653061225, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9090909090909091, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.91, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9108910891089109, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9117647058823529, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.912621359223301, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9134615384615384, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9142857142857143, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9150943396226415, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9158878504672897, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9166666666666666, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9174311926605505, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9181818181818182, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.918918918918919, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9196428571428571, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9203539823008849, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9210526315789473, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9217391304347826, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9224137931034483, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9230769230769231, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.923728813559322, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9243697478991597, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.925, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9256198347107438, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9262295081967213, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.926829268292683, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9274193548387096, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.928, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9285714285714286, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9291338582677166, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9296875, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9302325581395349, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9307692307692308, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9312977099236641, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9318181818181818, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9323308270676691, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9328358208955224, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9333333333333333, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9338235294117647, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9343065693430657, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9347826086956522, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.935251798561151, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9357142857142857, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9361702127659575, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9366197183098591, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9370629370629371, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9375, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9379310344827586, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9383561643835616, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9387755102040817, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9391891891891891, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9395973154362416, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.94, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9403973509933775, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9407894736842105, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9411764705882353, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9415584415584416, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9419354838709677, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9423076923076923, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9426751592356688, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9430379746835443, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9433962264150944, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.94375, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9440993788819876, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9444444444444444, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9447852760736196, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9451219512195121, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9454545454545454, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9457831325301205, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9461077844311377, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9464285714285714, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9467455621301775, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9470588235294117, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9473684210526315, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9476744186046512, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9479768786127167, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9482758620689655, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9485714285714286, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9488636363636364, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9491525423728814, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.949438202247191, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9497206703910615, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.95, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9502762430939227, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9505494505494505, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9508196721311475, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9510869565217391, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9513513513513514, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9516129032258065, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9518716577540107, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9521276595744681, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9523809523809523, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9526315789473684, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9528795811518325, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.953125, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9533678756476683, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9536082474226805, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9538461538461539, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9540816326530612, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9543147208121827, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9545454545454546, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9547738693467337, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.955, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9552238805970149, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9554455445544554, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9556650246305419, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9558823529411765, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9560975609756097, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9563106796116505, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9565217391304348, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9567307692307693, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9569377990430622, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9571428571428572, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.957345971563981, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9575471698113207, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9577464788732394, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9579439252336449, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.958139534883721, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9583333333333334, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9585253456221198, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9587155963302753, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.958904109589041, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9590909090909091, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9592760180995475, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9594594594594594, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9596412556053812, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9598214285714286, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.96, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9601769911504425, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.960352422907489, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9605263157894737, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9606986899563319, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9608695652173913, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.961038961038961, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9612068965517241, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9613733905579399, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9615384615384616, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9617021276595744, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.961864406779661, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9620253164556962, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9621848739495799, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9623430962343096, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9625, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9626556016597511, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9628099173553719, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9629629629629629, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9631147540983607, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.963265306122449, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9634146341463414, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9635627530364372, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9637096774193549, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.963855421686747, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.964, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9641434262948207, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9642857142857143, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9644268774703557, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9645669291338582, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9647058823529412, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.96484375, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9649805447470817, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9651162790697675, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9652509652509652, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9775, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9775561097256857, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9776119402985075, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9776674937965261, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9777227722772277, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9777777777777777, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9778325123152709, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9778869778869779, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9779411764705882, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9779951100244498, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9780487804878049, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9781021897810219, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9781553398058253, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9782082324455206, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9782608695652174, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9783132530120482, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9783653846153846, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9784172661870504, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9784688995215312, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9785202863961814, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9785714285714285, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9786223277909739, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9786729857819905, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9787234042553191, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9787735849056604, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9788235294117648, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9788732394366197, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9789227166276346, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9789719626168224, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9790209790209791, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9790697674418605, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9791183294663574, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9791666666666666, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9792147806004619, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9792626728110599, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9793103448275862, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9793577981651376, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9794050343249427, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9794520547945206, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.979498861047836, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9795454545454545, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9795918367346939, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9796380090497737, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9796839729119639, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9797297297297297, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9797752808988764, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9798206278026906, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9798657718120806, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9799107142857143, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9799554565701559, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.98, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9800443458980045, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9800884955752213, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9801324503311258, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9801762114537445, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9802197802197802, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9802631578947368, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9803063457330415, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.980349344978166, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9804347826086957, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9804772234273319, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9805194805194806, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.980561555075594, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9806034482758621, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9806451612903225, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.98068669527897, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9807280513918629, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9807692307692307, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9808102345415778, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9808510638297873, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9808917197452229, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9809322033898306, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9809725158562368, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9810126582278481, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9810526315789474, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9810924369747899, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9811320754716981, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9811715481171548, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9812108559498957, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.98125, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9812889812889813, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9813278008298755, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9813664596273292, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.981404958677686, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9814432989690721, )
paddle.Tensor.__rmul__(Tensor([4971027, 96, 3, 3],"float32"), 0.9814814814814815, )
paddle.Tensor.__rmul__(Tensor([5, 429496730],"float64"), 1.4142135623730951, )
paddle.Tensor.__rmul__(Tensor([5, 858993459],"float32"), 1, )
paddle.Tensor.__rmul__(Tensor([513630, 226, 37],"float32"), 1.702, )
paddle.Tensor.__rmul__(Tensor([536870913, 2, 2],"int64"), 10000.0, )
paddle.Tensor.__rmul__(Tensor([5368710, 200, 4],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([5592406, 192, 2, 2],"float32"), 0.9999, )
paddle.Tensor.__rmul__(Tensor([5592406, 192, 2, 2],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009018036072144242, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009027081243731194, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009036144578313254, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009045226130653283, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00905432595573441, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009063444108761365, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009072580645161255, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00908173562058523, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009090909090909038, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009100101112234582, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009109311740890691, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00911854103343468, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009127789046653123, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009137055837563413, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009146341463414642, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00915564598168872, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009164969450101812, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00917431192660545, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009183673469387754, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009193054136874323, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009202453987730008, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0092118730808598, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009221311475409832, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009230769230769265, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00924024640657084, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009249743062692661, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0092592592592593, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009268795056642687, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009278350515463885, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009287925696594423, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009297520661157077, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009307135470527417, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009316770186335366, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00932642487046631, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009336099585062207, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009345794392523366, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009355509355509328, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009365244536940653, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009375000000000022, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009384775808133461, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009394572025052228, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009404388714733591, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009414225941422605, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009424083769633551, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009433962264150941, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009443861490031513, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009453781512605008, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009463722397476393, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0094736842105263, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009483667017913588, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009493670886076, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009503695881731833, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009513742071881603, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00952380952380949, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009533898305084776, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009544008483563071, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009554140127388533, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009564293304994642, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009574468085106425, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009584664536741228, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009594882729211052, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009605122732123772, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009615384615384581, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009625668449197877, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009635974304068484, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009646302250803873, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00965665236051505, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009667024704618665, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009677419354838679, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009687836383207804, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00969827586206895, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009708737864077666, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009719222462203025, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009729729729729741, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009740259740259716, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009750812567713929, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009761388286334105, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009771986970684043, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009782608695652173, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009793253536452662, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009803921568627416, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009814612868047967, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009825327510917026, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00983606557377048, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009846827133479175, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009857612267250793, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009868421052631526, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009879253567508184, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009890109890109855, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.00990099009900991, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009911894273127775, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009922822491730932, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009933774834437137, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009944751381215422, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009955752212389424, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009966777408637828, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009977827050997812, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.009988901220865709, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010000000000000009, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010011123470522798, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010022271714922093, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010033444816053505, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010044642857142905, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010055865921787754, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010067114093959773, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01007838745800671, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010089686098654682, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010101010101010055, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010112359550561778, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010123734533183382, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010135135135135087, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01014656144306647, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010158013544018019, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01016949152542368, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010180995475113086, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010192525481313663, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010204081632653073, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010215664018161208, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010227272727272751, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010238907849829393, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01025056947608205, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010262257696693311, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010273972602739767, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010285714285714231, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010297482837528626, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010309278350515427, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010321100917431214, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010332950631458115, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010344827586206917, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010356731875719172, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010368663594470084, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01038062283737029, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010392609699769073, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010404624277456698, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01041666666666663, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010428736964078755, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01044083526682138, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010452961672473893, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010465116279069764, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010477299185098987, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010489510489510523, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010501750291715295, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010514018691588745, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010526315789473717, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010538641686182681, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010550996483001174, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010563380281690127, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010575793184488869, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010588235294117676, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010600706713780883, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010613207547169767, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010625737898465215, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010638297872340385, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010650887573964485, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010663507109004766, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010676156583629859, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0106888361045131, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010701545778834753, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010714285714285676, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010727056019070313, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010739856801909253, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010752688172043001, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010765550239234423, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010778443113772407, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010791366906474864, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010804321728691502, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01081730769230771, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010830324909747335, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010843373493975905, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010856453558504175, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010869565217391353, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010882708585247869, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010895883777239712, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010909090909090868, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01092233009708743, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010935601458080146, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010948905109489093, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.010962241169305775, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01097560975609757, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01098901098901095, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011002444987775029, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011015911872705009, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011029411764705843, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011042944785276121, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011056511056511065, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011070110701106972, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011083743842364546, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011097410604192337, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011111111111111072, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011124845488257096, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011138613861386149, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01115241635687736, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011166253101737023, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011180124223602483, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011194029850746245, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011207970112079746, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01122194513715713, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011363636363636354, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011378002528445008, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011392405063291089, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011406844106463865, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011421319796954266, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01143583227445999, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011450381679389277, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01146496815286624, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011479591836734748, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011494252873563204, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011508951406649648, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011523687580025643, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011538461538461497, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011553273427471145, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011568123393316143, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01158301158301156, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011597938144329856, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011612903225806437, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011627906976744207, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011642949547218673, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011658031088082943, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011673151750972721, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011688311688311637, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011703511053316018, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01171875, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011734028683181186, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011749347258485643, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0117647058823529, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011780104712041939, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011795543905635641, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011811023622047223, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01182654402102501, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011842105263157876, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011857707509881465, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01187335092348285, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011889035667106973, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011904761904761862, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01192052980132452, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011936339522546469, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01195219123505975, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01196808510638303, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.011984021304926817, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01200000000000001, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012016021361815787, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012032085561497374, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012048192771084376, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012064343163538882, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012080536912751683, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012096774193548376, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012113055181695809, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0121293800539084, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012145748987854255, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012162162162162149, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012178619756427644, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012195121951219523, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012211668928086894, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012228260869565188, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01224489795918371, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012261580381471404, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012278308321964526, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012295081967213073, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012311901504788003, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012328767123287676, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012345679012345734, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012362637362637319, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012379642365887178, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012396694214875992, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012413793103448256, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012430939226519389, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012448132780082943, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012465373961218829, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012482662968099856, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012499999999999956, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012517385257301838, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012534818941504211, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012552301255230103, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012569832402234637, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012587412587412583, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012605042016806678, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012622720897615736, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012640449438202195, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012658227848101222, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012676056338028152, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012693935119887145, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012711864406779627, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012729844413012725, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012747875354107596, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012765957446808529, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01278409090909094, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012802275960170695, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012820512820512775, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012838801711840264, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0128571428571429, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012875536480686733, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012893982808022897, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012912482065997155, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012931034482758674, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012949640287769792, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012968299711815567, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.012987012987012991, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013005780346820761, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013043478260869601, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013062409288824406, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013100436681222738, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013119533527696792, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013138686131386912, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013157894736842146, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013177159590043952, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01319648093841641, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013215859030836996, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013235294117647012, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013254786450662692, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013274336283185861, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013293943870014813, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013313609467455634, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013333333333333308, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013353115727002929, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013372956909361022, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013392857142857095, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01341281669150518, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013432835820895495, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013452914798206317, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013473053892215536, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013493253373313308, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013513513513513487, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013533834586466176, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013554216867469826, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013574660633484115, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013595166163142047, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013615733736762503, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013636363636363669, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01365705614567525, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01367781155015202, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013698630136986356, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013719512195121908, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013740458015267132, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013761467889908285, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013782542113323082, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013803680981595123, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01382488479262678, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013846153846153841, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013867488443759624, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01388888888888884, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01391035548686248, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01393188854489169, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013953488372092981, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013975155279503104, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.013996889580093264, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014018691588784993, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01404056162246492, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014062499999999978, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014084507042253502, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014106583072100332, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014128728414442682, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014150943396226467, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014173228346456734, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014195583596214534, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014218009478673022, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014240506329113889, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014263074484944571, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014285714285714235, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014308426073131986, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014331210191082855, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014354066985645897, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014376996805111841, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014399999999999968, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014423076923076872, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014446227929374, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014469453376205754, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01449275362318836, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014516129032258074, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014539579967689842, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014563106796116498, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014586709886547866, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01461038961038963, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014634146341463428, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014657980456026065, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014681892332789603, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014705882352941124, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014729950900163713, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014754098360655776, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014778325123152691, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014802631578947345, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014827018121911006, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014851485148514865, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014876033057851235, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014925373134328401, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014950166112956853, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.014975041597337757, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015000000000000013, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015025041736227096, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015050167224080258, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015075376884422065, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015100671140939603, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015126050420168013, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015151515151515138, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015177065767284947, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015202702702702742, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015228426395939132, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015254237288135575, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015280135823429575, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015306122448979553, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015332197614991494, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015358361774744034, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01538461538461533, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015437392795883409, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015463917525773141, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015490533562822706, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01551724137931032, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015544041450777257, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01557093425605538, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01559792027729634, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015625, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01565217391304352, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015679442508710784, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015706806282722474, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01573426573426573, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015761821366024553, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015789473684210575, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01581722319859402, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015845070422535246, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015873015873015928, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01590106007067138, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015929203539822967, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.015957446808510634, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01598579040852577, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016014234875444844, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016042780748663055, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016071428571428625, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01610017889087656, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016129032258064502, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016157989228007152, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01618705035971224, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01621621621621616, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016245487364620947, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016274864376130238, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016304347826086918, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016333938294010864, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016363636363636358, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016393442622950838, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01642335766423353, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01645338208409508, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016483516483516536, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016513761467889854, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016544117647058876, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016574585635359074, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016605166051660514, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01663585951940849, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01666666666666672, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016697588126159513, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016728624535315983, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016759776536312887, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016791044776119368, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016822429906542036, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016853932584269704, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016885553470919357, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016949152542372836, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.016981132075471694, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017013232514177745, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017045454545454586, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017077798861480087, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017110266159695797, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017142857142857126, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01717557251908397, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017208413001912004, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017241379310344862, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017274472168905985, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017307692307692357, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017341040462427793, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01737451737451734, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01740812379110257, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01744186046511631, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01747572815533982, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017509727626459193, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01754385964912286, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017578125, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017612524461839585, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01764705882352946, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017681728880157177, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017716535433070835, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017751479289940808, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017786561264822143, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017821782178217838, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017857142857142905, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017892644135188873, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017928286852589626, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.017964071856287456, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018000000000000016, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018036072144288595, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01807228915662651, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01810865191146882, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01814516129032262, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018181818181818188, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018218623481781382, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018255578093306246, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018292682926829285, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018329938900203624, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01836734693877551, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018404907975460127, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018442622950819665, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01848049281314168, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01851851851851849, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01855670103092788, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018595041322314043, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018633540372670843, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018672199170124526, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018711018711018657, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018750000000000044, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018789144050104345, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018867924528301883, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.018907563025210128, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0189473684210526, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01898734177215189, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019027484143763207, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01906779661016944, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019108280254777066, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019148936170212738, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019189765458422214, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019230769230769273, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01927194860813708, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01931330472102999, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01935483870967747, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0193965517241379, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01943844492440605, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01948051948051943, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0195227765726681, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019565217391304346, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019607843137254943, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01965065502183405, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01969365426695846, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019736842105263164, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01978021978021982, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.01982378854625555, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019867549668874163, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019911504424778736, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.019955654101995512, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020000000000000018, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020044543429844075, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0200892857142857, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020134228187919434, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020179372197309364, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020224719101123556, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020270270270270285, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020316027088036148, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020361990950226283, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020408163265306145, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020454545454545503, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02050113895216399, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020547945205479423, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020594965675057253, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020642201834862428, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020689655172413834, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020737327188940058, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020785219399538146, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02083333333333337, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02088167053364265, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020930232558139528, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.020979020979020935, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.0210280373831776, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021077283372365363, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021126760563380254, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02117647058823524, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021226415094339646, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021276595744680882, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021327014218009532, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02137767220902609, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021428571428571463, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021479713603818618, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021531100478468845, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021582733812949617, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02163461538461542, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02168674698795181, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021739130434782594, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021791767554479424, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021844660194174748, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.021897810218978075, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02195121951219514, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022004889975550168, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022058823529411797, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02211302211302213, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022167487684729092, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022222222222222254, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022277227722772297, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022332506203473934, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02238805970149249, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.02244389027431426, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.022499999999999964, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9775, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9775561097256857, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9776119402985075, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9776674937965261, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9777227722772277, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9777777777777777, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9778325123152709, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9778869778869779, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9779411764705882, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9779951100244498, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9780487804878049, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9781021897810219, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9781553398058253, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9782082324455206, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9782608695652174, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9783132530120482, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9783653846153846, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9784172661870504, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9784688995215312, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9785202863961814, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9785714285714285, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9786223277909739, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9786729857819905, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9787234042553191, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9787735849056604, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9788235294117648, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9788732394366197, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9789227166276346, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9789719626168224, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9790209790209791, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9790697674418605, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9791183294663574, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9791666666666666, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9792147806004619, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9792626728110599, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9793103448275862, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9793577981651376, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9794050343249427, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9794520547945206, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.979498861047836, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9795454545454545, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9795918367346939, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9796380090497737, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9796839729119639, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9797297297297297, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9797752808988764, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9798206278026906, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9798657718120806, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9799107142857143, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9799554565701559, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9800443458980045, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9800884955752213, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9801324503311258, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9801762114537445, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9802197802197802, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9802631578947368, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9803063457330415, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.980349344978166, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9804347826086957, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9804772234273319, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9805194805194806, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.980561555075594, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9806034482758621, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9806451612903225, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98068669527897, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9807280513918629, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9807692307692307, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9808102345415778, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9808510638297873, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9808917197452229, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9809322033898306, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9809725158562368, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9810126582278481, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9810526315789474, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9810924369747899, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9811320754716981, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9811715481171548, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9812108559498957, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98125, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9812889812889813, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9813278008298755, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9813664596273292, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.981404958677686, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9814432989690721, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9814814814814815, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9815195071868583, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9815573770491803, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9815950920245399, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9816326530612245, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9816700610997964, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9817073170731707, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9817444219066938, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9817813765182186, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9818181818181818, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9818548387096774, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9818913480885312, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9819277108433735, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9819639278557114, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.982, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9820359281437125, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9820717131474104, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9821073558648111, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9821428571428571, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9821782178217822, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9822134387351779, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9822485207100592, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9822834645669292, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9823182711198428, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9823529411764705, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9823874755381604, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.982421875, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9824561403508771, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9824902723735408, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9825242718446602, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9825581395348837, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9825918762088974, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9826254826254827, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9826589595375722, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9826923076923076, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.982725527831094, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9827586206896551, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.982791586998088, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.982824427480916, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9828571428571429, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9828897338403042, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9829222011385199, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9829545454545454, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9829867674858223, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9830188679245283, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9830508474576272, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9830827067669173, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9831144465290806, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9831460674157303, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.983177570093458, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9832089552238806, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9832402234636871, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.983271375464684, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9833024118738405, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9833333333333333, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9833641404805915, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9833948339483395, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9834254143646409, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9834558823529411, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9834862385321101, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9835164835164835, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9835466179159049, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9835766423357665, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9836065573770492, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9836363636363636, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9836660617059891, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9836956521739131, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9837251356238698, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.983754512635379, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9837837837837838, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9838420107719928, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9838709677419355, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9838998211091234, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9839285714285714, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.983957219251337, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9839857651245552, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9840142095914742, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9840425531914894, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.984070796460177, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9840989399293286, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9841269841269841, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9841549295774648, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.984182776801406, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9842105263157894, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9842381786339754, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9842657342657343, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9842931937172775, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9843205574912892, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9843478260869565, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.984375, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9844020797227037, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9844290657439446, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9844559585492227, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9844827586206897, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9845094664371773, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9845360824742269, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9845626072041166, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9845890410958904, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9846153846153847, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.984641638225256, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9846678023850085, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9846938775510204, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9847198641765704, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9847457627118644, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9847715736040609, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9847972972972973, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.984822934232715, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9848484848484849, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.984873949579832, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9848993288590604, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9849246231155779, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9849498327759197, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9849749582637729, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.985, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9850249584026622, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9850498338870431, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9850746268656716, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9850993377483444, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9851239669421488, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9851485148514851, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.985172981878089, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9851973684210527, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9852216748768473, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9852459016393442, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9852700490998363, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9852941176470589, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9853181076672104, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9853420195439739, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9853658536585366, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9853896103896104, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9854132901134521, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9854368932038835, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9854604200323102, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9854838709677419, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9855072463768116, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9855305466237942, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.985553772070626, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9855769230769231, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9856, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9856230031948882, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9856459330143541, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9856687898089171, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.985691573926868, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9857142857142858, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9857369255150554, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9857594936708861, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.985781990521327, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9858044164037855, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9858267716535433, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9858490566037735, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9858712715855573, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9858934169278997, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9859154929577465, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9859375, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9859594383775351, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.985981308411215, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9860031104199067, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9860248447204969, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986046511627907, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9860681114551083, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9860896445131375, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9861111111111112, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9861325115562404, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9861538461538462, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9861751152073732, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9861963190184049, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9862174578866769, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9862385321100917, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9862595419847329, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9862804878048781, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9863013698630136, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986322188449848, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9863429438543247, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9863636363636363, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9863842662632375, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986404833836858, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9864253393665159, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9864457831325302, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9864661654135338, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9864864864864865, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9865067466266867, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9865269461077845, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9865470852017937, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9865671641791045, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9865871833084948, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9866071428571429, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986627043090639, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9866468842729971, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9866666666666667, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9866863905325444, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9867060561299852, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9867256637168141, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9867452135493373, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986764705882353, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986784140969163, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9868035190615836, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.986822840409956, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9868421052631579, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9868613138686131, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9868804664723032, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9868995633187773, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9869186046511628, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9869375907111756, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9869565217391304, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9869753979739508, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9869942196531792, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.987012987012987, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9870317002881844, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9870503597122302, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9870689655172413, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9870875179340028, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9871060171919771, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9871244635193133, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9871428571428571, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9871611982881597, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9871794871794872, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9871977240398293, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9872159090909091, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9872340425531915, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9872521246458924, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9872701555869873, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9872881355932204, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9873060648801129, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9873239436619718, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9873417721518988, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9873595505617978, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9873772791023843, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9873949579831933, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9874125874125874, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9874301675977654, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9874476987447699, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9874651810584958, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9874826147426982, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9875, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9875173370319001, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9875346260387812, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9875518672199171, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9875690607734806, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9875862068965517, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.987603305785124, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9876203576341128, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9876373626373627, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9876543209876543, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9876712328767123, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.987688098495212, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9877049180327869, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9877216916780355, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9877384196185286, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9877551020408163, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9877717391304348, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9877883310719131, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9878048780487805, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9878213802435724, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9878378378378379, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9878542510121457, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9878706199460916, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9878869448183042, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9879032258064516, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9879194630872483, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9879356568364611, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9879518072289156, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9879679144385026, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9879839786381842, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9880159786950732, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988031914893617, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9880478087649402, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9880636604774535, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9880794701986755, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9880952380952381, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988110964332893, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9881266490765171, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9881422924901185, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9881578947368421, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988173455978975, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9881889763779528, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9882044560943644, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9882198952879581, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9882352941176471, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9882506527415144, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9882659713168188, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98828125, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988296488946684, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9883116883116884, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9883268482490273, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9883419689119171, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9883570504527813, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9883720930232558, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9883870967741936, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884020618556701, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884169884169884, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884318766066839, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884467265725289, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884615384615385, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884763124199744, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9884910485933504, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9885057471264368, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9885204081632653, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9885350318471338, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9885496183206107, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98856416772554, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9885786802030457, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9885931558935361, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9886075949367089, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988621997471555, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9886363636363636, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9886506935687264, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9886649874055415, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9886792452830189, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9886934673366834, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9887076537013801, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9887218045112782, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9887359198998749, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98875, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9887640449438202, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9887780548628429, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9887920298879203, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9888059701492538, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9888198757763975, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988833746898263, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9888475836431226, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9888613861386139, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9888751545117429, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9888888888888889, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9889025893958077, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9889162561576355, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988929889298893, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9889434889434889, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9889570552147239, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9889705882352942, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988984088127295, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.988997555012225, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.989010989010989, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9890243902439024, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9890377588306942, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9890510948905109, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9890643985419199, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9890776699029126, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9890909090909091, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891041162227603, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891172914147521, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891304347826086, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891435464414958, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891566265060241, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891696750902527, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891826923076923, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9891956782713085, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892086330935251, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892215568862276, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892344497607656, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.989247311827957, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892601431980907, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892729439809297, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892857142857143, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9892984542211652, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893111638954869, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893238434163701, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893364928909952, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893491124260355, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893617021276596, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893742621015348, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893867924528302, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9893992932862191, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894117647058823, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894242068155111, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894366197183099, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894490035169988, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894613583138173, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894736842105263, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894859813084113, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9894982497082847, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895104895104895, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.989522700814901, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895348837209302, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895470383275261, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895591647331786, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895712630359212, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895833333333334, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9895953757225433, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896073903002309, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896193771626297, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896313364055299, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896432681242808, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896551724137931, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896670493685419, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896788990825688, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9896907216494846, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897025171624714, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897142857142858, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897260273972602, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897377423033067, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.989749430523918, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897610921501706, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897727272727272, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897843359818388, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9897959183673469, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898074745186863, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898190045248869, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898305084745763, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.989841986455982, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898534385569335, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898648648648649, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898762654668166, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9898876404494382, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.98989898989899, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899103139013453, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899216125419933, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899328859060402, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899441340782122, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899553571428571, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899665551839465, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899777282850779, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9899888765294772, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.99, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990185387131952, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9901960784313726, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902067464635473, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902173913043478, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990228013029316, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902386117136659, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902491874322861, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902597402597403, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902702702702703, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990280777537797, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9902912621359223, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990301724137931, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903121636167922, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903225806451613, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903329752953813, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990343347639485, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903536977491961, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903640256959315, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903743315508021, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903846153846154, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9903948772678762, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990625, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906347554630593, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906444906444907, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906542056074766, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906639004149378, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906735751295337, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906832298136646, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9906928645294726, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907024793388429, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907120743034056, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907216494845361, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907312049433573, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907407407407407, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907502569373073, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907597535934292, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907692307692307, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907786885245902, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9907881269191402, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.99079754601227, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908069458631257, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908163265306122, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908256880733946, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908350305498982, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908443540183113, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908536585365854, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908629441624366, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908722109533469, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908814589665653, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908906882591093, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9908998988877654, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.990909090909091, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909182643794148, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909274193548387, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909365558912386, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909456740442656, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909547738693467, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909638554216867, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909729187562688, )
paddle.Tensor.__rmul__(Tensor([5592406, 768, 1, 1],"float32"), 0.9909819639278558, )
paddle.Tensor.__rmul__(Tensor([5592406, 768],"float32"), 100.0, )
paddle.Tensor.__rmul__(Tensor([5592406, 768],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([56, 16, 4793491],"float32"), 2.0, )
paddle.Tensor.__rmul__(Tensor([56, 4793491, 16],"float32"), 2.0, )
paddle.Tensor.__rmul__(Tensor([59653, 900, 80],"float32"), 0.25, )
paddle.Tensor.__rmul__(Tensor([610081, 22, 8, 5, 4, 2],"float32"), 2, )
paddle.Tensor.__rmul__(Tensor([613566757, 1, 1, 7],"float32"), 1000000.0, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011494252873563204, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011508951406649648, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011523687580025643, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011538461538461497, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011553273427471145, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011568123393316143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01158301158301156, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011597938144329856, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011612903225806437, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011627906976744207, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011642949547218673, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011658031088082943, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011673151750972721, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011688311688311637, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011703511053316018, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01171875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011734028683181186, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011749347258485643, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0117647058823529, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011780104712041939, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011795543905635641, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011811023622047223, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01182654402102501, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011842105263157876, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011857707509881465, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01187335092348285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011889035667106973, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011904761904761862, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01192052980132452, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011936339522546469, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01195219123505975, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01196808510638303, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.011984021304926817, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01200000000000001, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012016021361815787, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012032085561497374, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012048192771084376, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012064343163538882, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012080536912751683, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012096774193548376, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012113055181695809, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0121293800539084, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012145748987854255, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012162162162162149, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012178619756427644, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012195121951219523, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012211668928086894, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012228260869565188, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01224489795918371, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012261580381471404, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012278308321964526, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012295081967213073, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012311901504788003, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012328767123287676, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012345679012345734, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012362637362637319, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012379642365887178, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012396694214875992, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012413793103448256, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012430939226519389, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012448132780082943, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012465373961218829, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012482662968099856, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012499999999999956, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012517385257301838, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012534818941504211, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012552301255230103, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012569832402234637, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012587412587412583, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012605042016806678, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012622720897615736, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012640449438202195, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012658227848101222, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012676056338028152, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012693935119887145, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012711864406779627, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012729844413012725, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012747875354107596, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012765957446808529, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01278409090909094, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012802275960170695, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012820512820512775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012838801711840264, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0128571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012875536480686733, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012893982808022897, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012912482065997155, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012931034482758674, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012949640287769792, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012968299711815567, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.012987012987012991, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013005780346820761, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013043478260869601, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013062409288824406, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013100436681222738, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013119533527696792, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013138686131386912, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013157894736842146, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013177159590043952, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01319648093841641, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013215859030836996, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013235294117647012, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013254786450662692, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013274336283185861, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013293943870014813, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013313609467455634, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013333333333333308, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013353115727002929, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013372956909361022, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013392857142857095, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01341281669150518, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013432835820895495, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013452914798206317, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013473053892215536, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013493253373313308, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013513513513513487, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013533834586466176, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013554216867469826, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013574660633484115, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013595166163142047, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013615733736762503, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013636363636363669, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01365705614567525, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01367781155015202, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013698630136986356, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013719512195121908, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013740458015267132, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013761467889908285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013782542113323082, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013803680981595123, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01382488479262678, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013846153846153841, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013867488443759624, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01388888888888884, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01391035548686248, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01393188854489169, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013953488372092981, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013975155279503104, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.013996889580093264, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014018691588784993, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01404056162246492, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014062499999999978, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014084507042253502, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014106583072100332, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014128728414442682, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014150943396226467, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014173228346456734, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014195583596214534, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014218009478673022, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014240506329113889, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014263074484944571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014285714285714235, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014308426073131986, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014331210191082855, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014354066985645897, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014376996805111841, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014399999999999968, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014423076923076872, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014446227929374, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014469453376205754, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01449275362318836, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014516129032258074, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014539579967689842, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014563106796116498, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014586709886547866, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01461038961038963, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014634146341463428, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014657980456026065, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014681892332789603, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014705882352941124, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014729950900163713, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014754098360655776, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014778325123152691, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014802631578947345, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014827018121911006, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014851485148514865, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014876033057851235, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014925373134328401, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014950166112956853, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.014975041597337757, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015000000000000013, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015025041736227096, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015050167224080258, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015075376884422065, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015100671140939603, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015126050420168013, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015151515151515138, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015177065767284947, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015202702702702742, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015228426395939132, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015254237288135575, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015280135823429575, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015306122448979553, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015332197614991494, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015358361774744034, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01538461538461533, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015437392795883409, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015463917525773141, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015490533562822706, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01551724137931032, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015544041450777257, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01557093425605538, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01559792027729634, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01565217391304352, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015679442508710784, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015706806282722474, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01573426573426573, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015761821366024553, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015789473684210575, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01581722319859402, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015845070422535246, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015873015873015928, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01590106007067138, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015929203539822967, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.015957446808510634, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01598579040852577, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016014234875444844, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016042780748663055, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016071428571428625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01610017889087656, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016129032258064502, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016157989228007152, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01618705035971224, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01621621621621616, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016245487364620947, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016274864376130238, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016304347826086918, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016333938294010864, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016363636363636358, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016393442622950838, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01642335766423353, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01645338208409508, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016483516483516536, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016513761467889854, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016544117647058876, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016574585635359074, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016605166051660514, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01663585951940849, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01666666666666672, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016697588126159513, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016728624535315983, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016759776536312887, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016791044776119368, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016822429906542036, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016853932584269704, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016885553470919357, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016949152542372836, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.016981132075471694, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017013232514177745, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017045454545454586, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017077798861480087, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017110266159695797, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017716535433070835, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017751479289940808, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017786561264822143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017821782178217838, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017857142857142905, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017892644135188873, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017928286852589626, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.017964071856287456, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018000000000000016, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018036072144288595, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01807228915662651, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01810865191146882, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01814516129032262, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018181818181818188, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018218623481781382, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018255578093306246, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018292682926829285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018329938900203624, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01836734693877551, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018404907975460127, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018442622950819665, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01848049281314168, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01851851851851849, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01855670103092788, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018595041322314043, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018633540372670843, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018672199170124526, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018711018711018657, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018750000000000044, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018789144050104345, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018867924528301883, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.018907563025210128, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0189473684210526, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01898734177215189, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019027484143763207, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01906779661016944, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019108280254777066, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019148936170212738, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019189765458422214, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019230769230769273, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01927194860813708, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01931330472102999, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01935483870967747, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0193965517241379, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01943844492440605, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01948051948051943, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0195227765726681, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019565217391304346, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019607843137254943, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01965065502183405, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01969365426695846, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019736842105263164, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01978021978021982, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.01982378854625555, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019867549668874163, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019911504424778736, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.019955654101995512, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020000000000000018, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020044543429844075, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0200892857142857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020134228187919434, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020179372197309364, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020224719101123556, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020270270270270285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020316027088036148, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020361990950226283, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020408163265306145, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020454545454545503, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02050113895216399, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020547945205479423, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020594965675057253, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020642201834862428, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020689655172413834, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020737327188940058, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020785219399538146, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02083333333333337, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02088167053364265, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020930232558139528, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.020979020979020935, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0210280373831776, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021077283372365363, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021126760563380254, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02117647058823524, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021226415094339646, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021276595744680882, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021327014218009532, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02137767220902609, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021428571428571463, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021479713603818618, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021531100478468845, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021582733812949617, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02163461538461542, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02168674698795181, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021739130434782594, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021791767554479424, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021844660194174748, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.021897810218978075, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02195121951219514, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022004889975550168, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022058823529411797, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02211302211302213, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022167487684729092, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022222222222222254, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022277227722772297, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022332506203473934, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02238805970149249, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02244389027431426, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022499999999999964, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022556390977443663, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022613065326633208, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02267002518891692, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022727272727272707, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02278481012658229, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022842639593908642, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022900763358778664, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.022959183673469385, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023017902813299185, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023076923076923106, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023136246786632397, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023195876288659822, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023255813953488413, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023316062176165775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023376623376623384, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0234375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023498694516971286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023560209424083767, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023622047244094446, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023684210526315752, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0237467018469657, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023809523809523836, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.023872679045092826, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02393617021276595, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02400000000000002, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024064171122994638, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024128686327077764, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024193548387096753, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02425876010781669, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024324324324324298, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024390243902439046, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024456521739130488, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02452316076294281, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024590163934426257, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024657534246575352, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02472527472527475, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024793388429752095, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024861878453038666, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.024930747922437657, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025000000000000022, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02506963788300831, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025139664804469275, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025210084033613467, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0252808988764045, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025352112676056304, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025423728813559365, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025495750708215303, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025568181818181768, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02564102564102566, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02571428571428569, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025787965616045794, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025862068965517238, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.025936599423631135, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026011560693641633, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02608695652173909, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026162790697674465, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026239067055393583, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02631578947368418, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02639296187683282, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026470588235294135, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026548672566371723, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026627218934911268, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02670623145400597, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0267857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0268656716417911, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.026946107784431184, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027027027027026973, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027108433734939763, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027190332326283984, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027272727272727226, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027355623100303927, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027439024390243927, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02752293577981646, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027607361963190136, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.027692307692307683, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02777777777777779, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02786377708978327, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02795031055900621, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028037383177570097, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028124999999999956, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028213166144200663, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028301886792452824, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028391167192429068, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02848101265822789, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02857142857142858, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0286624203821656, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028753993610223683, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.028846153846153855, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02893890675241162, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.029032258064516148, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.029126213592232997, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02922077922077926, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02931596091205213, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02941176470588236, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02950819672131144, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02960526315789469, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.02970297029702973, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0298013245033113, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.029900332225913595, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030000000000000027, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030100334448160515, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030201342281879207, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030303030303030276, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030405405405405372, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03050847457627115, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030612244897959218, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030716723549488067, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03082191780821919, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.030927835051546393, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03103448275862064, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03114186851211076, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03135888501742157, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03146853146853146, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03157894736842104, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03169014084507038, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03180212014134276, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03191489361702127, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03202846975088969, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03214285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.032258064516129004, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03237410071942448, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.032490974729241895, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03260869565217395, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.032727272727272716, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03284671532846717, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03296703296703296, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03308823529411764, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03321033210332103, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.033333333333333326, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03345724907063197, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03358208955223885, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0337078651685393, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03383458646616544, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03396226415094339, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03409090909090906, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.034220532319391594, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03435114503816794, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03448275862068961, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0346153846153846, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03474903474903479, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03488372093023251, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.035019455252918275, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03515625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03529411764705881, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03543307086614178, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.035573122529644285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0357142857142857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03585657370517925, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03600000000000003, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03614457831325302, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03629032258064513, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.036437246963562764, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03658536585365857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03673469387755102, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03688524590163933, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03703703703703709, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.037190082644628086, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03734439834024894, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03749999999999998, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03765690376569042, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.037815126050420145, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03797468354430378, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03813559322033899, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03829787234042559, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.038461538461538436, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03862660944206009, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03879310344827591, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.038961038961038974, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03913043478260869, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0393013100436681, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03947368421052633, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03964757709251099, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.03982300884955747, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.040000000000000036, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0401785714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04035874439461884, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04054054054054057, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.040723981900452455, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.040909090909090895, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04109589041095896, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.041284403669724745, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04147465437788023, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04166666666666663, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.041860465116279055, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04205607476635509, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04225352112676062, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04245283018867929, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.042654028436018954, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.042857142857142816, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0430622009569378, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.043269230769230727, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04347826086956519, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.043689320388349495, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04390243902439028, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.044117647058823484, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.044334975369458074, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.044554455445544594, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04477611940298509, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04500000000000004, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.045226130653266305, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.045454545454545414, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.045685279187817285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04591836734693877, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0461538461538461, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.046391752577319534, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04663212435233166, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.046875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04712041884816753, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.047368421052631615, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04761904761904767, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0478723404255319, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.048128342245989275, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.048387096774193505, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.048648648648648596, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.048913043478260865, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.049180327868852514, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0494505494505495, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.04972375690607733, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.050000000000000044, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05027932960893855, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.050561797752809, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05084745762711862, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.051136363636363646, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05142857142857138, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.051724137931034475, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.052023121387283267, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05232558139534882, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.052631578947368474, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05294117647058827, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.053254437869822535, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0535714285714286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.053892215568862256, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.054216867469879526, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.054545454545454564, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.054878048780487854, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05521472392638038, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05555555555555558, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05590062111801242, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05625000000000002, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05660377358490565, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05696202531645567, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0573248407643312, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05769230769230771, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.058064516129032295, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.058441558441558406, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05882352941176472, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05921052631578949, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.05960264900662249, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06000000000000005, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06040268456375841, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.060810810810810856, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.061224489795918324, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06164383561643838, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06206896551724139, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06293706293706292, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06338028169014087, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06382978723404253, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06428571428571428, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06474820143884896, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06521739130434778, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06569343065693434, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06617647058823528, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06666666666666665, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06716417910447758, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06766917293233088, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06818181818181823, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06870229007633588, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0692307692307692, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.06976744186046513, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0703125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07086614173228345, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0714285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07199999999999995, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07258064516129037, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07317073170731703, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07377049180327866, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07438016528925617, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07499999999999996, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07563025210084029, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07627118644067798, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07692307692307687, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07758620689655171, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07826086956521738, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07894736842105265, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.07964601769911506, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0803571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08108108108108103, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08181818181818179, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08256880733944949, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08333333333333337, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08411214953271029, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08490566037735847, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08571428571428574, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08653846153846156, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08737864077669899, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08823529411764708, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08910891089108908, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.08999999999999997, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09090909090909094, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09183673469387754, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09278350515463918, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09473684210526312, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.0957446808510638, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09677419354838712, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09782608695652173, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09890109890109888, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.09999999999999998, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.101123595505618, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.10227272727272729, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.10344827586206895, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.10465116279069764, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.10588235294117643, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1071428571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.10843373493975905, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1097560975609756, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.11111111111111116, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.11250000000000004, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.11392405063291144, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.11538461538461542, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.11688311688311692, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.11842105263157898, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.12, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1216216216216216, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.12328767123287676, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.12676056338028174, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.12857142857142856, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.13043478260869568, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.13235294117647056, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.13432835820895528, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.13636363636363635, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1384615384615384, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.140625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1428571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.14516129032258063, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.14754098360655743, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.15000000000000002, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.15254237288135597, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.15517241379310343, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1578947368421053, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1607142857142857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1636363636363637, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.16666666666666663, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.16981132075471694, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.17307692307692313, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.17647058823529416, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.18000000000000005, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.18367346938775508, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.1875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.19148936170212771, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.19565217391304346, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.19999999999999996, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.20454545454545459, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2093023255813954, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2142857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2195121951219512, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.22499999999999998, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.23076923076923073, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.23684210526315785, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2432432432432432, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2571428571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2647058823529411, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.2727272727272727, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.28125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.29032258064516125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.30000000000000004, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.31034482758620685, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.3214285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.33333333333333337, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.6666666666666666, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.6785714285714286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.6896551724137931, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7096774193548387, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.71875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7272727272727273, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7352941176470589, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7428571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7567567567567568, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7631578947368421, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7692307692307693, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7804878048780488, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7857142857142857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7906976744186046, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.7954545454545454, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8043478260869565, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8085106382978723, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8163265306122449, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.82, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8235294117647058, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8269230769230769, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8301886792452831, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8333333333333334, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8363636363636363, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8392857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8421052631578947, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8448275862068966, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.847457627118644, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.85, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8524590163934426, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8548387096774194, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8571428571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.859375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8615384615384616, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8636363636363636, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8656716417910447, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8676470588235294, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8695652173913043, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8714285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8732394366197183, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8767123287671232, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8783783783783784, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.88, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.881578947368421, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8831168831168831, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8846153846153846, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8860759493670886, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8888888888888888, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8902439024390244, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.891566265060241, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8928571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8941176470588236, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8953488372093024, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.896551724137931, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.8977272727272727, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.898876404494382, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9010989010989011, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9021739130434783, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9032258064516129, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9042553191489362, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9052631578947369, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.90625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9072164948453608, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9081632653061225, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9090909090909091, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.91, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9108910891089109, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9117647058823529, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.912621359223301, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9134615384615384, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9142857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9150943396226415, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9158878504672897, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9166666666666666, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9174311926605505, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9181818181818182, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.918918918918919, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9196428571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9203539823008849, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9210526315789473, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9217391304347826, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9224137931034483, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9230769230769231, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.923728813559322, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9243697478991597, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.925, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9256198347107438, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9262295081967213, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.926829268292683, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9274193548387096, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.928, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9285714285714286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9291338582677166, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9296875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9302325581395349, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9307692307692308, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9312977099236641, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9318181818181818, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9323308270676691, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9328358208955224, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9333333333333333, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9338235294117647, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9343065693430657, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9347826086956522, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.935251798561151, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9357142857142857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9361702127659575, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9366197183098591, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9370629370629371, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9379310344827586, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9383561643835616, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9387755102040817, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9391891891891891, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9395973154362416, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.94, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9403973509933775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9407894736842105, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9411764705882353, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9415584415584416, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9419354838709677, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9423076923076923, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9426751592356688, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9430379746835443, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9433962264150944, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.94375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9440993788819876, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9444444444444444, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9447852760736196, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9451219512195121, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9454545454545454, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9457831325301205, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9461077844311377, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9464285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9467455621301775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9470588235294117, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9473684210526315, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9476744186046512, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9479768786127167, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9482758620689655, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9485714285714286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9488636363636364, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9491525423728814, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.949438202247191, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9497206703910615, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.95, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9502762430939227, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9505494505494505, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9508196721311475, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9510869565217391, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9513513513513514, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9516129032258065, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9518716577540107, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9521276595744681, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9523809523809523, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9526315789473684, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9528795811518325, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.953125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9533678756476683, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9536082474226805, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9538461538461539, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9540816326530612, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9543147208121827, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9545454545454546, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9547738693467337, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.955, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9552238805970149, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9554455445544554, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9556650246305419, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9558823529411765, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9560975609756097, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9563106796116505, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9565217391304348, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9567307692307693, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9569377990430622, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9571428571428572, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.957345971563981, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9575471698113207, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9577464788732394, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9579439252336449, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.958139534883721, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9583333333333334, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9585253456221198, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9587155963302753, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.958904109589041, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9590909090909091, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9592760180995475, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9594594594594594, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9596412556053812, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9598214285714286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.96, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9601769911504425, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.960352422907489, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9605263157894737, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9606986899563319, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9608695652173913, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.961038961038961, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9612068965517241, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9613733905579399, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9615384615384616, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9617021276595744, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.961864406779661, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9620253164556962, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9621848739495799, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9623430962343096, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9626556016597511, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9628099173553719, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9629629629629629, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9631147540983607, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.963265306122449, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9634146341463414, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9635627530364372, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9637096774193549, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.963855421686747, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.964, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9641434262948207, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9642857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9644268774703557, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9645669291338582, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9647058823529412, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.96484375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9649805447470817, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9651162790697675, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9652509652509652, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9653846153846154, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9655172413793104, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9656488549618321, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9657794676806084, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9659090909090909, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9660377358490566, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9661654135338346, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9662921348314607, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9664179104477612, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.966542750929368, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9666666666666667, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.966789667896679, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9669117647058824, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.967032967032967, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9671532846715328, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9672727272727273, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.967391304347826, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9675090252707581, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9676258992805755, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.967741935483871, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9678571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9679715302491103, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9680851063829787, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9681978798586572, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9683098591549296, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.968421052631579, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9685314685314685, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9686411149825784, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.96875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9688581314878892, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9689655172413794, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9690721649484536, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9691780821917808, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9692832764505119, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9693877551020408, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9694915254237289, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9695945945945946, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9696969696969697, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9697986577181208, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9698996655518395, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.97, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9700996677740864, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9701986754966887, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9702970297029703, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9703947368421053, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9704918032786886, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9705882352941176, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9706840390879479, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9707792207792207, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.970873786407767, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9709677419354839, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9710610932475884, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9711538461538461, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9712460063897763, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9713375796178344, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9714285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9715189873417721, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9716088328075709, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9716981132075472, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9717868338557993, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.971875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9719626168224299, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9720496894409938, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9721362229102167, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9722222222222222, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9723076923076923, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9723926380368099, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9724770642201835, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9725609756097561, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9726443768996961, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9727272727272728, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.972809667673716, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9728915662650602, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.972972972972973, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9730538922155688, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9731343283582089, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9732142857142857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.973293768545994, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9733727810650887, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9734513274336283, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9735294117647059, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9736070381231672, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9736842105263158, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9737609329446064, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9738372093023255, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9739130434782609, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9739884393063584, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9740634005763689, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9741379310344828, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9742120343839542, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9742857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9743589743589743, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9744318181818182, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9745042492917847, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9745762711864406, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9746478873239437, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9747191011235955, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9747899159663865, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9748603351955307, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9749303621169917, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.975, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9750692520775623, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9751381215469613, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9752066115702479, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9752747252747253, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9753424657534246, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9754098360655737, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9754768392370572, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9755434782608695, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.975609756097561, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9756756756756757, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9757412398921833, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9758064516129032, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9758713136729222, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9759358288770054, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.976, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.976063829787234, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9761273209549072, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9761904761904762, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9762532981530343, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9763157894736842, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9763779527559056, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9764397905759162, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9765013054830287, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9765625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9766233766233766, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9766839378238342, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9767441860465116, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9768041237113402, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9768637532133676, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9769230769230769, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9769820971867008, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9770408163265306, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9770992366412213, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9771573604060914, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9772151898734177, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9772727272727273, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9773299748110831, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9773869346733668, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9774436090225563, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9775561097256857, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9776119402985075, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9776674937965261, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9777227722772277, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9777777777777777, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9778325123152709, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9778869778869779, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9779411764705882, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9779951100244498, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9780487804878049, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9781021897810219, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9781553398058253, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9782082324455206, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9782608695652174, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9783132530120482, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9783653846153846, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9784172661870504, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9784688995215312, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9785202863961814, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9785714285714285, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9786223277909739, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9786729857819905, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9787234042553191, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9787735849056604, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9788235294117648, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9788732394366197, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9789227166276346, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9789719626168224, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9790209790209791, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9790697674418605, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9791183294663574, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9791666666666666, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9792147806004619, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9792626728110599, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9793103448275862, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9793577981651376, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9794050343249427, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9794520547945206, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.979498861047836, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9795454545454545, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9795918367346939, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9796380090497737, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9796839729119639, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9797297297297297, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9797752808988764, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9798206278026906, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9798657718120806, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9799107142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9799554565701559, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9800443458980045, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9800884955752213, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9801324503311258, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9801762114537445, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9802197802197802, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9802631578947368, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9803063457330415, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.980349344978166, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9804347826086957, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9804772234273319, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9805194805194806, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.980561555075594, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9806034482758621, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9806451612903225, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98068669527897, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9807280513918629, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9807692307692307, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9808102345415778, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9808510638297873, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9808917197452229, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9809322033898306, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9809725158562368, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9810126582278481, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9810526315789474, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9810924369747899, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9811320754716981, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9811715481171548, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9812108559498957, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9812889812889813, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9813278008298755, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9813664596273292, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.981404958677686, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9814432989690721, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9814814814814815, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9815195071868583, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9815573770491803, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9815950920245399, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9816326530612245, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9816700610997964, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9817073170731707, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9817444219066938, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9817813765182186, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9818181818181818, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9818548387096774, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9818913480885312, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9819277108433735, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9819639278557114, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.982, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9820359281437125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9820717131474104, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9821073558648111, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9821428571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9821782178217822, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9822134387351779, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9822485207100592, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9822834645669292, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9823182711198428, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9823529411764705, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9823874755381604, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.982421875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9824561403508771, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9824902723735408, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9825242718446602, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9825581395348837, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9825918762088974, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9826254826254827, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9826589595375722, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9826923076923076, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.982725527831094, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9827586206896551, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.982791586998088, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.982824427480916, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9828571428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9828897338403042, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9829222011385199, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9829545454545454, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9829867674858223, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9830188679245283, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9830508474576272, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9830827067669173, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9831144465290806, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9831460674157303, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.983177570093458, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9832089552238806, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9832402234636871, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.983271375464684, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9833024118738405, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9833333333333333, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9833641404805915, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9833948339483395, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9834254143646409, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9834558823529411, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9834862385321101, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9835164835164835, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9835466179159049, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9835766423357665, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9836065573770492, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9836363636363636, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9836660617059891, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9836956521739131, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9837251356238698, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.983754512635379, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9837837837837838, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9838420107719928, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9838709677419355, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9838998211091234, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9839285714285714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.983957219251337, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9839857651245552, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9840142095914742, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9840425531914894, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.984070796460177, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9840989399293286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9841269841269841, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9841549295774648, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.984182776801406, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9842105263157894, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9842381786339754, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9842657342657343, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9842931937172775, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9843205574912892, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9843478260869565, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.984375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9844020797227037, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9844290657439446, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9844559585492227, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9844827586206897, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9845094664371773, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9845360824742269, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9845626072041166, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9845890410958904, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9846153846153847, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.984641638225256, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9846678023850085, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9846938775510204, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9847198641765704, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9847457627118644, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9847715736040609, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9847972972972973, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.984822934232715, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9848484848484849, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.984873949579832, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9848993288590604, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9849246231155779, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9849498327759197, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9849749582637729, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.985, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9850249584026622, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9850498338870431, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9850746268656716, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9850993377483444, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9851239669421488, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9851485148514851, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.985172981878089, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9851973684210527, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9852216748768473, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9852459016393442, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9852700490998363, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9852941176470589, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9853181076672104, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9853420195439739, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9853658536585366, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9853896103896104, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9854132901134521, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9854368932038835, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9854604200323102, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9854838709677419, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9855072463768116, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9855305466237942, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.985553772070626, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9855769230769231, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9856, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9856230031948882, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9856459330143541, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9856687898089171, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.985691573926868, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9857142857142858, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9857369255150554, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9857594936708861, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.985781990521327, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9858044164037855, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9858267716535433, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9858490566037735, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9858712715855573, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9858934169278997, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9859154929577465, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9859375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9859594383775351, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.985981308411215, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9860031104199067, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9860248447204969, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986046511627907, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9860681114551083, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9860896445131375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9861111111111112, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9861325115562404, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9861538461538462, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9861751152073732, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9861963190184049, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9862174578866769, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9862385321100917, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9862595419847329, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9862804878048781, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9863013698630136, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986322188449848, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9863429438543247, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9863636363636363, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9863842662632375, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986404833836858, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9864253393665159, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9864457831325302, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9864661654135338, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9864864864864865, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9865067466266867, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9865269461077845, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9865470852017937, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9865671641791045, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9865871833084948, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9866071428571429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986627043090639, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9866468842729971, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9866666666666667, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9866863905325444, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9867060561299852, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9867256637168141, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9867452135493373, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986764705882353, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986784140969163, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9868035190615836, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.986822840409956, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9868421052631579, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9868613138686131, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9868804664723032, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9868995633187773, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9869186046511628, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9869375907111756, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9869565217391304, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9869753979739508, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9869942196531792, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.987012987012987, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9870317002881844, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9870503597122302, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9870689655172413, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9870875179340028, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9871060171919771, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9871244635193133, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9871428571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9871611982881597, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9871794871794872, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9871977240398293, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9872159090909091, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9872340425531915, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9872521246458924, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9872701555869873, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9872881355932204, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9873060648801129, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9873239436619718, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9873417721518988, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9873595505617978, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9873772791023843, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9873949579831933, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9874125874125874, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9874301675977654, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9874476987447699, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9874651810584958, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9874826147426982, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9875173370319001, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9875346260387812, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9875518672199171, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9875690607734806, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9875862068965517, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.987603305785124, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9876203576341128, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9876373626373627, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9876543209876543, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9876712328767123, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.987688098495212, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9877049180327869, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9877216916780355, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9877384196185286, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9877551020408163, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9877717391304348, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9877883310719131, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9878048780487805, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9878213802435724, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9878378378378379, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9878542510121457, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9878706199460916, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9878869448183042, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9879032258064516, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9879194630872483, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9879356568364611, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9879518072289156, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9879679144385026, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9879839786381842, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9880159786950732, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988031914893617, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9880478087649402, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9880636604774535, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9880794701986755, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9880952380952381, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988110964332893, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9881266490765171, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9881422924901185, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9881578947368421, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988173455978975, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9881889763779528, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9882044560943644, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9882198952879581, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9882352941176471, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9882506527415144, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9882659713168188, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98828125, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988296488946684, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9883116883116884, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9883268482490273, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9883419689119171, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9883570504527813, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9883720930232558, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9883870967741936, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884020618556701, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884169884169884, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884318766066839, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884467265725289, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884615384615385, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884763124199744, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9884910485933504, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9885057471264368, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9885204081632653, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9885350318471338, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9885496183206107, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98856416772554, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9885786802030457, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9885931558935361, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9886075949367089, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988621997471555, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9886363636363636, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9886506935687264, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9886649874055415, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9886792452830189, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9886934673366834, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9887076537013801, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9887218045112782, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9887359198998749, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98875, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9887640449438202, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9887780548628429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9887920298879203, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9888059701492538, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9888198757763975, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988833746898263, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9888475836431226, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9888613861386139, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9888751545117429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9888888888888889, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9889025893958077, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9889162561576355, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988929889298893, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9889434889434889, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9889570552147239, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9889705882352942, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988984088127295, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.988997555012225, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.989010989010989, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9890243902439024, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9890377588306942, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9890510948905109, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9890643985419199, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9890776699029126, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9890909090909091, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891041162227603, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891172914147521, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891304347826086, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891435464414958, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891566265060241, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891696750902527, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891826923076923, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9891956782713085, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892086330935251, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892215568862276, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892344497607656, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.989247311827957, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892601431980907, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892729439809297, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892857142857143, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9892984542211652, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893111638954869, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893238434163701, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893364928909952, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893491124260355, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893617021276596, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893742621015348, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893867924528302, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9893992932862191, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894117647058823, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894242068155111, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894366197183099, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894490035169988, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894613583138173, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894736842105263, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894859813084113, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9894982497082847, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895104895104895, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.989522700814901, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895348837209302, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895470383275261, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895591647331786, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895712630359212, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895833333333334, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9895953757225433, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896073903002309, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896193771626297, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896313364055299, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896432681242808, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896551724137931, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896670493685419, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896788990825688, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9896907216494846, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897025171624714, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897142857142858, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897260273972602, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897377423033067, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.989749430523918, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897610921501706, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897727272727272, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897843359818388, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9897959183673469, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898074745186863, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898190045248869, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898305084745763, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.989841986455982, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898534385569335, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898648648648649, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898762654668166, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9898876404494382, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.98989898989899, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899103139013453, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899216125419933, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899328859060402, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899441340782122, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899553571428571, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899665551839465, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899777282850779, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9899888765294772, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.99, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900110987791343, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900221729490022, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900332225913622, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900442477876106, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900552486187846, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900662251655629, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900771775082691, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900881057268722, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9900990099009901, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901098901098901, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901207464324918, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901315789473685, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901423877327492, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901531728665208, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901639344262295, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990174672489083, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990185387131952, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9901960784313726, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902067464635473, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902173913043478, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990228013029316, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902386117136659, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902491874322861, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902597402597403, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902702702702703, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990280777537797, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9902912621359223, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990301724137931, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903121636167922, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903225806451613, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903329752953813, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990343347639485, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903536977491961, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903640256959315, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903743315508021, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903846153846154, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9903948772678762, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990405117270789, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904153354632588, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904255319148936, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904357066950054, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904458598726115, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904559915164369, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904661016949152, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904761904761905, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904862579281184, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9904963041182682, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990506329113924, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905163329820864, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905263157894737, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905362776025236, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990546218487395, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905561385099685, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905660377358491, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905759162303664, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905857740585774, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9905956112852664, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906054279749478, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906152241918665, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990625, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906347554630593, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906444906444907, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906542056074766, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906639004149378, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906735751295337, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906832298136646, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9906928645294726, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907024793388429, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907120743034056, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907216494845361, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907312049433573, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907407407407407, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907502569373073, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907597535934292, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907692307692307, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907786885245902, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9907881269191402, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.99079754601227, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908069458631257, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908163265306122, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908256880733946, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908350305498982, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908443540183113, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908536585365854, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908629441624366, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908722109533469, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908814589665653, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908906882591093, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9908998988877654, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.990909090909091, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909182643794148, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909274193548387, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909365558912386, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909456740442656, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909547738693467, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909638554216867, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909729187562688, )
paddle.Tensor.__rmul__(Tensor([621379, 768, 3, 3],"float32"), 0.9909819639278558, )
paddle.Tensor.__rmul__(Tensor([639133, 21, 8, 5, 4, 2],"float32"), 2, )
paddle.Tensor.__rmul__(Tensor([645278, 13, 512],"float32"), 22.627416997969522, )
paddle.Tensor.__rmul__(Tensor([65536, 1, 256, 256],"float32"), 1.0, )
paddle.Tensor.__rmul__(Tensor([67108864, 1, 8, 8],"float32"), 1e+30, )
paddle.Tensor.__rmul__(Tensor([715827883, 2, 3],"float32"), 2.0, )
paddle.Tensor.__rmul__(Tensor([715827883, 2, 3],"float32"), -2.0, )
paddle.Tensor.__rmul__(Tensor([715827883, 3],"float64"), -1.0, )
paddle.Tensor.__rmul__(Tensor([715827883, 3],"float64"), 2.0, )
paddle.Tensor.__rmul__(Tensor([715827883, 3],"float64"), -2.0, )
paddle.Tensor.__rmul__(Tensor([715827883, 3],"float64"), 2.5066282746310002, )
paddle.Tensor.__rmul__(Tensor([715827883, 3],"float64"), 3.141592653589793, )
paddle.Tensor.__rmul__(Tensor([715827883, 3],"int64"), 6, )
paddle.Tensor.__rmul__(Tensor([7232, 7332, 81],"float32"), 0.0625, )
paddle.Tensor.__rmul__(Tensor([7282, 144, 64, 64],"float16"), 10, )
paddle.Tensor.__rmul__(Tensor([7282, 144, 64, 64],"float32"), 10, )
paddle.Tensor.__rmul__(Tensor([7282, 256, 256, 3, 3],"float32"), 0.020833333333333332, )
paddle.Tensor.__rmul__(Tensor([7304367, 3, 14, 14, 1],"float32"), 1.0, )
paddle.Tensor.__rmul__(Tensor([73459, 94, 311],"int64"), 1, )
paddle.Tensor.__rmul__(Tensor([73459, 94, 311],"int64"), 13, )
paddle.Tensor.__rmul__(Tensor([745655, 18, 8, 5, 4, 2],"float32"), 2, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.008958725264993642, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.009454072055343833, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.00994917123420681, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.010444022925357508, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.010938627252508808, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.011432984339311756, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.011927094309355676, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.012420957286167947, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.012914573393214451, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.013407942753899121, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.013901065491564396, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.014393941729490874, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.014886571590897658, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.015378955198942243, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.01587109267672039, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.016362984147266706, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.01685462973355385, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.017346029558493303, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9826539704415067, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9831453702664461, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9836370158527333, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9841289073232796, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9846210448010577, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9851134284091023, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9856060582705092, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9860989345084356, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9865920572461009, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9870854266067856, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.987579042713832, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9880729056906443, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9885670156606883, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9890613727474912, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9895559770746425, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9900508287657932, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9905459279446561, )
paddle.Tensor.__rmul__(Tensor([745655, 640, 3, 3],"float32"), 0.9910412747350064, )
paddle.Tensor.__rmul__(Tensor([768, 1, 7, 798916],"float32"), 0.9999, )
paddle.Tensor.__rmul__(Tensor([768, 1, 7, 798916],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([768, 1, 798916, 7],"float32"), 0.9999, )
paddle.Tensor.__rmul__(Tensor([768, 1, 798916, 7],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([768, 114131, 7, 7],"float32"), 0.9999, )
paddle.Tensor.__rmul__(Tensor([768, 114131, 7, 7],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([768, 5592406],"float32"), 0.00029999999999996696, )
paddle.Tensor.__rmul__(Tensor([768, 5592406],"float32"), 0.03608439182435161, )
paddle.Tensor.__rmul__(Tensor([768, 5592406],"float32"), 0.9997, )
paddle.Tensor.__rmul__(Tensor([784, 5478275],"float32"), 0.2, )
paddle.Tensor.__rmul__(Tensor([8, 16, 16777217],"float64"), 3.0, )
paddle.Tensor.__rmul__(Tensor([8, 16, 16777217],"float64"), complex(0.0,1.0), )
paddle.Tensor.__rmul__(Tensor([8, 16, 33554432],"float32"), complex(0.0,1.0), )
paddle.Tensor.__rmul__(Tensor([8, 16777216, 32],"float32"), complex(0.0,1.0), )
paddle.Tensor.__rmul__(Tensor([8, 26843546, 10],"float64"), 3.0, )
paddle.Tensor.__rmul__(Tensor([8, 8388609, 32],"float64"), complex(0.0,1.0), )
paddle.Tensor.__rmul__(Tensor([8388608, 16, 32],"float32"), complex(0.0,1.0), )
paddle.Tensor.__rmul__(Tensor([8388608, 512, 1, 1],"float32"), 0.00029999999999996696, )
paddle.Tensor.__rmul__(Tensor([8388608, 512, 1, 1],"float32"), 0.9997, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011056511056511065, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011070110701106972, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011083743842364546, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011097410604192337, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011111111111111072, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011124845488257096, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011138613861386149, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01115241635687736, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011166253101737023, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011180124223602483, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011194029850746245, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011207970112079746, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01122194513715713, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011235955056179803, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011249999999999982, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01126408010012514, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011278195488721776, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01129234629861986, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011306532663316604, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01132075471698113, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01133501259445846, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011349306431273631, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011363636363636354, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011378002528445008, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011392405063291089, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011406844106463865, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011421319796954266, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01143583227445999, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011450381679389277, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01146496815286624, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011479591836734748, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011494252873563204, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011508951406649648, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011523687580025643, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011538461538461497, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011553273427471145, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011568123393316143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01158301158301156, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011597938144329856, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011612903225806437, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011627906976744207, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011642949547218673, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011658031088082943, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011673151750972721, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011688311688311637, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011703511053316018, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01171875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011734028683181186, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011749347258485643, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0117647058823529, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011780104712041939, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011795543905635641, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011811023622047223, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01182654402102501, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011842105263157876, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011857707509881465, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01187335092348285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011889035667106973, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011904761904761862, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01192052980132452, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011936339522546469, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01195219123505975, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01196808510638303, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.011984021304926817, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01200000000000001, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012016021361815787, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012032085561497374, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012048192771084376, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012064343163538882, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012080536912751683, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012096774193548376, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012113055181695809, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0121293800539084, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012145748987854255, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012162162162162149, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012178619756427644, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012195121951219523, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012211668928086894, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012228260869565188, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01224489795918371, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012261580381471404, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012278308321964526, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012295081967213073, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012311901504788003, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012328767123287676, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012345679012345734, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012362637362637319, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012379642365887178, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012396694214875992, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012413793103448256, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012430939226519389, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012448132780082943, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012465373961218829, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012482662968099856, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012499999999999956, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012517385257301838, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012534818941504211, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012552301255230103, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012569832402234637, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012587412587412583, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012605042016806678, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012622720897615736, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012640449438202195, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012658227848101222, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012676056338028152, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012693935119887145, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012711864406779627, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012729844413012725, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012747875354107596, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012765957446808529, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01278409090909094, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012802275960170695, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012820512820512775, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012838801711840264, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0128571428571429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012875536480686733, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012893982808022897, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012912482065997155, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012931034482758674, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012949640287769792, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012968299711815567, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.012987012987012991, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013005780346820761, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013024602026049159, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013043478260869601, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013062409288824406, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013081395348837233, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013100436681222738, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013119533527696792, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013138686131386912, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013157894736842146, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013177159590043952, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01319648093841641, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013215859030836996, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013235294117647012, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013254786450662692, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013274336283185861, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013293943870014813, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013313609467455634, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013333333333333308, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013353115727002929, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013372956909361022, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013392857142857095, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01341281669150518, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013432835820895495, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013452914798206317, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013473053892215536, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013493253373313308, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013513513513513487, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013533834586466176, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013554216867469826, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013574660633484115, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013595166163142047, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013615733736762503, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013636363636363669, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01365705614567525, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01367781155015202, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013698630136986356, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013719512195121908, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013740458015267132, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013761467889908285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013782542113323082, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013803680981595123, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01382488479262678, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013846153846153841, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013867488443759624, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01388888888888884, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01391035548686248, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01393188854489169, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013953488372092981, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013975155279503104, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.013996889580093264, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014018691588784993, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01404056162246492, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014062499999999978, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014084507042253502, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014106583072100332, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014128728414442682, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014150943396226467, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014173228346456734, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014195583596214534, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014218009478673022, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014240506329113889, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014263074484944571, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014285714285714235, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014308426073131986, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014331210191082855, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014354066985645897, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014376996805111841, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014399999999999968, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014423076923076872, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014446227929374, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014469453376205754, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01449275362318836, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014516129032258074, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014539579967689842, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014563106796116498, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014586709886547866, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01461038961038963, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014634146341463428, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014657980456026065, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014681892332789603, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014705882352941124, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014729950900163713, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014754098360655776, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014778325123152691, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014802631578947345, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014827018121911006, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014851485148514865, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014876033057851235, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014925373134328401, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014950166112956853, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.014975041597337757, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015000000000000013, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015025041736227096, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015050167224080258, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015075376884422065, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015100671140939603, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015126050420168013, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015151515151515138, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015177065767284947, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015202702702702742, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015228426395939132, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015254237288135575, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015280135823429575, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015306122448979553, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015332197614991494, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015358361774744034, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01538461538461533, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015437392795883409, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015463917525773141, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015490533562822706, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01551724137931032, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015544041450777257, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01557093425605538, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01559792027729634, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01565217391304352, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015679442508710784, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015706806282722474, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01573426573426573, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015761821366024553, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015789473684210575, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01581722319859402, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015845070422535246, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015873015873015928, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01590106007067138, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015929203539822967, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.015957446808510634, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01598579040852577, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016014234875444844, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016042780748663055, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016071428571428625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01610017889087656, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016129032258064502, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016157989228007152, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01618705035971224, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01621621621621616, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016245487364620947, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016274864376130238, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016304347826086918, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016333938294010864, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016363636363636358, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016393442622950838, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01642335766423353, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01645338208409508, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016483516483516536, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016513761467889854, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016544117647058876, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016574585635359074, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016605166051660514, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01663585951940849, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01666666666666672, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016697588126159513, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016728624535315983, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016759776536312887, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016791044776119368, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016822429906542036, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016853932584269704, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016885553470919357, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016949152542372836, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.016981132075471694, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017013232514177745, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017045454545454586, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017077798861480087, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017110266159695797, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017142857142857126, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01717557251908397, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017208413001912004, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017241379310344862, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017274472168905985, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017307692307692357, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017341040462427793, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01737451737451734, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01740812379110257, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01744186046511631, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01747572815533982, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017509727626459193, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01754385964912286, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017578125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017612524461839585, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01764705882352946, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017681728880157177, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017716535433070835, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017751479289940808, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017786561264822143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017821782178217838, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017857142857142905, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017892644135188873, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017928286852589626, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.017964071856287456, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018000000000000016, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018036072144288595, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01807228915662651, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01810865191146882, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01814516129032262, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018181818181818188, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018218623481781382, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018255578093306246, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018292682926829285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018329938900203624, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01836734693877551, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018404907975460127, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018442622950819665, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01848049281314168, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01851851851851849, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01855670103092788, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018595041322314043, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018633540372670843, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018672199170124526, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018711018711018657, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018750000000000044, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018789144050104345, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018867924528301883, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.018907563025210128, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0189473684210526, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01898734177215189, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019027484143763207, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01906779661016944, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019108280254777066, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019148936170212738, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019189765458422214, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019230769230769273, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01927194860813708, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01931330472102999, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01935483870967747, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0193965517241379, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01943844492440605, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01948051948051943, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0195227765726681, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019565217391304346, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019607843137254943, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01965065502183405, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01969365426695846, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019736842105263164, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01978021978021982, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.01982378854625555, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019867549668874163, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019911504424778736, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.019955654101995512, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020000000000000018, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020044543429844075, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0200892857142857, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020134228187919434, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020179372197309364, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020224719101123556, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020270270270270285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020316027088036148, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020361990950226283, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020408163265306145, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020454545454545503, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02050113895216399, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020547945205479423, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020594965675057253, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020642201834862428, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020689655172413834, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020737327188940058, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020785219399538146, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02083333333333337, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02088167053364265, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020930232558139528, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.020979020979020935, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0210280373831776, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021077283372365363, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021126760563380254, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02117647058823524, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021226415094339646, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021276595744680882, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021327014218009532, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02137767220902609, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021428571428571463, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021479713603818618, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021531100478468845, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021582733812949617, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02163461538461542, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02168674698795181, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021739130434782594, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021791767554479424, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021844660194174748, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.021897810218978075, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02195121951219514, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022004889975550168, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022058823529411797, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02211302211302213, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022167487684729092, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022222222222222254, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022277227722772297, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022332506203473934, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02238805970149249, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02244389027431426, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022499999999999964, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022556390977443663, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022613065326633208, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02267002518891692, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022727272727272707, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02278481012658229, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022842639593908642, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022900763358778664, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.022959183673469385, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023017902813299185, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023076923076923106, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023136246786632397, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023195876288659822, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023255813953488413, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023316062176165775, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023376623376623384, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0234375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023498694516971286, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023560209424083767, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023622047244094446, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023684210526315752, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0237467018469657, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023809523809523836, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.023872679045092826, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02393617021276595, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02400000000000002, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024064171122994638, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024128686327077764, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024193548387096753, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02425876010781669, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024324324324324298, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024390243902439046, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024456521739130488, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02452316076294281, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024590163934426257, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024657534246575352, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02472527472527475, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024793388429752095, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024861878453038666, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.024930747922437657, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025000000000000022, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02506963788300831, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025139664804469275, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025210084033613467, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0252808988764045, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025352112676056304, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025423728813559365, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025495750708215303, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025568181818181768, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02564102564102566, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02571428571428569, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025787965616045794, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025862068965517238, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.025936599423631135, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026011560693641633, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02608695652173909, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026162790697674465, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026239067055393583, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02631578947368418, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02639296187683282, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026470588235294135, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026548672566371723, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026627218934911268, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02670623145400597, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0267857142857143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0268656716417911, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.026946107784431184, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027027027027026973, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027108433734939763, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027190332326283984, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027272727272727226, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027355623100303927, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027439024390243927, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02752293577981646, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027607361963190136, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.027692307692307683, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02777777777777779, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02786377708978327, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02795031055900621, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028037383177570097, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028124999999999956, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028213166144200663, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028301886792452824, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028391167192429068, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02848101265822789, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02857142857142858, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0286624203821656, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028753993610223683, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.028846153846153855, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02893890675241162, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.029032258064516148, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.029126213592232997, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02922077922077926, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02931596091205213, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02941176470588236, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02950819672131144, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02960526315789469, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.02970297029702973, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0298013245033113, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.029900332225913595, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030000000000000027, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030100334448160515, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030201342281879207, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030303030303030276, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030405405405405372, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03050847457627115, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030612244897959218, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030716723549488067, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03082191780821919, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.030927835051546393, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03103448275862064, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03114186851211076, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03135888501742157, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03146853146853146, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03157894736842104, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03169014084507038, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03180212014134276, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03191489361702127, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03202846975088969, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03214285714285714, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.032258064516129004, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03237410071942448, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.032490974729241895, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03260869565217395, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.032727272727272716, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03284671532846717, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03296703296703296, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03308823529411764, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03321033210332103, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.033333333333333326, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03345724907063197, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03358208955223885, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0337078651685393, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03383458646616544, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03396226415094339, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03409090909090906, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.034220532319391594, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03435114503816794, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03448275862068961, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0346153846153846, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03474903474903479, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03488372093023251, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.035019455252918275, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03515625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03529411764705881, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03543307086614178, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.035573122529644285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0357142857142857, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03585657370517925, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03600000000000003, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03608439182435161, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03614457831325302, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03629032258064513, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.036437246963562764, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03658536585365857, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03673469387755102, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03688524590163933, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03703703703703709, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.037190082644628086, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03734439834024894, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03749999999999998, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03765690376569042, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.037815126050420145, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03797468354430378, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03813559322033899, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03829787234042559, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.038461538461538436, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03862660944206009, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03879310344827591, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.038961038961038974, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03913043478260869, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0393013100436681, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03947368421052633, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03964757709251099, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.03982300884955747, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.040000000000000036, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0401785714285714, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04035874439461884, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04054054054054057, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.040723981900452455, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.040909090909090895, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04109589041095896, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.041284403669724745, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04147465437788023, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04166666666666663, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.041860465116279055, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04205607476635509, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04225352112676062, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04245283018867929, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.042654028436018954, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.042857142857142816, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0430622009569378, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.043269230769230727, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04347826086956519, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.043689320388349495, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04390243902439028, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.044117647058823484, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.044334975369458074, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.044554455445544594, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04477611940298509, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04500000000000004, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.045226130653266305, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.045454545454545414, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.045685279187817285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04591836734693877, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0461538461538461, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.046391752577319534, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04663212435233166, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.046875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04712041884816753, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.047368421052631615, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04761904761904767, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0478723404255319, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.048128342245989275, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.048387096774193505, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.048648648648648596, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.048913043478260865, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.049180327868852514, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0494505494505495, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.04972375690607733, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.050000000000000044, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05027932960893855, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.050561797752809, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05084745762711862, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.051136363636363646, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05142857142857138, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.051724137931034475, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.052023121387283267, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05232558139534882, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.052631578947368474, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05294117647058827, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.053254437869822535, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0535714285714286, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.053892215568862256, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.054216867469879526, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.054545454545454564, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.054878048780487854, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05521472392638038, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05555555555555558, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05590062111801242, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05625000000000002, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05660377358490565, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05696202531645567, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0573248407643312, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05769230769230771, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.058064516129032295, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.058441558441558406, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05882352941176472, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05921052631578949, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.05960264900662249, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06000000000000005, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06040268456375841, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.060810810810810856, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.061224489795918324, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06164383561643838, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06206896551724139, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06293706293706292, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06338028169014087, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06382978723404253, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06428571428571428, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06474820143884896, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06521739130434778, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06569343065693434, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06617647058823528, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06666666666666665, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06716417910447758, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06766917293233088, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06818181818181823, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06870229007633588, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0692307692307692, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.06976744186046513, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0703125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07086614173228345, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0714285714285714, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07199999999999995, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07258064516129037, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07317073170731703, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07377049180327866, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07438016528925617, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07499999999999996, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07563025210084029, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07627118644067798, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07692307692307687, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07758620689655171, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07826086956521738, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07894736842105265, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.07964601769911506, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0803571428571429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08108108108108103, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08181818181818179, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08256880733944949, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08333333333333337, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08411214953271029, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08490566037735847, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08571428571428574, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08653846153846156, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08737864077669899, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08823529411764708, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08910891089108908, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.08999999999999997, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09090909090909094, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09183673469387754, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09278350515463918, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09473684210526312, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.0957446808510638, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09677419354838712, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09782608695652173, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09890109890109888, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.09999999999999998, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.101123595505618, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.10227272727272729, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.10344827586206895, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.10465116279069764, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.10588235294117643, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1071428571428571, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.10843373493975905, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1097560975609756, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.11111111111111116, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.11250000000000004, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.11392405063291144, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.11538461538461542, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.11688311688311692, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.11842105263157898, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.12, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1216216216216216, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.12328767123287676, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.12676056338028174, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.12857142857142856, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.13043478260869568, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.13235294117647056, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.13432835820895528, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.13636363636363635, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1384615384615384, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.140625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1428571428571429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.14516129032258063, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.14754098360655743, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.15000000000000002, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.15254237288135597, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.15517241379310343, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1578947368421053, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1607142857142857, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1636363636363637, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.16666666666666663, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.16981132075471694, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.17307692307692313, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.17647058823529416, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.18000000000000005, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.18367346938775508, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.1875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.19148936170212771, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.19565217391304346, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.19999999999999996, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8043478260869565, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8085106382978723, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8163265306122449, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.82, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8235294117647058, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8269230769230769, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8301886792452831, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8333333333333334, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8363636363636363, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8392857142857143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8421052631578947, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8448275862068966, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.847457627118644, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.85, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8524590163934426, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8548387096774194, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8571428571428571, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.859375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8615384615384616, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8636363636363636, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8656716417910447, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8676470588235294, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8695652173913043, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8714285714285714, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8732394366197183, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8767123287671232, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8783783783783784, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.88, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.881578947368421, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8831168831168831, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8846153846153846, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8860759493670886, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8888888888888888, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8902439024390244, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.891566265060241, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8928571428571429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8941176470588236, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8953488372093024, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.896551724137931, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.8977272727272727, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.898876404494382, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9010989010989011, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9021739130434783, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9032258064516129, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9042553191489362, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9052631578947369, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.90625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9072164948453608, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9081632653061225, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9090909090909091, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.91, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9108910891089109, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9117647058823529, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.912621359223301, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9134615384615384, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9142857142857143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9711538461538461, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9712460063897763, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9713375796178344, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9714285714285714, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9715189873417721, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9716088328075709, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9716981132075472, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9717868338557993, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.971875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9719626168224299, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9720496894409938, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9721362229102167, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9722222222222222, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9723076923076923, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9723926380368099, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9724770642201835, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9725609756097561, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9726443768996961, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9727272727272728, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.972809667673716, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9728915662650602, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.972972972972973, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9730538922155688, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9731343283582089, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9732142857142857, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.973293768545994, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9733727810650887, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9734513274336283, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9735294117647059, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9736070381231672, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9736842105263158, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9737609329446064, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9738372093023255, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9739130434782609, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9739884393063584, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9740634005763689, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9741379310344828, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9742120343839542, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9742857142857143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9743589743589743, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9744318181818182, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9745042492917847, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9745762711864406, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9746478873239437, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9747191011235955, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9747899159663865, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9748603351955307, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9749303621169917, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.975, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9750692520775623, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9751381215469613, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9752066115702479, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9752747252747253, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9753424657534246, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9754098360655737, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9754768392370572, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9755434782608695, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.975609756097561, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9756756756756757, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9757412398921833, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9758064516129032, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9758713136729222, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9759358288770054, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.976, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.976063829787234, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9761273209549072, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9761904761904762, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9762532981530343, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9763157894736842, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9763779527559056, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9764397905759162, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9765013054830287, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9765625, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9766233766233766, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9766839378238342, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9767441860465116, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9768041237113402, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9768637532133676, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9769230769230769, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9769820971867008, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9770408163265306, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9770992366412213, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9771573604060914, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9772151898734177, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9772727272727273, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9773299748110831, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9773869346733668, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9774436090225563, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9775, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9775561097256857, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9776119402985075, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9776674937965261, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9777227722772277, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9777777777777777, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9778325123152709, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9778869778869779, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9779411764705882, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9779951100244498, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9780487804878049, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9781021897810219, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9781553398058253, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9782082324455206, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9782608695652174, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9783132530120482, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9783653846153846, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9784172661870504, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9784688995215312, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9785202863961814, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9785714285714285, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9786223277909739, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9786729857819905, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9787234042553191, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9787735849056604, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9788235294117648, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9788732394366197, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9789227166276346, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9789719626168224, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9790209790209791, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9790697674418605, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9791183294663574, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9791666666666666, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9792147806004619, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9792626728110599, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9793103448275862, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9793577981651376, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9794050343249427, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9794520547945206, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.979498861047836, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9795454545454545, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9795918367346939, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9796380090497737, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9796839729119639, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9797297297297297, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9797752808988764, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9798206278026906, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9798657718120806, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9799107142857143, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9799554565701559, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.98, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9800443458980045, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9800884955752213, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9801324503311258, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9801762114537445, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9802197802197802, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9802631578947368, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9803063457330415, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.980349344978166, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9804347826086957, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9804772234273319, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9805194805194806, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.980561555075594, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9806034482758621, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9806451612903225, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.98068669527897, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9807280513918629, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9807692307692307, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9808102345415778, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9808510638297873, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9808917197452229, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9809322033898306, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9809725158562368, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9810126582278481, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9810526315789474, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9810924369747899, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9811320754716981, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9811715481171548, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9812108559498957, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.98125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9812889812889813, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9813278008298755, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9813664596273292, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.981404958677686, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9814432989690721, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9814814814814815, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9815195071868583, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9815573770491803, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9815950920245399, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9816326530612245, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9816700610997964, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9817073170731707, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9817444219066938, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9817813765182186, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9818181818181818, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9818548387096774, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9818913480885312, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9819277108433735, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9819639278557114, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.982, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9820359281437125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9820717131474104, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9821073558648111, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9821428571428571, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9821782178217822, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9822134387351779, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9822485207100592, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9822834645669292, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9823182711198428, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9823529411764705, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9823874755381604, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.982421875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9824561403508771, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9824902723735408, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9825242718446602, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9825581395348837, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9825918762088974, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9826254826254827, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9826589595375722, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9826923076923076, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.982725527831094, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9827586206896551, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.982791586998088, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.982824427480916, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9828571428571429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9828897338403042, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9829222011385199, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9829545454545454, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9829867674858223, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9830188679245283, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9830508474576272, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9830827067669173, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9831144465290806, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9831460674157303, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.983177570093458, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9832089552238806, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9832402234636871, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.983271375464684, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9833024118738405, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9833333333333333, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9833641404805915, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9833948339483395, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9834254143646409, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9834558823529411, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9834862385321101, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9835164835164835, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9835466179159049, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9835766423357665, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9836065573770492, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9836363636363636, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9836660617059891, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9836956521739131, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9837251356238698, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.983754512635379, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9837837837837838, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9838420107719928, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9838709677419355, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9838998211091234, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9839285714285714, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.983957219251337, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9839857651245552, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9840142095914742, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9840425531914894, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.984070796460177, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9840989399293286, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9841269841269841, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9841549295774648, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.984182776801406, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9842105263157894, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9842381786339754, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9842657342657343, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9842931937172775, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9843205574912892, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9843478260869565, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.984375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9844020797227037, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9844290657439446, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9844559585492227, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9844827586206897, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9845094664371773, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9845360824742269, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9845626072041166, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9845890410958904, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9846153846153847, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.984641638225256, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9846678023850085, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9846938775510204, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9847198641765704, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9847457627118644, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9847715736040609, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9847972972972973, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.984822934232715, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9848484848484849, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.984873949579832, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9848993288590604, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9849246231155779, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9849498327759197, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9849749582637729, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.985, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9850249584026622, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9850498338870431, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9850746268656716, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9850993377483444, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9851239669421488, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9851485148514851, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.985172981878089, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9851973684210527, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9852216748768473, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9852459016393442, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9852700490998363, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9852941176470589, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9853181076672104, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9853420195439739, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9853658536585366, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9853896103896104, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9854132901134521, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9854368932038835, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9854604200323102, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9854838709677419, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9855072463768116, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9855305466237942, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.985553772070626, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9855769230769231, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9856, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9856230031948882, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9856459330143541, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9856687898089171, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.985691573926868, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9857142857142858, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9857369255150554, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9857594936708861, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.985781990521327, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9858044164037855, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9858267716535433, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9858490566037735, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9858712715855573, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9858934169278997, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9859154929577465, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9859375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9859594383775351, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.985981308411215, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9860031104199067, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9860248447204969, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986046511627907, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9860681114551083, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9860896445131375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9861111111111112, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9861325115562404, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9861538461538462, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9861751152073732, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9861963190184049, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9862174578866769, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9862385321100917, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9862595419847329, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9862804878048781, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9863013698630136, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986322188449848, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9863429438543247, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9863636363636363, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9863842662632375, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986404833836858, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9864253393665159, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9864457831325302, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9864661654135338, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9864864864864865, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9865067466266867, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9865269461077845, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9865470852017937, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9865671641791045, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9865871833084948, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9866071428571429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986627043090639, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9866468842729971, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9866666666666667, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9866863905325444, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9867060561299852, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9867256637168141, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9867452135493373, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986764705882353, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986784140969163, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9868035190615836, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.986822840409956, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9868421052631579, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9868613138686131, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9868804664723032, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9868995633187773, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9869186046511628, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9869375907111756, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9869565217391304, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9869753979739508, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9869942196531792, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.987012987012987, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9870317002881844, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9870503597122302, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9870689655172413, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9870875179340028, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9871060171919771, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9871244635193133, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9871428571428571, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9871611982881597, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9871794871794872, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9871977240398293, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9872159090909091, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9872340425531915, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9872521246458924, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9872701555869873, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9872881355932204, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9873060648801129, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9873239436619718, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9873417721518988, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9873595505617978, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9873772791023843, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9873949579831933, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9874125874125874, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9874301675977654, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9874476987447699, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9874651810584958, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9874826147426982, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9875173370319001, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9875346260387812, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9875518672199171, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9875690607734806, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9875862068965517, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.987603305785124, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9876203576341128, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9876373626373627, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9876543209876543, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9876712328767123, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.987688098495212, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9877049180327869, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9877216916780355, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9877384196185286, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9877551020408163, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9877717391304348, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9877883310719131, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9878048780487805, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9878213802435724, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9878378378378379, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9878542510121457, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9878706199460916, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9878869448183042, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9879032258064516, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9879194630872483, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9879356568364611, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9879518072289156, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9879679144385026, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9879839786381842, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9880159786950732, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988031914893617, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9880478087649402, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9880636604774535, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9880794701986755, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9880952380952381, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988110964332893, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9881266490765171, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9881422924901185, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9881578947368421, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988173455978975, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9881889763779528, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9882044560943644, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9882198952879581, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9882352941176471, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9882506527415144, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9882659713168188, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.98828125, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988296488946684, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9883116883116884, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9883268482490273, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9883419689119171, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9883570504527813, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9883720930232558, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9883870967741936, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884020618556701, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884169884169884, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884318766066839, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884467265725289, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884615384615385, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884763124199744, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9884910485933504, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9885057471264368, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9885204081632653, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9885350318471338, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9885496183206107, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.98856416772554, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9885786802030457, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9885931558935361, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9886075949367089, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988621997471555, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9886363636363636, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9886506935687264, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9886649874055415, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9886792452830189, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9886934673366834, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9887076537013801, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9887218045112782, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9887359198998749, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.98875, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9887640449438202, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9887780548628429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9887920298879203, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9888059701492538, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9888198757763975, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988833746898263, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9888475836431226, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9888613861386139, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9888751545117429, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9888888888888889, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9889025893958077, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9889162561576355, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.988929889298893, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 0.9889434889434889, )
paddle.Tensor.__rmul__(Tensor([8388608, 512],"float32"), 7.568670356258612, )
paddle.Tensor.__rmul__(Tensor([8388609, 256],"float64"), 19.05, )
paddle.Tensor.__rmul__(Tensor([8471336, 3, 13, 13, 1],"float32"), 1.0, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.20454545454545459, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2093023255813954, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2142857142857143, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2195121951219512, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.22499999999999998, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.23076923076923073, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.23684210526315785, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2432432432432432, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2571428571428571, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2647058823529411, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.2727272727272727, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.28125, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.29032258064516125, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.30000000000000004, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.31034482758620685, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.3214285714285714, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.33333333333333337, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.6666666666666666, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.6785714285714286, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.6896551724137931, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7096774193548387, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.71875, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7272727272727273, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7352941176470589, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7428571428571429, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7567567567567568, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7631578947368421, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7692307692307693, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.775, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7804878048780488, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7857142857142857, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7906976744186046, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 0.7954545454545454, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 1, )
paddle.Tensor.__rmul__(Tensor([858993459, 5],"float32"), 5, )
paddle.Tensor.__rmul__(Tensor([85899346, 50],"float32"), 0.12566370614359174, )
paddle.Tensor.__rmul__(Tensor([87652394, 1, 7, 7],"float32"), 0.9999, )
paddle.Tensor.__rmul__(Tensor([87652394, 1, 7, 7],"float32"), 1e+30, )
paddle.Tensor.__rmul__(Tensor([87652394, 1, 7, 7],"float32"), -65504.0, )
paddle.Tensor.__rmul__(Tensor([87652394, 1, 7, 7],"float32"), 9.999999999998899e-05, )
paddle.Tensor.__rmul__(Tensor([89478486, 48, 1, 1],"float32"), 0.006040268456375841, )
paddle.Tensor.__rmul__(Tensor([89478486, 48, 1, 1],"float32"), 0.9939597315436242, )
paddle.Tensor.__rmul__(Tensor([894785, 3, 40, 40, 1],"float32"), 1.05, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.000499825033328626, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0009994002166083156, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.001498725674732886, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0019978015325336543, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0024966279147796613, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.002995204946177337, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0034935327513711664, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.003991611454942915, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.004489441181412402, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0049870220552369485, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.005484354200811821, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.005981437742470117, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0064782728044826595, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.0069748595110582165, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.007471197986343497, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.007967288354423048, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.008463130739319582, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9915368692606804, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9920327116455769, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9925288020136565, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9930251404889417, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9935217271955173, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9940185622575299, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9945156457991882, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9950129779447631, )
paddle.Tensor.__rmul__(Tensor([932068, 512, 3, 3],"float32"), 0.9955105588185876, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[2,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], kernel_size=list[2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[2,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], kernel_size=list[2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[2,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], kernel_size=list[2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], kernel_size=list[2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([14608733, 3, 7, 7],"float64"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([14608733, 3, 7, 7],"float64"), output_size=list[3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 21913099, 7, 7],"float64"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 21913099, 7, 7],"float64"), output_size=list[3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float16"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), kernel_size=2, output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), kernel_size=list[2,2,], output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[2,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), return_mask=False, output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 51130564, 7],"float64"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 51130564, 7],"float64"), output_size=list[3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float16"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), kernel_size=2, output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), kernel_size=list[2,2,], output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[2,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), return_mask=False, output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 51130564],"float64"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 3, 7, 51130564],"float64"), output_size=list[3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float16"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), kernel_size=2, output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), kernel_size=list[2,2,], output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[2,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float16"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), kernel_size=2, output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), kernel_size=list[2,2,], output_size=list[3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[2,3,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=list[2,2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[2,3,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,3,3,], kernel_size=list[2,2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[2,3,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[3,3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[3,3,3,], kernel_size=list[2,2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[3,3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[2,3,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=list[2,2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=5, kernel_size=None, random_u=0.5, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[2,3,5,], kernel_size=None, random_u=0.7, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=2, random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=list[2,2,2,], random_u=0.6, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[3,3,3,], kernel_size=None, random_u=0.3, return_mask=False, name=None, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float16"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), kernel_size=2, output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), kernel_size=list[2,2,2,], output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[2,3,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[None,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float16"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), kernel_size=2, output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), kernel_size=list[2,2,2,], output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[2,3,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[None,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float16"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), kernel_size=2, output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), kernel_size=list[2,2,2,], output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[2,3,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[3,3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[3,None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 14608733],"float32"), output_size=list[None,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 7304367],"float64"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7, 7304367],"float64"), output_size=list[3,3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7304367, 7],"float64"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 7304367, 7],"float64"), output_size=list[3,3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7304367, 7, 7],"float64"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7304367, 7, 7],"float64"), output_size=list[3,3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3130443, 7, 7, 7],"float64"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3130443, 7, 7, 7],"float64"), output_size=list[3,3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float16"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), kernel_size=2, output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), kernel_size=list[2,2,2,], output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[2,3,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[3,3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[3,None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 6260886, 7, 7, 7],"float32"), output_size=list[None,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2086962, 3, 7, 7, 7],"float64"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2086962, 3, 7, 7, 7],"float64"), output_size=list[3,3,3,], random_u=None, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float16"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), kernel_size=2, output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), kernel_size=list[2,2,2,], output_size=list[3,3,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=5, random_u=0.5, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[2,3,5,], random_u=0.7, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[3,3,3,], random_u=0.3, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[3,3,None,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[3,None,3,], random_u=0.6, )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([4173924, 3, 7, 7, 7],"float32"), output_size=list[None,3,3,], random_u=0.6, )
paddle.nn.functional.gelu(Tensor([1, 1, 4294967295],"float16"), )
paddle.nn.functional.gelu(Tensor([1, 1, 4294967295],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 1, 4294967295],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 1, 4294967295],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 1, 4294967295],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 1024, 4194304],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 1048576, 4096],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 1048576, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 1048576, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 11, 390451573],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 116080198, 37],"float16"), )
paddle.nn.functional.gelu(Tensor([1, 116080198, 37],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 12484, 14, 16, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 13, 330382100],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 13316, 14, 15, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 13316, 14, 15, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 134217728, 32],"float16"), )
paddle.nn.functional.gelu(Tensor([1, 134217728, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 1398102, 3072],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 1398102, 3072],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 14267, 14, 14, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 14267, 14, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 10923, 16, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 11651, 15, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 11651, 15, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 12484, 14, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 12484, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 12484, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 12484, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 14, 1369569],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 14, 1369569],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 15, 1278265],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 15, 1278265],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 14, 16, 1198373],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 2097152, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 2796203, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 33554432, 128],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 4194304, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 536870912, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 8388608, 512],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 838861, 5120],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([10, 429496730],"float32"), )
paddle.nn.functional.gelu(Tensor([1004, 4277856],"float32"), )
paddle.nn.functional.gelu(Tensor([1007, 4265112],"float32"), )
paddle.nn.functional.gelu(Tensor([1008, 4260881],"float32"), )
paddle.nn.functional.gelu(Tensor([1024, 1024, 4096],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1024, 1024, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([1048576, 1, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1048576, 1, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([10700, 128, 56, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([11, 390451573],"float32"), False, )
paddle.nn.functional.gelu(Tensor([11, 390451573],"float32"), True, )
paddle.nn.functional.gelu(Tensor([116080198, 1, 37],"float16"), )
paddle.nn.functional.gelu(Tensor([116080198, 1, 37],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([116080198, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([124, 1024, 4833, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1024, 7, 4833],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 11045, 56, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 12, 12, 240534],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 12, 705, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 128, 4833, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 128, 56, 4833],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1280, 1, 27061],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1280, 27061, 1],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 14, 14, 176719],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 14, 1611, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 1611, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 34636834, 1, 1],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 705, 12, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 706875, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([13, 20648882, 16],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([13, 7, 47197443],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([134217728, 1, 32],"float16"), )
paddle.nn.functional.gelu(Tensor([134217728, 1, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([134217728, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([1366, 1024, 3072],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1398102, 1, 3072],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([14267, 14, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1431655765, 3],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([1431655765, 3],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1431655765, 3],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([1431655765, 3],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 1024, 262144],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([16, 16, 131073, 64],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 131073, 64],"float64"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 262144, 64],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 262144, 64],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 262144, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 262144, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 131073],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 131073],"float64"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 262144],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 262144],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 262144],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 16, 64, 262144],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 32769, 64, 64],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 32769, 64, 64],"float64"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 65536, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([16, 65536, 64, 64],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 65536, 64, 64],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 65536, 64, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([16, 65536, 64, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([178956971, 3, 4],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 1073741825],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 1073741825],"float64"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 2147483648],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 2147483648],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 2147483648],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 2147483648],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 268435457, 4],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 3, 357913942],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 3, 715827883],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 3, 715827883],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 536870912, 4],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2, 536870912, 4],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([2097152, 1, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([214748365, 20],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([238609295, 3, 3],"float64"), True, None, )
paddle.nn.functional.gelu(Tensor([252645135, 17],"float32"), False, )
paddle.nn.functional.gelu(Tensor([252645135, 17],"float32"), True, )
paddle.nn.functional.gelu(Tensor([2796203, 1, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([3, 1431655765],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([3, 238609295, 3],"float64"), True, None, )
paddle.nn.functional.gelu(Tensor([3, 3, 238609295],"float64"), True, None, )
paddle.nn.functional.gelu(Tensor([30, 200, 715828],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([30, 200, 715828],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([30, 3579140, 40],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([30, 3579140, 40],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([32769, 16, 64, 64],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([32769, 16, 64, 64],"float64"), approximate=True, )
paddle.nn.functional.gelu(Tensor([33554432, 1, 128],"float32"), )
paddle.nn.functional.gelu(Tensor([3355444, 1280, 1, 1],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([357913942, 3, 4],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([357913942, 3, 4],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([38347923, 7, 16],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([4194304, 1, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4294967295],"float32"), )
paddle.nn.functional.gelu(Tensor([536870912, 1, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([536871, 200, 40],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([536871, 200, 40],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([65536, 16, 64, 64],"float16"), approximate=False, )
paddle.nn.functional.gelu(Tensor([65536, 16, 64, 64],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([65536, 16, 64, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([65536, 16, 64, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([715827883, 3],"float64"), approximate=False, )
paddle.nn.functional.gelu(Tensor([715827883, 3],"float64"), approximate=True, )
paddle.nn.functional.gelu(Tensor([7282, 12, 12, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([762601, 11, 512],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([781, 16, 14, 16, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([80660, 13, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([833, 16, 14, 15, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([833, 16, 14, 15, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([838861, 1, 5120],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([85599, 1024, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([892, 16, 14, 14, 1536],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([892, 16, 14, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(x=Tensor([238609295, 3, 3],"float64"), )
paddle.nn.functional.gelu(x=Tensor([238609295, 3, 3],"float64"), approximate=True, )
paddle.nn.functional.gelu(x=Tensor([3, 238609295, 3],"float64"), )
paddle.nn.functional.gelu(x=Tensor([3, 238609295, 3],"float64"), approximate=True, )
paddle.nn.functional.gelu(x=Tensor([3, 3, 238609295],"float64"), )
paddle.nn.functional.gelu(x=Tensor([3, 3, 238609295],"float64"), approximate=True, )
paddle.nn.functional.gelu(x=Tensor([3, 3, 477218589],"float32"), )
paddle.nn.functional.gelu(x=Tensor([3, 477218589, 3],"float32"), )
paddle.nn.functional.gelu(x=Tensor([477218589, 3, 3],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 419431],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 116509, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 12, 349526],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 123362, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 131072, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 161320, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 2097152],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 11184811, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 16519105, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 59652324, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 63161284, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 67108864, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10923, 1024, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([16132, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([178956971, 3, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([178956971, 4, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 134217729, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 178956971, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 268435457, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 178956971],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 89478486],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 44739243, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 357913942],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 44739243, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 89478486, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 357913942, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 134217729, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 268435457],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 44739243],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 44739243, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 89478486],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 67108865, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 67108865, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 89478486, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([44739243, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([44739243, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([58255, 1024, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([61681, 1024, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([65536, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([89478486, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([89478486, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 1, 35791395],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 35791395, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 4294967295, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 480, 1, 8947849],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 480, 8947849, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 672, 1, 6391321],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 672, 6391321, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 72, 1, 59652324],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 72, 59652324, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 960, 1, 4473925],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 960, 4473925, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([35791395, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4473925, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([59652324, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([6391321, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8947849, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardtanh(Tensor([238609295, 3, 3],"float64"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 238609295, 3],"float64"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 238609295],"float64"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([238609295, 3, 3],"float64"), max=-3.3, min=3.3, )
paddle.nn.functional.hardtanh(x=Tensor([3, 238609295, 3],"float64"), max=-3.3, min=3.3, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 238609295],"float64"), max=-3.3, min=3.3, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 21474837],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 42949673, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655765, 3],"float32"), Tensor([3, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([238609295, 3, 3],"float64"), Tensor([238609295, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([238609295, 3, 3],"float64"), Tensor([4, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float32"), Tensor([3, 1431655765],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 178956971, 3],"float64"), Tensor([4, 178956971, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 178956971, 3],"float64"), Tensor([4, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 178956971],"float64"), Tensor([4, 3, 178956971],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 178956971],"float64"), Tensor([4, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3],"float64"), Tensor([238609295, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3],"float64"), Tensor([4, 178956971, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3],"float64"), Tensor([4, 3, 178956971],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.instance_norm(Tensor([1048576, 32, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([10737419, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1073742, 100, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1431656, 100, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 21474837],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 2147484, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 3579140],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([2147483649],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float64"), None, None, Tensor([2147483649],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 7158279],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 2684355],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([2147483649],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float64"), None, None, Tensor([2147483649],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5368710],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4294968, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 107374183, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 143165577, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 16777216, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 2147483648],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 32, 67108864],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 536870912, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 53687092, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 71582789, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2147484, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2863312, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([33554432, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([4, 100, 10737419],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 16],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 2684355, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 2684355, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 2684355],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 2684355],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float16"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 1073741824],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108864, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108864, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108864, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([42949673, 100],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([42949673, 100],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([65536, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 262144, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 262144, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 524288],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 64],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([178956971, 2, 2, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([178956971, 2, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([178956971, 2, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 1, 1073741825],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 178956971, 2, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 178956971, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 178956971, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 178956971, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 178956971, 3],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 178956971, 3],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 268435457],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 268435457],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 268435457],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870912],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([715827883, 1, 3],"float64"), )
paddle.nn.functional.interpolate(Tensor([1, 1, 134217728, 32],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 16, 268435456],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 16777216, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 176, 24403224],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 184, 23342214],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 192, 22369622],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 22369622, 192],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 23342214, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 24403224, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 256, 16777216],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 268435456, 16],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 32, 134217728],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 4194304, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 5382165, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 5382165, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 5382165, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 5382165, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 5382165, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 5592406, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 7456541],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 7456541],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 7456541],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 7456541],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 7456541],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 5835554, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 6100806, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 64, 67108864],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 6710887],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 6710887],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 6710887],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 6710887],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 6710887],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 67108864, 64],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 6710887, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 686, 6260886],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 704, 6100806],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 6074919],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 6074919],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 6074919],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 6074919],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 736, 5835554],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 7456541, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 5592406],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 5592406],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 5592406],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 5592406],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 5592406],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 5592406],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 8947849, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 8947849, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 8947849, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 8947849, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 100, 176, 244033],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 184, 233423],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 233423, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 244033, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 55925, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 58356, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 61009, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 704, 61009],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 736, 58356],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 768, 55925],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 10486, 640, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 10547, 707, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 10547, 707, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 10547, 707, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 10547, 707, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1073741824, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 1073741824, 2, 2],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1073741824, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 1073741824, 2, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 10737419, 20, 20],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 1082402, 62, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1082402, 62, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1082402, 62, 64],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1101274, 50, 78],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 1130255, 50, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 1130255, 76, 50],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 116320, 181, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 116509, 192, 192],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 11897417, 19, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 119304648, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 119304648, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 1263226, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 126860, 184, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1, 33554432],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1, 33554432],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 100, 335545],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1048576, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1048576, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 1048576, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 11184811, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 128, 262144],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1458889, 23],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 152, 220753],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 16, 2097152],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 16, 2097152],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 16777216, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 16777216, 2],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 2, 16777216],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 2, 16777216],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 215093, 156],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 220753, 152],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 23, 1458889],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 246724, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 262144, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 3, 11184811],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 32, 1048576],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 33554432, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 33554432, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 33554432],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 128, 33554432],"float32"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 128, 335545, 100],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 364723, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 4, 8388608],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 5592406, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 6, 5592406],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 8388608, 4],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 92, 364723],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 131072, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 13256072, 18, 18],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 138655, 176, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 13982, 640, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 13982, 640, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 13982, 640, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 13982, 640, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 14514, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 146576, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 160, 1220162, 22],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 1278265, 21],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 1342178, 20],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 1412819, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 1491309, 18],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 18, 1491309],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 19, 1412819],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 20, 1342178],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 21, 1278265],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 22, 1220162],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 16519105, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 16777216, 16, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 16777216, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 16777216, 16, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 16777216, 16, 16],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 17388532, 13, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 17388532, 19, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 19, 128, 1766023],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 128, 1766023],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 1766023, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 1766023, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 256, 883012],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 256, 883012],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 64, 3532046],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 883012, 256],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 883012, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 883012, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 100, 223697],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 104, 215093],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 108, 207127],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 112, 199729],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 116, 192842],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 1398102, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 16, 1398102],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 192842, 116],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 199729, 112],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 207127, 108],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 215093, 104],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 22369622],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 22369622],"float32"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 223697, 100],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19434242, 13, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 2, 124, 17318417],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 124, 17318417],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 16777216],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 16777216],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 16777216],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 16777216, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 16777216, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 16777216, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 16777216, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 16777216, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 33554432, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 33554432, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 3947581, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 544, 3947581],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 62, 34636834],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 64, 33554432],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 200, 39476, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 200, 544, 39476],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2097152, 32, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 21913099, 14, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 16777216],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 16777216],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 16777216],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 16777216],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 100, 167773],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1048576, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 1048576, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 107547, 156],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 110377, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 123362, 136],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 124, 135301],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 128, 131072],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 128, 131072],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 1290556, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 1290556],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 1290556],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 1290556],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 131072, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 131072, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 16, 1048576],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 16, 1048576],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 16777216, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 16777216, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 16777216, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 16777216, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 19, 883012],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 190651, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 199729, 84],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 200, 83887],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 209716, 80],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 262144, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 262144, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 262144, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 262144, 64],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 262144, 64],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 262144, 64],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 304, 55189],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 31, 541201],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 524288],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 524288],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 524288, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 524288, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 524288, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 53774, 312],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 55189, 304],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 61681, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 62, 270601],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 62, 270601],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 262144],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 262144],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 262144],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 262144],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 262144],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 838861, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 83887, 200],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 88, 190651],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 883012, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 986896, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 100, 166472],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 100, 166472],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 106713, 156],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 106713, 156],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 109521, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 109521, 152],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 122406, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 122406, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 152, 109521],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 152, 109521],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 166472, 100],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 166472, 100],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 213426, 78],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 219042, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 244812, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 665887],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 665887],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 332944, 50],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 38, 438084],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 38, 438084],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 426851, 39],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 426851, 39],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 438084, 38],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 438084, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 489623, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 489623, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 50, 332944],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 665887, 25],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 665887, 25],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 76, 219042],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 262144, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 262144, 128, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 262144, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 262144, 128, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 262144, 128, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 262144, 128, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 16],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 16],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 16],"float32"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 16],"float32"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 4, 4],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 270601, 124, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 270601, 124, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 275319, 100, 156],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 275319, 100, 156],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 275319, 100, 156],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 275319, 100, 156],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 282564, 100, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 282564, 100, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 282564, 100, 152],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 282564, 100, 152],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 282564, 152, 100],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 282564, 152, 100],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 282564, 152, 100],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 181, 7909701],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 182, 7866241],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 200, 7158279],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 212, 6753094],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 22369622, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 22369622, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 227, 6306854],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 235, 6092153],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 250, 5726624],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 256, 5592406],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 28, 51130564],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 5113057],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 5113057],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 374, 3827957],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 4090446, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 4820390, 297],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5113057, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5187159, 276],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5225022, 274],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5506369, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5658719, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 59652324, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 22369622],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 22369622],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 6817409, 210],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 7017921, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 7158279, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 8892272, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 315807, 100, 136],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 315807, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 315807, 100, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 315807, 100, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 319187, 116, 116],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 32, 1, 134217728],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 134217728, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 67108864],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 67108864],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 32, 22369622, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 3, 44739243],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 44739243, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 6, 22369622],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 67108864, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 67108864, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 33554432, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 33554432, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 342393, 112, 112],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 368225, 108, 108],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 38667, 374, 297],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 397094, 104, 104],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 399458, 128, 84],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 4, 1183839, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 4, 800, 1342178],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 4194304, 32, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4194304, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4194304, 32, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4194304, 32, 32],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 429497, 100, 100],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4329605, 31, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 432961, 124, 80],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 43827, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4405095, 25, 39],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 4405095, 25, 39],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 4521019, 25, 38],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 4521019, 25, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 4521019, 38, 25],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 4521019, 38, 25],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 466034, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 477218589, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 477218589, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 5052903, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 5052903, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 507440, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 524288, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 524288, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 54783, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 554619, 88, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 5920, 800, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 6115, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 6391321, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 64, 1048576, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 32, 2097152],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 699051, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 729445, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 92, 729445],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 96, 699051],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 65536, 256, 256],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 65536, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 65536, 256, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 67108864, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 67108864, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 68553, 227, 276],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 68830, 200, 312],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 70295, 235, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 70641, 200, 304],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 70641, 304, 200],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 7282, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 73939, 212, 274],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 768, 14, 399458],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 768, 16, 349526],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 16, 349526],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 174763, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 174763, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 31, 180401],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 32, 174763],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 349526, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 349526, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 399458, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 78952, 200, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 7929, 736, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 8119031, 23, 23],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 81809, 250, 210],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 8388608, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 8388608, 16, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 83887, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 84881, 200, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 8666, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 8873900, 22, 22],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 9345, 576, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 9345, 576, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 9345, 576, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 9345, 576, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 9345, 576, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 9710, 768, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 9710, 768, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 9710, 768, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 9710, 768, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 9710, 768, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 9739155, 21, 21],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1024, 256, 128, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1048576, 1, 64, 64],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1048576, 1024, 2, 2],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([1048576, 256, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([10486, 1, 640, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([10486, 256, 40, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([10486, 256, 40, 40],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([10486, 64, 80, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([10486, 64, 80, 80],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([10486, 64, 80, 80],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([10527, 1, 80, 5100],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([10547, 1, 707, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([10547, 1, 707, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([10547, 1, 707, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([10547, 1, 707, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1068, 258, 100, 156],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1068, 258, 100, 156],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10737419, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 5, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1076, 256, 100, 156],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([10923, 8, 256, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1096, 258, 100, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1096, 258, 100, 152],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1096, 258, 152, 100],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1096, 258, 152, 100],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([110377, 19, 32, 64],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1104, 256, 100, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([11184811, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([11184811, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1118482, 80, 8, 6],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1118482, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1118482, 80, 8, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([116509, 1, 192, 192],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11930465, 3, 6, 10],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1225, 258, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1225, 258, 100, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1234, 256, 100, 136],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([126860, 1, 184, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1269, 100, 184, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([12889, 3, 374, 297],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([131072, 128, 16, 16],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([131072, 128, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([131072, 128, 16, 16],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([131072, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([131072, 2, 128, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([131072, 2, 128, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([131072, 32, 32, 32],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([134217728, 32, 1, 1],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([134217728, 32, 1, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([135301, 2, 124, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([135301, 2, 124, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([13798, 19, 128, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([13798, 19, 128, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([138655, 1, 176, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1387, 100, 176, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1398102, 192, 16],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1398102, 192, 16],"float32"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1398102, 3, 32, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1398102, 64, 8, 6],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([1398102, 64, 8, 6],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([139811, 40, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([13982, 1, 640, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([13982, 1, 640, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([13982, 1, 640, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([13982, 1, 640, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([14514, 64, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([14609, 3, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1480, 4, 800, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([14913081, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([14914, 320, 30, 30],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1561, 256, 128, 84],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([157904, 1, 80, 340],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 157904, 1700],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 3158065, 85],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 52635, 5100],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 789517, 340],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 80, 3355444],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 80, 3355444],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 80, 3355444],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1024, 131072, 2],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 2, 131072],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 32768, 8],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 4, 65536],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 65536, 4],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 8, 32768],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 128, 128, 16384],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 128, 16384, 128],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 128, 32, 65536],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 128, 65536, 32],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1398102, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 1398102, 16, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 160, 279621, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 4, 419431],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 559241, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 8, 209716],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 16384, 128, 128],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 16777216, 4, 4],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 167773, 40, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 167773, 40, 40],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 1974, 80, 1700],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 2, 2097152, 64],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([16, 2, 64, 2097152],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([16, 22369622, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 22369622, 4, 3],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 22369622, 4, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 256, 26215, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 256, 26215, 40],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 256, 40, 26215],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 256, 40, 26215],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 262144, 32, 32],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 349526, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 39476, 80, 85],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 40, 1118482, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 1118482, 6],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 419431],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 419431],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 2236963, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 279621, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 32, 209716],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 4, 1677722],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 559241, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 559241, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 8, 838861],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 8, 838861],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 4194304, 8, 8],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 512, 20, 26215],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 512, 20, 26215],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 512, 26215, 20],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 512, 26215, 20],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 5592406, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 5592406, 8, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 5592406, 8, 6],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 65536, 64, 64],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([16, 658, 80, 5100],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 67108864, 2, 2],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 671089, 20, 20],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 671089, 20, 20],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 80, 1118482, 3],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 80, 16, 209716],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 279621, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 4, 838861],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 80, 559241, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 559241, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 80, 8, 419431],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 8, 419431],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 9869, 80, 340],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([160, 139811, 16, 12],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 139811, 16, 12],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 139811, 6],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 139811, 6],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 16, 52429],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 16, 52429],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 69906, 12],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 69906, 12],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 8, 104858],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 8, 104858],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 559241, 8, 6],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 559241, 8, 6],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 559241, 8, 6],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 559241, 8, 6],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 64, 69906, 6],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 64, 69906, 6],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 64, 8, 52429],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 64, 8, 52429],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([16384, 256, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([16384, 256, 32, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([16384, 64, 64, 64],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1663, 192, 116, 116],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16777216, 1, 16, 16],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([16777216, 256, 1, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16777216, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16777216, 256, 1, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16777216, 256, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16777216, 256, 1, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16777216, 256, 1, 1],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([167773, 64, 20, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([167773, 64, 20, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([167773, 64, 20, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([167773, 64, 20, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([16913, 256, 31, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1692, 256, 124, 80],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([17075, 258, 25, 39],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([17075, 258, 25, 39],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([17524, 258, 25, 38],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([17524, 258, 25, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([17524, 258, 38, 25],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([17524, 258, 38, 25],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1784, 192, 112, 112],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([18261, 3, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1918, 192, 108, 108],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([19585, 258, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([19585, 258, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 1073742],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10737419],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2684355, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.zeros_like(Tensor([1, 1, 1, 4294967295],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 1, 1, 4294967295],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 1, 4294967295, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 1, 4294967295, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 128, 5, 6710887],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 128, 6710887, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 160, 5, 5368710],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 160, 5368710, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 171798692, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 192, 3, 7456541],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 192, 7456541, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 2147483649],"int64"), dtype="float16", )
paddle.zeros_like(Tensor([1, 2147483649],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([1, 2147483649],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([1, 4294967295, 1, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 4294967295, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 477218589, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1073741825, 2],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([107374183, 20],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([1073742, 160, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([126322568, 17],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([1342178, 128, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([14, 153391690],"int64"), dtype=Dtype(float32), )
paddle.zeros_like(Tensor([143165577, 15],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([165191050, 13],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([195225787, 11],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([2, 3, 8, 89478486],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2, 3, 89478486, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2, 33554432, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2147483649, 1],"int64"), dtype="float16", )
paddle.zeros_like(Tensor([2147483649, 1],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([2147483649, 1],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([2147483649],"int64"), "int64", )
paddle.zeros_like(Tensor([2147483649],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([2147483649],"int64"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([22369622, 3, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2485514, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3, 178956971, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 28, 51130564],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 51130564, 28],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 715827883],"float64"), type(numpy.bool_), )
paddle.zeros_like(Tensor([3, 715827883],"float64"), type(numpy.float32), )
paddle.zeros_like(Tensor([3, 715827883],"float64"), type(numpy.float64), )
paddle.zeros_like(Tensor([3, 715827883],"float64"), type(numpy.int32), )
paddle.zeros_like(Tensor([3, 715827883],"float64"), type(numpy.int64), )
paddle.zeros_like(Tensor([3, 8, 178956971],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([306783379, 7],"int64"), dtype=Dtype(float32), )
paddle.zeros_like(Tensor([4294967295, 1, 1, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([4294967295, 1, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4294967295],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4294967295],"float32"), dtype="int32", )
paddle.zeros_like(Tensor([4294967295],"int32"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([429496730, 5],"int64"), dtype="int64", )
paddle.zeros_like(Tensor([536870913, 4],"float64"), type(numpy.bool_), )
paddle.zeros_like(Tensor([536870913, 4],"float64"), type(numpy.float32), )
paddle.zeros_like(Tensor([536870913, 4],"float64"), type(numpy.float64), )
paddle.zeros_like(Tensor([536870913, 4],"float64"), type(numpy.int32), )
paddle.zeros_like(Tensor([536870913, 4],"float64"), type(numpy.int64), )
paddle.zeros_like(Tensor([5478275, 28, 28],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([67108864, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([715827883, 3],"int64"), dtype="int64", )
