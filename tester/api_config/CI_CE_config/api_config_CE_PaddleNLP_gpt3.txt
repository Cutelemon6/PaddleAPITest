paddle.Tensor.__add__(Tensor([1, 1, 1024],"float32"), Tensor([1, 1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1024, 1024],"float16"), Tensor([1, 1024, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([1, 13, 1024],"float32"), Tensor([1, 13, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 100],"float32"), Tensor([1, 100],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 101],"float32"), Tensor([1, 101],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 102],"float32"), Tensor([1, 102],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 103],"float32"), Tensor([1, 103],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 104],"float32"), Tensor([1, 104],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 105],"float32"), Tensor([1, 105],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 106],"float32"), Tensor([1, 106],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 107],"float32"), Tensor([1, 107],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 108],"float32"), Tensor([1, 108],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 109],"float32"), Tensor([1, 109],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 110],"float32"), Tensor([1, 110],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 111],"float32"), Tensor([1, 111],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 112],"float32"), Tensor([1, 112],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 113],"float32"), Tensor([1, 113],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 114],"float32"), Tensor([1, 114],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 115],"float32"), Tensor([1, 115],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 116],"float32"), Tensor([1, 116],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 117],"float32"), Tensor([1, 117],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 118],"float32"), Tensor([1, 118],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 119],"float32"), Tensor([1, 119],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 120],"float32"), Tensor([1, 120],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 121],"float32"), Tensor([1, 121],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 122],"float32"), Tensor([1, 122],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 123],"float32"), Tensor([1, 123],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 124],"float32"), Tensor([1, 124],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 125],"float32"), Tensor([1, 125],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 126],"float32"), Tensor([1, 126],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 127],"float32"), Tensor([1, 127],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 128],"float32"), Tensor([1, 128],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 129],"float32"), Tensor([1, 129],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 130],"float32"), Tensor([1, 130],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 131],"float32"), Tensor([1, 131],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 132],"float32"), Tensor([1, 132],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 133],"float32"), Tensor([1, 133],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 134],"float32"), Tensor([1, 134],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 135],"float32"), Tensor([1, 135],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 136],"float32"), Tensor([1, 136],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 137],"float32"), Tensor([1, 137],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 138],"float32"), Tensor([1, 138],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 139],"float32"), Tensor([1, 139],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 140],"float32"), Tensor([1, 140],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 141],"float32"), Tensor([1, 141],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 142],"float32"), Tensor([1, 142],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 143],"float32"), Tensor([1, 143],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 144],"float32"), Tensor([1, 144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 145],"float32"), Tensor([1, 145],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 146],"float32"), Tensor([1, 146],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 147],"float32"), Tensor([1, 147],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 148],"float32"), Tensor([1, 148],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 149],"float32"), Tensor([1, 149],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 14],"float32"), Tensor([1, 14],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 150],"float32"), Tensor([1, 150],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 151],"float32"), Tensor([1, 151],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 152],"float32"), Tensor([1, 152],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 153],"float32"), Tensor([1, 153],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 154],"float32"), Tensor([1, 154],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 155],"float32"), Tensor([1, 155],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 156],"float32"), Tensor([1, 156],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 157],"float32"), Tensor([1, 157],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 158],"float32"), Tensor([1, 158],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 159],"float32"), Tensor([1, 159],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 15],"float32"), Tensor([1, 15],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 160],"float32"), Tensor([1, 160],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 161],"float32"), Tensor([1, 161],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 162],"float32"), Tensor([1, 162],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 163],"float32"), Tensor([1, 163],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 164],"float32"), Tensor([1, 164],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 165],"float32"), Tensor([1, 165],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 166],"float32"), Tensor([1, 166],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 167],"float32"), Tensor([1, 167],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 168],"float32"), Tensor([1, 168],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 169],"float32"), Tensor([1, 169],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 16],"float32"), Tensor([1, 16],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 170],"float32"), Tensor([1, 170],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 171],"float32"), Tensor([1, 171],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 172],"float32"), Tensor([1, 172],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 173],"float32"), Tensor([1, 173],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 174],"float32"), Tensor([1, 174],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 175],"float32"), Tensor([1, 175],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 176],"float32"), Tensor([1, 176],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 177],"float32"), Tensor([1, 177],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 178],"float32"), Tensor([1, 178],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 179],"float32"), Tensor([1, 179],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 17],"float32"), Tensor([1, 17],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 180],"float32"), Tensor([1, 180],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 181],"float32"), Tensor([1, 181],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 182],"float32"), Tensor([1, 182],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 183],"float32"), Tensor([1, 183],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 184],"float32"), Tensor([1, 184],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 185],"float32"), Tensor([1, 185],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 186],"float32"), Tensor([1, 186],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 187],"float32"), Tensor([1, 187],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 188],"float32"), Tensor([1, 188],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 189],"float32"), Tensor([1, 189],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 18],"float32"), Tensor([1, 18],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 190],"float32"), Tensor([1, 190],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 191],"float32"), Tensor([1, 191],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 192],"float32"), Tensor([1, 192],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 193],"float32"), Tensor([1, 193],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 194],"float32"), Tensor([1, 194],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 195],"float32"), Tensor([1, 195],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 196],"float32"), Tensor([1, 196],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 197],"float32"), Tensor([1, 197],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 198],"float32"), Tensor([1, 198],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 199],"float32"), Tensor([1, 199],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 19],"float32"), Tensor([1, 19],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 200],"float32"), Tensor([1, 200],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 201],"float32"), Tensor([1, 201],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 202],"float32"), Tensor([1, 202],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 203],"float32"), Tensor([1, 203],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 204],"float32"), Tensor([1, 204],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 205],"float32"), Tensor([1, 205],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 206],"float32"), Tensor([1, 206],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 207],"float32"), Tensor([1, 207],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 208],"float32"), Tensor([1, 208],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 209],"float32"), Tensor([1, 209],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 20],"float32"), Tensor([1, 20],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 210],"float32"), Tensor([1, 210],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 211],"float32"), Tensor([1, 211],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 212],"float32"), Tensor([1, 212],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 21],"float32"), Tensor([1, 21],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 22],"float32"), Tensor([1, 22],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 23],"float32"), Tensor([1, 23],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 24],"float32"), Tensor([1, 24],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 25],"float32"), Tensor([1, 25],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 26],"float32"), Tensor([1, 26],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 27],"float32"), Tensor([1, 27],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 28],"float32"), Tensor([1, 28],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 29],"float32"), Tensor([1, 29],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 30],"float32"), Tensor([1, 30],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 31],"float32"), Tensor([1, 31],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 32],"float32"), Tensor([1, 32],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 33],"float32"), Tensor([1, 33],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 34],"float32"), Tensor([1, 34],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 35],"float32"), Tensor([1, 35],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 36],"float32"), Tensor([1, 36],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 37],"float32"), Tensor([1, 37],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 38],"float32"), Tensor([1, 38],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 39],"float32"), Tensor([1, 39],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 40],"float32"), Tensor([1, 40],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 41],"float32"), Tensor([1, 41],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 42],"float32"), Tensor([1, 42],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 43],"float32"), Tensor([1, 43],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 44],"float32"), Tensor([1, 44],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 45],"float32"), Tensor([1, 45],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 46],"float32"), Tensor([1, 46],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 47],"float32"), Tensor([1, 47],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 48],"float32"), Tensor([1, 48],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 49],"float32"), Tensor([1, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 50],"float32"), Tensor([1, 50],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 51],"float32"), Tensor([1, 51],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 52],"float32"), Tensor([1, 52],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 53],"float32"), Tensor([1, 53],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 54],"float32"), Tensor([1, 54],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 55],"float32"), Tensor([1, 55],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 56],"float32"), Tensor([1, 56],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 57],"float32"), Tensor([1, 57],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 58],"float32"), Tensor([1, 58],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 59],"float32"), Tensor([1, 59],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 60],"float32"), Tensor([1, 60],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 61],"float32"), Tensor([1, 61],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 62],"float32"), Tensor([1, 62],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 63],"float32"), Tensor([1, 63],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 64],"float32"), Tensor([1, 64],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 65],"float32"), Tensor([1, 65],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 66],"float32"), Tensor([1, 66],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 67],"float32"), Tensor([1, 67],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 68],"float32"), Tensor([1, 68],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 69],"float32"), Tensor([1, 69],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 70],"float32"), Tensor([1, 70],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 71],"float32"), Tensor([1, 71],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 72],"float32"), Tensor([1, 72],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 73],"float32"), Tensor([1, 73],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 74],"float32"), Tensor([1, 74],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 75],"float32"), Tensor([1, 75],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 76],"float32"), Tensor([1, 76],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 77],"float32"), Tensor([1, 77],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 78],"float32"), Tensor([1, 78],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 79],"float32"), Tensor([1, 79],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 80],"float32"), Tensor([1, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 81],"float32"), Tensor([1, 81],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 82],"float32"), Tensor([1, 82],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 83],"float32"), Tensor([1, 83],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 84],"float32"), Tensor([1, 84],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 85],"float32"), Tensor([1, 85],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 86],"float32"), Tensor([1, 86],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 87],"float32"), Tensor([1, 87],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 88],"float32"), Tensor([1, 88],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 89],"float32"), Tensor([1, 89],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 90],"float32"), Tensor([1, 90],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 91],"float32"), Tensor([1, 91],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 92],"float32"), Tensor([1, 92],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 93],"float32"), Tensor([1, 93],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 94],"float32"), Tensor([1, 94],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 95],"float32"), Tensor([1, 95],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 96],"float32"), Tensor([1, 96],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 97],"float32"), Tensor([1, 97],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 98],"float32"), Tensor([1, 98],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 99],"float32"), Tensor([1, 99],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 13, 13],"float32"), Tensor([1, 13],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1],"int64"), 1, )
paddle.Tensor.__add__(Tensor([1, 32, 4096, 4096],"float32"), Tensor([1, 1, 4096, 4096],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4096, 1],"float32"), 1e-06, )
paddle.Tensor.__add__(Tensor([1, 4096, 32, 128],"float32"), Tensor([1, 4096, 32, 128],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4096, 4096],"float32"), Tensor([1, 4096, 4096],"float32"), )
paddle.Tensor.__add__(Tensor([1, 50304],"int64"), Tensor([1, 1],"int64"), )
paddle.Tensor.__add__(Tensor([128, 16, 1024],"float16"), Tensor([128, 16, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([128, 2, 1024],"float16"), Tensor([128, 2, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([16, 1024, 1024],"float16"), Tensor([16, 1024, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([16, 16, 1024, 1024],"float16"), Tensor([16, 1, 1024, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1],"float32"), 1, )
paddle.Tensor.__add__(Tensor([1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__add__(Tensor([1],"float32"), Tensor([],"float32"), )
paddle.Tensor.__add__(Tensor([2, 1024, 1024],"float16"), Tensor([2, 1024, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([256, 2, 1024],"float16"), Tensor([256, 2, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([32, 128, 1024],"float16"), Tensor([32, 128, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([32, 16, 128, 128],"float16"), Tensor([128, 128],"float32"), )
paddle.Tensor.__add__(Tensor([7, 128, 1024],"float16"), Tensor([7, 128, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([7, 16, 128, 128],"float16"), Tensor([128, 128],"float32"), )
paddle.Tensor.__add__(Tensor([8, 1024, 1024],"float16"), Tensor([8, 1024, 1024],"float16"), )
paddle.Tensor.__add__(Tensor([8, 1024, 2048],"float16"), Tensor([8, 1024, 2048],"float16"), )
paddle.Tensor.__add__(Tensor([8, 1024, 4096],"float16"), Tensor([8, 1024, 4096],"float16"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([],"float32"), )
paddle.Tensor.__eq__(Tensor([16, 1024],"int64"), Tensor([16, 1024],"int64"), )
paddle.Tensor.__eq__(Tensor([1],"bool"), 0, )
paddle.Tensor.__eq__(Tensor([32, 1],"int64"), Tensor([32, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([7, 1],"int64"), Tensor([7, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 50304],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__getitem__(Tensor([1, 1, 1, 13],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 10, 22],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 100, 112],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 101, 113],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 102, 114],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 103, 115],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 104, 116],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 105, 117],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 106, 118],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 107, 119],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 108, 120],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 109, 121],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 11, 23],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 110, 122],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 111, 123],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 112, 124],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 113, 125],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 114, 126],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 115, 127],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 116, 128],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 117, 129],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 118, 130],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 119, 131],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 12, 24],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 120, 132],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 121, 133],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 122, 134],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 123, 135],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 124, 136],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 125, 137],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 126, 138],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 127, 139],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 128, 140],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 129, 141],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 13, 25],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 130, 142],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 131, 143],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 132, 144],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 133, 145],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 134, 146],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 135, 147],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 136, 148],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 137, 149],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 138, 150],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 139, 151],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 14, 26],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 140, 152],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 141, 153],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 142, 154],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 143, 155],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 144, 156],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 145, 157],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 146, 158],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 147, 159],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 148, 160],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 149, 161],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 15, 27],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 150, 162],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 151, 163],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 152, 164],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 153, 165],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 154, 166],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 155, 167],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 156, 168],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 157, 169],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 158, 170],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 159, 171],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 16, 28],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 160, 172],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 161, 173],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 162, 174],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 163, 175],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 164, 176],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 165, 177],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 166, 178],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 167, 179],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 168, 180],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 169, 181],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 17, 29],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 170, 182],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 171, 183],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 172, 184],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 173, 185],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 174, 186],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 175, 187],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 176, 188],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 177, 189],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 178, 190],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 179, 191],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 18, 30],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 180, 192],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 181, 193],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 182, 194],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 183, 195],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 184, 196],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 185, 197],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 186, 198],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 187, 199],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 188, 200],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 189, 201],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 19, 31],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 190, 202],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 191, 203],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 192, 204],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 193, 205],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 194, 206],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 195, 207],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 196, 208],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 197, 209],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 198, 210],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 199, 211],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 2, 14],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 20, 32],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 200, 212],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 21, 33],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 22, 34],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 23, 35],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 24, 36],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 25, 37],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 26, 38],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 27, 39],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 28, 40],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 29, 41],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 3, 15],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 30, 42],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 31, 43],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 32, 44],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 33, 45],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 34, 46],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 35, 47],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 36, 48],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 37, 49],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 38, 50],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 39, 51],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 4, 16],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 40, 52],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 41, 53],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 42, 54],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 43, 55],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 44, 56],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 45, 57],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 46, 58],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 47, 59],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 48, 60],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 49, 61],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 5, 17],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 50, 62],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 50304],"float32"), tuple(slice(None,None,None),-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 51, 63],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 52, 64],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 53, 65],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 54, 66],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 55, 67],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 56, 68],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 57, 69],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 58, 70],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 59, 71],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 6, 18],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 60, 72],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 61, 73],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 62, 74],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 63, 75],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 64, 76],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 65, 77],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 66, 78],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 67, 79],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 68, 80],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 69, 81],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 7, 19],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 70, 82],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 71, 83],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 72, 84],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 73, 85],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 74, 86],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 75, 87],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 76, 88],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 77, 89],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 78, 90],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 79, 91],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 8, 20],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 80, 92],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 81, 93],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 82, 94],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 83, 95],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 84, 96],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 85, 97],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 86, 98],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 87, 99],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 88, 100],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 89, 101],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 9, 21],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 90, 102],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 91, 103],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 92, 104],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 93, 105],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 94, 106],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 95, 107],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 96, 108],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 97, 109],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 98, 110],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1, 99, 111],"float32"), tuple(slice(None,None,None),-1,-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 13, 50304],"float32"), tuple(slice(None,None,None),-1,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 13],"int64"), tuple(slice(None,None,None),slice(-1,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 1],"int64"), tuple(slice(None,None,None),slice(-1,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 200],"int64"), 0, )
paddle.Tensor.__getitem__(Tensor([1, 213],"int64"), tuple(slice(None,None,None),slice(13,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 4096, 1, 128],"float32"), tuple(slice(None,None,None),slice(None,4096,None),slice(None,None,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 4096, 32, 128],"float32"), tuple(Ellipsis,slice(64,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 4096, 32, 128],"float32"), tuple(Ellipsis,slice(None,64,None),), )
paddle.Tensor.__getitem__(Tensor([1, 50304],"int64"), tuple(slice(None,None,None),slice(None,-1,None),), )
paddle.Tensor.__getitem__(Tensor([1, 50],"float32"), tuple(slice(None,None,None),slice(-1,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(0,1,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(0,2,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(1,2,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(10,11,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(10,12,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(11,12,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(12,13,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(12,14,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(13,14,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(14,15,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(14,16,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(15,16,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(2,3,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(2,4,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(3,4,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(4,5,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(4,6,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(5,6,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(6,7,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(6,8,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(7,8,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(8,10,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(8,9,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"float32"), tuple(slice(9,10,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(0,1,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(0,2,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(1,2,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(10,11,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(10,12,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(11,12,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(12,13,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(12,14,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(13,14,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(14,15,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(14,16,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(15,16,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(2,3,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(2,4,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(3,4,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(4,5,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(4,6,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(5,6,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(6,7,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(6,8,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(7,8,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(8,10,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(8,9,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16, 1024],"int64"), tuple(slice(9,10,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 0, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 1, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 10, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 11, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 12, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 13, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 14, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 15, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 2, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 3, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 4, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 5, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 6, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 7, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 8, )
paddle.Tensor.__getitem__(Tensor([16],"float32"), 9, )
paddle.Tensor.__getitem__(Tensor([2048, 128],"float32"), tuple(None,slice(None,None,None),None,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([2048, 32],"float32"), tuple(None,slice(None,None,None),None,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([4096, 128],"float32"), Tensor([1, 4096],"int64"), )
paddle.Tensor.__getitem__(Tensor([4096, 128],"float32"), tuple(None,slice(None,None,None),None,slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 0, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 1, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 2, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 3, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 4, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 5, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 6, )
paddle.Tensor.__getitem__(Tensor([8],"float32"), 7, )
paddle.Tensor.__gt__(Tensor([1, 4096, 1],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 50304],"float32"), 0.75, )
paddle.Tensor.__gt__(Tensor([],"int64"), Tensor([],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 1024, 1],"int64"), Tensor([1, 1024, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1],"int64"), 50304, )
paddle.Tensor.__mul__(Tensor([1, 32, 4096, 128],"float32"), 0.08838834764831843, )
paddle.Tensor.__mul__(Tensor([1, 32, 4096, 4096],"float32"), 1, )
paddle.Tensor.__mul__(Tensor([1, 4096, 1],"float32"), Tensor([1, 4096, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4096, 1],"float32"), Tensor([1, 4096, 4096],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4096, 1],"int64"), Tensor([1, 4096, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 4096, 32, 128],"float32"), Tensor([1, 4096, 1, 128],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4096, 4096],"float32"), Tensor([4096],"float32"), )
paddle.Tensor.__mul__(Tensor([1024],"float16"), Tensor([1024],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 128],"float32"), -10000.0, )
paddle.Tensor.__mul__(Tensor([16, 1024, 1],"int64"), Tensor([16, 1024, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([16, 1024],"float16"), Tensor([16, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([16384],"float32"), Tensor([16384],"float32"), )
paddle.Tensor.__mul__(Tensor([1],"float32"), 0.5, )
paddle.Tensor.__mul__(Tensor([2048],"float32"), Tensor([2048],"float32"), )
paddle.Tensor.__mul__(Tensor([32, 1],"int64"), Tensor([32, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([7, 1],"int64"), Tensor([7, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([8, 1024, 1],"int64"), Tensor([8, 1024, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([8192],"float16"), Tensor([8192],"float32"), )
paddle.Tensor.__mul__(Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.Tensor.__mul__(Tensor([],"float16"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__ne__(Tensor([1, 1024, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 4096, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([16, 1024, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([32, 128],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([32, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([7, 128],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([7, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([8, 1024, 1],"int64"), -100, )
paddle.Tensor.__neg__(Tensor([1, 4096, 32, 64],"float32"), )
paddle.Tensor.__nonzero__(Tensor([1],"bool"), )
paddle.Tensor.__nonzero__(Tensor([],"bool"), )
paddle.Tensor.__rpow__(Tensor([16],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([64],"float32"), 10000.0, )
paddle.Tensor.__rtruediv__(Tensor([16],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([64],"float32"), 1.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 10, 22],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 100, 112],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 101, 113],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 102, 114],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 103, 115],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 104, 116],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 105, 117],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 106, 118],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 107, 119],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 108, 120],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 109, 121],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 11, 23],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 110, 122],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 111, 123],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 112, 124],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 113, 125],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 114, 126],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 115, 127],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 116, 128],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 117, 129],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 118, 130],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 119, 131],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 12, 24],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 120, 132],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 121, 133],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 122, 134],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 123, 135],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 124, 136],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 125, 137],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 126, 138],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 127, 139],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 128, 140],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 129, 141],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 13, 25],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 130, 142],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 131, 143],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 132, 144],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 133, 145],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 134, 146],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 135, 147],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 136, 148],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 137, 149],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 138, 150],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 139, 151],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 14, 26],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 140, 152],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 141, 153],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 142, 154],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 143, 155],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 144, 156],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 145, 157],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 146, 158],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 147, 159],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 148, 160],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 149, 161],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 15, 27],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 150, 162],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 151, 163],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 152, 164],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 153, 165],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 154, 166],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 155, 167],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 156, 168],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 157, 169],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 158, 170],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 159, 171],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 16, 28],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 160, 172],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 161, 173],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 162, 174],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 163, 175],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 164, 176],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 165, 177],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 166, 178],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 167, 179],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 168, 180],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 169, 181],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 17, 29],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 170, 182],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 171, 183],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 172, 184],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 173, 185],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 174, 186],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 175, 187],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 176, 188],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 177, 189],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 178, 190],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 179, 191],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 18, 30],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 180, 192],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 181, 193],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 182, 194],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 183, 195],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 184, 196],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 185, 197],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 186, 198],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 187, 199],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 188, 200],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 189, 201],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 19, 31],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 190, 202],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 191, 203],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 192, 204],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 193, 205],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 194, 206],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 195, 207],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 196, 208],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 197, 209],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 198, 210],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 199, 211],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 2, 14],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 20, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 200, 212],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 201, 213],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 21, 33],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 22, 34],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 23, 35],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 24, 36],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 25, 37],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 26, 38],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 27, 39],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 28, 40],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 29, 41],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 3, 15],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 30, 42],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 31, 43],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 32, 44],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 33, 45],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 34, 46],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 35, 47],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 36, 48],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 37, 49],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 38, 50],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 39, 51],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 4, 16],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 40, 52],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 41, 53],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 42, 54],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 43, 55],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 44, 56],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 45, 57],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 46, 58],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 47, 59],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 48, 60],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 49, 61],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 5, 17],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 50, 62],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 51, 63],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 52, 64],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 53, 65],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 54, 66],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 55, 67],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 56, 68],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 57, 69],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 58, 70],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 59, 71],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 6, 18],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 60, 72],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 61, 73],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 62, 74],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 63, 75],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 64, 76],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 65, 77],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 66, 78],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 67, 79],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 68, 80],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 69, 81],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 7, 19],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 70, 82],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 71, 83],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 72, 84],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 73, 85],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 74, 86],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 75, 87],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 76, 88],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 77, 89],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 78, 90],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 79, 91],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 8, 20],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 80, 92],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 81, 93],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 82, 94],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 83, 95],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 84, 96],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 85, 97],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 86, 98],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 87, 99],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 88, 100],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 89, 101],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 9, 21],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 90, 102],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 91, 103],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 92, 104],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 93, 105],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 94, 106],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 95, 107],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 96, 108],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 97, 109],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 98, 110],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 1, 99, 111],"float32"), tuple(slice(None,None,None),slice(None,None,None),-1,-1,), 0.0, )
paddle.Tensor.__setitem__(Tensor([1, 50304],"int64"), tuple(slice(None,None,None),0,), 0, )
paddle.Tensor.__setitem__(Tensor([1, 50304],"int64"), tuple(slice(None,None,None),slice(1,None,None),), Tensor([1, 50303],"int64"), )
paddle.Tensor.__sub__(Tensor([1],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__sub__(Tensor([32],"int64"), 1, )
paddle.Tensor.__sub__(Tensor([7],"int64"), 1, )
paddle.Tensor.__truediv__(Tensor([1, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__truediv__(Tensor([16],"float32"), 32, )
paddle.Tensor.__truediv__(Tensor([1],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([64],"float32"), 128, )
paddle.Tensor.__truediv__(Tensor([],"float32"), 16, )
paddle.Tensor.__truediv__(Tensor([],"float32"), 8, )
paddle.Tensor.__truediv__(Tensor([],"float32"), Tensor([],"float32"), )
paddle.Tensor.astype(Tensor([1, 32, 4096, 4096],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 32, 4096, 4096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 4096, 32000],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 4096, 4096],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1024, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 1024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 3072],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 3072],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 384],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 4096],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 4096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 512],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024, 768],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([12288],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([128, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([12800, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16384, 4096],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16384],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1],"int64"), Dtype(float32), )
paddle.Tensor.astype(Tensor([256, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([3072],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([3072],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([32, 128],"bool"), "int64", )
paddle.Tensor.astype(Tensor([32, 1],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([384],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096, 1024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096, 12288],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096, 16384],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096, 4096],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([50304, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([50304, 1024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([50304, 2048],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([50304, 4096],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([512, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([51200, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([512],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([6400, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([7, 128],"bool"), "int64", )
paddle.Tensor.astype(Tensor([7, 1],"int64"), Dtype(int64), )
paddle.Tensor.astype(Tensor([768],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([7],"int64"), "int64", )
paddle.Tensor.astype(Tensor([],"int64"), "int64", )
paddle.Tensor.cast(Tensor([1024, 1024],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 2048],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 2],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 3072],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 3072],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 384],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 4096],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 4096],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 512],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024, 768],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1024],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([12288],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([128, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([12800, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([16384, 4096],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([16384],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1],"bool"), "int32", )
paddle.Tensor.cast(Tensor([1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([1],"int32"), "bool", )
paddle.Tensor.cast(Tensor([2048, 2048],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2048, 6144],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2048, 8192],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([2048],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([256, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([3072],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([3072],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([384],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([4096, 1024],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([4096, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([4096, 12288],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([4096, 16384],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([4096, 4096],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([4096],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([4096],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([50304, 1024],"float32"), Dtype(float16), )
paddle.Tensor.cast(Tensor([50304, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([50304, 2048],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([50304, 4096],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([512, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([51200, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([512],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([6144],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([6400, 1024],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([768],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([8192, 2048],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([8192],"float32"), dtype=Dtype(float16), )
paddle.Tensor.clone(Tensor([1, 50303],"int64"), )
paddle.Tensor.clone(Tensor([1048576],"float16"), )
paddle.Tensor.clone(Tensor([12582912],"float16"), )
paddle.Tensor.clone(Tensor([16777216],"float16"), )
paddle.Tensor.clone(Tensor([4194304],"float16"), )
paddle.Tensor.clone(Tensor([51511296],"float16"), )
paddle.Tensor.cos(Tensor([2048, 128],"float32"), )
paddle.Tensor.cos(Tensor([2048, 32],"float32"), )
paddle.Tensor.cos(Tensor([4096, 128],"float32"), )
paddle.Tensor.detach(Tensor([1, 1024, 16, 64],"float16"), )
paddle.Tensor.detach(Tensor([1, 1024],"float32"), )
paddle.Tensor.detach(Tensor([1, 1024],"int64"), )
paddle.Tensor.detach(Tensor([1024, 1024],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([1024, 2048],"float16"), )
paddle.Tensor.detach(Tensor([1024, 4096],"float16"), )
paddle.Tensor.detach(Tensor([1024],"float16"), )
paddle.Tensor.detach(Tensor([1024],"float32"), )
paddle.Tensor.detach(Tensor([1048576],"float16"), )
paddle.Tensor.detach(Tensor([11008, 4096],"float32"), )
paddle.Tensor.detach(Tensor([12288],"float16"), )
paddle.Tensor.detach(Tensor([12582912],"float16"), )
paddle.Tensor.detach(Tensor([16384, 4096],"float16"), )
paddle.Tensor.detach(Tensor([16384],"float16"), )
paddle.Tensor.detach(Tensor([16777216],"float16"), )
paddle.Tensor.detach(Tensor([1],"float16"), )
paddle.Tensor.detach(Tensor([2, 1024, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([2, 1024, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([2, 1024],"float32"), )
paddle.Tensor.detach(Tensor([2, 1024],"int64"), )
paddle.Tensor.detach(Tensor([2048, 2048],"float16"), )
paddle.Tensor.detach(Tensor([2048, 6144],"float16"), )
paddle.Tensor.detach(Tensor([2048, 8192],"float16"), )
paddle.Tensor.detach(Tensor([2048],"float16"), )
paddle.Tensor.detach(Tensor([2048],"float32"), )
paddle.Tensor.detach(Tensor([32000, 4096],"float32"), )
paddle.Tensor.detach(Tensor([4096, 12288],"float16"), )
paddle.Tensor.detach(Tensor([4096, 16384],"float16"), )
paddle.Tensor.detach(Tensor([4096, 22016],"float32"), )
paddle.Tensor.detach(Tensor([4096, 32000],"float32"), )
paddle.Tensor.detach(Tensor([4096, 4096],"float16"), )
paddle.Tensor.detach(Tensor([4096, 4096],"float32"), )
paddle.Tensor.detach(Tensor([4096],"float16"), )
paddle.Tensor.detach(Tensor([4096],"float32"), )
paddle.Tensor.detach(Tensor([4194304],"float16"), )
paddle.Tensor.detach(Tensor([50304, 2048],"float16"), )
paddle.Tensor.detach(Tensor([50304, 4096],"float16"), )
paddle.Tensor.detach(Tensor([51511296],"float16"), )
paddle.Tensor.detach(Tensor([6144],"float16"), )
paddle.Tensor.detach(Tensor([8, 1024, 2048],"float16"), )
paddle.Tensor.detach(Tensor([8, 1024, 4096],"float16"), )
paddle.Tensor.detach(Tensor([8192, 2048],"float16"), )
paddle.Tensor.detach(Tensor([8192],"float16"), )
paddle.Tensor.detach(Tensor([],"float16"), )
paddle.Tensor.detach(Tensor([],"float32"), )
paddle.Tensor.expand(Tensor([4096],"int64"), tuple(1,4096,), )
paddle.Tensor.flatten(Tensor([1, 50304],"int64"), )
paddle.Tensor.gather_nd(Tensor([32, 128, 2],"float16"), Tensor([32, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([7, 128, 2],"float16"), Tensor([7, 2],"int64"), )
paddle.Tensor.item(Tensor([1],"int32"), )
paddle.Tensor.item(Tensor([1],"int64"), )
paddle.Tensor.item(Tensor([],"float32"), )
paddle.Tensor.item(Tensor([],"int64"), )
paddle.Tensor.mean(Tensor([1, 4096, 4096],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2],"float32"), )
paddle.Tensor.pow(Tensor([1, 4096, 4096],"float32"), 2, )
paddle.Tensor.reshape(Tensor([1, 1, 4096, 4096],"float32"), list[1,1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 1024, 1],"float16"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 1024],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1, 4096, 32, 128],"float32"), list[1,4096,4096,], )
paddle.Tensor.reshape(Tensor([1, 4096, 4096],"float32"), shape=list[0,0,32,128,], )
paddle.Tensor.reshape(Tensor([1024, 16, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1024, 16],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1024, 2, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1024, 2],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([16, 1024, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([16, 1024],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([2, 1024, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([2, 1024],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([50304],"bool"), list[1,50304,], )
paddle.Tensor.reshape(Tensor([8, 1024, 1],"float16"), list[-1,], )
paddle.Tensor.reshape(Tensor([8, 1024, 1],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([8, 1024],"float32"), list[-1,], )
paddle.Tensor.scale(Tensor([1, 16, 1, 100],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 109],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 110],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 111],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 112],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 113],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 114],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 115],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 116],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 117],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 118],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 119],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 120],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 121],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 122],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 123],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 124],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 125],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 126],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 127],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 128],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 129],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 130],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 131],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 132],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 133],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 134],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 135],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 136],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 137],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 138],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 139],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 140],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 141],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 142],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 143],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 144],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 145],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 146],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 147],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 148],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 149],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 14],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 150],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 151],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 152],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 153],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 154],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 155],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 156],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 157],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 158],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 159],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 15],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 160],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 161],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 162],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 163],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 164],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 165],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 166],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 167],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 168],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 169],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 16],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 170],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 171],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 172],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 173],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 174],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 175],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 176],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 177],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 178],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 179],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 17],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 180],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 181],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 182],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 183],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 184],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 185],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 186],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 187],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 188],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 189],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 18],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 190],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 191],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 192],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 193],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 194],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 195],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 196],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 197],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 198],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 199],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 19],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 200],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 201],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 202],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 203],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 204],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 205],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 206],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 207],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 208],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 209],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 20],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 210],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 211],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 212],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 21],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 22],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 23],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 24],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 25],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 26],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 27],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 28],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 29],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 30],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 31],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 32],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 33],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 34],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 35],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 36],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 37],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 38],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 39],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 40],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 41],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 42],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 43],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 44],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 45],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 46],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 47],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 48],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 49],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 50],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 51],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 52],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 53],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 54],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 55],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 56],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 57],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 58],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 59],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 60],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 61],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 62],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 63],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 1, 64],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 65],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 66],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 67],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 68],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 69],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 70],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 71],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 72],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 73],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 74],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 75],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 76],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 77],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 78],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 79],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 80],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 81],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 82],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 83],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 84],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 85],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 86],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 87],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 88],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 89],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 90],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 91],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 92],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 93],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 94],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 95],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 96],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 97],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 98],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 99],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 1024],"float16"), 32, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([1, 16, 13, 13],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 13, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([16, 16, 1024, 1024],"float16"), 24, )
paddle.Tensor.scale(Tensor([16, 16, 1024, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([16, 2, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([16, 2, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([2, 1, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([2, 1, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([32, 16, 128, 128],"float16"), 24, )
paddle.Tensor.scale(Tensor([32, 16, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([7, 16, 128, 128],"float16"), 24, )
paddle.Tensor.scale(Tensor([7, 16, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 1024],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 512],"float16"), 0.011048543456039804, )
paddle.Tensor.sin(Tensor([2048, 128],"float32"), )
paddle.Tensor.sin(Tensor([2048, 32],"float32"), )
paddle.Tensor.sin(Tensor([4096, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 4096, 1, 128],"float32"), axis=list[0,2,], )
paddle.Tensor.sum(Tensor([1, 1],"float32"), )
paddle.Tensor.sum(Tensor([10, 1],"float32"), )
paddle.Tensor.sum(Tensor([1024],"float32"), )
paddle.Tensor.sum(Tensor([12, 1],"float32"), )
paddle.Tensor.sum(Tensor([13, 1],"float32"), )
paddle.Tensor.sum(Tensor([16, 1],"float32"), )
paddle.Tensor.sum(Tensor([16384],"float32"), )
paddle.Tensor.sum(Tensor([18, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 1],"float32"), )
paddle.Tensor.sum(Tensor([2048],"float32"), )
paddle.Tensor.sum(Tensor([21, 1],"float32"), )
paddle.Tensor.sum(Tensor([3, 1],"float32"), )
paddle.Tensor.sum(Tensor([32, 128],"int64"), axis=-1, )
paddle.Tensor.sum(Tensor([32, 1],"float32"), )
paddle.Tensor.sum(Tensor([33, 1],"float32"), )
paddle.Tensor.sum(Tensor([34, 1],"float32"), )
paddle.Tensor.sum(Tensor([4, 1],"float32"), )
paddle.Tensor.sum(Tensor([5, 1],"float32"), )
paddle.Tensor.sum(Tensor([6, 1],"float32"), )
paddle.Tensor.sum(Tensor([66, 1],"float32"), )
paddle.Tensor.sum(Tensor([7, 128],"int64"), axis=-1, )
paddle.Tensor.sum(Tensor([8, 1],"float32"), )
paddle.Tensor.sum(Tensor([8192],"float32"), )
paddle.Tensor.sum(Tensor([9, 1],"float32"), )
paddle.Tensor.sum(Tensor([97, 1],"float32"), )
paddle.Tensor.transpose(Tensor([1, 32, 4096, 128],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([1, 32, 4096, 128],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([16, 1024],"float32"), list[1,0,], )
paddle.Tensor.transpose(Tensor([16, 1024],"int64"), list[1,0,], )
paddle.Tensor.transpose(Tensor([2, 1024],"float32"), list[1,0,], )
paddle.Tensor.transpose(Tensor([2, 1024],"int64"), list[1,0,], )
paddle.Tensor.unsqueeze(Tensor([1, 1024],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 4096, 128],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 4096],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1024, 16],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1024, 2],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([128],"int64"), 0, )
paddle.Tensor.unsqueeze(Tensor([13],"int64"), 0, )
paddle.Tensor.unsqueeze(Tensor([16, 1024],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([2, 1024],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([8, 1024],"int64"), 2, )
paddle.Tensor.zero_(Tensor([147456],"float16"), )
paddle.Tensor.zero_(Tensor([36864],"float32"), )
paddle.Tensor.zero_(Tensor([73728],"float32"), )
paddle.Tensor.zero_(Tensor([8388608],"float16"), )
paddle.add(Tensor([],"float32"), Tensor([],"float32"), )
paddle.add_n(list[Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),], )
paddle.add_n(list[Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),], )
paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),], )
paddle.any(Tensor([1, 1],"bool"), )
paddle.arange(0, 128, 2, )
paddle.arange(0, 128, dtype=Dtype(int64), )
paddle.arange(0, 13, dtype=Dtype(int64), )
paddle.arange(0, 32, 2, )
paddle.arange(1, )
paddle.arange(2048, dtype="float32", )
paddle.arange(32, )
paddle.arange(4096, dtype="float32", )
paddle.arange(4096, dtype="int64", )
paddle.arange(7, )
paddle.argmax(Tensor([16, 1024, 50304],"float16"), -1, )
paddle.argsort(Tensor([1, 50304],"float32"), descending=True, )
paddle.argsort(Tensor([32, 2],"float16"), descending=True, )
paddle.argsort(Tensor([7, 2],"float16"), descending=True, )
paddle.assign(Tensor([1, 13],"int64"), )
paddle.assign(Tensor([1, 50304],"float32"), )
paddle.broadcast_shape(list[1,1,], list[1,1,], )
paddle.broadcast_shape(list[1,4096,1,], list[1,4096,1,], )
paddle.broadcast_shape(list[1,50304,], list[1,50304,], )
paddle.broadcast_shape(list[16,1024,], list[16,1024,], )
paddle.cast(Tensor([1, 1024, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 4096, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 50304],"bool"), dtype="int64", )
paddle.cast(Tensor([1024, 1024],"float16"), "float32", )
paddle.cast(Tensor([1024, 16, 6400],"float16"), dtype="float32", )
paddle.cast(Tensor([1024, 2],"float16"), "float32", )
paddle.cast(Tensor([1024, 3072],"float16"), "float32", )
paddle.cast(Tensor([1024, 384],"float16"), "float32", )
paddle.cast(Tensor([1024, 4096],"float16"), "float32", )
paddle.cast(Tensor([1024, 4096],"float16"), Dtype(float32), )
paddle.cast(Tensor([1024, 512],"float16"), "float32", )
paddle.cast(Tensor([1024, 768],"float16"), "float32", )
paddle.cast(Tensor([1024],"float16"), "float32", )
paddle.cast(Tensor([1048576],"float16"), Dtype(float32), )
paddle.cast(Tensor([12288],"float16"), Dtype(float32), )
paddle.cast(Tensor([12582912],"float16"), Dtype(float32), )
paddle.cast(Tensor([128, 1024],"float16"), "float32", )
paddle.cast(Tensor([12800, 1024],"float16"), "float32", )
paddle.cast(Tensor([16, 1024, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([16, 1024, 6400],"float16"), dtype="float32", )
paddle.cast(Tensor([16, 1024],"bool"), "float32", )
paddle.cast(Tensor([16, 1024],"float32"), "bool", )
paddle.cast(Tensor([16384, 4096],"float16"), Dtype(float32), )
paddle.cast(Tensor([16384],"float16"), Dtype(float32), )
paddle.cast(Tensor([16777216],"float16"), Dtype(float32), )
paddle.cast(Tensor([16],"int64"), dtype="float32", )
paddle.cast(Tensor([1],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1],"float32"), Dtype(float16), )
paddle.cast(Tensor([256, 1024],"float16"), "float32", )
paddle.cast(Tensor([3072],"float16"), "float32", )
paddle.cast(Tensor([32, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([32, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([384],"float16"), "float32", )
paddle.cast(Tensor([4096, 1024],"float16"), "float32", )
paddle.cast(Tensor([4096, 12288],"float16"), Dtype(float32), )
paddle.cast(Tensor([4096, 16384],"float16"), Dtype(float32), )
paddle.cast(Tensor([4096, 4096],"float16"), Dtype(float32), )
paddle.cast(Tensor([4096],"float16"), "float32", )
paddle.cast(Tensor([4096],"float16"), Dtype(float32), )
paddle.cast(Tensor([4194304],"float16"), Dtype(float32), )
paddle.cast(Tensor([50304, 1024],"float16"), "float32", )
paddle.cast(Tensor([50304, 4096],"float16"), Dtype(float32), )
paddle.cast(Tensor([50304],"int64"), "bool", )
paddle.cast(Tensor([512, 1024],"float16"), "float32", )
paddle.cast(Tensor([51200, 1024],"float16"), "float32", )
paddle.cast(Tensor([512],"float16"), "float32", )
paddle.cast(Tensor([51511296],"float16"), Dtype(float32), )
paddle.cast(Tensor([6400, 1024],"float16"), "float32", )
paddle.cast(Tensor([64],"int64"), dtype="float32", )
paddle.cast(Tensor([7, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([7, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([768],"float16"), "float32", )
paddle.cast(Tensor([8, 1024, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([8, 1024, 50304],"float16"), dtype="float32", )
paddle.cast(Tensor([],"float16"), dtype=Dtype(float32), )
paddle.cast(Tensor([],"float32"), Dtype(float16), )
paddle.cast(Tensor([],"float32"), dtype=Dtype(float32), )
paddle.concat(list[Tensor([1, 100],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 101],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 102],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 103],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 104],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 105],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 106],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 107],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 108],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 109],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 110],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 111],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 112],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 113],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 114],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 115],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 116],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 117],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 118],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 119],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 120],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 121],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 122],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 123],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 124],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 125],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 126],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 127],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 128],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 129],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 130],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 131],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 132],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 133],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 134],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 135],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 136],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 137],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 138],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 139],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 13],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 140],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 141],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 142],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 143],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 144],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 145],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 146],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 147],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 148],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 149],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 14],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 150],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 151],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 152],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 153],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 154],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 155],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 156],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 157],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 158],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 159],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 15],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 160],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 161],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 162],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 163],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 164],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 165],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 166],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 167],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 168],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 169],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 16],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 170],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 171],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 172],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 173],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 174],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 175],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 176],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 177],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 178],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 179],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 17],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 180],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 181],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 182],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 183],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 184],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 185],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 186],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 187],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 188],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 189],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 18],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 190],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 191],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 192],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 193],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 194],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 195],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 196],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 197],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 198],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 199],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 19],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 200],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 201],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 202],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 203],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 204],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 205],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 206],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 207],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 208],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 209],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 20],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 210],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 211],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 212],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 21],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 22],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 23],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 24],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 25],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 26],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 27],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 28],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 29],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 30],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 31],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 32],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 33],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 34],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 35],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 36],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 37],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 38],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 39],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 4096, 32, 64],"float32"),Tensor([1, 4096, 32, 64],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 40],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 41],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 42],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 43],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 44],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 45],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 46],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 47],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 48],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 49],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 50],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 51],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 52],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 53],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 54],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 55],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 56],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 57],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 58],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 59],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 60],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 61],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 62],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 63],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 64],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 65],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 66],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 67],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 68],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 69],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 70],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 71],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 72],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 73],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 74],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 75],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 76],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 77],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 78],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 79],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 80],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 81],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 82],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 83],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 84],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 85],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 86],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 87],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 88],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 89],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 90],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 91],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 92],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 93],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 94],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 95],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 96],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 97],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 98],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 99],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1024],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([103022592],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1024],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([12288],"float16"),Tensor([4096],"float16"),Tensor([16384],"float16"),Tensor([4096],"float16"),], )
paddle.concat(list[Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([16384],"float16"),Tensor([67108864],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([2048, 16],"float32"),Tensor([2048, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2048, 64],"float32"),Tensor([2048, 64],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([206045184],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([4096, 64],"float32"),Tensor([4096, 64],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4096],"float16"),Tensor([67108864],"float16"),], )
paddle.concat(list[Tensor([4096],"float16"),], )
paddle.concat(list[Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),], )
paddle.concat(list[Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),], )
paddle.concat(list[Tensor([4194304],"float16"),Tensor([50331648],"float16"),Tensor([12288],"float16"),Tensor([16777216],"float16"),], )
paddle.concat(list[Tensor([50331648],"float16"),Tensor([12288],"float16"),Tensor([16777216],"float16"),], )
paddle.cumsum(Tensor([1, 50304],"float32"), axis=-1, )
paddle.divide(x=Tensor([],"float32"), y=Tensor([1],"float32"), )
paddle.divide(x=Tensor([],"float32"), y=Tensor([],"float32"), )
paddle.einsum("i,j->ij", Tensor([2048],"float32"), Tensor([16],"float32"), )
paddle.einsum("i,j->ij", Tensor([2048],"float32"), Tensor([64],"float32"), )
paddle.einsum("i,j->ij", Tensor([4096],"float32"), Tensor([64],"float32"), )
paddle.empty(list[1,], dtype="int64", )
paddle.empty(list[7,], dtype="int64", )
paddle.empty(shape=list[1,1024,1024,], dtype="float16", )
paddle.empty(shape=list[1024,16,1024,], dtype=Dtype(float16), )
paddle.empty(shape=list[1024,2,1024,], dtype=Dtype(float16), )
paddle.empty(shape=list[128,16,1024,], dtype=Dtype(float16), )
paddle.empty(shape=list[128,2,1024,], dtype=Dtype(float16), )
paddle.empty(shape=list[2,1024,1024,], dtype="float16", )
paddle.empty(shape=list[256,2,1024,], dtype="float16", )
paddle.empty(shape=list[256,2,1024,], dtype=Dtype(float16), )
paddle.empty_like(Tensor([446],"uint8"), )
paddle.empty_like(Tensor([6662],"uint8"), )
paddle.empty_like(Tensor([822],"uint8"), )
paddle.empty_like(Tensor([884],"uint8"), )
paddle.empty_like(Tensor([],"float32"), )
paddle.empty_like(Tensor([],"int64"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([32, 128],"int64"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([7, 128],"int64"), )
paddle.full(list[1,1,4096,4096,], -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full(list[1,1,], 0.0, dtype="float32", )
paddle.full(list[1,1,], True, dtype="bool", )
paddle.full(list[1,], 13, dtype="int64", )
paddle.full(list[], 1, "int64", )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=1.0, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=1e-06, )
paddle.full_like(Tensor([1, 50304],"float32"), 0.0, )
paddle.increment(Tensor([1],"int64"), )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([1, 1024, 1024],"float16"), Tensor([1, 1024, 1024],"float16"), p=0.1, training=False, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([1, 1024, 1024],"float16"), Tensor([1, 1024, 1024],"float16"), p=0.1, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([128, 16, 1024],"float16"), Tensor([128, 16, 1024],"float16"), p=0.1, training=False, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([128, 2, 1024],"float16"), Tensor([128, 2, 1024],"float16"), p=0.1, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([16, 1024, 1024],"float16"), Tensor([16, 1024, 1024],"float16"), p=0.1, training=False, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([2, 1024, 1024],"float16"), Tensor([2, 1024, 1024],"float16"), p=0.1, training=False, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([2, 1024, 1024],"float16"), Tensor([2, 1024, 1024],"float16"), p=0.1, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([256, 2, 1024],"float16"), Tensor([256, 2, 1024],"float16"), p=0.1, training=False, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([256, 2, 1024],"float16"), Tensor([256, 2, 1024],"float16"), p=0.1, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([8, 1024, 2048],"float16"), Tensor([8, 1024, 2048],"float16"), p=0.1, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([8, 1024, 4096],"float16"), Tensor([8, 1024, 4096],"float16"), p=0.1, training=False, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([8, 1024, 4096],"float16"), Tensor([8, 1024, 4096],"float16"), p=0.1, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4096, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 128],"float16"), Tensor([128, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 512],"float16"), Tensor([512, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 1024],"float16"), Tensor([1024, 768],"float16"), Tensor([768],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 128],"float16"), Tensor([128, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 256],"float16"), Tensor([256, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 2, 512],"float16"), Tensor([512, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([16, 1024, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([16, 1024, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([16, 1024, 128],"float16"), Tensor([128, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([16, 1024, 512],"float16"), Tensor([512, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 1024],"float16"), Tensor([1024, 768],"float16"), Tensor([768],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 128],"float16"), Tensor([128, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 256],"float16"), Tensor([256, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2, 1024, 512],"float16"), Tensor([512, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([8, 1024, 16384],"float16"), Tensor([16384, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([8, 1024, 4096],"float16"), Tensor([4096, 12288],"float16"), Tensor([12288],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([8, 1024, 4096],"float16"), Tensor([4096, 16384],"float16"), Tensor([16384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([8, 1024, 4096],"float16"), Tensor([4096, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4096, 22016],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 2, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([8, 4, 1024, 1024],"float16"), )
paddle.index_sample(Tensor([1, 50304],"float32"), Tensor([1, 1],"int64"), )
paddle.log(Tensor([1, 50304],"float32"), )
paddle.matmul(Tensor([1, 1, 1024],"float32"), Tensor([50304, 1024],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1024, 1024],"float16"), Tensor([51200, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([1, 13, 1024],"float32"), Tensor([50304, 1024],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 100],"float32"), Tensor([1, 16, 100, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 101],"float32"), Tensor([1, 16, 101, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 102],"float32"), Tensor([1, 16, 102, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 103],"float32"), Tensor([1, 16, 103, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 104],"float32"), Tensor([1, 16, 104, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 105],"float32"), Tensor([1, 16, 105, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 106],"float32"), Tensor([1, 16, 106, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 107],"float32"), Tensor([1, 16, 107, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 108],"float32"), Tensor([1, 16, 108, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 109],"float32"), Tensor([1, 16, 109, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 110],"float32"), Tensor([1, 16, 110, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 111],"float32"), Tensor([1, 16, 111, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 112],"float32"), Tensor([1, 16, 112, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 113],"float32"), Tensor([1, 16, 113, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 114],"float32"), Tensor([1, 16, 114, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 115],"float32"), Tensor([1, 16, 115, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 116],"float32"), Tensor([1, 16, 116, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 117],"float32"), Tensor([1, 16, 117, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 118],"float32"), Tensor([1, 16, 118, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 119],"float32"), Tensor([1, 16, 119, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 120],"float32"), Tensor([1, 16, 120, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 121],"float32"), Tensor([1, 16, 121, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 122],"float32"), Tensor([1, 16, 122, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 123],"float32"), Tensor([1, 16, 123, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 124],"float32"), Tensor([1, 16, 124, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 125],"float32"), Tensor([1, 16, 125, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 126],"float32"), Tensor([1, 16, 126, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 127],"float32"), Tensor([1, 16, 127, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 128],"float32"), Tensor([1, 16, 128, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 129],"float32"), Tensor([1, 16, 129, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 130],"float32"), Tensor([1, 16, 130, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 131],"float32"), Tensor([1, 16, 131, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 132],"float32"), Tensor([1, 16, 132, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 133],"float32"), Tensor([1, 16, 133, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 134],"float32"), Tensor([1, 16, 134, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 135],"float32"), Tensor([1, 16, 135, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 136],"float32"), Tensor([1, 16, 136, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 137],"float32"), Tensor([1, 16, 137, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 138],"float32"), Tensor([1, 16, 138, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 139],"float32"), Tensor([1, 16, 139, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 140],"float32"), Tensor([1, 16, 140, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 141],"float32"), Tensor([1, 16, 141, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 142],"float32"), Tensor([1, 16, 142, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 143],"float32"), Tensor([1, 16, 143, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 144],"float32"), Tensor([1, 16, 144, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 145],"float32"), Tensor([1, 16, 145, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 146],"float32"), Tensor([1, 16, 146, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 147],"float32"), Tensor([1, 16, 147, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 148],"float32"), Tensor([1, 16, 148, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 149],"float32"), Tensor([1, 16, 149, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 14],"float32"), Tensor([1, 16, 14, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 150],"float32"), Tensor([1, 16, 150, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 151],"float32"), Tensor([1, 16, 151, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 152],"float32"), Tensor([1, 16, 152, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 153],"float32"), Tensor([1, 16, 153, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 154],"float32"), Tensor([1, 16, 154, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 155],"float32"), Tensor([1, 16, 155, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 156],"float32"), Tensor([1, 16, 156, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 157],"float32"), Tensor([1, 16, 157, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 158],"float32"), Tensor([1, 16, 158, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 159],"float32"), Tensor([1, 16, 159, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 15],"float32"), Tensor([1, 16, 15, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 160],"float32"), Tensor([1, 16, 160, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 161],"float32"), Tensor([1, 16, 161, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 162],"float32"), Tensor([1, 16, 162, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 163],"float32"), Tensor([1, 16, 163, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 164],"float32"), Tensor([1, 16, 164, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 165],"float32"), Tensor([1, 16, 165, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 166],"float32"), Tensor([1, 16, 166, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 167],"float32"), Tensor([1, 16, 167, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 168],"float32"), Tensor([1, 16, 168, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 169],"float32"), Tensor([1, 16, 169, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 16],"float32"), Tensor([1, 16, 16, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 170],"float32"), Tensor([1, 16, 170, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 171],"float32"), Tensor([1, 16, 171, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 172],"float32"), Tensor([1, 16, 172, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 173],"float32"), Tensor([1, 16, 173, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 174],"float32"), Tensor([1, 16, 174, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 175],"float32"), Tensor([1, 16, 175, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 176],"float32"), Tensor([1, 16, 176, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 177],"float32"), Tensor([1, 16, 177, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 178],"float32"), Tensor([1, 16, 178, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 179],"float32"), Tensor([1, 16, 179, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 17],"float32"), Tensor([1, 16, 17, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 180],"float32"), Tensor([1, 16, 180, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 181],"float32"), Tensor([1, 16, 181, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 182],"float32"), Tensor([1, 16, 182, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 183],"float32"), Tensor([1, 16, 183, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 184],"float32"), Tensor([1, 16, 184, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 185],"float32"), Tensor([1, 16, 185, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 186],"float32"), Tensor([1, 16, 186, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 187],"float32"), Tensor([1, 16, 187, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 188],"float32"), Tensor([1, 16, 188, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 189],"float32"), Tensor([1, 16, 189, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 18],"float32"), Tensor([1, 16, 18, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 190],"float32"), Tensor([1, 16, 190, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 191],"float32"), Tensor([1, 16, 191, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 192],"float32"), Tensor([1, 16, 192, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 193],"float32"), Tensor([1, 16, 193, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 194],"float32"), Tensor([1, 16, 194, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 195],"float32"), Tensor([1, 16, 195, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 196],"float32"), Tensor([1, 16, 196, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 197],"float32"), Tensor([1, 16, 197, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 198],"float32"), Tensor([1, 16, 198, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 199],"float32"), Tensor([1, 16, 199, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 19],"float32"), Tensor([1, 16, 19, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 200],"float32"), Tensor([1, 16, 200, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 201],"float32"), Tensor([1, 16, 201, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 202],"float32"), Tensor([1, 16, 202, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 203],"float32"), Tensor([1, 16, 203, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 204],"float32"), Tensor([1, 16, 204, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 205],"float32"), Tensor([1, 16, 205, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 206],"float32"), Tensor([1, 16, 206, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 207],"float32"), Tensor([1, 16, 207, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 208],"float32"), Tensor([1, 16, 208, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 209],"float32"), Tensor([1, 16, 209, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 20],"float32"), Tensor([1, 16, 20, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 210],"float32"), Tensor([1, 16, 210, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 211],"float32"), Tensor([1, 16, 211, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 212],"float32"), Tensor([1, 16, 212, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 21],"float32"), Tensor([1, 16, 21, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 22],"float32"), Tensor([1, 16, 22, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 23],"float32"), Tensor([1, 16, 23, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 24],"float32"), Tensor([1, 16, 24, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 25],"float32"), Tensor([1, 16, 25, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 26],"float32"), Tensor([1, 16, 26, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 27],"float32"), Tensor([1, 16, 27, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 28],"float32"), Tensor([1, 16, 28, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 29],"float32"), Tensor([1, 16, 29, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 30],"float32"), Tensor([1, 16, 30, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 31],"float32"), Tensor([1, 16, 31, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 32],"float32"), Tensor([1, 16, 32, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 33],"float32"), Tensor([1, 16, 33, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 34],"float32"), Tensor([1, 16, 34, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 35],"float32"), Tensor([1, 16, 35, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 36],"float32"), Tensor([1, 16, 36, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 37],"float32"), Tensor([1, 16, 37, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 38],"float32"), Tensor([1, 16, 38, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 39],"float32"), Tensor([1, 16, 39, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 40],"float32"), Tensor([1, 16, 40, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 41],"float32"), Tensor([1, 16, 41, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 42],"float32"), Tensor([1, 16, 42, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 43],"float32"), Tensor([1, 16, 43, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 44],"float32"), Tensor([1, 16, 44, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 45],"float32"), Tensor([1, 16, 45, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 46],"float32"), Tensor([1, 16, 46, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 47],"float32"), Tensor([1, 16, 47, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 48],"float32"), Tensor([1, 16, 48, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 49],"float32"), Tensor([1, 16, 49, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 50],"float32"), Tensor([1, 16, 50, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 51],"float32"), Tensor([1, 16, 51, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 52],"float32"), Tensor([1, 16, 52, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 53],"float32"), Tensor([1, 16, 53, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 54],"float32"), Tensor([1, 16, 54, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 55],"float32"), Tensor([1, 16, 55, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 56],"float32"), Tensor([1, 16, 56, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 57],"float32"), Tensor([1, 16, 57, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 58],"float32"), Tensor([1, 16, 58, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 59],"float32"), Tensor([1, 16, 59, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 60],"float32"), Tensor([1, 16, 60, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 61],"float32"), Tensor([1, 16, 61, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 62],"float32"), Tensor([1, 16, 62, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 63],"float32"), Tensor([1, 16, 63, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 64],"float32"), Tensor([1, 16, 64, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 65],"float32"), Tensor([1, 16, 65, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 66],"float32"), Tensor([1, 16, 66, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 67],"float32"), Tensor([1, 16, 67, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 68],"float32"), Tensor([1, 16, 68, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 69],"float32"), Tensor([1, 16, 69, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 70],"float32"), Tensor([1, 16, 70, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 71],"float32"), Tensor([1, 16, 71, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 72],"float32"), Tensor([1, 16, 72, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 73],"float32"), Tensor([1, 16, 73, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 74],"float32"), Tensor([1, 16, 74, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 75],"float32"), Tensor([1, 16, 75, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 76],"float32"), Tensor([1, 16, 76, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 77],"float32"), Tensor([1, 16, 77, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 78],"float32"), Tensor([1, 16, 78, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 79],"float32"), Tensor([1, 16, 79, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 80],"float32"), Tensor([1, 16, 80, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 81],"float32"), Tensor([1, 16, 81, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 82],"float32"), Tensor([1, 16, 82, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 83],"float32"), Tensor([1, 16, 83, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 84],"float32"), Tensor([1, 16, 84, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 85],"float32"), Tensor([1, 16, 85, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 86],"float32"), Tensor([1, 16, 86, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 87],"float32"), Tensor([1, 16, 87, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 88],"float32"), Tensor([1, 16, 88, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 89],"float32"), Tensor([1, 16, 89, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 90],"float32"), Tensor([1, 16, 90, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 91],"float32"), Tensor([1, 16, 91, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 92],"float32"), Tensor([1, 16, 92, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 93],"float32"), Tensor([1, 16, 93, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 94],"float32"), Tensor([1, 16, 94, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 95],"float32"), Tensor([1, 16, 95, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 96],"float32"), Tensor([1, 16, 96, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 97],"float32"), Tensor([1, 16, 97, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 98],"float32"), Tensor([1, 16, 98, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 99],"float32"), Tensor([1, 16, 99, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1024, 1024],"float16"), Tensor([1, 16, 1024, 64],"float16"), )
paddle.matmul(Tensor([1, 16, 13, 13],"float32"), Tensor([1, 16, 13, 64],"float32"), )
paddle.matmul(Tensor([1, 32, 4096, 128],"float32"), Tensor([1, 32, 128, 4096],"float32"), )
paddle.matmul(Tensor([1, 32, 4096, 4096],"float32"), Tensor([1, 32, 4096, 128],"float32"), )
paddle.matmul(Tensor([1, 4096, 4096],"float32"), Tensor([4096, 32000],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1024, 16, 1024],"float16"), Tensor([6400, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([1024, 2, 1024],"float16"), Tensor([12800, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([1024, 2, 1024],"float16"), Tensor([6400, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([16, 1024, 1024],"float16"), Tensor([50304, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([16, 1024, 1024],"float16"), Tensor([6400, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([16, 16, 1024, 1024],"float32"), Tensor([16, 16, 1024, 64],"float16"), )
paddle.matmul(Tensor([16, 2, 1024, 1024],"float16"), Tensor([16, 2, 1024, 64],"float16"), )
paddle.matmul(Tensor([2, 1, 1024, 1024],"float16"), Tensor([2, 1, 1024, 256],"float16"), )
paddle.matmul(Tensor([2, 1024, 1024],"float16"), Tensor([12800, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 1024, 1024],"float16"), Tensor([6400, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 2, 1024, 1024],"float16"), Tensor([2, 2, 1024, 64],"float16"), )
paddle.matmul(Tensor([32, 16, 128, 128],"float32"), Tensor([32, 16, 128, 64],"float16"), )
paddle.matmul(Tensor([7, 16, 128, 128],"float32"), Tensor([7, 16, 128, 64],"float16"), )
paddle.matmul(Tensor([8, 1024, 1024],"float16"), Tensor([50304, 1024],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8, 1024, 2048],"float16"), Tensor([50304, 2048],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8, 1024, 4096],"float16"), Tensor([50304, 4096],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8, 4, 1024, 1024],"float16"), Tensor([8, 4, 1024, 1024],"float16"), )
paddle.matmul(Tensor([8, 4, 1024, 1024],"float16"), Tensor([8, 4, 1024, 256],"float16"), )
paddle.matmul(Tensor([8, 4, 1024, 1024],"float16"), Tensor([8, 4, 1024, 512],"float16"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 104, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 105, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 106, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 107, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 108, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 109, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 110, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 111, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 112, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 113, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 114, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 115, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 116, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 117, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 118, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 119, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 120, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 121, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 122, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 123, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 124, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 125, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 126, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 127, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 130, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 131, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 132, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 133, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 134, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 135, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 136, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 137, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 138, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 139, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 14, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 140, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 141, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 142, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 143, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 144, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 145, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 146, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 147, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 148, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 149, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 15, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 150, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 151, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 152, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 153, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 154, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 155, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 156, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 157, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 158, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 159, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 16, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 160, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 161, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 162, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 163, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 164, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 165, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 166, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 167, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 168, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 169, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 17, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 170, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 171, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 172, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 173, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 174, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 175, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 176, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 177, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 178, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 179, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 18, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 180, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 181, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 182, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 183, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 184, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 185, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 186, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 187, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 188, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 189, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 19, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 190, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 191, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 192, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 193, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 194, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 195, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 196, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 197, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 198, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 199, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 20, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 200, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 201, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 202, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 203, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 204, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 205, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 206, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 207, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 208, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 209, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 21, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 210, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 211, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 212, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 22, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 23, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 24, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 25, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 26, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 27, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 28, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 29, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 30, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 31, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 32, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 33, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 34, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 35, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 36, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 37, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 38, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 39, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 40, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 41, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 42, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 43, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 44, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 45, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 46, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 47, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 48, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 49, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 50, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 51, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 52, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 53, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 54, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 55, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 56, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 57, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 58, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 59, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 60, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 61, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 62, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 63, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 64, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 65, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 66, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 67, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 68, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 69, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 70, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 71, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 72, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 73, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 74, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 75, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 76, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 78, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 79, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 80, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 81, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 82, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 83, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 84, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 85, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 86, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 87, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 88, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 89, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 90, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 91, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 92, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 93, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 94, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 95, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 96, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 97, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 98, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 99, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1024, 64],"float16"), y=Tensor([1, 16, 1024, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 13, 64],"float32"), y=Tensor([1, 16, 13, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([16, 16, 1024, 64],"float16"), y=Tensor([16, 16, 1024, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([16, 2, 1024, 64],"float16"), y=Tensor([16, 2, 1024, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 1, 1024, 256],"float16"), y=Tensor([2, 1, 1024, 256],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 64],"float16"), y=Tensor([2, 2, 1024, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 16, 128, 64],"float16"), y=Tensor([32, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([7, 16, 128, 64],"float16"), y=Tensor([7, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 4, 1024, 1024],"float16"), y=Tensor([8, 4, 1024, 1024],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 4, 1024, 256],"float16"), y=Tensor([8, 4, 1024, 256],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 4, 1024, 512],"float16"), y=Tensor([8, 4, 1024, 512],"float16"), transpose_y=True, )
paddle.maximum(x=Tensor([1],"float32"), y=Tensor([],"float32"), )
paddle.maximum(x=Tensor([],"float32"), y=Tensor([],"float32"), )
paddle.multinomial(Tensor([1, 50304],"float32"), )
paddle.nn.functional.cross_entropy(Tensor([1, 1024, 51200],"float16"), Tensor([1, 1024, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 4096, 32000],"float32"), Tensor([1, 4096, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([16, 1024, 50304],"float16"), Tensor([16, 1024],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([32, 2],"float16"), Tensor([32],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7, 2],"float16"), Tensor([7],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([8, 1024, 50304],"float16"), Tensor([8, 1024, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([8, 1024, 50304],"float32"), Tensor([8, 1024, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.dropout(Tensor([1, 1, 1024],"float32"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 1024, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 1024, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 1024, 1024],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 13, 1024],"float32"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 100],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 101],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 102],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 103],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 104],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 105],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 106],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 107],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 108],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 109],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 110],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 111],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 112],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 113],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 114],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 115],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 116],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 117],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 118],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 119],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 120],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 121],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 122],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 123],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 124],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 125],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 126],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 127],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 128],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 129],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 130],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 131],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 132],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 133],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 134],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 135],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 136],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 137],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 138],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 139],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 140],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 141],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 142],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 143],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 144],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 145],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 146],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 147],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 148],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 149],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 14],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 150],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 151],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 152],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 153],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 154],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 155],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 156],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 157],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 158],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 159],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 15],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 160],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 161],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 162],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 163],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 164],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 165],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 166],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 167],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 168],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 169],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 16],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 170],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 171],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 172],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 173],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 174],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 175],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 176],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 177],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 178],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 179],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 17],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 180],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 181],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 182],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 183],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 184],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 185],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 186],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 187],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 188],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 189],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 18],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 190],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 191],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 192],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 193],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 194],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 195],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 196],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 197],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 198],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 199],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 19],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 200],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 201],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 202],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 203],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 204],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 205],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 206],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 207],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 208],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 209],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 20],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 210],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 211],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 212],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 21],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 22],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 23],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 24],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 25],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 26],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 27],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 28],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 29],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 30],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 31],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 32],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 33],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 34],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 35],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 36],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 37],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 38],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 39],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 40],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 41],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 42],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 43],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 44],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 45],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 46],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 47],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 48],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 49],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 50],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 51],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 52],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 53],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 54],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 55],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 56],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 57],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 58],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 59],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 60],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 61],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 62],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 63],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 64],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 65],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 66],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 67],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 68],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 69],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 70],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 71],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 72],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 73],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 74],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 75],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 76],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 77],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 78],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 79],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 80],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 81],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 82],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 83],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 84],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 85],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 86],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 87],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 88],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 89],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 90],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 91],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 92],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 93],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 94],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 95],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 96],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 97],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 98],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1, 99],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 1024, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1, 16, 13, 13],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([128, 16, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([128, 16, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([128, 2, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([128, 2, 1024],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([16, 1024, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 16, 1024, 1024],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([16, 2, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1, 1024, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 1024, 1024],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2, 1024, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([256, 2, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([256, 2, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([256, 2, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([256, 2, 1024],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([32, 128, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([32, 128, 1024],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([32, 16, 128, 128],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([32, 16, 128, 128],"float32"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([7, 128, 1024],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([7, 16, 128, 128],"float32"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8, 1024, 1024],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 1024, 2048],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8, 1024, 2048],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 1024, 4096],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8, 1024, 4096],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8, 1024, 4096],"float16"), p=0.1, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 1024, 4096],"float16"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 4, 1024, 1024],"float16"), 0.1, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8, 4, 1024, 1024],"float16"), 0.1, training=True, mode="upscale_in_train", )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([1024, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([51200, 1024],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 13],"int64"), weight=Tensor([1024, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 13],"int64"), weight=Tensor([50304, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1],"int64"), weight=Tensor([1024, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1],"int64"), weight=Tensor([50304, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 4096],"int64"), weight=Tensor([32000, 4096],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 1024],"int64"), weight=Tensor([1024, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 1024],"int64"), weight=Tensor([50304, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 1024],"int64"), weight=Tensor([1024, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 128],"int64"), weight=Tensor([1024, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 128],"int64"), weight=Tensor([50304, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 128],"int64"), weight=Tensor([1024, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 128],"int64"), weight=Tensor([50304, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([1024, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([1024, 2048],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([1024, 4096],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([50304, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([50304, 2048],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 1024],"int64"), weight=Tensor([50304, 4096],"float16"), padding_idx=None, sparse=False, name=None, )
paddle.nn.functional.gelu(Tensor([1, 1, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 1024, 4096],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 13, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([1024, 16, 512],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1024, 2, 1024],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1024, 2, 512],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([16, 1024, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([16, 1024, 512],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 1024, 1024],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 1024, 512],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([32, 128, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([7, 128, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([8, 1024, 16384],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([8, 1024, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([8, 1024, 8192],"float16"), approximate=True, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([8192, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 13, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 13, 1024],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 13, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 13, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4096, 11008],"float32"), weight=Tensor([11008, 4096],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4096, 4096],"float32"), weight=Tensor([4096, 22016],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4096, 4096],"float32"), weight=Tensor([4096, 4096],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([16, 1024, 1024],"float16"), weight=Tensor([1024, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([16, 1024, 1024],"float16"), weight=Tensor([1024, 3072],"float16"), bias=Tensor([3072],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([16, 1024, 1024],"float16"), weight=Tensor([1024, 4096],"float16"), bias=Tensor([4096],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([16, 1024, 4096],"float16"), weight=Tensor([4096, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 128, 1024],"float16"), weight=Tensor([1024, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 128, 1024],"float16"), weight=Tensor([1024, 2],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([32, 128, 1024],"float16"), weight=Tensor([1024, 3072],"float16"), bias=Tensor([3072],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 128, 1024],"float16"), weight=Tensor([1024, 4096],"float16"), bias=Tensor([4096],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 128, 4096],"float16"), weight=Tensor([4096, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 128, 1024],"float16"), weight=Tensor([1024, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 128, 1024],"float16"), weight=Tensor([1024, 2],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7, 128, 1024],"float16"), weight=Tensor([1024, 3072],"float16"), bias=Tensor([3072],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 128, 1024],"float16"), weight=Tensor([1024, 4096],"float16"), bias=Tensor([4096],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 128, 4096],"float16"), weight=Tensor([4096, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 1024, 1024],"float16"), weight=Tensor([1024, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 1024, 1024],"float16"), weight=Tensor([1024, 3072],"float16"), bias=Tensor([3072],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 1024, 1024],"float16"), weight=Tensor([1024, 4096],"float16"), bias=Tensor([4096],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 1024, 4096],"float16"), weight=Tensor([4096, 1024],"float16"), bias=Tensor([1024],"float16"), name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 1, 13],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 10, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 10, 22],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 112],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 101, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 101, 113],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 102, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 102, 114],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 103, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 103, 115],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 104, 115],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 104, 116],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 105, 116],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 105, 117],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 106, 117],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 106, 118],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 107, 118],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 107, 119],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 108, 119],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 108, 120],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 109, 120],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 109, 121],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 11, 22],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 11, 23],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 110, 121],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 110, 122],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 111, 122],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 111, 123],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 112, 123],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 112, 124],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 113, 124],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 113, 125],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 114, 125],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 114, 126],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 115, 126],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 115, 127],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 116, 127],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 116, 128],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 117, 128],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 117, 129],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 118, 129],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 118, 130],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 119, 130],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 119, 131],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 12, 23],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 12, 24],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 120, 131],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 120, 132],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 121, 132],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 121, 133],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 122, 133],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 122, 134],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 123, 134],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 123, 135],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 124, 135],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 124, 136],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 125, 136],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 125, 137],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 126, 137],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 126, 138],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 127, 138],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 127, 139],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 139],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 140],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 129, 140],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 129, 141],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 13, 24],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 13, 25],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 130, 141],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 130, 142],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 131, 142],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 131, 143],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 132, 143],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 132, 144],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 133, 144],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 133, 145],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 134, 145],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 134, 146],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 135, 146],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 135, 147],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 136, 147],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 136, 148],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 137, 148],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 137, 149],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 138, 149],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 138, 150],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 139, 150],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 139, 151],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 14, 25],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 14, 26],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 140, 151],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 140, 152],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 141, 152],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 141, 153],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 142, 153],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 142, 154],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 143, 154],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 143, 155],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 144, 155],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 144, 156],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 145, 156],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 145, 157],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 146, 157],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 146, 158],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 147, 158],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 147, 159],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 148, 159],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 148, 160],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 149, 160],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 149, 161],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 15, 26],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 15, 27],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 150, 161],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 150, 162],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 151, 162],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 151, 163],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 152, 163],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 152, 164],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 153, 164],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 153, 165],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 165],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 166],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 155, 166],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 155, 167],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 156, 167],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 156, 168],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 157, 168],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 157, 169],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 158, 169],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 158, 170],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 159, 170],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 159, 171],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 16, 27],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 16, 28],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 160, 171],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 160, 172],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 161, 172],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 161, 173],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 162, 173],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 162, 174],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 163, 174],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 163, 175],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 164, 175],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 164, 176],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 165, 176],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 165, 177],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 166, 177],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 166, 178],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 167, 178],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 167, 179],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 168, 179],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 168, 180],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 169, 180],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 169, 181],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 17, 28],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 17, 29],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 170, 181],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 170, 182],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 171, 182],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 171, 183],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 172, 183],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 172, 184],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 184],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 185],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 174, 185],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 174, 186],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 175, 186],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 175, 187],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 176, 187],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 176, 188],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 177, 188],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 177, 189],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 178, 189],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 178, 190],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 179, 190],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 179, 191],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 18, 29],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 18, 30],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 180, 191],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 180, 192],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 181, 192],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 181, 193],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 182, 193],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 182, 194],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 183, 194],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 183, 195],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 184, 195],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 184, 196],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 185, 196],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 185, 197],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 186, 197],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 186, 198],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 187, 198],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 187, 199],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 188, 199],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 188, 200],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 189, 200],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 189, 201],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 19, 30],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 19, 31],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 190, 201],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 190, 202],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 191, 202],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 191, 203],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 203],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 204],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 193, 204],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 193, 205],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 194, 205],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 194, 206],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 195, 206],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 195, 207],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 196, 207],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 196, 208],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 197, 208],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 197, 209],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 198, 209],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 198, 210],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 199, 210],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 199, 211],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 13],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 14],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 20, 31],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 20, 32],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 200, 211],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 200, 212],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 201, 212],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 21, 32],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 21, 33],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 22, 33],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 22, 34],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 23, 34],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 23, 35],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 24, 35],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 24, 36],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 25, 36],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 25, 37],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 26, 37],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 26, 38],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 27, 38],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 27, 39],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 28, 39],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 28, 40],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 29, 40],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 29, 41],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 3, 14],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 3, 15],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 30, 41],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 30, 42],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 31, 42],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 31, 43],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 43],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 44],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 33, 44],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 33, 45],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 34, 45],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 34, 46],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 35, 46],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 35, 47],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 36, 47],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 36, 48],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 37, 48],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 37, 49],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 38, 49],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 38, 50],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 39, 50],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 39, 51],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 4, 15],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 4, 16],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 40, 51],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 40, 52],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 41, 52],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 41, 53],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 42, 53],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 42, 54],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 43, 54],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 43, 55],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 44, 55],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 44, 56],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 45, 56],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 45, 57],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 46, 57],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 46, 58],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 47, 58],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 47, 59],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 48, 59],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 48, 60],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 49, 60],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 49, 61],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 5, 16],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 5, 17],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 50, 61],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 50, 62],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 51, 62],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 51, 63],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 52, 63],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 52, 64],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 53, 64],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 53, 65],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 54, 65],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 54, 66],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 55, 66],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 55, 67],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 56, 67],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 56, 68],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 57, 68],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 57, 69],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 58, 69],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 58, 70],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 59, 70],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 59, 71],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 6, 17],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 6, 18],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 60, 71],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 60, 72],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 61, 72],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 61, 73],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 62, 73],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 62, 74],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 63, 74],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 63, 75],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 64, 75],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 64, 76],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 65, 76],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 65, 77],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 66, 77],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 66, 78],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 67, 78],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 67, 79],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 68, 79],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 68, 80],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 69, 80],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 69, 81],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 7, 18],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 7, 19],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 70, 81],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 70, 82],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 71, 82],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 71, 83],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 72, 83],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 72, 84],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 73, 84],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 73, 85],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 74, 85],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 74, 86],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 75, 86],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 75, 87],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 76, 87],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 76, 88],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 77, 88],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 77, 89],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 78, 89],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 78, 90],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 79, 90],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 79, 91],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 8, 19],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 8, 20],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 80, 91],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 80, 92],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 81, 92],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 81, 93],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 82, 93],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 82, 94],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 83, 94],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 83, 95],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 84, 95],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 84, 96],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 85, 96],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 85, 97],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 86, 97],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 86, 98],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 87, 98],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 87, 99],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 88, 100],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 88, 99],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 89, 100],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 89, 101],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 9, 20],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 9, 21],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 90, 101],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 90, 102],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 91, 102],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 91, 103],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 92, 103],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 92, 104],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 93, 104],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 93, 105],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 94, 105],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 94, 106],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 95, 106],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 95, 107],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 107],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 108],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 97, 108],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 97, 109],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 98, 109],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 98, 110],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 99, 110],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 99, 111],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 100],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 101],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 102],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 103],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 104],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 105],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 106],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 107],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 108],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 109],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 110],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 111],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 112],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 113],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 114],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 115],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 116],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 117],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 118],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 119],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 120],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 121],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 122],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 123],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 124],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 125],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 126],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 127],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 128],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 129],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 130],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 131],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 132],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 133],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 134],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 135],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 136],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 137],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 138],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 139],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 140],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 141],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 142],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 143],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 144],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 145],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 146],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 147],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 148],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 149],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 14],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 150],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 151],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 152],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 153],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 154],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 155],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 156],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 157],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 158],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 159],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 15],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 160],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 161],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 162],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 163],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 164],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 165],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 166],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 167],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 168],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 169],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 16],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 170],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 171],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 172],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 173],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 174],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 175],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 176],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 177],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 178],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 179],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 17],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 180],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 181],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 182],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 183],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 184],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 185],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 186],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 187],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 188],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 189],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 190],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 191],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 192],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 193],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 194],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 195],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 196],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 197],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 198],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 199],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 19],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 200],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 201],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 202],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 203],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 204],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 205],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 206],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 207],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 208],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 209],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 210],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 211],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 212],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 23],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 24],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 25],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 26],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 27],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 28],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 29],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 30],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 31],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 32],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 33],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 34],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 35],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 36],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 37],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 38],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 39],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 40],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 41],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 42],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 43],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 44],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 45],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 46],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 47],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 48],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 49],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 51],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 52],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 53],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 54],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 55],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 56],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 57],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 58],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 59],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 60],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 61],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 62],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 63],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 64],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 65],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 66],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 67],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 68],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 69],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 70],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 71],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 72],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 73],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 74],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 75],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 76],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 77],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 78],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 79],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 80],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 81],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 82],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 83],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 84],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 85],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 86],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 87],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 88],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 89],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 90],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 91],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 92],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 93],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 94],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 95],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 96],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 97],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 98],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 1, 99],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 16, 13, 13],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 32, 4096, 4096],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([1, 50304],"float32"), )
paddle.nn.functional.softmax(Tensor([16, 16, 1024, 1024],"float32"), )
paddle.nn.functional.softmax(Tensor([32, 16, 128, 128],"float32"), )
paddle.nn.functional.softmax(Tensor([7, 16, 128, 128],"float32"), )
paddle.ones(list[1,1,1024,1024,], dtype="int64", )
paddle.ones(tuple(1,4096,), dtype=Dtype(bool), )
paddle.ones(tuple(128,128,), )
paddle.ones_like(Tensor([1, 4096, 1],"float32"), )
paddle.ones_like(Tensor([16, 1024],"float32"), )
paddle.prod(Tensor([16, 1024],"float32"), -1, )
paddle.reshape(Tensor([32],"int64"), tuple(-1,1,), )
paddle.reshape(Tensor([7],"int64"), tuple(-1,1,), )
paddle.reshape(x=Tensor([1024, 1024],"float16"), shape=list[1048576,], )
paddle.reshape(x=Tensor([1024, 2048],"float16"), shape=list[2097152,], )
paddle.reshape(x=Tensor([1024, 4096],"float16"), shape=list[4194304,], )
paddle.reshape(x=Tensor([1024],"float16"), shape=list[1024,], )
paddle.reshape(x=Tensor([1024],"float32"), shape=list[1024,], )
paddle.reshape(x=Tensor([12288],"float16"), shape=list[12288,], )
paddle.reshape(x=Tensor([16384, 4096],"float16"), shape=list[67108864,], )
paddle.reshape(x=Tensor([16384],"float16"), shape=list[16384,], )
paddle.reshape(x=Tensor([1],"float16"), shape=list[1,], )
paddle.reshape(x=Tensor([2048, 2048],"float16"), shape=list[4194304,], )
paddle.reshape(x=Tensor([2048, 6144],"float16"), shape=list[12582912,], )
paddle.reshape(x=Tensor([2048, 8192],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([2048],"float16"), shape=list[2048,], )
paddle.reshape(x=Tensor([2048],"float32"), shape=list[2048,], )
paddle.reshape(x=Tensor([4096, 12288],"float16"), shape=list[50331648,], )
paddle.reshape(x=Tensor([4096, 16384],"float16"), shape=list[67108864,], )
paddle.reshape(x=Tensor([4096, 4096],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([4096],"float16"), shape=list[4096,], )
paddle.reshape(x=Tensor([4096],"float32"), shape=list[4096,], )
paddle.reshape(x=Tensor([50304, 2048],"float16"), shape=list[103022592,], )
paddle.reshape(x=Tensor([50304, 4096],"float16"), shape=list[206045184,], )
paddle.reshape(x=Tensor([6144],"float16"), shape=list[6144,], )
paddle.reshape(x=Tensor([8192, 2048],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([8192],"float16"), shape=list[8192,], )
paddle.rsqrt(Tensor([1, 4096, 1],"float32"), )
paddle.scale(Tensor([1024],"float16"), 0.125, )
paddle.scale(Tensor([1024],"float16"), 0.25, )
paddle.scatter(Tensor([50304],"int64"), Tensor([50304],"int64"), Tensor([50304],"int64"), )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([1024, 16, 1024],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[0,], ends=list[256,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[128,], ends=list[256,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[384,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[256,], ends=list[512,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[384,], ends=list[512,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[640,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[512,], ends=list[768,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[640,], ends=list[768,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[1024,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[768,], ends=list[896,], )
paddle.slice(Tensor([1024, 2, 1024],"float16"), axes=list[0,], starts=list[896,], ends=list[1024,], )
paddle.slice(Tensor([32, 2],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([7, 2],"int64"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.sort(Tensor([1, 50304],"float32"), descending=True, )
paddle.split(Tensor([1, 1, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1024, 16, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 13, 16, 192],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1024, 16, 2, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1024, 2, 1, 768],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1024, 2, 2, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([16, 1024, 16, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([16, 1024, 2, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([16, 1024],"float32"), 8, )
paddle.split(Tensor([16, 1024],"int64"), 8, )
paddle.split(Tensor([2, 1024, 1, 768],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([2, 1024, 2, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([32, 128, 16, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([7, 128, 16, 192],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([8, 1024, 4, 1536],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([8, 1024, 4, 3072],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([8, 1024, 4, 768],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([8, 1024],"float32"), 8, )
paddle.split(Tensor([8, 1024],"int64"), 8, )
paddle.sqrt(Tensor([1],"float32"), )
paddle.sqrt(Tensor([],"float32"), )
paddle.square(Tensor([1048576],"float16"), )
paddle.square(Tensor([12288],"float16"), )
paddle.square(Tensor([12582912],"float16"), )
paddle.square(Tensor([16384],"float16"), )
paddle.square(Tensor([16777216],"float16"), )
paddle.square(Tensor([4096],"float16"), )
paddle.square(Tensor([4096],"float32"), )
paddle.square(Tensor([4194304],"float16"), )
paddle.square(Tensor([51511296],"float16"), )
paddle.squeeze(Tensor([16, 1024, 1],"float16"), axis=-1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),], )
paddle.stack(list[Tensor([32],"int64"),Tensor([32],"int64"),], axis=-1, )
paddle.stack(list[Tensor([7],"int64"),Tensor([7],"int64"),], axis=-1, )
paddle.stack(tuple(Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),), axis=0, )
paddle.stack(tuple(Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),), axis=0, )
paddle.sum(Tensor([1, 4096, 1],"float32"), )
paddle.sum(Tensor([1024],"float32"), )
paddle.sum(Tensor([1048576],"float16"), )
paddle.sum(Tensor([12288],"float16"), )
paddle.sum(Tensor([12582912],"float16"), )
paddle.sum(Tensor([16, 1024],"float32"), )
paddle.sum(Tensor([16384],"float16"), )
paddle.sum(Tensor([16384],"float32"), )
paddle.sum(Tensor([16777216],"float16"), )
paddle.sum(Tensor([16],"float32"), )
paddle.sum(Tensor([2048],"float32"), )
paddle.sum(Tensor([4096],"float16"), )
paddle.sum(Tensor([4096],"float32"), )
paddle.sum(Tensor([4194304],"float16"), )
paddle.sum(Tensor([51511296],"float16"), )
paddle.sum(Tensor([8192],"float32"), )
paddle.topk(Tensor([1, 50304],"float32"), k=50, )
paddle.transpose(Tensor([1, 4096, 32, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([16, 1024, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 1024, 1024],"float16"), perm=list[1,0,2,], )
paddle.tril(Tensor([1, 1, 1024, 1024],"int64"), )
paddle.triu(Tensor([1, 1, 4096, 4096],"float32"), diagonal=1, )
paddle.unsqueeze(Tensor([1, 13],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([16, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([32],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7],"int64"), axis=-1, )
paddle.where(Tensor([1, 1],"bool"), Tensor([1, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.where(Tensor([1, 4096, 1],"bool"), Tensor([1, 4096, 1],"float32"), Tensor([1, 4096, 1],"float32"), )
paddle.where(Tensor([1, 50304],"bool"), Tensor([1, 50304],"float32"), Tensor([1, 50304],"float32"), )
paddle.where(Tensor([16, 1024],"bool"), Tensor([16, 1024],"float32"), Tensor([16, 1024],"float32"), )
paddle.zeros(Tensor([2],"int32"), dtype=Dtype(int64), )
paddle.zeros(list[1,], dtype="int32", )
paddle.zeros(list[147456,], dtype=Dtype(float16), )
paddle.zeros(list[16777216,], dtype=Dtype(float16), )
paddle.zeros(list[206045184,], dtype=Dtype(float16), )
paddle.zeros(list[36864,], dtype=Dtype(float32), )
paddle.zeros(list[4194304,], dtype=Dtype(float16), )
paddle.zeros(list[50331648,], dtype=Dtype(float16), )
paddle.zeros(list[67108864,], dtype=Dtype(float16), )
paddle.zeros(list[73728,], dtype=Dtype(float32), )
paddle.zeros(list[8388608,], dtype=Dtype(float16), )
paddle.zeros(shape=list[1,], dtype="float32", )
paddle.zeros(tuple(1,), dtype=Dtype(float32), )
paddle.zeros_like(Tensor([1, 13],"int64"), dtype="float32", )
paddle.zeros_like(Tensor([1, 4096, 1],"float32"), )
paddle.zeros_like(Tensor([],"float32"), )
