paddle.all(Tensor([0, 10],"bool"), )
paddle.all(Tensor([0, 10],"bool"), axis=-1, )
paddle.all(Tensor([0, 10],"bool"), axis=0, )
paddle.all(Tensor([0, 10],"bool"), axis=1, keepdim=True, )
paddle.all(Tensor([0, 3, 4, 5],"bool"), )
paddle.all(Tensor([0, 5],"bool"), )
paddle.all(Tensor([0, 5],"bool"), axis=None, )
paddle.all(Tensor([0, 5],"bool"), keepdim=True, )
paddle.all(Tensor([0, 6, 10],"bool"), None, False, None, )
paddle.all(Tensor([0, 6, 10],"float64"), None, False, None, )
paddle.all(Tensor([0],"bool"), )
paddle.all(Tensor([0],"bool"), axis=-1, )
paddle.all(Tensor([0],"bool"), axis=0, )
paddle.all(Tensor([1, 0],"bool"), )
paddle.all(Tensor([12, 0],"bool"), )
paddle.all(Tensor([12, 0],"bool"), axis=-1, )
paddle.all(Tensor([12, 0],"bool"), axis=0, )
paddle.all(Tensor([12, 0],"bool"), axis=1, keepdim=True, )
paddle.all(Tensor([2, 0, 4, 5],"bool"), )
paddle.all(Tensor([2, 3, 0, 5],"bool"), )
paddle.all(Tensor([2, 3, 4, 0],"bool"), )
paddle.all(Tensor([3, 0],"bool"), axis=None, )
paddle.all(Tensor([3, 0],"bool"), keepdim=True, )
paddle.all(Tensor([5, 0, 10],"bool"), None, False, None, )
paddle.all(Tensor([5, 0, 10],"float64"), None, False, None, )
paddle.all(Tensor([5, 6, 0],"bool"), None, False, None, )
paddle.all(Tensor([5, 6, 0],"float64"), None, False, None, )
paddle.all(x=Tensor([0, 10],"bool"), )
paddle.all(x=Tensor([0, 4, 2],"bool"), )
paddle.all(x=Tensor([0, 4, 4, 2],"bool"), )
paddle.all(x=Tensor([0, 4, 4, 2],"bool"), axis=1, )
paddle.all(x=Tensor([0, 4, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([0, 4],"bool"), keepdim=True, )
paddle.all(x=Tensor([0],"bool"), )
paddle.all(x=Tensor([10, 0],"bool"), )
paddle.all(x=Tensor([2, 0, 4, 2],"bool"), )
paddle.all(x=Tensor([2, 0, 4, 2],"bool"), axis=1, )
paddle.all(x=Tensor([2, 0, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([2, 0],"bool"), keepdim=True, )
paddle.all(x=Tensor([2, 4, 0, 2],"bool"), )
paddle.all(x=Tensor([2, 4, 0, 2],"bool"), axis=1, )
paddle.all(x=Tensor([2, 4, 0, 2],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([2, 4, 4, 0],"bool"), )
paddle.all(x=Tensor([2, 4, 4, 0],"bool"), axis=1, )
paddle.all(x=Tensor([2, 4, 4, 0],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([3, 0, 2],"bool"), )
paddle.all(x=Tensor([3, 4, 0],"bool"), )
paddle.any(Tensor([0, 10],"bool"), axis=-1, )
paddle.any(Tensor([0, 10],"bool"), axis=0, )
paddle.any(Tensor([0, 10],"bool"), axis=1, keepdim=True, )
paddle.any(Tensor([0, 11],"bool"), )
paddle.any(Tensor([0, 1],"bool"), )
paddle.any(Tensor([0, 2, 1],"bool"), )
paddle.any(Tensor([0, 2, 4, 5],"bool"), )
paddle.any(Tensor([0, 2],"bool"), list[0,], )
paddle.any(Tensor([0, 300, 4096],"bool"), )
paddle.any(Tensor([0, 5],"bool"), axis=None, )
paddle.any(Tensor([0, 5],"bool"), keepdim=True, )
paddle.any(Tensor([0, 6, 10],"bool"), None, False, None, )
paddle.any(Tensor([0, 6, 10],"float64"), None, False, None, )
paddle.any(Tensor([0],"bool"), )
paddle.any(Tensor([0],"bool"), axis=0, )
paddle.any(Tensor([1, 0, 4096],"bool"), )
paddle.any(Tensor([1, 0],"bool"), )
paddle.any(Tensor([1, 300, 0],"bool"), )
paddle.any(Tensor([10, 0, 1],"bool"), )
paddle.any(Tensor([10, 2, 0],"bool"), )
paddle.any(Tensor([12, 0],"bool"), axis=-1, )
paddle.any(Tensor([12, 0],"bool"), axis=0, )
paddle.any(Tensor([12, 0],"bool"), axis=1, keepdim=True, )
paddle.any(Tensor([2, 0],"bool"), list[0,], )
paddle.any(Tensor([3, 0],"bool"), axis=None, )
paddle.any(Tensor([3, 0],"bool"), keepdim=True, )
paddle.any(Tensor([5, 0, 10],"bool"), None, False, None, )
paddle.any(Tensor([5, 0, 10],"float64"), None, False, None, )
paddle.any(Tensor([5, 6, 0],"bool"), None, False, None, )
paddle.any(Tensor([5, 6, 0],"float64"), None, False, None, )
paddle.any(Tensor([6, 0, 4, 5],"bool"), )
paddle.any(Tensor([6, 2, 0, 5],"bool"), )
paddle.any(Tensor([6, 2, 4, 0],"bool"), )
paddle.any(x=Tensor([0, 10],"bool"), )
paddle.any(x=Tensor([0, 4, 2],"bool"), )
paddle.any(x=Tensor([0, 4, 4, 2],"bool"), )
paddle.any(x=Tensor([0, 4, 4, 2],"bool"), axis=1, )
paddle.any(x=Tensor([0, 4, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([0, 4],"bool"), keepdim=True, )
paddle.any(x=Tensor([0],"bool"), )
paddle.any(x=Tensor([10, 0],"bool"), )
paddle.any(x=Tensor([2, 0, 4, 2],"bool"), )
paddle.any(x=Tensor([2, 0, 4, 2],"bool"), axis=1, )
paddle.any(x=Tensor([2, 0, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([2, 0],"bool"), keepdim=True, )
paddle.any(x=Tensor([2, 4, 0, 2],"bool"), )
paddle.any(x=Tensor([2, 4, 0, 2],"bool"), axis=1, )
paddle.any(x=Tensor([2, 4, 0, 2],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([2, 4, 4, 0],"bool"), )
paddle.any(x=Tensor([2, 4, 4, 0],"bool"), axis=1, )
paddle.any(x=Tensor([2, 4, 4, 0],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([3, 0, 2],"bool"), )
paddle.any(x=Tensor([3, 4, 0],"bool"), )
paddle.broadcast_to(Tensor([5, 17, 0, 6],"float64"), list[5,17,0,6,], )
paddle.complex(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), )
paddle.complex(Tensor([2, 0, 4],"float32"), Tensor([2, 0, 4],"float32"), )
paddle.complex(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.complex(Tensor([2, 3, 0],"float32"), Tensor([2, 3, 0],"float32"), )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), )
paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), out_int32=True, )
paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), right=True, )
paddle.cdist(Tensor([0, 4],"float32"), Tensor([0, 4],"float32"), p=1, )
paddle.cdist(Tensor([0, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.cdist(Tensor([300, 0],"float32"), Tensor([1, 0],"float32"), p=1, )
paddle.cdist(Tensor([300, 4],"float32"), Tensor([0, 4],"float32"), p=1, )
paddle.cdist(Tensor([6380, 0],"float32"), Tensor([1, 0],"float32"), p=1, )
paddle.cdist(Tensor([6380, 4],"float32"), Tensor([0, 4],"float32"), p=1, )
paddle.chunk(Tensor([0, 1, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([0, 1, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([0, 108, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([0, 108, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([0, 11, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([0, 128, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([0, 16, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([0, 21, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([0, 21, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([0, 4, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([0, 4, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([0, 4, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([0, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([0, 56, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([0, 6, 6],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([0, 6, 6],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([1, 0, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 0, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 0, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 0, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 0, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 1, 0],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 64, 0],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 11, 0],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 4, 0, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 4, 20, 0],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 0, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 0, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([13, 0, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 0, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 0, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 16, 0],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 21, 0],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 4, 0, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 4, 0],"float32"), 4, axis=1, )
paddle.chunk(Tensor([13, 4, 7, 0],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 56, 0],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([16, 0, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([16, 128, 0],"float32"), 2, axis=1, )
paddle.chunk(Tensor([2048, 0],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([4, 0, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 0, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 0, 6],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 0, 6],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 108, 0, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 0, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 0],"float16"), 3, axis=1, )
paddle.concat(list[Tensor([0, 1, 100, 176, 176],"float32"),Tensor([6, 1, 100, 176, 176],"float32"),], )
paddle.chunk(Tensor([4, 108, 64, 0],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 6, 0],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([4, 6, 0],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([52, 0, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([52, 21, 0],"float32"), 3, axis=1, )
paddle.chunk(Tensor([8192, 0],"float32"), 2, axis=-1, )
paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([0],"bool"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=0, )
paddle.clone(Tensor([0, 100, 256],"float32"), )
paddle.clone(Tensor([0, 100, 4],"float32"), )
paddle.clone(Tensor([0, 1024, 48, 72],"float32"), )
paddle.clone(Tensor([0, 12, 1, 64],"float32"), )
paddle.clone(Tensor([0, 2541],"bool"), )
paddle.clone(Tensor([0, 3, 96, 96, 1],"float32"), )
paddle.clone(Tensor([0, 4],"float32"), )
paddle.clone(Tensor([0],"float32"), )
paddle.clone(Tensor([0],"int32"), )
paddle.clone(Tensor([1, 0, 1, 64],"float32"), )
paddle.clone(Tensor([1, 0, 256],"float32"), )
paddle.clone(Tensor([1, 0, 48, 72],"float32"), )
paddle.clone(Tensor([1, 0, 4],"float32"), )
paddle.clone(Tensor([1, 0, 96, 96, 1],"float32"), )
paddle.clone(Tensor([1, 0],"bool"), )
paddle.clone(Tensor([1, 0],"float32"), )
paddle.clone(Tensor([1, 100, 0],"float32"), )
paddle.clone(Tensor([1, 1024, 0, 72],"float32"), )
paddle.clone(Tensor([1, 1024, 48, 0],"float32"), )
paddle.clone(Tensor([1, 12, 0, 64],"float32"), )
paddle.clone(Tensor([1, 12, 1, 0],"float32"), )
paddle.clone(Tensor([1, 3, 0, 96, 1],"float32"), )
paddle.clone(Tensor([1, 3, 96, 0, 1],"float32"), )
paddle.clone(Tensor([1, 3, 96, 96, 0],"float32"), )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([2],"float64"),Tensor([2, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.combinations(Tensor([0],"float32"), r=2, )
paddle.combinations(Tensor([0],"float32"), r=2, with_replacement=True, )
paddle.combinations(Tensor([0],"float32"), r=4, )
paddle.combinations(Tensor([0],"float64"), 5, False, )
paddle.combinations(Tensor([0],"int32"), 1, True, )
paddle.combinations(Tensor([0],"int64"), 0, True, )
paddle.complex(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.complex(Tensor([0, 3, 4],"float32"), Tensor([0, 3, 4],"float32"), )
paddle.complex(Tensor([0, 3],"float32"), Tensor([0, 3],"float32"), )
paddle.complex(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.complex(Tensor([0],"float64"), Tensor([0],"float64"), )
paddle.complex(real=Tensor([0, 2, 3],"float32"), imag=Tensor([0, 2, 3],"float32"), )
paddle.complex(real=Tensor([0, 2, 3],"float64"), imag=Tensor([0, 2, 3],"float64"), )
paddle.complex(real=Tensor([0, 2],"float32"), imag=Tensor([0, 2],"float32"), )
paddle.complex(real=Tensor([0, 2],"float64"), imag=Tensor([0, 2],"float64"), )
paddle.complex(real=Tensor([0],"float32"), imag=Tensor([0],"float32"), )
paddle.complex(real=Tensor([0],"float64"), imag=Tensor([0],"float64"), )
paddle.complex(real=Tensor([3, 0],"float32"), imag=Tensor([3, 0],"float32"), )
paddle.complex(real=Tensor([3, 0],"float64"), imag=Tensor([3, 0],"float64"), )
paddle.concat(list[Tensor([0, 1, 100, 184, 184],"float32"),Tensor([6, 1, 100, 184, 184],"float32"),], )
paddle.complex(real=Tensor([9, 0, 3],"float32"), imag=Tensor([9, 0, 3],"float32"), )
paddle.complex(real=Tensor([9, 0, 3],"float64"), imag=Tensor([9, 0, 3],"float64"), )
paddle.complex(real=Tensor([9, 2, 0],"float32"), imag=Tensor([9, 2, 0],"float32"), )
paddle.complex(real=Tensor([9, 2, 0],"float64"), imag=Tensor([9, 2, 0],"float64"), )
paddle.concat(list[Tensor([0, 1, 100, 2],"float32"),Tensor([6, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 4],"float32"),Tensor([6, 1, 100, 4],"float32"),], )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 10, 5],"float32"),Tensor([1, 10, 5],"float32"),], )
paddle.concat(list[Tensor([0, 100, 120],"float64"),Tensor([3, 100, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([0, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 136, 136],"float32"),Tensor([1, 136, 136],"float32"),], )
paddle.concat(list[Tensor([0, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),Tensor([77, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 16, 16],"int64"),Tensor([1, 16, 16],"int64"),], 0, )
paddle.concat(list[Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), None, )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([0, 4, 4],"float32"), p="fro", )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), "nuc", )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), None, )
paddle.linalg.cond(Tensor([2, 0, 3, 3],"float32"), math.inf, )
paddle.linalg.cond(x=Tensor([0, 2, 4, 3, 4],"float64"), )
paddle.linalg.cond(x=Tensor([0, 2, 4, 4],"float64"), p=-1, )
paddle.linalg.cond(x=Tensor([0, 2, 4, 4],"float64"), p=-math.inf, )
paddle.linalg.cond(x=Tensor([0, 2, 4, 4],"float64"), p=math.inf, )
paddle.linalg.cond(x=Tensor([4, 0, 4, 4],"float64"), p=-1, )
paddle.linalg.cond(x=Tensor([4, 0, 4, 4],"float64"), p=-math.inf, )
paddle.linalg.cond(x=Tensor([4, 0, 4, 4],"float64"), p=math.inf, )
paddle.linalg.cond(x=Tensor([6, 0, 4, 3, 4],"float64"), )
paddle.linalg.cond(x=Tensor([6, 2, 0, 3, 4],"float64"), )
paddle.linalg.cov(Tensor([0, 4],"float32"), )
paddle.linalg.cov(x=Tensor([0, 12],"float64"), )
paddle.linalg.cov(x=Tensor([0, 2],"float32"), )
paddle.linalg.det(Tensor([0, 3, 3],"float32"), )
paddle.linalg.det(Tensor([0, 3, 5, 5],"float32"), )
paddle.linalg.det(Tensor([3, 0, 5, 5],"float32"), )
paddle.linalg.det(x=Tensor([0, 4, 4],"float64"), )
paddle.concat(list[Tensor([0, 1],"float16"),Tensor([18, 1],"float16"),Tensor([18, 1],"float16"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([18, 1],"float32"),Tensor([18, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([400, 1],"float32"),Tensor([1600, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([517, 1],"float32"),Tensor([469, 1],"float32"),Tensor([636, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([632, 1],"float32"),Tensor([633, 1],"float32"),Tensor([326, 1],"float32"),Tensor([236, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([25344, 1],"int32"),Tensor([6336, 1],"int32"),Tensor([1584, 1],"int32"),Tensor([396, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([0, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.linalg.lstsq(Tensor([10, 5],"float32"), Tensor([10, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 10],"float64"), Tensor([5, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 9],"float32"), Tensor([9, 0],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 10, 10],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=0, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 4, 4],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 4, 4],"float64"), n=8, )
paddle.linalg.matrix_power(x=Tensor([0, 4, 4],"float32"), n=3, )
paddle.linalg.matrix_power(x=Tensor([0, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 10, 10],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=0, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 4, 4],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 4, 4],"float64"), n=8, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 0, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 0, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 0, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 1, 0, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 5],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=Tensor([0],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), Tensor([0, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), Tensor([200, 0],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), Tensor([0, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), Tensor([1, 0],"float64"), False, )
paddle.linalg.matrix_rank(x=Tensor([0, 2, 4, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 3, 4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 0, 4, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 0, 4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 0, 4, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=Tensor([0],"float64"), hermitian=True, )
paddle.linalg.multi_dot(list[Tensor([0, 10],"float64"),Tensor([10, 4],"float64"),Tensor([4, 3],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 3],"float64"),Tensor([3, 2],"float64"),Tensor([2, 3],"float64"),Tensor([3],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 4],"float64"),Tensor([4, 3],"float64"),Tensor([3],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 4],"float64"),Tensor([4, 3],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 4],"float64"),Tensor([4, 8],"float64"),Tensor([8, 2],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 6],"float64"),Tensor([6, 3],"float64"),Tensor([3, 4],"float64"),Tensor([4, 5],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 6],"float64"),Tensor([6],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([0, 8],"float16"),Tensor([8, 4],"float16"),], )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([0, 10],"float32"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.linalg.solve(Tensor([2, 3, 3],"float64"), Tensor([1, 0, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([2, 3, 3],"float64"), Tensor([1, 3, 0],"float64"), )
paddle.linalg.solve(x=Tensor([0, 14, 14],"float64"), y=Tensor([0, 14, 2],"float64"), )
paddle.linalg.solve(x=Tensor([14, 14],"float64"), y=Tensor([14, 0],"float64"), )
paddle.linalg.solve(x=Tensor([4, 14, 14],"float64"), y=Tensor([4, 14, 0],"float64"), )
paddle.logical_and(Tensor([0, 1, 499, 1],"float32"), Tensor([499, 499],"float32"), )
paddle.logical_and(Tensor([0, 1001],"bool"), Tensor([0, 1001],"bool"), )
paddle.logical_and(Tensor([0, 1001],"bool"), Tensor([1, 1001],"bool"), )
paddle.logical_and(Tensor([0, 1024, 1024],"bool"), Tensor([0, 1024, 1024],"bool"), )
paddle.logical_and(Tensor([0, 1024, 1024],"bool"), Tensor([1, 1024, 1024],"bool"), )
paddle.logical_and(Tensor([0, 17, 5, 6, 7],"bool"), Tensor([0, 17, 5, 6, 7],"bool"), )
paddle.logical_and(Tensor([0, 1],"bool"), Tensor([0, 1],"bool"), )
paddle.logical_and(Tensor([0, 1],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_and(Tensor([0, 3, 4, 5],"bool"), Tensor([0, 3, 4, 5],"bool"), )
paddle.logical_and(Tensor([0, 496, 512],"bool"), Tensor([0, 496, 512],"bool"), )
paddle.logical_and(Tensor([0, 496, 512],"bool"), Tensor([1, 496, 512],"bool"), )
paddle.logical_and(Tensor([0],"bool"), Tensor([0],"bool"), )
paddle.logical_and(Tensor([1, 0, 1024],"bool"), Tensor([1, 0, 1024],"bool"), )
paddle.logical_and(Tensor([1, 0, 512],"bool"), Tensor([1, 0, 512],"bool"), )
paddle.logical_and(Tensor([1, 0],"bool"), Tensor([1, 0],"bool"), )
paddle.logical_and(Tensor([1, 0],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_and(Tensor([1, 1001],"bool"), Tensor([0, 1001],"bool"), )
paddle.logical_and(Tensor([1, 1024, 0],"bool"), Tensor([1, 1024, 0],"bool"), )
paddle.logical_and(Tensor([1, 1024, 1024],"bool"), Tensor([0, 1024, 1024],"bool"), )
paddle.logical_and(Tensor([1, 1],"bool"), Tensor([0, 1],"bool"), )
paddle.logical_and(Tensor([1, 1],"bool"), Tensor([1, 0],"bool"), )
paddle.logical_and(Tensor([1, 496, 0],"bool"), Tensor([1, 496, 0],"bool"), )
paddle.logical_and(Tensor([1, 496, 512],"bool"), Tensor([0, 496, 512],"bool"), )
paddle.logical_and(Tensor([10, 0, 499, 1],"float32"), Tensor([499, 499],"float32"), )
paddle.logical_and(Tensor([10, 1, 499, 1],"float32"), Tensor([499, 0],"float32"), )
paddle.logical_and(Tensor([2, 0, 4, 5],"bool"), Tensor([2, 0, 4, 5],"bool"), )
paddle.logical_and(Tensor([2, 3, 0, 5],"bool"), Tensor([2, 3, 0, 5],"bool"), )
paddle.logical_and(Tensor([2, 3, 4, 0],"bool"), Tensor([2, 3, 4, 0],"bool"), )
paddle.logical_and(Tensor([8, 0, 5, 6, 7],"bool"), Tensor([8, 0, 5, 6, 7],"bool"), )
paddle.logical_and(Tensor([8, 17, 0, 6, 7],"bool"), Tensor([8, 17, 0, 6, 7],"bool"), )
paddle.logical_and(Tensor([8, 17, 5, 0, 7],"bool"), Tensor([8, 17, 5, 0, 7],"bool"), )
paddle.logical_and(Tensor([8, 17, 5, 6, 0],"bool"), Tensor([8, 17, 5, 6, 0],"bool"), )
paddle.logical_and(x=Tensor([0, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_and(x=Tensor([0, 2],"bool"), y=Tensor([0, 2],"bool"), )
paddle.logical_and(x=Tensor([0],"bool"), y=Tensor([0],"bool"), )
paddle.logical_and(x=Tensor([1, 0, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_and(x=Tensor([1, 0],"bool"), y=Tensor([2, 0],"bool"), )
paddle.logical_and(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 0, 3],"bool"), )
paddle.logical_and(x=Tensor([1, 2],"bool"), y=Tensor([0, 2],"bool"), )
paddle.logical_and(x=Tensor([1],"bool"), y=Tensor([0],"bool"), )
paddle.logical_not(Tensor([0, 1, 1, 109],"bool"), )
paddle.logical_not(Tensor([0, 1, 1, 1],"bool"), )
paddle.logical_not(Tensor([0, 36828, 1],"bool"), )
paddle.logical_not(Tensor([0, 38367, 1],"bool"), )
paddle.logical_not(Tensor([0, 3],"bool"), )
paddle.logical_not(Tensor([0, 4],"int64"), )
paddle.logical_not(Tensor([0],"bool"), )
paddle.logical_not(Tensor([1, 0, 1, 109],"bool"), )
paddle.logical_not(Tensor([1, 0, 1, 1],"bool"), )
paddle.logical_not(Tensor([1, 0, 1],"bool"), )
paddle.logical_not(Tensor([1, 0],"bool"), )
paddle.logical_not(Tensor([1, 0],"int64"), )
paddle.logical_not(Tensor([1, 1, 0, 109],"bool"), )
paddle.logical_not(Tensor([1, 1, 0, 1],"bool"), )
paddle.logical_not(Tensor([1, 1, 1, 0],"bool"), )
paddle.logical_not(Tensor([1, 36828, 0],"bool"), )
paddle.logical_not(Tensor([1, 38367, 0],"bool"), )
paddle.logical_not(x=Tensor([0, 2, 1, 3],"bool"), )
paddle.logical_not(x=Tensor([0, 2],"bool"), )
paddle.logical_not(x=Tensor([0],"bool"), )
paddle.logical_not(x=Tensor([1, 0, 1, 3],"bool"), )
paddle.logical_not(x=Tensor([1, 0],"bool"), )
paddle.logical_not(x=Tensor([1, 2, 0, 3],"bool"), )
paddle.logical_not(x=Tensor([1, 2, 1, 0],"bool"), )
paddle.logical_or(Tensor([0, 1],"bool"), Tensor([0, 1],"bool"), )
paddle.logical_or(Tensor([0, 1],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_or(Tensor([0, 20, 1],"float32"), Tensor([0, 20, 1],"float32"), )
paddle.logical_or(Tensor([0, 7, 1],"bool"), Tensor([0, 1, 7],"bool"), )
paddle.logical_or(Tensor([0],"bool"), Tensor([0],"bool"), )
paddle.logical_or(Tensor([0],"bool"), Tensor([1],"bool"), )
paddle.logical_or(Tensor([1, 0],"bool"), Tensor([1, 0],"bool"), )
paddle.logical_or(Tensor([1, 0],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_or(Tensor([1, 1],"bool"), Tensor([0, 1],"bool"), )
paddle.logical_or(Tensor([1, 1],"bool"), Tensor([1, 0],"bool"), )
paddle.logical_or(Tensor([10, 0, 1],"float32"), Tensor([10, 0, 1],"float32"), )
paddle.logical_or(Tensor([10, 20, 0],"float32"), Tensor([10, 20, 0],"float32"), )
paddle.logical_or(Tensor([10, 20, 0],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.logical_or(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 0],"float32"), )
paddle.logical_or(Tensor([13, 0, 1],"bool"), Tensor([13, 0, 7],"bool"), )
paddle.logical_or(Tensor([13, 0, 1],"bool"), Tensor([13, 1, 7],"bool"), )
paddle.logical_or(Tensor([13, 7, 0],"bool"), Tensor([13, 1, 0],"bool"), )
paddle.logical_or(Tensor([13, 7, 1],"bool"), Tensor([13, 1, 0],"bool"), )
paddle.logical_or(Tensor([1],"bool"), Tensor([0],"bool"), )
paddle.logical_or(Tensor([2, 0],"bool"), Tensor([2, 0],"bool"), )
paddle.logical_or(Tensor([2, 0],"bool"), Tensor([2, 1],"bool"), )
paddle.logical_or(Tensor([2, 1],"bool"), Tensor([2, 0],"bool"), )
paddle.logical_or(x=Tensor([0, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_or(x=Tensor([0, 2],"bool"), y=Tensor([0, 2],"bool"), )
paddle.logical_or(x=Tensor([0],"bool"), y=Tensor([0],"bool"), )
paddle.logical_or(x=Tensor([1, 0, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_or(x=Tensor([1, 0],"bool"), y=Tensor([2, 0],"bool"), )
paddle.logical_or(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 0, 3],"bool"), )
paddle.logical_or(x=Tensor([1, 2],"bool"), y=Tensor([0, 2],"bool"), )
paddle.logical_or(x=Tensor([1],"bool"), y=Tensor([0],"bool"), )
paddle.logical_xor(Tensor([0, 20, 1],"float32"), Tensor([0, 20, 1],"float32"), )
paddle.logical_xor(Tensor([0, 3, 2],"bool"), Tensor([0, 3, 2],"complex128"), )
paddle.logical_xor(Tensor([10, 0, 1],"float32"), Tensor([10, 0, 1],"float32"), )
paddle.logical_xor(Tensor([10, 20, 0],"float32"), Tensor([10, 20, 0],"float32"), )
paddle.logical_xor(Tensor([10, 20, 0],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.logical_xor(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 0],"float32"), )
paddle.logical_xor(Tensor([4, 0, 2],"bool"), Tensor([4, 0, 2],"complex128"), )
paddle.logical_xor(Tensor([4, 3, 0],"bool"), Tensor([4, 3, 0],"complex128"), )
paddle.logical_xor(x=Tensor([0, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_xor(x=Tensor([0, 2],"bool"), y=Tensor([0, 2],"bool"), )
paddle.logical_xor(x=Tensor([0],"bool"), y=Tensor([0],"bool"), )
paddle.logical_xor(x=Tensor([1, 0, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_xor(x=Tensor([1, 0],"bool"), y=Tensor([2, 0],"bool"), )
paddle.logical_xor(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 0, 3],"bool"), )
paddle.logical_xor(x=Tensor([1, 2],"bool"), y=Tensor([0, 2],"bool"), )
paddle.logical_xor(x=Tensor([1],"bool"), y=Tensor([0],"bool"), )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([7200, 256],"float32"),Tensor([1800, 256],"float32"),Tensor([450, 256],"float32"),Tensor([117, 256],"float32"),Tensor([35, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([400, 2],"float32"),Tensor([1600, 2],"float32"),], )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([1, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 3, 112, 112],"float32"),Tensor([20, 3, 112, 112],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 224, 224],"float32"),Tensor([1, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([1570, 4],"float32"),Tensor([1690, 4],"float32"),Tensor([1866, 4],"float32"),Tensor([406, 4],"float32"),Tensor([97, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([4, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([7974, 4],"int32"),Tensor([7485, 4],"int32"),Tensor([5551, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 50, 50, 5],"float32"),Tensor([60, 50, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 52, 14, 8],"float32"),Tensor([1, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 5],"float64"),Tensor([1, 5],"float64"),Tensor([1, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([0, 7, 32],"float32"),Tensor([13, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 7],"float32"),Tensor([7, 7],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 96],"float32"),Tensor([64, 96],"float32"),], 0, )
paddle.concat(list[Tensor([0],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([128],"float16"),Tensor([128],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([512],"float16"),Tensor([512],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([102],"float32"),Tensor([35],"float32"),Tensor([50],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([128],"float32"),Tensor([77],"float32"),Tensor([128],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([132],"float32"),Tensor([140],"float32"),Tensor([56],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([184],"float32"),Tensor([108],"float32"),Tensor([136],"float32"),Tensor([84],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([1],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([2],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([3],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([512],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([511],"float64"),Tensor([1],"float64"),], )
paddle.concat(list[Tensor([0],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"int32"),Tensor([20524],"int32"),Tensor([19780],"int32"),Tensor([17980],"int32"),Tensor([14701],"int32"),Tensor([25757],"int32"),Tensor([27860],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([2],"int64"),], -1, )
paddle.concat(list[Tensor([0],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 100, 136],"float32"),Tensor([1, 1, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 152],"float32"),Tensor([1, 1, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 10],"float32"),Tensor([1, 4096, 10],"float32"),Tensor([1, 16384, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 11],"float32"),Tensor([1, 676, 11],"float32"),Tensor([1, 169, 11],"float32"),Tensor([1, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 18, 18],"float32"),Tensor([1, 160, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 4096, 1],"float32"),Tensor([1, 16384, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 1200, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 300, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 1200, 2],"float32"),Tensor([1, 300, 2],"float32"),Tensor([1, 80, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 6912, 2],"float32"),Tensor([1, 1728, 2],"float32"),Tensor([1, 432, 2],"float32"),Tensor([1, 108, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 225, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 4, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 676, 32],"float32"),Tensor([1, 169, 32],"float32"),Tensor([1, 49, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 1024, 4],"float32"),Tensor([1, 256, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 25920, 4],"float32"),Tensor([1, 6480, 4],"float32"),Tensor([1, 1620, 4],"float32"),Tensor([1, 420, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 300, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 62208, 4],"float32"),Tensor([1, 15552, 4],"float32"),Tensor([1, 3888, 4],"float32"),Tensor([1, 972, 4],"float32"),Tensor([1, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 900, 4],"float32"),Tensor([1, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 64, 64],"float32"),Tensor([1, 128, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"bool"),Tensor([1, 1],"bool"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 1200],"float32"),Tensor([1, 300],"float32"),Tensor([1, 80],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 1620],"float32"),Tensor([1, 414],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 432],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 7200],"float32"),Tensor([1, 1800],"float32"),Tensor([1, 450],"float32"),Tensor([1, 117],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"int64"),Tensor([1, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 0],"int64"),Tensor([1, 2],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1620],"float32"),Tensor([1, 1, 414],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 676],"float32"),Tensor([1, 1, 169],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 7200],"float32"),Tensor([1, 1, 1800],"float32"),Tensor([1, 1, 450],"float32"),Tensor([1, 1, 117],"float32"),Tensor([1, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 784],"float32"),Tensor([1, 1, 196],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 16],"float32"),Tensor([1, 1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float32"),Tensor([1, 1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 100, 136],"float32"),Tensor([1, 0, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 100, 152],"float32"),Tensor([1, 0, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 100, 176, 176],"float32"),Tensor([0, 1, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 184, 184],"float32"),Tensor([0, 1, 100, 184, 184],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 2],"float32"),Tensor([0, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 4],"float32"),Tensor([0, 1, 100, 4],"float32"),], )
paddle.concat(list[Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 1],"float32"),Tensor([1, 1, 10285, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 1],"float32"),Tensor([1, 1, 24276, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2704],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 169],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2704],"float32"),Tensor([1, 1, 676],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2704],"float32"),Tensor([1, 1, 676],"float32"),Tensor([1, 1, 169],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 27648],"float32"),Tensor([1, 1, 6912],"float32"),Tensor([1, 1, 1728],"float32"),Tensor([1, 1, 432],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 28800],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1800],"float32"),Tensor([1, 1, 450],"float32"),Tensor([1, 1, 117],"float32"),Tensor([1, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 28800],"float32"),Tensor([1, 1, 7200],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 450],"float32"),Tensor([1, 1, 117],"float32"),Tensor([1, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 28800],"float32"),Tensor([1, 1, 7200],"float32"),Tensor([1, 1, 1800],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 117],"float32"),Tensor([1, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 28800],"float32"),Tensor([1, 1, 7200],"float32"),Tensor([1, 1, 1800],"float32"),Tensor([1, 1, 450],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 28800],"float32"),Tensor([1, 1, 7200],"float32"),Tensor([1, 1, 1800],"float32"),Tensor([1, 1, 450],"float32"),Tensor([1, 1, 117],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1, 2],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 3136],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 196],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 3136],"float32"),Tensor([1, 1, 784],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 3136],"float32"),Tensor([1, 1, 784],"float32"),Tensor([1, 1, 196],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 32],"float32"),Tensor([1, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 3],"float32"),Tensor([1, 1, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4800],"float32"),Tensor([1, 1, 1200],"float32"),Tensor([1, 1, 300],"float32"),Tensor([1, 1, 80],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 4],"float32"),Tensor([1, 1, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 6408],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 414],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 6408],"float32"),Tensor([1, 1, 1620],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 6408],"float32"),Tensor([1, 1, 1620],"float32"),Tensor([1, 1, 414],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 6408],"float32"),Tensor([1, 1, 1620],"float32"),Tensor([1, 1, 414],"float32"),Tensor([1, 1, 108],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 10, 5],"float32"),Tensor([0, 10, 5],"float32"),], )
paddle.concat(list[Tensor([1, 100, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 100, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 1024, 10],"float32"),Tensor([1, 0, 10],"float32"),Tensor([1, 16384, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 10],"float32"),Tensor([1, 4096, 10],"float32"),Tensor([1, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 768, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 16384, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 1],"float32"),Tensor([1, 4096, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 768, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 1],"float32"),Tensor([1, 25920, 1],"float32"),Tensor([1, 6480, 1],"float32"),Tensor([1, 1620, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 6480, 4],"float32"),Tensor([1, 1620, 4],"float32"),Tensor([1, 420, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 4],"float32"),Tensor([1, 25920, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 1620, 4],"float32"),Tensor([1, 420, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 4],"float32"),Tensor([1, 25920, 4],"float32"),Tensor([1, 6480, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 420, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 4],"float32"),Tensor([1, 25920, 4],"float32"),Tensor([1, 6480, 4],"float32"),Tensor([1, 1620, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 107, 0],"float16"),Tensor([1, 107, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 107, 128],"float16"),Tensor([1, 107, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 109, 0],"float16"),Tensor([1, 109, 109],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 109, 128],"float16"),Tensor([1, 109, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 128],"float32"),Tensor([1, 1100, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),Tensor([1, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 32, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 64, 64],"float32"),Tensor([1, 0, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 136, 136],"float32"),Tensor([0, 136, 136],"float32"),], )
paddle.concat(list[Tensor([1, 15, 15, 0],"float32"),Tensor([1, 15, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 15, 15, 2],"float32"),Tensor([1, 15, 15, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 192],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 192],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 16, 0],"float32"),Tensor([1, 16, 16, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 16, 2],"float32"),Tensor([1, 16, 16, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 16],"int64"),Tensor([0, 16, 16],"int64"),], 0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([1, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 160, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([1, 18, 0],"float32"),Tensor([1, 18, 128],"float32"),Tensor([1, 18, 128],"float32"),Tensor([1, 18, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 18, 128],"float32"),Tensor([1, 18, 0],"float32"),Tensor([1, 18, 128],"float32"),Tensor([1, 18, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 18, 128],"float32"),Tensor([1, 18, 128],"float32"),Tensor([1, 18, 0],"float32"),Tensor([1, 18, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 18, 128],"float32"),Tensor([1, 18, 128],"float32"),Tensor([1, 18, 128],"float32"),Tensor([1, 18, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 188, 140, 0, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 0, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 0],"float32"),Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 0],"int32"),Tensor([1, 188, 140, 2],"int32"),Tensor([1, 188, 140, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 0, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 1, 2, 7],"float32"),Tensor([1, 188, 140, 0, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 0, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 2, 7],"float32"),Tensor([1, 188, 140, 0, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 0],"float32"),Tensor([1, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 2],"float32"),Tensor([1, 188, 140, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 2],"int32"),Tensor([1, 188, 140, 0],"int32"),Tensor([1, 188, 140, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 2],"int32"),Tensor([1, 188, 140, 2],"int32"),Tensor([1, 188, 140, 0],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 192, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 192, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1],"bool"),Tensor([1, 0],"bool"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([0, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([0, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([0, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([0, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([0, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([0, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([0, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([0, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([0, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([0, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),Tensor([11, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([0, 1],"int32"),Tensor([3, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),Tensor([5, 1],"int32"),Tensor([8, 1],"int32"),Tensor([22, 1],"int32"),Tensor([5, 1],"int32"),Tensor([5, 1],"int32"),Tensor([18, 1],"int32"),Tensor([3, 1],"int32"),Tensor([9, 1],"int32"),Tensor([4, 1],"int32"),Tensor([1, 1],"int32"),Tensor([2, 1],"int32"),Tensor([11, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([1, 1],"int64"),Tensor([1, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 2, 0],"float64"),Tensor([1, 2, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 2, 1],"float64"),Tensor([1, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 384],"float32"),Tensor([1, 20, 15, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 21504, 0],"float32"),Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 0],"float32"),Tensor([1, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 2],"float32"),Tensor([1, 21504, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 768],"float32"),Tensor([1, 24, 18, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 1],"float32"),Tensor([1, 62208, 1],"float32"),Tensor([1, 15552, 1],"float32"),Tensor([1, 3888, 1],"float32"),Tensor([1, 972, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 15552, 4],"float32"),Tensor([1, 3888, 4],"float32"),Tensor([1, 972, 4],"float32"),Tensor([1, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 4],"float32"),Tensor([1, 62208, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 3888, 4],"float32"),Tensor([1, 972, 4],"float32"),Tensor([1, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 4],"float32"),Tensor([1, 62208, 4],"float32"),Tensor([1, 15552, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 972, 4],"float32"),Tensor([1, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 4],"float32"),Tensor([1, 62208, 4],"float32"),Tensor([1, 15552, 4],"float32"),Tensor([1, 3888, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 248832, 4],"float32"),Tensor([1, 62208, 4],"float32"),Tensor([1, 15552, 4],"float32"),Tensor([1, 3888, 4],"float32"),Tensor([1, 972, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),Tensor([1, 256, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 256, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 11],"float32"),Tensor([1, 0, 11],"float32"),Tensor([1, 169, 11],"float32"),Tensor([1, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 11],"float32"),Tensor([1, 676, 11],"float32"),Tensor([1, 0, 11],"float32"),Tensor([1, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 11],"float32"),Tensor([1, 676, 11],"float32"),Tensor([1, 169, 11],"float32"),Tensor([1, 0, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 32],"float32"),Tensor([1, 0, 32],"float32"),Tensor([1, 169, 32],"float32"),Tensor([1, 49, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 32],"float32"),Tensor([1, 676, 32],"float32"),Tensor([1, 0, 32],"float32"),Tensor([1, 49, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 32],"float32"),Tensor([1, 676, 32],"float32"),Tensor([1, 169, 32],"float32"),Tensor([1, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 256],"float32"),Tensor([1, 6912, 256],"float32"),Tensor([1, 1728, 256],"float32"),Tensor([1, 432, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 1728, 2],"float32"),Tensor([1, 432, 2],"float32"),Tensor([1, 108, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 2],"float32"),Tensor([1, 6912, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 432, 2],"float32"),Tensor([1, 108, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 2],"float32"),Tensor([1, 6912, 2],"float32"),Tensor([1, 1728, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 108, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648, 2],"float32"),Tensor([1, 6912, 2],"float32"),Tensor([1, 1728, 2],"float32"),Tensor([1, 432, 2],"float32"),Tensor([1, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 432],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 0],"float32"),Tensor([1, 432],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 0],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 27648],"float32"),Tensor([1, 6912],"float32"),Tensor([1, 1728],"float32"),Tensor([1, 432],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 28800],"float32"),Tensor([1, 0],"float32"),Tensor([1, 1800],"float32"),Tensor([1, 450],"float32"),Tensor([1, 117],"float32"),], 1, )
paddle.concat(list[Tensor([1, 28800],"float32"),Tensor([1, 7200],"float32"),Tensor([1, 0],"float32"),Tensor([1, 450],"float32"),Tensor([1, 117],"float32"),], 1, )
paddle.concat(list[Tensor([1, 28800],"float32"),Tensor([1, 7200],"float32"),Tensor([1, 1800],"float32"),Tensor([1, 0],"float32"),Tensor([1, 117],"float32"),], 1, )
paddle.concat(list[Tensor([1, 28800],"float32"),Tensor([1, 7200],"float32"),Tensor([1, 1800],"float32"),Tensor([1, 450],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 2],"float64"),Tensor([0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 3, 224, 224],"float32"),Tensor([0, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.argsort(Tensor([0, 1],"float64"), axis=0, )
paddle.argsort(Tensor([0, 1],"float64"), axis=0, descending=True, )
paddle.argsort(Tensor([0, 1],"float64"), axis=0, descending=True, stable=True, )
paddle.argsort(Tensor([0, 1],"float64"), axis=0, stable=True, )
paddle.argsort(Tensor([0, 3, 4],"float64"), axis=0, descending=True, stable=True, )
paddle.argsort(Tensor([0, 3, 4],"float64"), axis=0, stable=True, )
paddle.Tensor.argsort(Tensor([0],"float32"), )
paddle.Tensor.argsort(Tensor([4, 0],"float32"), axis=1, descending=True, )
paddle.Tensor.argsort(Tensor([4, 0],"int64"), axis=1, )
paddle.Tensor.bmm(Tensor([0, 108472, 3],"float32"), Tensor([0, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([0, 1156, 3],"float32"), Tensor([0, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 0, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 108472, 3],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.Tensor.bmm(Tensor([1, 1156, 3],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([0, 4, 3],"float64"), y=Tensor([0, 4, 4],"float64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.cholesky_solve(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 4, 0],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.Tensor.chunk(Tensor([0, 1, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 1, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 1, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 1, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 10, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 10, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 100, 4],"float32"), 4, )
paddle.Tensor.chunk(Tensor([0, 128, 1007],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 128, 10],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 160, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 160, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 196, 768],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 300, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([0, 300, 16],"float32"), 2, )
paddle.Tensor.chunk(Tensor([0, 300, 1],"float32"), 1, )
paddle.Tensor.chunk(Tensor([0, 300, 2],"float32"), 2, )
paddle.Tensor.chunk(Tensor([0, 300, 4],"float32"), 4, )
paddle.Tensor.chunk(Tensor([0, 300, 5],"float32"), 1, )
paddle.Tensor.chunk(Tensor([0, 300, 8],"float32"), 8, )
paddle.Tensor.chunk(Tensor([0, 3136, 192],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 4],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 8, 32],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([1, 0, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 1],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 0, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 5],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([1, 1, 0, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 0, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 1, 0],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 10164, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 10285, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 0, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 1, 0],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 300, 0],"float32"), 1, )
paddle.Tensor.chunk(Tensor([128, 0, 192],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 0, 768],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 196, 0],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 3136, 0],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([13, 0, 1007],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 0, 10],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 0, 32],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([13, 128, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 8, 0],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([16, 0, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([16, 0, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 0, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 0, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 0, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 16, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 8, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 300, 0],"float32"), 16, )
paddle.Tensor.chunk(Tensor([2, 0, 16],"float32"), 2, )
paddle.Tensor.chunk(Tensor([2, 0, 2],"float32"), 2, )
paddle.Tensor.chunk(Tensor([2, 300, 0],"float32"), 2, )
paddle.Tensor.chunk(Tensor([4, 0, 4],"float32"), 4, )
paddle.Tensor.chunk(Tensor([4, 100, 0],"float32"), 4, )
paddle.Tensor.chunk(Tensor([4, 300, 0],"float32"), 4, )
paddle.Tensor.chunk(Tensor([8, 0, 8],"float32"), 8, )
paddle.Tensor.chunk(Tensor([8, 300, 0],"float32"), 8, )
paddle.Tensor.clone(Tensor([0, 100, 256],"float32"), )
paddle.Tensor.clone(Tensor([0, 100, 4],"float32"), )
paddle.Tensor.clone(Tensor([0, 1024, 48, 72],"float32"), )
paddle.Tensor.clone(Tensor([0, 12, 1, 64],"float32"), )
paddle.Tensor.clone(Tensor([0, 19],"int64"), )
paddle.Tensor.clone(Tensor([0, 1],"int64"), )
paddle.Tensor.clone(Tensor([0, 3, 96, 96, 1],"float32"), )
paddle.Tensor.clone(Tensor([0],"float32"), )
paddle.Tensor.clone(Tensor([0],"int32"), )
paddle.Tensor.clone(Tensor([1, 0, 1, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 0, 256],"float32"), )
paddle.Tensor.clone(Tensor([1, 0, 48, 72],"float32"), )
paddle.Tensor.clone(Tensor([1, 0, 4],"float32"), )
paddle.Tensor.clone(Tensor([1, 0, 96, 96, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 0],"int64"), )
paddle.Tensor.clone(Tensor([1, 100, 0],"float32"), )
paddle.Tensor.clone(Tensor([1, 1024, 0, 72],"float32"), )
paddle.Tensor.clone(Tensor([1, 1024, 48, 0],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 0, 64],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 1, 0],"float32"), )
paddle.Tensor.clone(Tensor([1, 3, 0, 96, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 3, 96, 0, 1],"float32"), )
paddle.Tensor.clone(Tensor([1, 3, 96, 96, 0],"float32"), )
paddle.Tensor.cumsum(Tensor([0, 4, 2],"int64"), axis=0, )
paddle.Tensor.cumsum(Tensor([0, 4],"int64"), axis=0, )
paddle.Tensor.cumsum(Tensor([0],"float32"), -1, )
paddle.Tensor.cumsum(Tensor([0],"float64"), -1, )
paddle.Tensor.cumsum(Tensor([0],"int64"), 0, )
paddle.Tensor.cumsum(Tensor([1, 0, 8],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 0, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 0],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 10, 0],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 12, 0],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([13, 0],"int32"), -1, )
paddle.Tensor.cumsum(Tensor([2, 0],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([3, 0, 2],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([3, 0],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([3, 4, 0],"int64"), axis=2, )
paddle.Tensor.diagonal(Tensor([0, 2],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([0, 3],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([2, 0],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([3, 0],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.diff(Tensor([0],"float32"), )
paddle.Tensor.diff(Tensor([0],"float64"), )
paddle.Tensor.diff(x=Tensor([0, 4, 4, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([0, 4, 4, 4],"float64"), axis=-2, )
paddle.Tensor.diff(x=Tensor([0, 4, 4, 4],"float64"), axis=2, )
paddle.Tensor.diff(x=Tensor([0, 4, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([0, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([0, 4],"float64"), axis=0, prepend=Tensor([0, 4],"float64"), append=Tensor([0, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([0, 4],"float64"), axis=0, prepend=Tensor([4, 4],"float64"), append=Tensor([4, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([0],"float32"), )
paddle.Tensor.diff(x=Tensor([0],"float64"), )
paddle.Tensor.diff(x=Tensor([0],"float64"), prepend=Tensor([0],"float64"), )
paddle.Tensor.diff(x=Tensor([0],"float64"), prepend=Tensor([0],"float64"), append=Tensor([0],"float64"), )
paddle.Tensor.diff(x=Tensor([0],"float64"), prepend=Tensor([4],"float64"), )
paddle.Tensor.diff(x=Tensor([0],"float64"), prepend=Tensor([4],"float64"), append=Tensor([4],"float64"), )
paddle.Tensor.diff(x=Tensor([10, 0],"float64"), axis=0, prepend=Tensor([4, 0],"float64"), append=Tensor([4, 0],"float64"), )
paddle.Tensor.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([0, 4],"float64"), append=Tensor([4, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([4, 4],"float64"), append=Tensor([0, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([10],"float64"), prepend=Tensor([0],"float64"), )
paddle.Tensor.diff(x=Tensor([10],"float64"), prepend=Tensor([0],"float64"), append=Tensor([4],"float64"), )
paddle.Tensor.diff(x=Tensor([10],"float64"), prepend=Tensor([4],"float64"), append=Tensor([0],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 0, 4, 4],"float64"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 0, 4, 4],"float64"), axis=2, )
paddle.Tensor.diff(x=Tensor([4, 0, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 0],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 4, 0, 4],"float64"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 4, 0, 4],"float64"), axis=2, )
paddle.Tensor.diff(x=Tensor([4, 4, 0],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 0],"float64"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 0],"float64"), axis=2, )
paddle.Tensor.equal(Tensor([0, 10],"int64"), 3, )
paddle.Tensor.equal(Tensor([0, 128],"int64"), Tensor([0, 128],"int64"), )
paddle.Tensor.equal(Tensor([128, 0],"int64"), Tensor([128, 0],"int64"), )
paddle.Tensor.equal(Tensor([2, 0],"int64"), 3, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.fill_(Tensor([0, 10],"float32"), 1, )
paddle.Tensor.fill_(Tensor([0, 2, 3],"float32"), 0, )
paddle.Tensor.fill_(Tensor([0, 30],"float32"), 1, )
paddle.Tensor.fill_(Tensor([0, 32],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([0, 32],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([0, 77],"float32"), value=-math.inf, )
paddle.Tensor.fill_(Tensor([0],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([0],"float32"), 0, )
paddle.Tensor.fill_(Tensor([0],"float32"), 1, )
paddle.Tensor.fill_(Tensor([0],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([10, 0],"float32"), 1, )
paddle.Tensor.fill_(Tensor([20, 0],"float32"), 1, )
paddle.Tensor.fill_(Tensor([32, 0],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 0],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([4, 0, 3],"float32"), 0, )
paddle.Tensor.fill_(Tensor([4, 2, 0],"float32"), 0, )
paddle.Tensor.fill_(Tensor([77, 0],"float32"), value=-math.inf, )
paddle.Tensor.fill_(x=Tensor([0, 16, 16],"float64"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([0, 16],"float64"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([0, 4],"float32"), value=4, )
paddle.Tensor.fill_(x=Tensor([0, 4],"float64"), value=4, )
paddle.Tensor.fill_(x=Tensor([0],"float64"), value=4.2, )
paddle.Tensor.fill_(x=Tensor([10, 0, 16],"float64"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([10, 16, 0],"float64"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([16, 0],"float64"), value=41.2, )
paddle.Tensor.fill_(x=Tensor([4, 0],"float32"), value=4, )
paddle.Tensor.fill_(x=Tensor([4, 0],"float64"), value=4, )
paddle.Tensor.flatten(Tensor([0, 1, 10285],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([0, 1, 12, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([0, 1, 16, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([0, 1, 1],"int32"), )
paddle.Tensor.flatten(Tensor([0, 1, 2, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([0, 1, 3598],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([0, 1, 4, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([0, 1, 4, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([0, 10, 100, 100],"float32"), 2, )
paddle.Tensor.flatten(Tensor([0, 10, 104, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([0, 10, 15, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([0, 10, 1],"int32"), )
paddle.Tensor.flatten(Tensor([0, 10, 8],"float32"), 1, )
paddle.Tensor.flatten(Tensor([0, 100],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([0, 10],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([0, 11, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([0, 12, 9],"float32"), 1, )
paddle.Tensor.flatten(Tensor([0, 12544],"float32"), 1, )
paddle.Tensor.flatten(Tensor([0, 16, 16],"int64"), start_axis=1, )
paddle.Tensor.flatten(Tensor([0, 18, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([0, 19, 29, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([0, 19, 34, 1],"float32"), )
paddle.Tensor.flatten(Tensor([0, 1],"int32"), )
paddle.Tensor.flatten(Tensor([0, 2, 16, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([0, 2, 16, 4, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([0, 2, 4, 16],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([0, 24, 24, 192],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([0, 3, 6, 6, 4],"float32"), )
paddle.Tensor.flatten(Tensor([0, 300, 11],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([0, 300, 12544],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([0, 300, 176, 176],"float32"), -2, )
paddle.Tensor.flatten(Tensor([0, 300, 184, 184],"float32"), -2, )
paddle.Tensor.flatten(Tensor([0, 32, 476, 3, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([0, 33, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([0, 38, 68, 1],"float32"), )
paddle.Tensor.flatten(Tensor([0, 4, 7, 4, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([0, 6, 10, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([0, 6, 4, 4],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([0, 6, 4, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([0, 64, 25, 376, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([0, 64, 56, 56],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([0, 7, 64, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([0, 8, 11, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([0, 8, 1100, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([0],"bfloat16"), )
paddle.Tensor.flatten(Tensor([0],"int32"), )
paddle.Tensor.flatten(Tensor([1, 0, 100, 100],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 0, 10285],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 0, 104, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 0, 11, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 0, 1100, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 0, 11],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 0, 12, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 0, 12544],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 0, 16, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 0, 176, 176],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 0, 184, 184],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 0, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 0, 2, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 0, 24, 192],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([1, 0, 3598],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 0, 4, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 0, 4, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 0, 4, 4],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 0, 4, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 0, 4, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 0, 8],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 0, 9],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 0],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 0],"int32"), )
paddle.Tensor.flatten(Tensor([1, 1, 0, 2, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 1, 0, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 0, 64],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 0],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 1, 0],"int32"), )
paddle.Tensor.flatten(Tensor([1, 1, 12, 0],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 16, 0],"float32"), start_axis=2, )
paddle.Tensor.flatten(Tensor([1, 1, 2, 0, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 2, 2, 0],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 0, 2],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 0, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 2, 0],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 1, 4, 2, 0],"float32"), 3, )
paddle.Tensor.flatten(Tensor([1, 10, 0, 100],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 0, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 0],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 10, 0],"int32"), )
paddle.Tensor.flatten(Tensor([1, 10, 100, 0],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 10, 104, 0],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 11, 0, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 11, 4, 0, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 11, 4, 64, 0],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 12, 0],"float32"), 1, )
paddle.Tensor.flatten(Tensor([1, 18, 0, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 18, 4, 0, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 18, 4, 64, 0],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 24, 0, 192],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([1, 24, 24, 0],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([1, 300, 0, 176],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 0, 184],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 0],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 300, 176, 0],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 300, 184, 0],"float32"), -2, )
paddle.Tensor.flatten(Tensor([1, 6, 0, 4],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 6, 0, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 6, 4, 0],"float16"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 6, 4, 0],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([1, 8, 0, 4, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 11, 0, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 11, 4, 0],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 1100, 0, 2],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([1, 8, 1100, 4, 0],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([10, 0],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([100, 0],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([100, 0],"float32"), 1, )
paddle.Tensor.flatten(Tensor([12, 0, 34, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 0, 68, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 19, 0, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 19, 34, 0],"float32"), )
paddle.Tensor.flatten(Tensor([12, 38, 0, 1],"float32"), )
paddle.Tensor.flatten(Tensor([12, 38, 68, 0],"float32"), )
paddle.Tensor.flatten(Tensor([128, 0, 476, 3, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 0, 56, 56],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([128, 32, 0, 3, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 32, 476, 0, 4],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 32, 476, 3, 0],"float32"), -2, )
paddle.Tensor.flatten(Tensor([128, 64, 0, 56],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([128, 64, 56, 0],"float32"), start_axis=2, stop_axis=-1, )
paddle.Tensor.flatten(Tensor([13, 0, 16, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 0, 16, 4, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 0, 4, 16],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 0, 64, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 0, 7, 4, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 2, 0, 16],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 0, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 0, 4, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 16, 0, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 16, 0, 1],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 16, 4, 0],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 2, 4, 0],"int64"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([13, 4, 0, 4, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 4, 7, 0, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 4, 7, 4, 0],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 7, 0, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([13, 7, 64, 0],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([16, 0, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([16, 33, 0, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([16, 33, 1, 0],"float32"), 1, )
paddle.Tensor.flatten(Tensor([2, 0, 10, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 0, 15, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 0, 16],"int64"), start_axis=1, )
paddle.Tensor.flatten(Tensor([2, 0, 29, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 0, 6, 6, 4],"float32"), )
paddle.Tensor.flatten(Tensor([2, 10, 0, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 10, 15, 0],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 16, 0],"int64"), start_axis=1, )
paddle.Tensor.flatten(Tensor([2, 19, 0, 256],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 19, 29, 0],"float32"), 1, 2, )
paddle.Tensor.flatten(Tensor([2, 3, 0, 6, 4],"float32"), )
paddle.Tensor.flatten(Tensor([2, 3, 6, 0, 4],"float32"), )
paddle.Tensor.flatten(Tensor([2, 3, 6, 6, 0],"float32"), )
paddle.Tensor.flatten(Tensor([2, 6, 0, 3, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 6, 10, 0, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([2, 6, 10, 3, 0],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([23, 0, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([23, 33, 0, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([23, 33, 1, 0],"float32"), 1, )
paddle.Tensor.flatten(Tensor([4, 0, 25, 376, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4, 64, 0, 376, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4, 64, 25, 0, 280],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([4, 64, 25, 376, 0],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([52, 0, 64, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([52, 7, 0, 2],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([52, 7, 64, 0],"float32"), -2, -1, )
paddle.Tensor.inner(x=Tensor([0, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 3, 4],"float64"), y=Tensor([2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([0, 4],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([0, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 4],"float64"), y=Tensor([3, 2, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 4],"float64"), y=Tensor([5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([0, 5, 3, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 0, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 0, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([5, 0, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 0, 4],"float64"), y=Tensor([2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), )
paddle.maximum(Tensor([0, 15],"float32"), Tensor([15],"float32"), )
paddle.maximum(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.maximum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([0, 1],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([0, 3, 10, 10, 1],"float32"), Tensor([0, 3, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([0, 3, 20, 20, 1],"float32"), Tensor([0, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.maximum(Tensor([0],"float64"), Tensor([0],"float64"), )
paddle.maximum(Tensor([0],"float64"), Tensor([1],"float64"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"float32"), )
paddle.maximum(Tensor([1, 0],"float32"), Tensor([1, 0],"float32"), )
paddle.maximum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 0, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([30, 200, 0],"float32"), )
paddle.maximum(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.maximum(Tensor([10, 0],"float32"), Tensor([10, 1],"float32"), )
paddle.maximum(Tensor([10, 1],"float32"), Tensor([10, 0],"float32"), )
paddle.maximum(Tensor([100, 0],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([100, 1],"float32"), Tensor([0],"float32"), )
paddle.maximum(Tensor([12, 0, 10, 10, 1],"float32"), Tensor([12, 0, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 0, 20, 20, 1],"float32"), Tensor([12, 0, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 0, 10, 1],"float32"), Tensor([12, 3, 0, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 0, 20, 1],"float32"), Tensor([12, 3, 0, 20, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 0, 1],"float32"), Tensor([12, 3, 10, 0, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 0, 1],"float32"), Tensor([12, 3, 20, 0, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.maximum(Tensor([1],"float64"), Tensor([0],"float64"), )
paddle.maximum(Tensor([200, 40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.maximum(Tensor([40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.maximum(Tensor([40],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.maximum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.maximum(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), )
paddle.maximum(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.maximum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.maximum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), )
paddle.maximum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), )
paddle.maximum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), )
paddle.maximum(x=Tensor([1],"float64"), y=Tensor([0],"float64"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), )
paddle.minimum(Tensor([0, 15],"float32"), Tensor([15],"float32"), )
paddle.minimum(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.minimum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([0, 1],"int64"), Tensor([0, 1],"int64"), )
paddle.minimum(Tensor([0, 1],"int64"), Tensor([1, 1],"int64"), )
paddle.minimum(Tensor([0, 3, 10, 10, 1],"float32"), Tensor([0, 3, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([0, 3, 20, 20, 1],"float32"), Tensor([0, 3, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"float32"), )
paddle.minimum(Tensor([1, 0],"float32"), Tensor([1, 0],"float32"), )
paddle.minimum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([1, 0],"int64"), Tensor([1, 0],"int64"), )
paddle.minimum(Tensor([1, 0],"int64"), Tensor([1, 1],"int64"), )
paddle.minimum(Tensor([1, 1, 0, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([30, 200, 0],"float32"), )
paddle.minimum(Tensor([1, 1],"int64"), Tensor([0, 1],"int64"), )
paddle.minimum(Tensor([1, 1],"int64"), Tensor([1, 0],"int64"), )
paddle.minimum(Tensor([12, 0, 10, 10, 1],"float32"), Tensor([12, 0, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 0, 20, 20, 1],"float32"), Tensor([12, 0, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 0, 10, 1],"float32"), Tensor([12, 3, 0, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 0, 20, 1],"float32"), Tensor([12, 3, 0, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 0, 1],"float32"), Tensor([12, 3, 10, 0, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 0, 1],"float32"), Tensor([12, 3, 20, 0, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.minimum(Tensor([200, 40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.minimum(Tensor([40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.minimum(Tensor([40],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.minimum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.minimum(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), )
paddle.minimum(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.minimum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.minimum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), )
paddle.minimum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), )
paddle.minimum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), )
paddle.minimum(x=Tensor([1],"float64"), y=Tensor([0],"float64"), )
paddle.mm(Tensor([0, 10],"float32"), Tensor([10, 1],"float32"), )
paddle.mm(Tensor([0, 10],"float64"), Tensor([10, 1],"float64"), )
paddle.mm(Tensor([1, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.mm(Tensor([1, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.mm(input=Tensor([0, 3],"float32"), mat2=Tensor([3, 2],"float32"), )
paddle.mm(input=Tensor([0, 3],"float64"), mat2=Tensor([3, 2],"float64"), )
paddle.mm(input=Tensor([2, 3],"float32"), mat2=Tensor([3, 0],"float32"), )
paddle.mm(input=Tensor([2, 3],"float64"), mat2=Tensor([3, 0],"float64"), )
paddle.moveaxis(Tensor([0, 3, 4, 5, 7],"float64"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([0, 3, 4],"float64"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([0, 7, 6],"float64"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([0, 7, 6],"float64"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([2, 0, 4, 5, 7],"float64"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 3, 0, 5, 7],"float64"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 3, 4, 0, 7],"float64"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([2, 3, 4, 5, 0],"float64"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([4, 0, 6],"float64"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 0, 6],"float64"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 7, 0],"float64"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 7, 0],"float64"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([5, 0, 4],"float64"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([5, 3, 0],"float64"), list[1,2,], list[1,2,], )
paddle.moveaxis(x=Tensor([0, 2, 3, 5, 7],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([0, 2, 3, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([0, 2, 3, 5],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([0, 2, 3],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([0, 2],"complex128"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([0, 2],"complex64"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 0, 3, 5, 7],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 0, 3, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 0, 3, 5],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 0, 3],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 0],"complex128"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 0],"complex64"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 2, 0, 5, 7],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 0, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 2, 0, 5],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 0],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 0, 7],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 0, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 2, 3, 0],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 5, 0],"float64"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 5, 0],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.mv(Tensor([0, 12],"float32"), Tensor([12],"float32"), )
paddle.mv(Tensor([0, 18],"float32"), Tensor([18],"float32"), )
paddle.mv(x=Tensor([0, 1],"float64"), vec=Tensor([1],"float64"), )
paddle.mv(x=Tensor([0, 2],"float64"), vec=Tensor([2],"float64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.neg(Tensor([0, 16, 32],"float32"), )
paddle.neg(Tensor([0, 20, 1],"float32"), )
paddle.neg(Tensor([0, 8],"float32"), )
paddle.neg(Tensor([0, 8],"float64"), )
paddle.neg(Tensor([10, 0, 1],"float32"), )
paddle.neg(Tensor([10, 20, 0],"float32"), )
paddle.neg(Tensor([32, 0],"float32"), )
paddle.neg(Tensor([32, 0],"float64"), )
paddle.neg(Tensor([8, 0, 32],"float32"), )
paddle.neg(Tensor([8, 16, 0],"float32"), )
paddle.neg(x=Tensor([0, 6, 6],"float64"), )
paddle.neg(x=Tensor([0, 6],"float32"), )
paddle.neg(x=Tensor([0, 6],"float64"), )
paddle.neg(x=Tensor([6, 0, 6],"float64"), )
paddle.neg(x=Tensor([6, 0],"float32"), )
paddle.neg(x=Tensor([6, 0],"float64"), )
paddle.neg(x=Tensor([6, 6, 0],"float64"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 1024, 0],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 256, 0],"float32"), 1, None, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.logical_and(Tensor([0, 3],"bool"), Tensor([0, 3],"bool"), )
paddle.Tensor.logical_and(Tensor([0],"bool"), Tensor([0],"bool"), )
paddle.Tensor.logical_and(Tensor([2, 0],"bool"), Tensor([2, 0],"bool"), )
paddle.Tensor.logical_or(Tensor([0],"bool"), Tensor([0],"bool"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.matmul(Tensor([0, 1, 100],"complex128"), Tensor([100],"complex128"), )
paddle.Tensor.matmul(Tensor([0, 1, 100],"complex64"), Tensor([100],"complex64"), )
paddle.Tensor.matmul(Tensor([0, 1],"float64"), Tensor([1, 100],"float64"), )
paddle.Tensor.matmul(Tensor([0, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.matmul(Tensor([0, 21504, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.matmul(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.Tensor.matmul(Tensor([1, 0, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([1, 1],"float64"), Tensor([1, 0],"float64"), )
paddle.Tensor.matmul(Tensor([1, 21504, 0, 91],"float32"), Tensor([91],"float32"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.matmul(Tensor([2, 0, 100],"complex128"), Tensor([100],"complex128"), )
paddle.Tensor.matmul(Tensor([2, 0, 100],"complex64"), Tensor([100],"complex64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.mm(Tensor([0, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.mm(Tensor([10, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.Tensor.moveaxis(Tensor([0, 2],"complex64"), 0, 1, )
paddle.Tensor.moveaxis(Tensor([0, 3, 5],"float64"), -2, -1, )
paddle.Tensor.moveaxis(Tensor([2, 0, 5],"float64"), -2, -1, )
paddle.Tensor.moveaxis(Tensor([2, 3, 0],"float64"), -2, -1, )
paddle.Tensor.moveaxis(Tensor([3, 0],"complex64"), 0, 1, )
paddle.Tensor.moveaxis(x=Tensor([0, 2, 3, 5, 7],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([0, 2, 3, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([0, 2, 3, 5],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([0, 2, 3],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([0, 2],"complex128"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([0, 2],"complex64"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 0, 3, 5, 7],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 0, 3, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 0, 3, 5],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 0, 3],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 0],"complex128"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 0],"complex64"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 0, 5, 7],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 0, 5, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 0, 5],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 0],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 0, 7],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 0, 7],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 0],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 0],"float64"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 0],"float64"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.outer(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.outer(x=Tensor([0],"float64"), y=Tensor([4],"float64"), )
paddle.Tensor.outer(x=Tensor([4],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.remainder(Tensor([0, 3, 4],"float32"), Tensor([0, 3, 4],"float32"), )
paddle.Tensor.remainder(Tensor([2, 0, 4],"float32"), Tensor([2, 0, 4],"float32"), )
paddle.Tensor.remainder(Tensor([2, 3, 0],"float32"), Tensor([2, 3, 0],"float32"), )
paddle.Tensor.rot90(x=Tensor([0, 2],"float64"), k=-4, )
paddle.Tensor.rot90(x=Tensor([0, 4],"float64"), k=4, )
paddle.Tensor.rot90(x=Tensor([2, 0],"float64"), k=-4, )
paddle.Tensor.rot90(x=Tensor([4, 0],"float64"), k=4, )
paddle.Tensor.signbit(Tensor([0, 20, 2],"float32"), )
paddle.Tensor.signbit(Tensor([0, 20, 2],"float64"), )
paddle.Tensor.signbit(Tensor([12, 0, 2],"float32"), )
paddle.Tensor.signbit(Tensor([12, 0, 2],"float64"), )
paddle.Tensor.signbit(Tensor([12, 20, 0],"float32"), )
paddle.Tensor.signbit(Tensor([12, 20, 0],"float64"), )
paddle.Tensor.squeeze(Tensor([0, 1, 1, 1, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([0, 1, 1, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([0, 1, 1, 20],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([0, 1, 1, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([0, 1, 1, 8],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([0, 1, 10, 8],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([0, 1, 12, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([0, 1, 1792],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([0, 1, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 1, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([0, 1, 21504, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([0, 1, 24276, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([0, 1, 32, 32],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([0, 1, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([0, 1, 64],"float16"), )
paddle.Tensor.squeeze(Tensor([0, 1, 64],"float32"), )
paddle.Tensor.squeeze(Tensor([0, 1, 96, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 10, 1, 256],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([0, 10, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 10, 64, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 100, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([0, 1000, 1, 1],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([0, 1000, 1, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([0, 108],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([0, 108],"int32"), 0, )
paddle.Tensor.squeeze(Tensor([0, 120, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([0, 120, 1, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([0, 17, 128, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([0, 17, 128, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([0, 1],"float32"), )
paddle.Tensor.squeeze(Tensor([0, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([0, 1],"int64"), axis=1, )
paddle.Tensor.squeeze(Tensor([0, 2, 32, 32, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([0, 2, 64, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([0, 20, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([0, 2048, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([0, 20],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([0, 300, 1, 12544],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([0, 4, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([0, 512, 1, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([0, 512, 1, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([0, 7, 126, 1, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([0, 7, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([0, 7],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([0],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0, 1, 12544],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 0, 1, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 0, 1, 20],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([1, 0, 1, 256],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 0, 1, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 0, 1, 8],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 0, 10, 8],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0, 12, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0, 128, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 0, 128, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 0, 1792],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([1, 0, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 0, 1],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 0, 21504, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 0, 24276, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 0, 32, 32, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 0],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 0],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 0],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 0],"int32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 0],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 20],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 8],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 8],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 0, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 0],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 0],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 0],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 0],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 0],"int64"), -2, )
paddle.Tensor.squeeze(Tensor([1, 1, 10, 0],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 12, 0],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 21504, 0],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 24276, 0],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 10, 0, 256],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 10, 0],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 10, 1, 0],"float32"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 100, 0],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 17, 0, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 17, 0, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 17, 128, 0],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 17, 128, 0],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 2, 0, 32, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2, 32, 0, 128],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2, 32, 32, 0],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 20, 0],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 2048, 0],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([1, 300, 0, 12544],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 300, 1, 0],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([11, 0, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([11, 1, 0],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([128, 0, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 0, 1, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 0, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 0, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 1, 0],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([128, 120, 1, 0],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([12988, 0, 64],"float16"), )
paddle.Tensor.squeeze(Tensor([12988, 0, 64],"float32"), )
paddle.Tensor.squeeze(Tensor([12988, 1, 0],"float16"), )
paddle.Tensor.squeeze(Tensor([12988, 1, 0],"float32"), )
paddle.Tensor.squeeze(Tensor([13, 0, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([13, 0, 64, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 0, 96, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 0],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([13, 1, 0, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 1, 96, 0],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 2, 0, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 2, 64, 0],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([13, 7, 0],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([16, 0, 64, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 0, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 64, 0, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 64, 64, 0, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 10, 64, 64, 2, 0],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([2, 0, 1, 1, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 0, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([2, 0, 32, 32],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 0],"int64"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 1, 0, 1, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1, 0, 32],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([2, 1, 0],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([2, 1, 1, 0, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1, 1, 1, 0],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([2, 1, 32, 0],"float32"), axis=1, )
paddle.Tensor.squeeze(Tensor([3, 0, 126, 1, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 0, 1],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([3, 4, 0],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([3, 7, 0, 1, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 7, 126, 0, 1024],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([3, 7, 126, 1, 0],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([64, 0, 1, 1],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 0, 1, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 0, 1, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([64, 0, 1, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([64, 1000, 0, 1],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1000, 0, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1000, 1, 0],"float16"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 1000, 1, 0],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([64, 512, 0, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([64, 512, 0, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([64, 512, 1, 0],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([64, 512, 1, 0],"float32"), 2, )
paddle.Tensor.sum(Tensor([0, 1, 1, 1],"bool"), )
paddle.Tensor.sum(Tensor([0, 1, 1, 1],"float64"), 0, )
paddle.Tensor.sum(Tensor([0, 1, 1, 1],"float64"), 1, )
paddle.Tensor.sum(Tensor([0, 1, 1, 1],"float64"), 2, )
paddle.Tensor.sum(Tensor([0, 1, 1, 1],"float64"), 3, )
paddle.Tensor.sum(Tensor([0, 1, 1, 5],"float64"), 0, )
paddle.Tensor.sum(Tensor([0, 1, 1, 5],"float64"), 1, )
paddle.Tensor.sum(Tensor([0, 1, 1, 5],"float64"), 2, )
paddle.Tensor.sum(Tensor([0, 1, 1, 5],"float64"), 3, )
paddle.Tensor.sum(Tensor([0, 1, 10285],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([0, 1, 13, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([0, 1, 13, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([0, 1, 17, 17],"float64"), )
paddle.Tensor.sum(Tensor([0, 1, 2, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([0, 1, 2, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([0, 1, 2, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([0, 1, 24276],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 1, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([0, 1, 27216],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 10, 20],"float64"), list[0,-1,], )
paddle.Tensor.sum(Tensor([0, 10, 25],"float32"), 2, )
paddle.Tensor.sum(Tensor([0, 10, 4, 3364],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([0, 10, 58, 58, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([0, 10, 64, 64, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([0, 105840],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 107136],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 107136],"float32"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 10],"float32"), 0, )
paddle.Tensor.sum(Tensor([0, 10],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([0, 10],"float64"), axis=1, )
paddle.Tensor.sum(Tensor([0, 11, 2, 64, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([0, 123904],"float32"), 1, )
paddle.Tensor.sum(Tensor([0, 12544],"float32"), -1, )
paddle.Tensor.sum(Tensor([0, 12544],"float32"), 1, )
paddle.Tensor.sum(Tensor([0, 128, 128, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([0, 128, 256, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([0, 128, 8, 4, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([0, 128],"float16"), axis=0, )
paddle.Tensor.sum(Tensor([0, 128],"float32"), axis=0, )
paddle.Tensor.sum(Tensor([0, 12],"bool"), axis=-1, )
paddle.Tensor.sum(Tensor([0, 138120],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 157920],"bool"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 1],"bool"), )
paddle.Tensor.sum(Tensor([0, 1],"float32"), )
paddle.Tensor.sum(Tensor([0, 1],"float32"), 0, )
paddle.Tensor.sum(Tensor([0, 1],"float32"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([0, 2, 1, 2, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([0, 2, 1, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([0, 2, 1, 3, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([0, 2, 1],"float32"), -2, )
paddle.Tensor.sum(Tensor([0, 2, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([0, 2, 2, 3],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([0, 2, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([0, 2, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([0, 2, 2],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([0, 2, 2],"float64"), -1, )
paddle.Tensor.sum(Tensor([0, 2, 3],"float32"), )
paddle.Tensor.sum(Tensor([0, 2, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([0, 2, 4, 2, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([0, 20],"float64"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 21504, 10],"float32"), )
paddle.Tensor.sum(Tensor([0, 22400],"float32"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 28, 28],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 280, 350],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([0, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 2],"float32"), list[-1,], )
paddle.Tensor.sum(Tensor([0, 2],"float32"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([0, 2],"float64"), list[-1,], )
paddle.Tensor.sum(Tensor([0, 3, 1, 4, 1],"float32"), )
paddle.Tensor.sum(Tensor([0, 3, 10, 10, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([0, 3, 10, 10, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([0, 3, 3, 3],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([0, 3, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 3, 3],"float64"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([0, 3, 4, 4, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([0, 3, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 3, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 3, 5],"float64"), 1, )
paddle.Tensor.sum(Tensor([0, 3, 8, 8],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 3],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 3],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([0, 3],"float64"), list[0,-1,], )
paddle.Tensor.sum(Tensor([0, 4, 4, 4, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([0, 4, 5],"float64"), axis=1, )
paddle.Tensor.sum(Tensor([0, 40],"float64"), axis=-2, )
paddle.Tensor.sum(Tensor([0, 4],"float64"), axis=-2, )
paddle.Tensor.sum(Tensor([0, 500, 4],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([0, 500, 8],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([0, 5000, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([0, 6, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 6, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 6, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 65536, 25, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([0, 65536, 25],"float32"), 2, )
paddle.Tensor.sum(Tensor([0, 7, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 7, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.sum(Tensor([0, 8, 7, 7],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([0],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([0],"float32"), )
paddle.Tensor.sum(Tensor([0],"float32"), -1, )
paddle.Tensor.sum(Tensor([0],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([0],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([0],"float32"), list[-1,], )
paddle.Tensor.sum(Tensor([0],"float64"), )
paddle.Tensor.sum(Tensor([0],"float64"), -1, )
paddle.Tensor.sum(Tensor([0],"float64"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([0],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 0, 1, 1],"bool"), )
paddle.Tensor.sum(Tensor([1, 0, 1, 1],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 0, 1, 1],"float64"), 1, )
paddle.Tensor.sum(Tensor([1, 0, 1, 1],"float64"), 2, )
paddle.Tensor.sum(Tensor([1, 0, 1, 1],"float64"), 3, )
paddle.Tensor.sum(Tensor([1, 0, 1, 3, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 0, 1, 5],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 0, 1, 5],"float64"), 1, )
paddle.Tensor.sum(Tensor([1, 0, 1, 5],"float64"), 2, )
paddle.Tensor.sum(Tensor([1, 0, 1, 5],"float64"), 3, )
paddle.Tensor.sum(Tensor([1, 0, 10285],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 0, 10],"float32"), )
paddle.Tensor.sum(Tensor([1, 0, 128, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 0, 13, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 0, 13, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 0, 17, 17],"float64"), )
paddle.Tensor.sum(Tensor([1, 0, 1],"float32"), -2, )
paddle.Tensor.sum(Tensor([1, 0, 2, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 0, 24276],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 0, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 0, 25, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 0, 256, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 0, 27216],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 0, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 0, 2],"float64"), -1, )
paddle.Tensor.sum(Tensor([1, 0, 3],"float32"), )
paddle.Tensor.sum(Tensor([1, 0, 4, 4, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 0],"bool"), )
paddle.Tensor.sum(Tensor([1, 0],"bool"), axis=-1, )
paddle.Tensor.sum(Tensor([1, 0],"float32"), )
paddle.Tensor.sum(Tensor([1, 0],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 0],"float32"), 1, )
paddle.Tensor.sum(Tensor([1, 0],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 0],"float32"), list[-1,], )
paddle.Tensor.sum(Tensor([1, 0],"float64"), axis=1, )
paddle.Tensor.sum(Tensor([1, 0],"float64"), list[-1,], )
paddle.Tensor.sum(Tensor([1, 0],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 1, 0, 17],"float64"), )
paddle.Tensor.sum(Tensor([1, 1, 0, 1],"bool"), )
paddle.Tensor.sum(Tensor([1, 1, 0, 1],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 1, 0, 1],"float64"), 1, )
paddle.Tensor.sum(Tensor([1, 1, 0, 1],"float64"), 2, )
paddle.Tensor.sum(Tensor([1, 1, 0, 1],"float64"), 3, )
paddle.Tensor.sum(Tensor([1, 1, 0, 24276],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 0, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 0, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 1, 0, 5],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 1, 0, 5],"float64"), 1, )
paddle.Tensor.sum(Tensor([1, 1, 0, 5],"float64"), 2, )
paddle.Tensor.sum(Tensor([1, 1, 0, 5],"float64"), 3, )
paddle.Tensor.sum(Tensor([1, 1, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 1, 0],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 1, 0],"bool"), )
paddle.Tensor.sum(Tensor([1, 1, 1, 0],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 1, 1, 0],"float64"), 1, )
paddle.Tensor.sum(Tensor([1, 1, 1, 0],"float64"), 2, )
paddle.Tensor.sum(Tensor([1, 1, 1, 0],"float64"), 3, )
paddle.Tensor.sum(Tensor([1, 1, 13, 0],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 1, 17, 0],"float64"), )
paddle.Tensor.sum(Tensor([1, 1, 2, 0],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 128, 0, 3, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 128, 0, 3],"float32"), list[2,3,4,], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.sum(Tensor([1, 128, 128, 3, 0],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 256, 0, 3],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 128, 256, 3, 0],"float32"), list[2,3,4,], )
paddle.Tensor.sum(Tensor([1, 2, 0, 3, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 0],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 0],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 2, 0],"float32"), -2, )
paddle.Tensor.sum(Tensor([1, 2, 0],"float64"), -1, )
paddle.Tensor.sum(Tensor([1, 2, 1, 0, 1, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 1, 3, 0, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 2, 1, 3, 1, 0],"float32"), )
paddle.Tensor.sum(Tensor([1, 21504, 0],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 0, 4, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 4, 0, 1, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 4, 4, 0, 1],"float32"), )
paddle.Tensor.sum(Tensor([1, 3, 4, 4, 1, 0],"float32"), )
paddle.Tensor.sum(Tensor([1, 65536, 0, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([1, 65536, 25, 0],"float32"), -1, )
paddle.Tensor.sum(Tensor([10, 0, 1, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 0, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 0, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([10, 0, 4],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([10, 0, 8],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([10, 0],"float32"), 0, )
paddle.Tensor.sum(Tensor([10, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.sum(Tensor([10, 0],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 0],"float64"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([10, 0],"float64"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 2, 0, 2],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 2, 0],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 2, 0],"float64"), 0, )
paddle.Tensor.sum(Tensor([10, 2, 1, 0],"float32"), list[0,-1,], )
paddle.Tensor.sum(Tensor([10, 500, 0],"float32"), axis=2, )
paddle.Tensor.sum(Tensor([10, 5000, 0],"float64"), 0, )
paddle.Tensor.sum(Tensor([100, 0],"float64"), axis=-2, )
paddle.Tensor.sum(Tensor([1000, 0, 2, 3],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 0, 2],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 2, 0, 3],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 2, 0],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([1000, 2, 2, 0],"float32"), list[0,1,], )
paddle.Tensor.sum(Tensor([12, 0, 10, 10, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 0, 10, 10, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 0],"float16"), axis=0, )
paddle.Tensor.sum(Tensor([12, 0],"float32"), axis=0, )
paddle.Tensor.sum(Tensor([12, 3, 0, 10, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 0, 10, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 10, 0, 1],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 10, 0, 80],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([12, 3, 10, 10, 0],"float32"), list[1,2,3,4,], )
paddle.Tensor.sum(Tensor([126, 0, 7, 7],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([126, 8, 0, 7],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([126, 8, 7, 0],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([128, 0, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([128, 2, 0],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([14, 0, 4, 2, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([14, 2, 0, 2, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([14, 2, 4, 0, 3],"float64"), 0, )
paddle.Tensor.sum(Tensor([14, 2, 4, 2, 0],"float64"), 0, )
paddle.Tensor.sum(Tensor([16, 0, 2, 64, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 0, 25],"float32"), 2, )
paddle.Tensor.sum(Tensor([16, 0, 4, 3364],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 0, 58, 58, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 0, 64, 64, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 10, 0, 3364],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 10, 0, 58, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 10, 0, 64, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 10, 0],"float32"), 2, )
paddle.Tensor.sum(Tensor([16, 10, 4, 0],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 10, 58, 0, 2],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 10, 58, 58, 0],"float32"), axis=tuple(2,3,), )
paddle.Tensor.sum(Tensor([16, 10, 64, 0, 2],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 10, 64, 64, 0],"float32"), -1, )
paddle.Tensor.sum(Tensor([16, 11, 0, 64, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 11, 2, 0, 64],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 11, 2, 64, 0],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 65536, 0],"float32"), 2, )
paddle.Tensor.sum(Tensor([2, 0, 1, 2, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 0, 1, 4, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 0, 2, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 0, 3],"float64"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([2, 0, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0, 8, 8],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0],"float32"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 0],"float32"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([2, 1, 0, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 1, 2, 0, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 1, 2, 1, 0],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([2, 2, 0, 2, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 0, 1, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 0, 1, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 0, 2, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 1, 0, 3, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 1, 2, 0, 5],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 2, 1, 2, 1, 1, 2, 3, 0],"bool"), 2, )
paddle.Tensor.sum(Tensor([2, 3, 0, 4, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 3, 0, 8],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 3, 0],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 3, 0],"float64"), list[-2,-1,], )
paddle.Tensor.sum(Tensor([2, 3, 1, 0, 1],"float32"), )
paddle.Tensor.sum(Tensor([2, 3, 1, 4, 0],"float32"), )
paddle.Tensor.sum(Tensor([2, 3, 8, 0],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 2, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 0, 2, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 0, 28],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 3, 3],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([3, 0, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 350],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 0, 5],"float64"), axis=1, )
paddle.Tensor.sum(Tensor([3, 1, 0, 1, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 0, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 2, 0, 1],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 2, 0],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([3, 1, 2, 1, 0],"float32"), axis=-1, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.Tensor.sum(Tensor([3, 28, 0],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 280, 0],"float32"), axis=-3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 3, 0, 3],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([3, 3, 0],"bool"), axis=0, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 3, 3, 0],"float32"), list[1,2,3,], )
paddle.Tensor.sum(Tensor([3, 4, 0],"float64"), axis=1, )
paddle.Tensor.sum(Tensor([3, 6, 0, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 0, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 0, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 0, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 0, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 0, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 0, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 0, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 0, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2, 0],"bool"), axis=3, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2, 0],"bool"), axis=4, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 6, 3, 4, 2, 0],"bool"), axis=5, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 0, 5],"float64"), 1, )
paddle.Tensor.sum(Tensor([4, 0, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 0, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 0],"bool"), 1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 0],"float32"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 3, 0],"float64"), 1, )
paddle.Tensor.sum(Tensor([4, 7, 0],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 7, 0],"bool"), axis=2, keepdim=True, )
paddle.Tensor.sum(Tensor([5, 0, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([5, 3, 0],"bool"), axis=1, keepdim=True, )
paddle.Tensor.sum(Tensor([80, 0, 4, 4, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 0, 8, 4, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 0, 4, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 0, 4, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 4, 0, 4, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 4, 4, 0, 4],"float32"), )
paddle.Tensor.sum(Tensor([80, 128, 8, 4, 4, 4, 0],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 0, 4, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 0, 4, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 4, 0, 4, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 4, 4, 0, 128],"float32"), )
paddle.Tensor.sum(Tensor([80, 4, 4, 4, 4, 4, 0],"float32"), )
paddle.Tensor.sum(Tensor([9, 0, 20],"float64"), list[0,-1,], )
paddle.Tensor.sum(Tensor([9, 10, 0],"float64"), list[0,-1,], )
paddle.Tensor.take_along_axis(Tensor([0, 1000],"float32"), indices=Tensor([0, 1],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([128, 0],"float32"), indices=Tensor([128, 0],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([128, 1000],"float32"), indices=Tensor([128, 0],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([80, 0],"float32"), indices=Tensor([80, 0],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([80, 1000],"float32"), indices=Tensor([80, 0],"int32"), axis=-1, )
paddle.Tensor.unbind(Tensor([0, 1, 8, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([0, 1, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([0, 16, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([0, 2, 3],"float32"), -2, )
paddle.Tensor.unbind(Tensor([0, 28, 28],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([0, 3, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([0, 3, 8, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([0, 432, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([0, 48, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([0, 60, 10, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([0, 60, 2, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([0, 8, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([1, 0, 10, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 0, 2, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 0, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 16, 0, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 16, 256, 0, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 16, 256, 32, 0],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 60, 0, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 10, 0],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 2, 0],"float32"), 1, )
paddle.Tensor.unbind(Tensor([128, 0, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 3, 0, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 3, 576, 0, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 3, 576, 32, 0],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 0, 8, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([2, 3, 0, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([2, 3, 8, 0],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 0, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 0, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 0, 28],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 0, 3],"float32"), -2, )
paddle.Tensor.unbind(Tensor([3, 0, 8, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 0, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 0, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 1, 0, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 0, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 0, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 109, 0],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 113, 0],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 0],"float32"), -2, )
paddle.Tensor.unbind(Tensor([3, 28, 0],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 432, 0, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 432, 196, 0],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48, 0, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48, 1024, 0],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 8, 0],"float32"), axis=-3, )
paddle.Tensor.unique(Tensor([0],"int64"), )
paddle.Tensor.unsqueeze(Tensor([0, 1, 1, 3, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 144, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 1],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 2, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 2048],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 20],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 20],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 20],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 2],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 3, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 49, 49],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 499],"bool"), 3, )
paddle.Tensor.unsqueeze(Tensor([0, 1, 4],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([0, 10, 1, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([0, 10, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([0, 10, 58, 58],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 10, 64, 64, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 100, 2],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0, 100, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0, 1024, 2, 16],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([0, 1024],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 10285],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 11, 64, 64],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 144],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 144],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 144],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([0, 144],"int64"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([0, 160000],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 1],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([0, 1],"int32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0, 2, 64],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([0, 2, 8, 128, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([0, 256],"bool"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([0, 28],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([0, 2],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 3, 10, 10],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 3, 20, 20],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0, 3, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 49],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([0, 49],"int64"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([0, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0, 56],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([0, 7, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([0, 8, 8],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([0, 81, 94, 311],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0, 8],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([0],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([0],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([0],"float64"), -2, )
paddle.Tensor.unsqueeze(Tensor([0],"float64"), 1, )
paddle.Tensor.unsqueeze(Tensor([0],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([0],"int32"), 0, )
paddle.Tensor.unsqueeze(Tensor([0],"int64"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 144, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 1],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 2, 16],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 2, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 2048],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 20],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 20],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 20],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 2],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 2],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 49, 49],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 0, 4],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"int32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 0],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0, 49],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0],"int64"), -1, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 0],"int64"), 2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 144, 0],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 2, 0],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1, 49, 0],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 100, 0],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1024, 0, 16],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([1, 1024, 2, 0],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([10, 0, 499],"bool"), 3, )
paddle.Tensor.unsqueeze(Tensor([10, 1, 0],"bool"), 3, )
paddle.Tensor.unsqueeze(Tensor([12, 0, 10, 10],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 0, 20, 20],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 0, 10],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 0, 20],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 10, 0],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([12, 3, 20, 0],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([13, 0, 4],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([13, 0, 64],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 0, 8],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 0],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 1, 0],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([13, 2, 0],"int64"), -2, )
paddle.Tensor.unsqueeze(Tensor([13, 7, 0],"float32"), -2, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 1, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 3, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 58, 58],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 64, 64, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 0, 64, 64],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 1, 0, 64, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 1, 3, 0, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 1, 3, 64, 0],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 0, 2, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 0, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 0, 58],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 0, 64, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 1, 0, 2],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 1, 2, 0],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 2, 0],"float32"), -3, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 58, 0],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 64, 0, 2],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 10, 64, 64, 0],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([16, 11, 0, 64],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 11, 64, 0],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([16, 3, 0, 64],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 3, 64, 0],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2, 0, 8, 128, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 0, 8],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([2, 0],"bool"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([2, 0],"int64"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([2, 0],"int64"), axis=2, )
paddle.Tensor.unsqueeze(Tensor([2, 2, 0, 128, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 2, 8, 0, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 2, 8, 128, 0],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([2, 8, 0],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([28, 0],"int32"), axis=-3, )
paddle.Tensor.unsqueeze(Tensor([4, 0, 1, 3, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 0, 94, 311],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4, 1, 0, 3, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 1, 1, 0, 4],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 1, 1, 3, 0],"float32"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([4, 81, 0, 311],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4, 81, 94, 0],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([8, 0],"int32"), axis=-3, )
paddle.reshape(Tensor([4, 5, 0, 6, 6],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 5, 0],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 5, 6, 0, 6],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 5, 6, 6, 0],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 512, 0, 150],"float32"), list[-1,150,], )
paddle.reshape(Tensor([4, 512, 0, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([4, 512, 0],"float16"), list[-1,1024,], )
paddle.reshape(Tensor([4, 512, 0],"float32"), list[-1,1024,], )
paddle.reshape(Tensor([4, 512, 512, 0],"float32"), list[-1,150,], )
paddle.reshape(Tensor([4, 512, 512, 0],"float32"), list[-1,2,], )
paddle.reshape(Tensor([4, 6, 0, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 6, 0, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 6, 0, 304],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 6, 0],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([4, 6, 0],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([4, 6, 224, 0],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 6, 280, 0],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 6, 328, 0],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 640, 0],"float32"), shape=list[-1,], )
paddle.reshape(Tensor([4, 8, 0],"float32"), list[-1,256,], )
paddle.reshape(Tensor([4, 8, 0],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([40, 0, 272],"float16"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 0, 272],"float32"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 0, 6, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([40, 200, 0],"float16"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 200, 0],"float32"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 40, 0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([40, 40, 6, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([44, 0, 272],"float16"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([44, 0, 272],"float32"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([44, 200, 0],"float16"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([44, 200, 0],"float32"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([48, 0, 1, 1],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 0, 1, 1],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 0, 272],"float16"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 0, 272],"float32"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 200, 0],"float16"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 200, 0],"float32"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 2048, 0, 1],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 2048, 0, 1],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 2048, 1, 0],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 2048, 1, 0],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([5, 0, 10],"float32"), list[-1,10,], )
paddle.reshape(Tensor([5, 0, 2],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 3, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 3, 3],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([5, 0, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 4, 4, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 6, 6, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([5, 0],"float32"), shape=list[5,-1,], )
paddle.reshape(Tensor([5, 20, 0],"float32"), list[-1,10,], )
paddle.reshape(Tensor([5, 3, 0, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 0, 3],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([5, 3, 0, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 3, 0, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 3, 0],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([5, 3, 3, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 3, 3, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 0, 4, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 0, 6, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([5, 4, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 4, 0, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 4, 4, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 6, 0, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([5, 4, 6, 6, 0],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([512, 0, 1, 2],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 0, 1, 2],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 0, 2],"float16"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([512, 0, 2],"float32"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([512, 0],"float16"), shape=list[-1,20,2,], )
paddle.reshape(Tensor([512, 0],"float32"), shape=list[-1,20,2,], )
paddle.reshape(Tensor([512, 256, 0, 2],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 256, 0, 2],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 256, 1, 0],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 256, 1, 0],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 3200, 0],"float16"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([512, 3200, 0],"float32"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([52, 0, 272],"float16"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 0, 272],"float32"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 0, 32],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([52, 0, 4, 8],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([52, 0, 5, 1, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 0, 5, 5, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 0, 7, 8],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([52, 0, 7],"float32"), tuple(13,4,7,-1,), )
paddle.reshape(Tensor([52, 0, 8],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([52, 0, 8],"float32"), tuple(13,4,-1,8,), )
paddle.reshape(Tensor([52, 0, 96],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([52, 200, 0],"float16"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 200, 0],"float32"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 4, 0, 1, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 4, 0, 5, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 0, 8],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([52, 4, 5, 0, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 0, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 1, 0],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 5, 0, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 5, 1, 0],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 7, 0],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([52, 7, 0, 8],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([52, 7, 0],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(13,4,-1,8,), )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(13,4,7,-1,), )
paddle.reshape(Tensor([52, 7, 4, 0],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([520, 0, 8],"float32"), list[13,4,5,2,-1,], )
paddle.reshape(Tensor([520, 0],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([520, 1, 0],"float32"), list[13,4,5,2,-1,], )
paddle.reshape(Tensor([56, 0, 272],"float16"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 0, 272],"float32"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 200, 0],"float16"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 200, 0],"float32"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([58, 0, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([58, 1, 0],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([6, 0, 1, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([6, 0, 100, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 0, 100, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 0, 200],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 0, 25, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 0, 25, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 0, 304],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 0, 5, 6, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 0, 6, 5, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 0],"float32"), list[-1,3,8,], )
paddle.reshape(Tensor([6, 0],"float32"), shape=list[1,-1,256,], )
paddle.reshape(Tensor([6, 100, 0, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 100, 0, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 100, 100, 0],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 100, 100, 0],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 200, 0],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 25, 0, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 25, 0, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 25, 25, 0],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 25, 25, 0],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 3, 0, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([6, 3, 1, 0],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([6, 304, 0],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 0, 5, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 0, 6, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 5, 0, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 5, 6, 0],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 6, 0, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 6, 5, 0],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([60, 0, 272],"float16"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 0, 272],"float32"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 200, 0],"float16"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 200, 0],"float32"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([64, 0, 1, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([64, 0, 16, 16],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([64, 0, 1],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 272],"float16"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 272],"float32"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 3],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 6626],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([64, 0],"float32"), list[16,-1,], )
paddle.reshape(Tensor([64, 1, 0],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([64, 1280, 0, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([64, 1280, 1, 0],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([64, 200, 0],"float16"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 200, 0],"float32"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 24, 0],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([64, 96, 0, 16],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([64, 96, 16, 0],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([68, 0, 272],"float16"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([68, 0, 272],"float32"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([68, 200, 0],"float16"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([68, 200, 0],"float32"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([7, 0, 50000],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([7, 165, 0],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([72, 0, 272],"float16"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([72, 0, 272],"float32"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([72, 200, 0],"float16"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([72, 200, 0],"float32"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([728, 0],"float32"), tuple(2,52,7,-1,), )
paddle.reshape(Tensor([76, 0, 272],"float16"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([76, 0, 272],"float32"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([76, 200, 0],"float16"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([76, 200, 0],"float32"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([8, 0, 1, 1, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 1, 1, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 1, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([8, 0, 1, 1],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([8, 0, 100],"float64"), list[-1,400,], )
paddle.reshape(Tensor([8, 0, 136, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 0, 136, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 0, 136, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 0, 136, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 0, 304],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 304],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 6626],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([8, 0, 7, 7],"bool"), list[-1,1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"bool"), list[-1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"float32"), list[8,-1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([8, 0],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([8, 1, 0, 1, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 0, 1, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 0, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 0, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 1, 0],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 1, 0],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 100, 0, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 100, 0, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 100, 0, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 0, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 1024, 0, 7],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([8, 1024, 7, 0],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([8, 200, 0],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 200, 0],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 24, 0],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([8, 256, 0, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([8, 256, 1, 0],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([8, 4, 0],"float64"), list[-1,400,], )
paddle.reshape(Tensor([8, 5, 0, 7],"bool"), list[-1,1,], )
paddle.reshape(Tensor([8, 5, 0, 7],"bool"), list[-1,], )
paddle.reshape(Tensor([8, 5, 0, 7],"float32"), list[8,-1,], )
paddle.reshape(Tensor([8, 5, 7, 0],"bool"), list[-1,1,], )
paddle.reshape(Tensor([8, 5, 7, 0],"bool"), list[-1,], )
paddle.reshape(Tensor([8, 5, 7, 0],"float32"), list[8,-1,], )
paddle.reshape(Tensor([8, 512, 0, 1],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([8, 512, 1, 0],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([80, 0, 2, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([80, 0, 272],"float16"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 0, 272],"float32"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 0, 5],"float32"), tuple(80,-1,), )
paddle.reshape(Tensor([80, 200, 0],"float16"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 200, 0],"float32"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 80, 0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([80, 80, 0],"float32"), tuple(80,-1,), )
paddle.reshape(Tensor([80, 80, 2, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([80239, 0],"bool"), list[-1,20,1,], )
paddle.reshape(Tensor([84, 0, 272],"float16"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([84, 0, 272],"float32"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([84, 200, 0],"float16"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([84, 200, 0],"float32"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([88, 0, 272],"float16"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([88, 0, 272],"float32"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([88, 200, 0],"float16"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([88, 200, 0],"float32"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([9, 0, 272],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([9, 0, 304],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([9, 0],"float32"), shape=list[1,-1,256,], )
paddle.reshape(Tensor([9, 200, 0],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([92, 0, 272],"float16"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([92, 0, 272],"float32"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([92, 200, 0],"float16"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([92, 200, 0],"float32"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([96, 0, 272],"float16"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([96, 0, 272],"float32"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([96, 200, 0],"float16"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([96, 200, 0],"float32"), shape=tuple(96,-1,), )
paddle.reshape(x=Tensor([0, 100],"float16"), shape=list[-1,], )
paddle.reshape(x=Tensor([0, 100],"float32"), shape=list[-1,], )
paddle.reshape(x=Tensor([0, 12, 16],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([0, 12, 16],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([0, 138120, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([0, 138120, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([0, 140, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(x=Tensor([0, 153450, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([0, 153450, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([0, 2],"float32"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([0, 2],"float64"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([0, 7, 32],"float32"), shape=list[13,7,4,-1,], )
paddle.reshape(x=Tensor([0, 7, 32],"float32"), shape=list[52,7,4,-1,], )
paddle.reshape(x=Tensor([1, 0, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([1, 0, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([1, 138120, 0],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([1, 138120, 0],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([1, 153450, 0],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([1, 153450, 0],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([13, 0, 16],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([13, 0, 32],"float32"), shape=list[13,7,4,-1,], )
paddle.reshape(x=Tensor([13, 12, 0],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([13, 7, 0],"float32"), shape=list[13,7,4,-1,], )
paddle.reshape(x=Tensor([16, 0, 16],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([16, 12, 0],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([2, 0],"float32"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([2, 0],"float64"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([32, 0, 16],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([32, 12, 0],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([4, 0, 16],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([4, 12, 0],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([52, 0, 32],"float32"), shape=list[52,7,4,-1,], )
paddle.reshape(x=Tensor([52, 7, 0],"float32"), shape=list[52,7,4,-1,], )
paddle.reshape(x=Tensor([58, 0, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(x=Tensor([58, 140, 0],"float32"), shape=list[-1,2,], )
paddle.reshape(x=Tensor([8, 0],"float16"), shape=list[-1,], )
paddle.reshape(x=Tensor([8, 0],"float32"), shape=list[-1,], )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 16, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 161, 126, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 161, 126, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 192, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 192, 144, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 21, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 21, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 24, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 24, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 32, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 32, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 3],"float64"), shifts=1, )
paddle.roll(Tensor([0, 3],"float64"), shifts=1, axis=0, )
paddle.roll(Tensor([0],"float32"), -2, name=None, )
paddle.roll(Tensor([0],"float32"), -5, name=None, )
paddle.roll(Tensor([1, 0, 126, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 126, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 144, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 161, 0, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 0, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 126, 0],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 126, 0],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 0, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 0, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 0],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 0],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 0, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 0, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 0],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 0],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 0, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 0, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 0],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 0],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 0, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 0, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 16, 0],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 16, 0],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 0, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 0, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 0],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 0],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([3, 0],"float64"), shifts=1, )
paddle.roll(Tensor([3, 0],"float64"), shifts=1, axis=0, )
paddle.roll(x=Tensor([0, 3],"float32"), shifts=0, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=-1, axis=0, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=0, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=1, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.roll(x=Tensor([3, 0],"float32"), shifts=0, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=-1, axis=0, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=0, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=1, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.rot90(x=Tensor([0, 2],"float64"), k=-4, )
paddle.rot90(x=Tensor([0, 4],"float64"), k=4, )
paddle.rot90(x=Tensor([2, 0],"float64"), k=-4, )
paddle.rot90(x=Tensor([4, 0],"float64"), k=4, )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.sgn(Tensor([0, 20, 2],"float16"), )
paddle.sgn(Tensor([0, 20, 2],"float32"), )
paddle.sgn(Tensor([12, 0, 2],"float16"), )
paddle.sgn(Tensor([12, 0, 2],"float32"), )
paddle.sgn(Tensor([12, 20, 0],"float16"), )
paddle.sgn(Tensor([12, 20, 0],"float32"), )
paddle.sign(Tensor([0, 17, 10],"int16"), )
paddle.sign(Tensor([0, 17, 10],"int32"), )
paddle.sign(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.sign(Tensor([0, 17],"float32"), )
paddle.sign(Tensor([0, 3, 4, 5],"float64"), )
paddle.sign(Tensor([0, 3, 4, 5],"int8"), )
paddle.sign(Tensor([0, 6],"float32"), )
paddle.sign(Tensor([0],"int64"), )
paddle.sign(Tensor([0],"uint8"), )
paddle.sign(Tensor([11, 0, 10],"int16"), )
paddle.sign(Tensor([11, 0, 10],"int32"), )
paddle.sign(Tensor([11, 0],"float32"), )
paddle.sign(Tensor([11, 17, 0],"int16"), )
paddle.sign(Tensor([11, 17, 0],"int32"), )
paddle.sign(Tensor([2, 0, 4, 5],"float64"), )
paddle.sign(Tensor([2, 0, 4, 5],"int8"), )
paddle.sign(Tensor([2, 3, 0, 5],"float64"), )
paddle.sign(Tensor([2, 3, 0, 5],"int8"), )
paddle.sign(Tensor([2, 3, 4, 0],"float64"), )
paddle.sign(Tensor([2, 3, 4, 0],"int8"), )
paddle.sign(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.sign(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.sign(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.sign(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.sign(Tensor([9, 0],"float32"), )
paddle.sign(x=Tensor([0],"float32"), )
paddle.sign(x=Tensor([0],"float64"), )
paddle.signbit(Tensor([0, 17, 10],"int16"), )
paddle.signbit(Tensor([0, 17, 10],"int32"), )
paddle.signbit(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.signbit(Tensor([0, 17],"float32"), )
paddle.signbit(Tensor([0, 3, 4, 5],"float64"), )
paddle.signbit(Tensor([0, 3, 4, 5],"int8"), )
paddle.signbit(Tensor([0],"int64"), )
paddle.signbit(Tensor([0],"uint8"), )
paddle.signbit(Tensor([11, 0, 10],"int16"), )
paddle.signbit(Tensor([11, 0, 10],"int32"), )
paddle.signbit(Tensor([11, 0],"float32"), )
paddle.signbit(Tensor([11, 17, 0],"int16"), )
paddle.signbit(Tensor([11, 17, 0],"int32"), )
paddle.signbit(Tensor([2, 0, 4, 5],"float64"), )
paddle.signbit(Tensor([2, 0, 4, 5],"int8"), )
paddle.signbit(Tensor([2, 3, 0, 5],"float64"), )
paddle.signbit(Tensor([2, 3, 0, 5],"int8"), )
paddle.signbit(Tensor([2, 3, 4, 0],"float64"), )
paddle.signbit(Tensor([2, 3, 4, 0],"int8"), )
paddle.signbit(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.squeeze(Tensor([0, 1, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 1024, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 1024, 1024],"int64"), axis=1, )
paddle.squeeze(Tensor([0, 1, 2, 2],"float64"), 1, )
paddle.squeeze(Tensor([0, 1, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 32],"float64"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 400],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([0, 1, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 96],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 10, 10],"float64"), )
paddle.squeeze(Tensor([0, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([0, 10, 8, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 100, 1],"float32"), -1, )
paddle.squeeze(Tensor([0, 1024, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 125, 125, 1],"float64"), -1, )
paddle.squeeze(Tensor([0, 1280, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([0, 1],"float16"), axis=1, )
paddle.squeeze(Tensor([0, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 1],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1],"float32"), list[-1,], )
paddle.squeeze(Tensor([0, 1],"float64"), -1, )
paddle.squeeze(Tensor([0, 1],"float64"), 1, )
paddle.squeeze(Tensor([0, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([0, 2, 1, 58],"float32"), )
paddle.squeeze(Tensor([0, 2, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([0, 2, 2, 1],"float64"), -1, )
paddle.squeeze(Tensor([0, 2, 2, 1],"float64"), axis=-1, )
paddle.squeeze(Tensor([0, 20, 1],"float32"), )
paddle.squeeze(Tensor([0, 2048, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([0, 2048, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([0, 28, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([0, 29, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([0, 2],"float32"), )
paddle.squeeze(Tensor([0, 3, 10, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([0, 3, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([0, 3, 3],"float64"), axis=0, )
paddle.squeeze(Tensor([0, 3],"float32"), )
paddle.squeeze(Tensor([0, 3],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([0, 3],"float64"), axis=0, )
paddle.squeeze(Tensor([0, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 4],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([0, 512, 1, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([0, 6, 3, 1, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([0, 6, 3, 4, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([0, 6, 3, 4, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([0, 7, 1],"float32"), -1, )
paddle.squeeze(Tensor([0, 7, 1],"float64"), axis=2, )
paddle.squeeze(Tensor([0, 8, 16, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([0],"float32"), )
paddle.squeeze(Tensor([0],"float32"), axis=-1, )
paddle.squeeze(Tensor([0],"float32"), axis=0, )
paddle.squeeze(Tensor([0],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 0, 1, 58],"float32"), )
paddle.squeeze(Tensor([1, 0, 1024, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 0, 1024, 1024],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 0, 16, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 0, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 0, 32],"float64"), axis=list[1,], )
paddle.squeeze(Tensor([1, 0, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 0, 3],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 0],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([1, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1, 0],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 0],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 0, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 0, 1024],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 0],"float64"), axis=list[1,], )
paddle.squeeze(Tensor([1, 1, 1024, 0],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 1024, 0],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 2, 0, 58],"float32"), )
paddle.squeeze(Tensor([1, 2, 1, 0],"float32"), )
paddle.squeeze(Tensor([1, 3, 0],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 3, 0],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 4, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 8, 0, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 16, 0, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 16, 128, 0],"float32"), axis=0, )
paddle.squeeze(Tensor([10, 0, 10],"float64"), )
paddle.squeeze(Tensor([10, 0, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([10, 0, 1],"float32"), )
paddle.squeeze(Tensor([10, 10, 0],"float64"), )
paddle.squeeze(Tensor([10, 10, 0],"float64"), axis=-1, )
paddle.squeeze(Tensor([10, 20, 0],"float32"), )
paddle.squeeze(Tensor([100, 0],"float64"), -1, )
paddle.squeeze(Tensor([100, 0],"float64"), 1, )
paddle.squeeze(Tensor([1024, 0, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1024, 2048, 0, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1024, 2048, 1, 0],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([104, 0, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 0, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([104, 1, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([104, 28, 0],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 29, 0],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([128, 0, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 0],"float16"), axis=1, )
paddle.squeeze(Tensor([128, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([128, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([128, 0],"float32"), list[-1,], )
paddle.squeeze(Tensor([128, 1280, 0, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 1, 0],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([13, 0, 1],"float32"), -1, )
paddle.squeeze(Tensor([13, 7, 0],"float32"), -1, )
paddle.squeeze(Tensor([16, 0, 400],"float32"), axis=1, )
paddle.squeeze(Tensor([16, 1, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([192, 0],"float32"), list[-1,], )
paddle.squeeze(Tensor([2, 0, 10, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 0, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 0, 2, 1],"float64"), -1, )
paddle.squeeze(Tensor([2, 0, 2, 1],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 0, 2, 2],"float64"), 1, )
paddle.squeeze(Tensor([2, 0],"float32"), )
paddle.squeeze(Tensor([2, 0],"float64"), 1, )
paddle.squeeze(Tensor([2, 1, 0, 2],"float64"), 1, )
paddle.squeeze(Tensor([2, 1, 2, 0],"float64"), 1, )
paddle.squeeze(Tensor([2, 1024, 0, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 1024, 1024, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 2, 0, 1],"float64"), -1, )
paddle.squeeze(Tensor([2, 2, 0, 1],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 2, 2, 0],"float64"), -1, )
paddle.squeeze(Tensor([2, 2, 2, 0],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 0, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 10, 0, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 10, 10, 0],"float64"), axis=-1, )
paddle.squeeze(Tensor([24, 0, 96],"float32"), axis=1, )
paddle.squeeze(Tensor([24, 1, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 0, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([3, 0, 3, 1, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 0, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 0, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 0, 3, 4, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 0, 3, 4, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 1, 0, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 0, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 0, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 0, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 1600, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 3, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 2, 0],"float32"), axis=2, )
paddle.squeeze(Tensor([3, 6, 0, 1, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 0, 4, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 0, 4, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 0, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 0, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 0, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 1, 0, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 1, 2, 0],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 4, 0, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 4, 0, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 4, 1, 0],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 4, 2, 0],"float64"), axis=5, )
paddle.squeeze(Tensor([4, 0, 125, 1],"float64"), -1, )
paddle.squeeze(Tensor([4, 0, 1],"float32"), -1, )
paddle.squeeze(Tensor([4, 0, 1],"float64"), axis=2, )
paddle.squeeze(Tensor([4, 100, 0],"float32"), -1, )
paddle.squeeze(Tensor([4, 125, 0, 1],"float64"), -1, )
paddle.squeeze(Tensor([4, 125, 125, 0],"float64"), -1, )
paddle.squeeze(Tensor([4, 7, 0],"float64"), axis=2, )
paddle.squeeze(Tensor([5, 0, 8, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 0],"float64"), -1, )
paddle.squeeze(Tensor([5, 10, 0, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 10, 8, 0, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 10, 8, 1, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([8, 0, 1, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 0, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 0, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 0, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 0, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([8, 1, 0, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 0, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 0],"float32"), list[1,], )
paddle.squeeze(Tensor([8, 1, 100, 0],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 100, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 2048, 0, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 2048, 1, 0, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 2048, 1, 7, 0],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 512, 0, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 512, 1, 0, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 512, 1, 100, 0],"float32"), axis=list[2,], )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float32"), )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float32"), )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float32"), )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float32"), )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), axis=tuple(-4,-3,), )
paddle.stack(list[Tensor([0, 1, 1, 32],"float16"),Tensor([0, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([0, 1, 2, 2],"float32"),Tensor([0, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1, 4, 2],"float32"),Tensor([0, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1, 64, 32],"float16"),Tensor([0, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 64],"float16"),Tensor([0, 1, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 10, 10],"float64"),Tensor([0, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([0, 10, 2, 1, 4],"float32"),Tensor([0, 10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 10],"int32"),Tensor([0, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),], )
paddle.stack(list[Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),], )
paddle.stack(list[Tensor([0, 114, 4, 1, 32],"float16"),Tensor([0, 114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 128, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 12],"int64"),Tensor([0, 12],"int64"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1],"float32"),], )
paddle.stack(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1],"int32"),], )
paddle.stack(list[Tensor([0, 2, 1, 4],"float32"),Tensor([0, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 21504],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 25, 2],"float32"),Tensor([0, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 25, 4],"float32"),Tensor([0, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 28, 28],"float32"),Tensor([0, 28, 28],"float32"),Tensor([0, 28, 28],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 3, 4],"float32"),Tensor([0, 3, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 300, 4096],"float32"),Tensor([0, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 300, 4],"float32"),], )
paddle.stack(list[Tensor([0, 300],"float32"),Tensor([0, 300],"float32"),Tensor([0, 300],"float32"),Tensor([0, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 11645, 4],"float32"),Tensor([0, 32, 11645, 4],"float32"),Tensor([0, 32, 11645, 4],"float32"),Tensor([0, 32, 11645, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 476, 4],"float32"),Tensor([0, 32, 476, 4],"float32"),Tensor([0, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], )
paddle.stack(list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),], )
paddle.stack(list[Tensor([0, 4, 1, 32],"float16"),Tensor([0, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float32"),], 0, )
paddle.stack(list[Tensor([0, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),], 0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=2, )
paddle.stack(list[Tensor([0, 500, 4],"float32"),Tensor([0, 500, 4],"float32"),Tensor([0, 500, 4],"float32"),], )
paddle.stack(list[Tensor([0, 512],"float16"),Tensor([0, 512],"float16"),Tensor([0, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([0, 512],"int32"),Tensor([0, 512],"int32"),Tensor([0, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([0, 6, 3, 2, 5],"float64"),Tensor([0, 6, 3, 2, 5],"float64"),Tensor([0, 6, 3, 2, 5],"float64"),], 0, )
paddle.stack(list[Tensor([0, 6, 3, 4, 5],"float64"),Tensor([0, 6, 3, 4, 5],"float64"),Tensor([0, 6, 3, 4, 5],"float64"),Tensor([0, 6, 3, 4, 5],"float64"),], 0, )
paddle.stack(list[Tensor([0, 6, 8, 8],"float32"),Tensor([0, 6, 8, 8],"float32"),Tensor([0, 6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 640, 640],"float32"),], )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 14],"float32"),Tensor([0, 7, 14],"float32"),Tensor([0, 7, 14],"float32"),Tensor([0, 7, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 7, 16],"float32"),Tensor([0, 7, 16],"float32"),Tensor([0, 7, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 64],"float32"),Tensor([0, 7, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 7],"int64"),Tensor([0, 7, 7],"int64"),Tensor([0, 7, 7],"int64"),], )
paddle.stack(list[Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], )
paddle.stack(list[Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 8],"int64"),Tensor([0, 8],"int64"),], axis=2, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], 0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], 1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),], 0, )
paddle.stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], 1, )
paddle.stack(list[Tensor([0],"float64"),Tensor([0],"float64"),], 0, )
paddle.stack(list[Tensor([0],"float64"),], 0, )
paddle.stack(list[Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),], axis=0, )
paddle.stack(list[Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),], )
paddle.stack(list[Tensor([0],"int32"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=-1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=-2, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=1, )
paddle.stack(list[Tensor([1, 0, 1, 32],"float16"),Tensor([1, 0, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 2, 2],"float32"),Tensor([1, 0, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], )
paddle.stack(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 0, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 4, 2],"float32"),Tensor([1, 0, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0, 4096],"float32"),Tensor([1, 0, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], )
paddle.stack(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 64, 32],"float16"),Tensor([1, 0, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 640],"float32"),], )
paddle.stack(list[Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 0],"float32"),], )
paddle.stack(list[Tensor([1, 0],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, )
paddle.stack(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0],"int32"),], )
paddle.stack(list[Tensor([1, 1, 0, 2],"float32"),Tensor([1, 1, 0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 0, 32],"float16"),Tensor([1, 1, 0, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 0],"float16"),Tensor([1, 1, 1, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 2, 0],"float32"),Tensor([1, 1, 2, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 0],"float32"),Tensor([1, 1, 4, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 64, 0],"float16"),Tensor([1, 1, 64, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),], )
paddle.stack(list[Tensor([1, 128, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 0],"float32"),Tensor([1, 25, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 0],"float32"),Tensor([1, 25, 0],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 300, 0],"float32"),Tensor([1, 300, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([1, 640, 0],"float32"),], )
paddle.stack(list[Tensor([10, 0, 1, 4],"float32"),Tensor([10, 0, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 0, 10],"float64"),Tensor([10, 0, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10, 0],"float64"),Tensor([10, 10, 0],"float64"),], -1, )
paddle.stack(list[Tensor([10, 2, 0, 4],"float32"),Tensor([10, 2, 0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 0],"float32"),Tensor([10, 2, 1, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([10105, 0],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 0],"float32"),], axis=1, )
paddle.stack(list[Tensor([114, 0, 1, 32],"float16"),Tensor([114, 0, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 0, 32],"float16"),Tensor([114, 4, 0, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 0],"float16"),Tensor([114, 4, 1, 0],"float16"),], axis=0, )
paddle.stack(list[Tensor([12, 0],"int64"),Tensor([12, 0],"int64"),], )
paddle.stack(list[Tensor([128, 0, 476, 4],"float32"),Tensor([128, 0, 476, 4],"float32"),Tensor([128, 0, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 0],"int32"),Tensor([128, 0],"int32"),Tensor([128, 0],"int32"),], axis=1, )
paddle.stack(list[Tensor([128, 32, 0, 4],"float32"),Tensor([128, 32, 0, 4],"float32"),Tensor([128, 32, 0, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 0],"float32"),Tensor([128, 32, 476, 0],"float32"),Tensor([128, 32, 476, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([13, 0, 14],"float32"),Tensor([13, 0, 14],"float32"),Tensor([13, 0, 14],"float32"),Tensor([13, 0, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0, 64],"float32"),Tensor([13, 0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),], )
paddle.stack(list[Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),Tensor([13, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 0],"int64"),Tensor([13, 0],"int64"),Tensor([13, 0],"int64"),Tensor([13, 0],"int64"),Tensor([13, 0],"int64"),Tensor([13, 0],"int64"),], )
paddle.stack(list[Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([64, 0, 64, 64],"float32"),Tensor([64, 0, 64, 64],"float32"),Tensor([64, 0, 64, 64],"float32"),Tensor([64, 0, 64, 64],"float32"),Tensor([64, 0, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([64, 64, 0, 64],"float32"),Tensor([64, 64, 0, 64],"float32"),Tensor([64, 64, 0, 64],"float32"),Tensor([64, 64, 0, 64],"float32"),Tensor([64, 64, 0, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(list[Tensor([64, 64, 64, 0],"float32"),Tensor([64, 64, 64, 0],"float32"),Tensor([64, 64, 64, 0],"float32"),Tensor([64, 64, 64, 0],"float32"),Tensor([64, 64, 64, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(tuple(Tensor([16, 0],"int64"),Tensor([16, 0],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),), axis=1, )
paddle.stack(tuple(Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),Tensor([3, 0, 224, 224],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([3, 0, 224],"float32"),Tensor([3, 0, 224],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([3, 224, 0],"float32"),Tensor([3, 224, 0],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),Tensor([3, 8, 0, 224],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),Tensor([3, 8, 224, 0],"float32"),), axis=0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.stack(x=list[Tensor([0, 140, 140],"float32"),Tensor([0, 140, 140],"float32"),], axis=1, )
paddle.stack(x=list[Tensor([58, 0, 140],"float32"),Tensor([58, 0, 140],"float32"),], axis=1, )
paddle.stack(x=list[Tensor([58, 140, 0],"float32"),Tensor([58, 140, 0],"float32"),], axis=1, )
paddle.stack(x=tuple(Tensor([0, 16, 256, 32],"float32"),Tensor([0, 16, 256, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([0, 3, 576, 32],"float32"),Tensor([0, 3, 576, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([1, 0, 256, 32],"float32"),Tensor([1, 0, 256, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([1, 16, 0, 32],"float32"),Tensor([1, 16, 0, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([1, 16, 256, 0],"float32"),Tensor([1, 16, 256, 0],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([128, 0, 576, 32],"float32"),Tensor([128, 0, 576, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([128, 3, 0, 32],"float32"),Tensor([128, 3, 0, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([128, 3, 576, 0],"float32"),Tensor([128, 3, 576, 0],"float32"),), axis=-1, )
paddle.sum(Tensor([0, 1, 1],"float32"), 1, )
paddle.sum(Tensor([0, 1, 1],"float32"), None, None, False, None, )
paddle.sum(Tensor([0, 1, 1],"float64"), None, None, False, None, )
paddle.sum(Tensor([0, 1, 2],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([0, 1, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([0, 1, 45],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([0, 10, 10],"float32"), name=None, )
paddle.sum(Tensor([0, 10, 4],"float32"), axis=2, )
paddle.sum(Tensor([0, 10, 5],"float64"), name=None, )
paddle.sum(Tensor([0, 1000],"float32"), axis=1, )
paddle.sum(Tensor([0, 100],"float32"), 1, )
paddle.sum(Tensor([0, 1024, 1024],"int64"), )
paddle.sum(Tensor([0, 1024, 1],"float32"), )
paddle.sum(Tensor([0, 1024, 8],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([0, 1024, 8],"float64"), None, keepdim=False, name=None, )
paddle.sum(Tensor([0, 10],"float32"), 1, )
paddle.sum(Tensor([0, 10],"float32"), axis=list[], keepdim=False, )
paddle.sum(Tensor([0, 10],"float32"), name=None, )
paddle.sum(Tensor([0, 128, 32, 32],"float32"), 1, )
paddle.sum(Tensor([0, 128, 32, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([0, 128],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([0, 13, 4],"float32"), axis=2, )
paddle.sum(Tensor([0, 14, 5, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 14, 5, 14],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([0, 15, 20, 100],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([0, 16, 3, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([0, 16],"int64"), axis=0, )
paddle.sum(Tensor([0, 18],"float32"), 0, )
paddle.sum(Tensor([0, 196608],"float32"), axis=1, )
paddle.sum(Tensor([0, 1],"float32"), )
paddle.sum(Tensor([0, 1],"float32"), axis=-1, )
paddle.sum(Tensor([0, 1],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([0, 1],"int32"), )
paddle.sum(Tensor([0, 2, 1, 512, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([0, 2, 2],"float32"), axis=-1, )
paddle.sum(Tensor([0, 2, 3],"float32"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), 0, keepdim=False, name=None, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.sum(Tensor([0, 2, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 2, 3],"float64"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 2, 4, 16, 16],"float32"), axis=2, )
paddle.sum(Tensor([0, 2, 4],"float32"), axis=1, )
paddle.sum(Tensor([0, 2, 5],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([0, 2, 5],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([0, 2, 5],"float32"), axis=list[-2,-1,], keepdim=True, )
paddle.sum(Tensor([0, 2, 7, 32],"float32"), axis=-2, )
paddle.sum(Tensor([0, 20, 2],"float32"), axis=-1, )
paddle.sum(Tensor([0, 20, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([0, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([0, 200, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([0, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([0, 25, 1, 2],"float32"), axis=-1, )
paddle.sum(Tensor([0, 25, 21504, 2],"float32"), axis=-1, )
paddle.sum(Tensor([0, 256, 16, 16],"float32"), 1, )
paddle.sum(Tensor([0, 256, 16, 16],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([0, 256],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([0, 256],"float64"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([0, 26, 512, 1, 40],"float16"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([0, 26, 512, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([0, 28, 28, 80],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([0, 2],"float32"), axis=-1, )
paddle.sum(Tensor([0, 2],"float32"), name=None, )
paddle.sum(Tensor([0, 3, 10, 10],"float32"), name=None, )
paddle.sum(Tensor([0, 3, 2, 5],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([0, 3, 2, 5],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([0, 3, 20, 20],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([0, 3, 2],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([0, 3, 3, 2],"float64"), )
paddle.sum(Tensor([0, 3, 3, 3, 3],"float32"), )
paddle.sum(Tensor([0, 3, 3, 4],"float64"), name=None, )
paddle.sum(Tensor([0, 3, 3, 5],"float32"), )
paddle.sum(Tensor([0, 3, 3],"float32"), 2, )
paddle.sum(Tensor([0, 3, 3],"float64"), list[0,1,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 3],"float64"), tuple(0,1,), keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 3],"float64"), tuple(0,1,), keepdim=True, name=None, )
paddle.sum(Tensor([0, 3, 4, 1, 1, 1],"int64"), )
paddle.sum(Tensor([0, 3, 4, 10],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 10],"float64"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 10],"float64"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 10],"float64"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 10],"float64"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 4, 5, 3],"float64"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=None, keepdim=False, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([0, 3, 4, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4, 5],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([0, 3, 4],"int32"), axis=tuple(0,1,), )
paddle.sum(Tensor([0, 3, 4],"int32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([0, 300, 20, 10],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([0, 32, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([0, 32, 128],"float32"), axis=0, )
paddle.sum(Tensor([0, 32, 32],"float32"), axis=0, )
paddle.sum(Tensor([0, 32, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([0, 3],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([0, 3],"bool"), axis=1, keepdim=False, )
paddle.sum(Tensor([0, 3],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([0, 3],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([0, 3],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([0, 3],"bool"), axis=list[0,], keepdim=True, )
paddle.sum(Tensor([0, 3],"bool"), axis=list[1,], keepdim=False, )
paddle.sum(Tensor([0, 3],"bool"), axis=tuple(0,1,), keepdim=False, )
paddle.sum(Tensor([0, 3],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([0, 3],"float32"), axis=0, )
paddle.sum(Tensor([0, 3],"float64"), None, keepdim=False, name=None, )
paddle.sum(Tensor([0, 3],"float64"), axis=list[1,], )
paddle.sum(Tensor([0, 4, 2, 2],"float32"), axis=-2, )
paddle.sum(Tensor([0, 4, 2],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([0, 4, 2],"float32"), axis=2, keepdim=True, )
paddle.sum(Tensor([0, 4, 2],"float64"), axis=0, keepdim=True, )
paddle.sum(Tensor([0, 4, 2],"float64"), axis=2, keepdim=True, )
paddle.sum(Tensor([0, 4, 4, 5, 7],"int64"), )
paddle.sum(Tensor([0, 4],"float64"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([0, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([0, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([0, 5],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 5],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 5],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 5],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([0, 5],"float32"), axis=None, )
paddle.sum(Tensor([0, 5],"float64"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 5],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 5],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([0, 5],"float64"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([0, 5],"float64"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([0, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([0, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([0, 784],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([0, 8, 14, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([0, 8, 16],"float32"), axis=1, )
paddle.sum(Tensor([0, 81, 94, 311],"float32"), axis=1, )
paddle.sum(Tensor([0, 93431],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([0, 96, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([0, 9],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([0],"bool"), axis=list[0,], keepdim=False, )
paddle.sum(Tensor([0],"float16"), axis=0, keepdim=True, )
paddle.sum(Tensor([0],"float32"), )
paddle.sum(Tensor([0],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([0],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([0],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([0],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([0],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([0],"float32"), axis=-1, )
paddle.sum(Tensor([0],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([0],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([0],"float32"), axis=0, )
paddle.sum(Tensor([0],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([0],"float32"), name=None, )
paddle.sum(Tensor([0],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([0],"float64"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([0],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([0],"float64"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([0],"float64"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([0],"float64"), name=None, )
paddle.sum(Tensor([0],"int64"), )
paddle.sum(Tensor([0],"int64"), axis=list[0,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 1, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 0, 1024],"int64"), )
paddle.sum(Tensor([1, 0, 16, 16],"float32"), 1, )
paddle.sum(Tensor([1, 0, 16, 16],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 0, 1],"float32"), )
paddle.sum(Tensor([1, 0, 1],"float32"), 1, )
paddle.sum(Tensor([1, 0, 21504, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 0, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 0, 3, 5],"float32"), )
paddle.sum(Tensor([1, 0, 32, 32],"float32"), 1, )
paddle.sum(Tensor([1, 0, 32, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 0, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 0, 4, 10],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 4, 10],"float64"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 4, 10],"float64"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 4, 10],"float64"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 4, 10],"float64"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 45],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 0, 5, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 0, 5, 14],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([1, 0],"float32"), )
paddle.sum(Tensor([1, 0],"float32"), 1, )
paddle.sum(Tensor([1, 0],"float32"), axis=-1, )
paddle.sum(Tensor([1, 0],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([1, 0],"float32"), axis=0, )
paddle.sum(Tensor([1, 0],"float32"), axis=1, )
paddle.sum(Tensor([1, 0],"float64"), axis=list[1,], )
paddle.sum(Tensor([1, 0],"int32"), )
paddle.sum(Tensor([1, 0],"int64"), axis=0, )
paddle.sum(Tensor([1, 1, 0],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([1, 1, 0],"float32"), 1, )
paddle.sum(Tensor([1, 1024, 0],"float32"), )
paddle.sum(Tensor([1, 1024, 0],"int64"), )
paddle.sum(Tensor([1, 128, 0, 32],"float32"), 1, )
paddle.sum(Tensor([1, 128, 0, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 128, 32, 0],"float32"), 1, )
paddle.sum(Tensor([1, 128, 32, 0],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 14, 0, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 14, 0, 14],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([1, 14, 5, 0],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 14, 5, 0],"int64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.sum(Tensor([1, 2, 0],"float32"), axis=-1, )
paddle.sum(Tensor([1, 25, 0, 2],"float32"), axis=-1, )
paddle.sum(Tensor([1, 25, 1, 0],"float32"), axis=-1, )
paddle.sum(Tensor([1, 25, 21504, 0],"float32"), axis=-1, )
paddle.sum(Tensor([1, 256, 0, 16],"float32"), 1, )
paddle.sum(Tensor([1, 256, 0, 16],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 256, 16, 0],"float32"), 1, )
paddle.sum(Tensor([1, 256, 16, 0],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([1, 3, 0, 10],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 0, 10],"float64"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 0, 10],"float64"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 0, 10],"float64"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 0, 10],"float64"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 0, 5],"float32"), )
paddle.sum(Tensor([1, 3, 3, 0],"float32"), )
paddle.sum(Tensor([1, 3, 4, 0],"float32"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 0],"float64"), 2, keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 0],"float64"), list[1,2,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 0],"float64"), list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([1, 3, 4, 0],"float64"), tuple(1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([10, 0, 2],"float32"), axis=-1, )
paddle.sum(Tensor([10, 0, 5],"float64"), name=None, )
paddle.sum(Tensor([10, 0],"float32"), axis=list[], keepdim=False, )
paddle.sum(Tensor([10, 0],"float32"), name=None, )
paddle.sum(Tensor([10, 10, 0],"float64"), name=None, )
paddle.sum(Tensor([10, 20, 0],"float32"), axis=-1, )
paddle.sum(Tensor([100, 0, 1],"float32"), None, None, False, None, )
paddle.sum(Tensor([100, 0, 1],"float64"), None, None, False, None, )
paddle.sum(Tensor([100, 0, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([100, 0, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([100, 1, 0],"float32"), None, None, False, None, )
paddle.sum(Tensor([100, 1, 0],"float64"), None, None, False, None, )
paddle.sum(Tensor([100, 200, 0],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([1000, 0],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 0, 3],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 0, 3],"float64"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 2, 0],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([10000, 2, 0],"float64"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([100000, 0],"float64"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 0, 8],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 0, 8],"float64"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 1024, 0],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([1024, 1024, 0],"float64"), None, keepdim=False, name=None, )
paddle.sum(Tensor([104, 0],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([12, 0, 4],"float32"), axis=2, )
paddle.sum(Tensor([12, 10, 0],"float32"), axis=2, )
paddle.sum(Tensor([12, 13, 0],"float32"), axis=2, )
paddle.sum(Tensor([128, 0, 32],"float32"), axis=0, )
paddle.sum(Tensor([128, 0],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([128, 0],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([128, 32, 0],"float32"), axis=0, )
paddle.sum(Tensor([12988, 0, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([12988, 32, 0],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([13, 0, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([13, 0, 2, 2],"float32"), axis=-2, )
paddle.sum(Tensor([13, 0, 3],"float32"), 2, )
paddle.sum(Tensor([13, 0, 4, 16, 16],"float32"), axis=2, )
paddle.sum(Tensor([13, 0, 7, 32],"float32"), axis=-2, )
paddle.sum(Tensor([13, 2, 0, 16, 16],"float32"), axis=2, )
paddle.sum(Tensor([13, 2, 0, 32],"float32"), axis=-2, )
paddle.sum(Tensor([13, 2, 4, 0, 16],"float32"), axis=2, )
paddle.sum(Tensor([13, 2, 4, 16, 0],"float32"), axis=2, )
paddle.sum(Tensor([13, 2, 7, 0],"float32"), axis=-2, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.sum(Tensor([13, 3, 0],"float32"), 2, )
paddle.sum(Tensor([13, 4, 0, 2],"float32"), axis=-2, )
paddle.sum(Tensor([13, 4, 2, 0],"float32"), axis=-2, )
paddle.sum(Tensor([13, 96, 0],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([16, 0, 1, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 0, 128],"float32"), axis=0, )
paddle.sum(Tensor([16, 0, 1],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([16, 0, 3, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 0],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([16, 0],"float64"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([16, 16, 0, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 16, 3, 0],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 32, 0, 1],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 32, 0],"float32"), axis=0, )
paddle.sum(Tensor([16, 32, 1, 0],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([16, 96, 0],"float32"), tuple(1,), keepdim=True, name=None, )
paddle.sum(Tensor([170628, 0, 3],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([170628, 20, 0],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([18, 0],"float32"), 0, )
paddle.sum(Tensor([2, 0, 10],"float32"), name=None, )
paddle.sum(Tensor([2, 0, 16],"float32"), axis=1, )
paddle.sum(Tensor([2, 0, 2],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2, 0, 3, 2],"float64"), )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 0, 4, 5],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 0, 4],"int32"), axis=tuple(0,1,), )
paddle.sum(Tensor([2, 0, 4],"int32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([2, 0],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 0],"bool"), axis=1, keepdim=False, )
paddle.sum(Tensor([2, 0],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 0],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 0],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 0],"bool"), axis=list[0,], keepdim=True, )
paddle.sum(Tensor([2, 0],"bool"), axis=list[1,], keepdim=False, )
paddle.sum(Tensor([2, 0],"bool"), axis=tuple(0,1,), keepdim=False, )
paddle.sum(Tensor([2, 0],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0],"float32"), None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 0],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([2, 0],"float64"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([2, 0],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 0],"float64"), 1, keepdim=False, dtype=None, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.sum(Tensor([2, 0],"float64"), None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 0],"float64"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([2, 1, 0],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([2, 10, 0],"float32"), name=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 0, 2],"float64"), )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 0, 5],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 0],"int32"), axis=tuple(0,1,), )
paddle.sum(Tensor([2, 3, 0],"int32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([2, 3, 3, 0],"float64"), )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=-1, keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=2, keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=list[-1,], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=list[0,1,2,3,], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=list[0,2,], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=list[2,], keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=list[], keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=list[-1,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=list[0,2,], keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=list[2,], keepdim=True, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=tuple(0,1,3,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 0],"int64"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"int64"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"int64"), )
paddle.sum(Tensor([2, 8, 0],"float32"), axis=1, )
paddle.sum(Tensor([256, 0, 28, 80],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([256, 28, 0, 80],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([256, 28, 28, 0],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([3, 0, 10, 10],"float32"), name=None, )
paddle.sum(Tensor([3, 0, 2],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 0, 2],"float32"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 0, 2],"float64"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 0, 2],"float64"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 0, 3, 3, 3],"float32"), )
paddle.sum(Tensor([3, 0, 3],"float64"), list[0,1,], keepdim=False, name=None, )
paddle.sum(Tensor([3, 0, 3],"float64"), tuple(0,1,), keepdim=False, name=None, )
paddle.sum(Tensor([3, 0, 3],"float64"), tuple(0,1,), keepdim=True, name=None, )
paddle.sum(Tensor([3, 0, 4, 5, 7],"int64"), )
paddle.sum(Tensor([3, 0, 4],"float32"), axis=1, )
paddle.sum(Tensor([3, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([3, 0, 5],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 0, 5],"float32"), axis=list[-2,-1,], keepdim=True, )
paddle.sum(Tensor([3, 0],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([3, 0],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([3, 0],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 0],"float32"), axis=None, )
paddle.sum(Tensor([3, 0],"float64"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 0],"int64"), axis=None, keepdim=False, name=None, )
paddle.sum(Tensor([3, 0],"int64"), axis=None, keepdim=True, name=None, )
paddle.sum(Tensor([3, 2, 0],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([3, 2, 0],"float32"), axis=-1, keepdim=True, name="Categorical_kl_divergence", )
paddle.sum(Tensor([3, 2, 0],"float32"), axis=1, )
paddle.sum(Tensor([3, 2, 0],"float32"), axis=list[-2,-1,], keepdim=True, )
paddle.sum(Tensor([3, 3, 0, 10],"float32"), name=None, )
paddle.sum(Tensor([3, 3, 0, 3, 3],"float32"), )
paddle.sum(Tensor([3, 3, 0],"float64"), list[0,1,], keepdim=False, name=None, )
paddle.sum(Tensor([3, 3, 0],"float64"), tuple(0,1,), keepdim=False, name=None, )
paddle.sum(Tensor([3, 3, 0],"float64"), tuple(0,1,), keepdim=True, name=None, )
paddle.sum(Tensor([3, 3, 10, 0],"float32"), name=None, )
paddle.sum(Tensor([3, 3, 3, 0, 3],"float32"), )
paddle.sum(Tensor([3, 3, 3, 3, 0],"float32"), )
paddle.sum(Tensor([3, 4, 0, 5, 7],"int64"), )
paddle.sum(Tensor([3, 4, 0],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 4, 0],"float32"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 0],"float64"), axis=0, keepdim=True, )
paddle.sum(Tensor([3, 4, 0],"float64"), axis=2, keepdim=True, )
paddle.sum(Tensor([3, 4, 4, 0, 7],"int64"), )
paddle.sum(Tensor([3, 4, 4, 5, 0],"int64"), )
paddle.sum(Tensor([30, 0, 40],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([30, 200, 0],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([4, 0, 1, 512, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 0, 2, 5],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([4, 0, 2, 5],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([4, 0, 2],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([4, 0, 3, 4],"float64"), name=None, )
paddle.sum(Tensor([4, 0, 94, 311],"float32"), axis=1, )
paddle.sum(Tensor([4, 0],"float64"), axis=list[1,], )
paddle.sum(Tensor([4, 2, 0, 512, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 2, 1, 0, 4, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 2, 1, 512, 0, 4],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 2, 1, 512, 4, 0],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([4, 3, 0, 4],"float64"), name=None, )
paddle.sum(Tensor([4, 3, 0, 5],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([4, 3, 0, 5],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([4, 3, 0],"float32"), axis=1, keepdim=False, )
paddle.sum(Tensor([4, 3, 2, 0],"float32"), axis=list[1,3,], keepdim=False, )
paddle.sum(Tensor([4, 3, 2, 0],"float32"), axis=list[1,3,], keepdim=True, )
paddle.sum(Tensor([4, 3, 3, 0],"float64"), name=None, )
paddle.sum(Tensor([4, 81, 0, 311],"float32"), axis=1, )
paddle.sum(Tensor([4, 81, 94, 0],"float32"), axis=1, )
paddle.sum(Tensor([400, 0, 20, 10],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([400, 300, 0, 10],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([400, 300, 20, 0],"float32"), axis=tuple(0,1,), )
paddle.sum(Tensor([500, 0, 20, 20],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([500, 3, 0, 20],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([500, 3, 20, 0],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([512, 0, 14, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([512, 8, 0, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([512, 8, 14, 0],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([6, 0, 3],"float32"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 0, 3],"float64"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 0],"float32"), 1, keepdim=False, name=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float32"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), -1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), -2, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), -2, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), None, keepdim=False, dtype=None, )
paddle.sum(Tensor([6, 2, 0],"float64"), None, keepdim=True, dtype=None, )
paddle.sum(Tensor([64, 0, 512, 1, 40],"float16"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 0, 512, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 0, 1, 40],"float16"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 0, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 512, 0, 40],"float16"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 512, 0, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 512, 1, 0],"float16"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 26, 512, 1, 0],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([8, 0, 4, 1, 1, 1],"int64"), )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 0, 4, 4, 5, 3],"float64"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 1, 1, 1],"int64"), )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 0, 4, 5, 3],"float64"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 1, 1],"int64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 0, 5, 3],"float64"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 1, 0, 1],"int64"), )
paddle.sum(Tensor([8, 3, 4, 1, 1, 0],"int64"), )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 0, 3],"float64"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 5, keepdim=False, dtype=None, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float32"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 0, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 2, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 2, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 3, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 4, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 4, keepdim=True, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([8, 3, 4, 4, 5, 0],"float64"), 5, keepdim=True, dtype=None, )
paddle.sum(Tensor([96, 0, 20, 100],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([96, 15, 0, 100],"float32"), axis=tuple(0,1,2,), )
paddle.sum(Tensor([96, 15, 20, 0],"float32"), axis=tuple(0,1,2,), )
paddle.sum(x=Tensor([0, 2],"float32"), )
paddle.sum(x=Tensor([0, 2],"float32"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([0, 2],"float64"), )
paddle.sum(x=Tensor([0, 2],"float64"), axis=-1, )
paddle.sum(x=Tensor([0, 2],"float64"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([0, 2],"float64"), axis=1, )
paddle.sum(x=Tensor([0, 2],"float64"), axis=list[0,1,], )
paddle.sum(x=Tensor([2, 0],"float32"), )
paddle.sum(x=Tensor([2, 0],"float32"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([2, 0],"float64"), )
paddle.sum(x=Tensor([2, 0],"float64"), axis=-1, )
paddle.sum(x=Tensor([2, 0],"float64"), axis=0, keepdim=True, )
paddle.sum(x=Tensor([2, 0],"float64"), axis=1, )
paddle.sum(x=Tensor([2, 0],"float64"), axis=list[0,1,], )
paddle.t(Tensor([0, 20],"float32"), )
paddle.t(Tensor([0, 5],"float64"), )
paddle.t(Tensor([0],"float64"), )
paddle.t(Tensor([1, 0],"float64"), )
paddle.t(Tensor([10, 0],"float32"), )
paddle.take_along_axis(Tensor([0, 114, 64],"bfloat16"), axis=1, indices=Tensor([0, 14, 64],"int64"), )
paddle.take_along_axis(Tensor([0, 302, 768],"bfloat16"), axis=1, indices=Tensor([0, 14, 768],"int64"), )
paddle.take_along_axis(Tensor([0, 4, 7, 14],"float32"), axis=-1, indices=Tensor([0, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([13, 0, 7, 14],"float32"), axis=-1, indices=Tensor([13, 0, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([13, 4, 0, 14],"float32"), axis=-1, indices=Tensor([13, 4, 0, 7],"int64"), )
paddle.take_along_axis(Tensor([13, 4, 7, 0],"float32"), axis=-1, indices=Tensor([13, 4, 7, 0],"int64"), )
paddle.take_along_axis(Tensor([13, 4, 7, 14],"float32"), axis=-1, indices=Tensor([13, 4, 7, 0],"int64"), )
paddle.take_along_axis(Tensor([2, 0, 64],"bfloat16"), axis=1, indices=Tensor([2, 0, 64],"int64"), )
paddle.take_along_axis(Tensor([2, 0, 768],"bfloat16"), axis=1, indices=Tensor([2, 0, 768],"int64"), )
paddle.take_along_axis(Tensor([2, 114, 0],"bfloat16"), axis=1, indices=Tensor([2, 14, 0],"int64"), )
paddle.take_along_axis(Tensor([2, 114, 64],"bfloat16"), axis=1, indices=Tensor([2, 0, 64],"int64"), )
paddle.take_along_axis(Tensor([2, 302, 0],"bfloat16"), axis=1, indices=Tensor([2, 14, 0],"int64"), )
paddle.take_along_axis(Tensor([2, 302, 768],"bfloat16"), axis=1, indices=Tensor([2, 0, 768],"int64"), )
paddle.take_along_axis(Tensor([52, 0, 7, 14],"float32"), axis=-1, indices=Tensor([52, 0, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([52, 4, 0, 14],"float32"), axis=-1, indices=Tensor([52, 4, 0, 7],"int64"), )
paddle.take_along_axis(Tensor([52, 4, 7, 0],"float32"), axis=-1, indices=Tensor([52, 4, 7, 0],"int64"), )
paddle.take_along_axis(Tensor([52, 4, 7, 14],"float32"), axis=-1, indices=Tensor([52, 4, 7, 0],"int64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), axes=2, )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([0, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), 1, )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), 2, )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([0, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([0, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), 1, )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), 2, )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([0, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([0],"float64"), Tensor([0],"float64"), axes=1, )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([2, 0],"float64"), Tensor([2, 0],"float64"), axes=2, )
paddle.tensordot(Tensor([3, 0, 4],"float32"), Tensor([4, 0, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 0, 4],"float32"), Tensor([4, 0, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 0, 4],"float32"), Tensor([4, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 0, 4],"float32"), Tensor([4, 4, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 0, 4],"float64"), Tensor([4, 0, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 0, 4],"float64"), Tensor([4, 0, 5],"float64"), 1, )
paddle.tensordot(Tensor([3, 0, 4],"float64"), Tensor([4, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 0, 4],"float64"), Tensor([4, 4, 5],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 0],"float32"), Tensor([4, 4, 0],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 0],"float32"), Tensor([4, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 0],"float64"), Tensor([4, 4, 0],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 0],"float64"), Tensor([4, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([0, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([0, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(x=Tensor([0, 3, 3, 4],"float64"), y=Tensor([0, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([0, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 4],"float64"), )
paddle.tensordot(x=Tensor([0, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([0, 3, 4, 4],"float64"), y=Tensor([0, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([0, 3, 4, 4],"float64"), y=Tensor([2, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([0, 3],"float32"), y=Tensor([0, 3],"float32"), axes=2, )
paddle.tensordot(x=Tensor([0, 3],"float64"), y=Tensor([0, 3],"float64"), axes=2, )
paddle.tensordot(x=Tensor([0, 4, 3, 4],"float64"), y=Tensor([4, 4, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([0, 7, 4, 2],"float64"), y=Tensor([7, 7, 4, 2],"float64"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([0, 7, 4, 2],"float64"), y=Tensor([7, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 0, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 4, 3, 4],"float64"), )
paddle.tensordot(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 0, 4, 4],"float64"), y=Tensor([2, 0, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 0, 4, 4],"float64"), y=Tensor([2, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 0, 4],"float64"), y=Tensor([2, 3, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 0, 4],"float64"), y=Tensor([2, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 0, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 0, 4],"float64"), y=Tensor([3, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 0],"float64"), y=Tensor([3, 4, 3, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 0],"float64"), y=Tensor([3, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([0, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 0, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 0],"float64"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 0],"float64"), y=Tensor([2, 3, 4, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 0],"float64"), y=Tensor([2, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([0, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 0, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 3, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 3, 4, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 7, 0, 2],"float64"), y=Tensor([7, 7, 0, 2],"float64"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 0, 2],"float64"), y=Tensor([7, 7, 0, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 0],"float64"), y=Tensor([7, 7, 4, 0],"float64"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 0],"float64"), y=Tensor([7, 7, 4, 0],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 0, 4, 2],"float64"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 0, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([3, 0, 3, 4],"float64"), y=Tensor([4, 0, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 0, 3, 4],"float64"), y=Tensor([4, 4, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 0],"float32"), y=Tensor([3, 0],"float32"), axes=2, )
paddle.tensordot(x=Tensor([3, 0],"float64"), y=Tensor([3, 0],"float64"), axes=2, )
paddle.tensordot(x=Tensor([3, 4, 0, 4],"float64"), y=Tensor([4, 4, 0, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 0, 4],"float64"), y=Tensor([4, 4, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 0, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 4, 0, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 4, 3, 0],"float64"), axes=1, )
paddle.tile(Tensor([0, 1, 1, 1, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([0, 1, 1, 1],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([0, 1, 1, 3, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([0, 1, 10],"int64"), list[1,10,1,], )
paddle.tile(Tensor([0, 1, 10],"int64"), list[13,10,1,], )
paddle.tile(Tensor([0, 1, 128],"int64"), repeat_times=list[1,128,1,], )
paddle.tile(Tensor([0, 1, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([0, 1, 16],"float32"), list[1,4,1,], )
paddle.tile(Tensor([0, 1, 1],"int64"), list[1,1,1,], )
paddle.tile(Tensor([0, 1, 1],"int64"), list[13,1,1,], )
paddle.tile(Tensor([0, 1, 1],"int64"), list[2,1,1,], )
paddle.tile(Tensor([0, 1, 1],"int64"), list[4,1,1,], )
paddle.tile(Tensor([0, 1, 1],"int64"), list[6,1,1,], )
paddle.tile(Tensor([0, 1, 2, 2],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([0, 1, 20],"int64"), list[1,20,1,], )
paddle.tile(Tensor([0, 1, 256],"int64"), repeat_times=list[1,128,1,], )
paddle.tile(Tensor([0, 1, 2],"int64"), list[12,2,1,], )
paddle.tile(Tensor([0, 1, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([0, 1, 32],"float32"), list[1,4,1,], )
paddle.tile(Tensor([0, 1, 32],"float32"), list[1,8,1,], )
paddle.tile(Tensor([0, 1, 3],"int64"), list[13,3,1,], )
paddle.tile(Tensor([0, 1, 4],"int64"), list[12,4,1,], )
paddle.tile(Tensor([0, 1, 64, 64, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([0, 1, 7],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([0, 1, 7],"int64"), list[12,7,1,], )
paddle.tile(Tensor([0, 1, 7],"int64"), list[13,7,1,], )
paddle.tile(Tensor([0, 1, 8],"int64"), list[13,8,1,], )
paddle.tile(Tensor([0, 1, 9],"int64"), list[12,9,1,], )
paddle.tile(Tensor([0, 1, 9],"int64"), list[13,9,1,], )
paddle.tile(Tensor([0, 10, 1, 1, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([0, 10, 1, 58, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([0, 13, 7, 14],"int32"), repeat_times=list[2,1,4,1,], )
paddle.tile(Tensor([0, 14, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([0, 192, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([0, 196, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([0, 1],"bool"), list[1,24,], )
paddle.tile(Tensor([0, 1],"float32"), list[1,1,49,], )
paddle.tile(Tensor([0, 1],"float32"), list[1,256,], )
paddle.tile(Tensor([0, 1],"float32"), list[1,5,], )
paddle.tile(Tensor([0, 1],"float32"), list[1,58,], )
paddle.tile(Tensor([0, 1],"float32"), list[1,64,], )
paddle.tile(Tensor([0, 1],"float32"), list[8,1,], )
paddle.tile(Tensor([0, 1],"float32"), repeat_times=list[1,18,], )
paddle.tile(Tensor([0, 1],"float32"), repeat_times=list[1,4,], )
paddle.tile(Tensor([0, 1],"int64"), list[1,2,], )
paddle.tile(Tensor([0, 1],"int64"), list[1,3,], )
paddle.tile(Tensor([0, 1],"int64"), list[1,4,], )
paddle.tile(Tensor([0, 1],"int64"), list[1,5,], )
paddle.tile(Tensor([0, 1],"int64"), list[1,8,], )
paddle.tile(Tensor([0, 1],"int64"), repeat_times=list[1,14,], )
paddle.tile(Tensor([0, 1],"int64"), repeat_times=list[1,7,], )
paddle.tile(Tensor([0, 2, 1, 64, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([0, 2, 1, 64, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([0, 2, 1, 64],"int64"), repeat_times=list[1,1,16,1,], )
paddle.tile(Tensor([0, 2, 16, 16],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([0, 22400, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([0, 256],"float32"), list[256,1,], )
paddle.tile(Tensor([0, 2],"float32"), repeat_times=list[2,1,], )
paddle.tile(Tensor([0, 3, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([0, 4, 1],"float32"), list[1,1,16,], )
paddle.tile(Tensor([0, 4, 1],"float32"), list[1,1,32,], )
paddle.tile(Tensor([0, 4, 1],"float64"), list[1,1,100,], )
paddle.tile(Tensor([0, 58],"float32"), list[58,1,], )
paddle.tile(Tensor([0, 5],"float32"), list[5,1,], )
paddle.tile(Tensor([0, 64],"float32"), list[64,1,], )
paddle.tile(Tensor([0, 7, 14],"int32"), repeat_times=list[13,1,1,], )
paddle.tile(Tensor([0, 7, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([0, 7, 7],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([0, 7, 7],"int32"), repeat_times=list[1,4,1,], )
paddle.tile(Tensor([0, 7, 7],"int32"), repeat_times=list[13,1,1,], )
paddle.tile(Tensor([0, 7],"float32"), list[40,1,1,], )
paddle.tile(Tensor([0, 7],"int64"), list[14,1,], )
paddle.tile(Tensor([0, 7],"int64"), list[7,1,], )
paddle.tile(Tensor([0, 8, 1, 1, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([0, 8, 1, 64, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([0, 8, 1],"float32"), list[1,1,32,], )
paddle.tile(Tensor([0],"float32"), list[245,1,], )
paddle.tile(Tensor([0],"float32"), list[7,1,], )
paddle.tile(Tensor([0],"int64"), repeat_times=list[1,1,], )
paddle.tile(Tensor([0],"int64"), repeat_times=list[1,500,1,], )
paddle.tile(Tensor([0],"int64"), repeat_times=list[13,2,1,], )
paddle.tile(Tensor([0],"int64"), repeat_times=list[26,], )
paddle.tile(Tensor([0],"int64"), repeat_times=list[512,], )
paddle.tile(Tensor([1, 0, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 0, 1, 1, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 0, 1, 1],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 0, 1, 64, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 0, 10],"int64"), list[1,10,1,], )
paddle.tile(Tensor([1, 0, 10],"int64"), list[13,10,1,], )
paddle.tile(Tensor([1, 0, 128],"int64"), repeat_times=list[1,128,1,], )
paddle.tile(Tensor([1, 0, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 0, 14],"int32"), repeat_times=list[13,1,1,], )
paddle.tile(Tensor([1, 0, 1],"int64"), list[1,1,1,], )
paddle.tile(Tensor([1, 0, 1],"int64"), list[13,1,1,], )
paddle.tile(Tensor([1, 0, 1],"int64"), list[2,1,1,], )
paddle.tile(Tensor([1, 0, 1],"int64"), list[4,1,1,], )
paddle.tile(Tensor([1, 0, 1],"int64"), list[6,1,1,], )
paddle.tile(Tensor([1, 0, 2, 2],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([1, 0, 20],"int64"), list[1,20,1,], )
paddle.tile(Tensor([1, 0, 256],"int64"), repeat_times=list[1,128,1,], )
paddle.tile(Tensor([1, 0, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 0, 2],"int64"), list[12,2,1,], )
paddle.tile(Tensor([1, 0, 3],"int64"), list[13,3,1,], )
paddle.tile(Tensor([1, 0, 4],"int64"), list[12,4,1,], )
paddle.tile(Tensor([1, 0, 64, 64, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 0, 7, 14],"int32"), repeat_times=list[2,1,4,1,], )
paddle.tile(Tensor([1, 0, 7],"int32"), repeat_times=list[13,1,1,], )
paddle.tile(Tensor([1, 0, 7],"int64"), list[12,7,1,], )
paddle.tile(Tensor([1, 0, 7],"int64"), list[13,7,1,], )
paddle.tile(Tensor([1, 0, 8],"int64"), list[13,8,1,], )
paddle.tile(Tensor([1, 0, 9],"int64"), list[12,9,1,], )
paddle.tile(Tensor([1, 0, 9],"int64"), list[13,9,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[256,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[5,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[58,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[64,1,], )
paddle.tile(Tensor([1, 0],"float32"), repeat_times=list[2,1,], )
paddle.tile(Tensor([1, 0],"int64"), list[1,4,], )
paddle.tile(Tensor([1, 0],"int64"), list[1,5,], )
paddle.tile(Tensor([1, 0],"int64"), list[14,1,], )
paddle.tile(Tensor([1, 0],"int64"), list[7,1,], )
paddle.tile(Tensor([1, 1, 0, 1, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 0, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 0, 1],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 0, 2],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([1, 1, 0, 64, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 1, 0],"int64"), list[1,1,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[1,10,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[1,20,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[12,2,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[12,4,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[12,7,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[12,9,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[13,1,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[13,10,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[13,3,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[13,7,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[13,8,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[13,9,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[2,1,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[4,1,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), list[6,1,1,], )
paddle.tile(Tensor([1, 1, 0],"int64"), repeat_times=list[1,128,1,], )
paddle.tile(Tensor([1, 1, 1, 0, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 1, 0],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 1, 1, 0, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 1, 1, 1, 0],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 13, 0],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 2, 0],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([1, 1, 64, 0, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 1, 64, 64, 0],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 13, 0, 14],"int32"), repeat_times=list[2,1,4,1,], )
paddle.tile(Tensor([1, 13, 7, 0],"int32"), repeat_times=list[2,1,4,1,], )
paddle.tile(Tensor([1, 192, 0],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 196, 0],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 2, 0, 64, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 2, 1, 0, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 2, 1, 64, 0],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 3, 0, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 3, 1, 0, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 3, 1, 1, 0, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 3, 1, 1, 1, 0],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 7, 0],"int32"), repeat_times=list[13,1,1,], )
paddle.tile(Tensor([10, 0],"int64"), list[1,4,], )
paddle.tile(Tensor([13, 0, 1, 64],"int64"), repeat_times=list[1,1,16,1,], )
paddle.tile(Tensor([13, 0, 16, 16],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([13, 0, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([13, 0, 7],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([13, 0, 7],"int32"), repeat_times=list[1,4,1,], )
paddle.tile(Tensor([13, 1, 0],"float32"), list[1,1,4,], )
paddle.tile(Tensor([13, 1, 0],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([13, 2, 0, 16],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([13, 2, 0, 64],"int64"), repeat_times=list[1,1,16,1,], )
paddle.tile(Tensor([13, 2, 1, 0],"int64"), repeat_times=list[1,1,16,1,], )
paddle.tile(Tensor([13, 2, 16, 0],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([13, 7, 0],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([13, 7, 0],"int32"), repeat_times=list[1,4,1,], )
paddle.tile(Tensor([16, 0, 1, 1, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 0, 1, 3, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 0, 1, 58, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 1, 0, 3, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 1, 1, 0, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 1, 1, 3, 0, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 1, 1, 3, 64, 0],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 10, 0, 1, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 10, 0, 58, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 10, 1, 0, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 10, 1, 0, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 10, 1, 1, 0],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 10, 1, 58, 0],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([18, 0],"float32"), repeat_times=list[1,18,], )
paddle.tile(Tensor([1960, 0],"bool"), list[1,24,], )
paddle.tile(Tensor([2, 0, 1, 1, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 0, 1, 64, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 0],"int64"), list[1,2,], )
paddle.tile(Tensor([2, 0],"int64"), list[1,3,], )
paddle.tile(Tensor([2, 8, 0, 1, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 8, 0, 64, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 8, 1, 0, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 8, 1, 1, 0],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 8, 1, 64, 0],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([256, 0],"float32"), list[1,256,], )
paddle.tile(Tensor([3, 0, 1, 64, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([3, 2, 0, 64, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([3, 2, 1, 0, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([3, 2, 1, 64, 0],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([364, 0, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([364, 0],"int64"), repeat_times=list[1,7,], )
paddle.tile(Tensor([364, 7, 0],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([4, 0, 16],"float32"), list[1,4,1,], )
paddle.tile(Tensor([4, 0, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([4, 0, 1],"float32"), list[1,1,16,], )
paddle.tile(Tensor([4, 0, 1],"float32"), list[1,1,32,], )
paddle.tile(Tensor([4, 0, 32],"float32"), list[1,4,1,], )
paddle.tile(Tensor([4, 0, 32],"float32"), list[1,8,1,], )
paddle.tile(Tensor([4, 0],"float32"), repeat_times=list[1,4,], )
paddle.tile(Tensor([4, 0],"int64"), list[1,8,], )
paddle.tile(Tensor([4, 1, 0],"float32"), list[1,4,1,], )
paddle.tile(Tensor([4, 1, 0],"float32"), list[1,8,1,], )
paddle.tile(Tensor([4, 22400, 0],"bool"), list[1,1,4,], )
paddle.tile(Tensor([4, 4, 0],"float32"), list[1,1,16,], )
paddle.tile(Tensor([4, 4, 0],"float32"), list[1,1,32,], )
paddle.tile(Tensor([4, 8, 0],"float32"), list[1,1,32,], )
paddle.tile(Tensor([40, 0],"float32"), list[1,1,49,], )
paddle.tile(Tensor([5, 0],"float32"), list[1,5,], )
paddle.tile(Tensor([5, 0],"float32"), list[8,1,], )
paddle.tile(Tensor([58, 0],"float32"), list[1,58,], )
paddle.tile(Tensor([64, 0],"float32"), list[1,64,], )
paddle.tile(Tensor([7, 0],"float32"), list[40,1,1,], )
paddle.tile(Tensor([728, 0, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([728, 0],"int64"), repeat_times=list[1,14,], )
paddle.tile(Tensor([728, 14, 0],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([8, 0, 1],"float64"), list[1,1,100,], )
paddle.tile(Tensor([8, 4, 0],"float64"), list[1,1,100,], )
paddle.tile(x=Tensor([0, 3, 2],"float64"), repeat_times=tuple(2,3,), )
paddle.tile(x=Tensor([0, 3],"float64"), repeat_times=list[3,2,], )
paddle.tile(x=Tensor([0, 512],"float64"), repeat_times=list[471,1,], )
paddle.tile(x=Tensor([0],"int32"), repeat_times=tuple(3,), )
paddle.tile(x=Tensor([1, 0, 2],"float64"), repeat_times=tuple(2,3,), )
paddle.tile(x=Tensor([1, 0],"float64"), repeat_times=list[471,1,], )
paddle.tile(x=Tensor([1, 3, 0],"float64"), repeat_times=tuple(2,3,), )
paddle.tile(x=Tensor([2, 0],"float64"), repeat_times=list[3,2,], )
paddle.trace(Tensor([0, 2],"float32"), )
paddle.trace(Tensor([2, 0],"float32"), )
paddle.transpose(Tensor([0, 1, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([0, 1, 1, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([0, 1, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([0, 1, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([0, 1, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([0, 1, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([0, 1, 2],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([0, 1, 3, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([0, 1, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([0, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([0, 10, 32],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([0, 100, 120],"float64"), list[1,2,0,], )
paddle.transpose(Tensor([0, 100, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([0, 100, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([0, 1024, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([0, 1024, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([0, 10],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([0, 10],"float64"), list[1,0,], )
paddle.transpose(Tensor([0, 12, 10, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([0, 12, 10, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([0, 128, 32, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([0, 128, 32, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([0, 128, 4, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([0, 1280, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([0, 13, 4, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([0, 13, 4, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([0, 13, 7, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([0, 14, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([0, 14, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([0, 16, 2, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([0, 16, 32, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([0, 1960],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([0, 2, 1, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([0, 2, 1, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([0, 2, 12, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([0, 2, 12, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([0, 2, 16, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([0, 2, 2, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([0, 2, 2, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([0, 2, 24, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([0, 2, 3],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([0, 2, 3],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([0, 2, 3],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([0, 2, 3],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([0, 2, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([0, 20, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([0, 22, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([0, 248, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([0, 26, 1, 40, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([0, 26, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([0, 26, 512, 1, 40],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([0, 26, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([0, 3, 2, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([0, 3, 2, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([0, 3, 2, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([0, 3, 3, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([0, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([0, 3, 4, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([0, 3, 4, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([0, 3, 4, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([0, 3, 4, 5],"complex128"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([0, 3, 4, 5],"complex64"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([0, 3, 4],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([0, 3, 5, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([0, 32, 64, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([0, 4, 1, 64],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([0, 4, 5, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([0, 4, 6, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([0, 4, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([0, 4, 6, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([0, 4, 6, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([0, 4, 6, 6, 6],"float64"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([0, 40],"float64"), list[0,1,], )
paddle.transpose(Tensor([0, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([0, 5, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([0, 5],"float32"), list[0,1,], )
paddle.transpose(Tensor([0, 6, 6, 4],"float64"), list[0,3,1,2,], )
paddle.transpose(Tensor([0, 6, 6, 6, 4],"float64"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([0, 7, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([0, 7, 56, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([0, 7, 8, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([0, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([0, 8, 14, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([0, 80],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([0, 96, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([0],"float32"), list[0,], )
paddle.transpose(Tensor([0],"int64"), list[0,], )
paddle.transpose(Tensor([1, 0, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 0, 10, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 0, 10, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 0, 12, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 0, 12, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 0, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 0, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 0, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 0, 14, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([1, 0, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 0, 16, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 0, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 0, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 0, 2, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 0, 2, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 0, 2, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 0, 2, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 0, 2, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 0, 24, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 0, 2],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 0, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 0, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 0, 32, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 0, 32, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 0, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([1, 0, 32],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([1, 0, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 0, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 0],"float64"), list[1,0,], )
paddle.transpose(Tensor([1, 1, 0, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 0, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 0, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 0, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 0, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 0],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 1, 1, 0],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 12, 0],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 12, 0],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 16, 0],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 16, 0],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 4, 0],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 4, 0],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 10, 0],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([1, 100, 0],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 1024, 0],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 12, 0, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 0, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 10, 0],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 128, 0, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 0, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 0],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 0],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 1280, 0],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 14, 0, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14, 0],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([1, 14, 4, 0],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 0, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 0, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 0, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 0, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 0, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 0, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 12, 0, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 12, 0],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 12, 10, 0],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 16, 0],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 2, 0, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 0, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 1, 0],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 2, 0],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 24, 0, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 24, 5, 0],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 20, 0],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 22, 0],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 3, 0, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 3, 0, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 0, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 0, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 0, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 0],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 3, 2, 5, 0],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 5, 0],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 8, 0, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([1, 8, 14, 0],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([10, 0],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([1000, 0],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([114, 0, 1, 64],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([114, 4, 0, 64],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([114, 4, 1, 0],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([13, 0, 8, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([13, 7, 0, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([13, 7, 8, 0],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([14, 0, 1, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([14, 1, 0, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([14, 1, 1, 0],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([16, 0, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([16, 0, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 0, 64, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 0, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 1024, 0],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([16, 2, 0],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 32, 0, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 32, 64, 0],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 96, 0],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 0, 1, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 0, 1, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 0, 2, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 0, 3, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 0, 4, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 0, 4, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 0, 4, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 0, 4, 5],"complex128"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 0, 4, 5],"complex64"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 0, 4, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 0, 4, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 0, 4, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 0, 4],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([2, 0, 6, 4],"float64"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 0, 6, 6, 4],"float64"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 0, 6, 6, 6],"float64"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 0, 7, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 0],"float32"), list[0,1,], )
paddle.transpose(Tensor([2, 1, 0, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 0, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 4, 0, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 4, 2, 0, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 3, 4, 2, 1, 0],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 128, 0, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 128, 4, 0, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 128, 4, 8, 0],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 13, 0, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 13, 0, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 0, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 13, 4, 0, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 13, 4, 0, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 4, 7, 0],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 13, 4, 7, 0],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 7, 0, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 13, 7, 8, 0],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 16, 0, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 16, 2, 0],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 2, 0, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 0, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 0, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 0, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 1, 0],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 2, 0],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 3, 0, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 0, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 0, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 0, 5],"complex128"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 3, 0, 5],"complex64"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 3, 0],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([2, 3, 4, 0, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 0, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 4, 0, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 4, 0],"complex128"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 0],"complex64"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 0, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 0, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 0, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 2, 0, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 0],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 5, 0, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 4, 5, 0],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 4, 5, 6, 0],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 4, 0, 6, 6],"float64"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 4, 6, 0, 6],"float64"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 4, 6, 6, 0],"float64"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 6, 0, 4],"float64"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 6, 0, 6, 4],"float64"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 6, 6, 0, 4],"float64"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 6, 6, 0],"float64"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 6, 6, 6, 0],"float64"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([20, 0],"float64"), list[0,1,], )
paddle.transpose(Tensor([216, 0, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 0, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 1, 0, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 1, 1, 0, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([216, 248, 1, 1, 2, 0],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([3, 0, 120],"float64"), list[1,2,0,], )
paddle.transpose(Tensor([3, 0, 5, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3, 100, 0],"float64"), list[1,2,0,], )
paddle.transpose(Tensor([3, 3, 0, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3, 3, 5, 0],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3000, 0],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([4, 0, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 0],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([4, 5, 0, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 5, 6, 0, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 5, 6, 6, 0],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 0, 3, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([5, 0, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 0, 6, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 0, 6, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 3, 0, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([5, 3, 3, 0],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([5, 4, 0, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 0, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 0, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 4, 6, 0, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 0, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 0, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 0],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 0],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 0],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 0, 3],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([6, 0, 3],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([6, 0, 3],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([6, 0, 3],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([6, 0, 5, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 0, 6, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 2, 0],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([6, 2, 0],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([6, 2, 0],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([6, 2, 0],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([6, 4, 0, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 4, 0, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 5, 0, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 5, 6, 0],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 6, 0, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 4, 6, 5, 0],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([64, 0, 1, 40, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 0, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 0, 32, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 0, 512, 1, 40],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 0, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 16, 0, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 16, 32, 0],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 26, 0, 1, 40],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 0, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 0, 40, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 0, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 0, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 0, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 40, 0],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 40, 0],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 512, 0, 40],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 512, 0, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 512, 1, 0],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 512, 1, 0],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([7, 0, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 0, 56, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 0, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 14, 0],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 56, 0],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([8, 0, 4, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 0, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 4, 0, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 4, 4, 0, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 4, 4, 5, 0],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(x=Tensor([0, 1, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([0, 1, 2, 2],"float64"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([0, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([0, 11, 16, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([0, 2, 116, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([0, 2, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([0, 2, 2, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([0, 2, 2, 3],"float64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([0, 2304, 1, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([0, 4, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([1, 0, 16, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 0, 2, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 0, 2, 3],"float64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 0, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 1, 0, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 1, 4, 0],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 11, 0, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 11, 16, 0],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2, 0, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 0, 3],"float64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 0],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 0],"float64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1536, 0, 116, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 0, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 0, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 0, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 0, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 0, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 14, 0],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 14, 0],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([3, 0, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([3, 0, 2, 2],"float64"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 1, 0, 2],"float64"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 1, 2, 0],"float64"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 4, 0],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([4, 0, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([4, 1, 0],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([8, 0, 1, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8, 2304, 0, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8, 2304, 1, 0, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.transpose(x=Tensor([8, 2304, 1, 1, 0],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.unbind(Tensor([0, 2, 2],"int32"), axis=0, )
paddle.unbind(Tensor([0, 2, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([0, 2, 3],"float32"), axis=2, )
paddle.unbind(Tensor([0, 2],"bool"), axis=0, )
paddle.unbind(Tensor([0, 3, 2, 2],"float64"), axis=1, )
paddle.unbind(Tensor([0, 3, 8, 8],"float32"), axis=0, )
paddle.unbind(Tensor([0, 3],"complex128"), 0, )
paddle.unbind(Tensor([0, 3],"complex64"), 0, )
paddle.unbind(Tensor([0, 5, 6],"float32"), )
paddle.unbind(Tensor([0, 9, 5],"float32"), axis=0, )
paddle.unbind(Tensor([0],"float32"), 0, )
paddle.unbind(Tensor([2, 0, 8, 8],"float32"), axis=0, )
paddle.unbind(Tensor([2, 0],"bool"), axis=0, )
paddle.unbind(Tensor([2, 0],"complex128"), 0, )
paddle.unbind(Tensor([2, 0],"complex64"), 0, )
paddle.unbind(Tensor([2, 3, 0, 8],"float32"), axis=0, )
paddle.unbind(Tensor([2, 3, 8, 0],"float32"), axis=0, )
paddle.unbind(Tensor([3, 0, 2],"int32"), axis=0, )
paddle.unbind(Tensor([3, 0, 5],"float32"), axis=0, )
paddle.unbind(Tensor([3, 2, 0],"int32"), axis=0, )
paddle.unbind(Tensor([3, 9, 0],"float32"), axis=0, )
paddle.unbind(Tensor([4, 0, 2, 2],"float64"), axis=1, )
paddle.unbind(Tensor([4, 0, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([4, 0, 3],"float32"), axis=2, )
paddle.unbind(Tensor([4, 0, 6],"float32"), )
paddle.unbind(Tensor([4, 2, 0],"float32"), axis=-1, )
paddle.unbind(Tensor([4, 2, 0],"float32"), axis=2, )
paddle.unbind(Tensor([4, 3, 0, 2],"float64"), axis=1, )
paddle.unbind(Tensor([4, 3, 2, 0],"float64"), axis=1, )
paddle.unbind(Tensor([4, 5, 0],"float32"), )
paddle.unflatten(Tensor([0, 4, 4, 5],"float32"), axis=1, shape=list[2,2,], name=None, )
paddle.unflatten(Tensor([3, 4, 0, 5],"float32"), axis=1, shape=list[2,2,], name=None, )
paddle.unflatten(Tensor([3, 4, 4, 0],"float32"), axis=1, shape=list[2,2,], name=None, )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=-1, shape=tuple(2,8,), )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=1, shape=tuple(2,3,), )
paddle.unflatten(x=Tensor([4, 0, 16],"bool"), axis=0, shape=tuple(2,2,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float16"), axis=0, shape=tuple(2,2,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=-1, shape=tuple(2,8,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=list[2,2,], )
paddle.unflatten(x=Tensor([4, 6, 0],"bool"), axis=0, shape=tuple(2,2,), )
paddle.unflatten(x=Tensor([4, 6, 0],"float16"), axis=0, shape=tuple(2,2,), )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=-1, shape=list[-1,2,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=list[2,2,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=1, shape=tuple(2,3,), )
paddle.unique(Tensor([0, 1],"int64"), )
paddle.unique(Tensor([0, 3],"int64"), )
paddle.unique(Tensor([0],"int64"), )
paddle.unique(Tensor([2, 0],"int64"), )
paddle.unique(Tensor([3, 0],"int64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.argsort(Tensor([0, 4, 2],"int64"), axis=0, stable=True, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.unique(x=Tensor([0],"float32"), )
paddle.unique(x=Tensor([0],"float64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.argsort(Tensor([0, 4],"int64"), axis=0, stable=True, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.unique_consecutive(Tensor([0],"float64"), )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.argsort(Tensor([0],"float16"), stable=True, )
paddle.argsort(Tensor([0],"float32"), )
paddle.argsort(Tensor([0],"float32"), descending=True, )
paddle.argsort(Tensor([0],"float32"), stable=True, )
paddle.argsort(Tensor([0],"float64"), axis=0, )
paddle.argsort(Tensor([0],"float64"), axis=0, descending=True, )
paddle.argsort(Tensor([0],"float64"), axis=0, descending=True, stable=True, )
paddle.argsort(Tensor([0],"float64"), axis=0, stable=True, )
paddle.argsort(Tensor([0],"int64"), )
paddle.argsort(Tensor([1, 0],"float64"), axis=1, )
paddle.argsort(Tensor([1, 0],"float64"), axis=1, descending=True, )
paddle.argsort(Tensor([1, 0],"float64"), axis=1, descending=True, stable=True, )
paddle.argsort(Tensor([1, 0],"float64"), axis=1, stable=True, )
paddle.argsort(Tensor([1000, 0],"float32"), descending=True, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),], 0, )
paddle.argsort(Tensor([2, 0, 4],"float64"), axis=1, )
paddle.argsort(Tensor([2, 0, 4],"float64"), axis=1, descending=True, )
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([1, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3600, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3600, 4],"float32"),Tensor([1, 900, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4, 0, 8],"float32"),Tensor([1, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 1, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 10],"float32"),Tensor([1, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 2, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4096, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 256, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4096, 4],"float32"),Tensor([1, 1024, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 256],"float32"),Tensor([1, 1200, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 256],"float32"),Tensor([1, 1200, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 300, 2],"float32"),Tensor([1, 80, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 2],"float32"),Tensor([1, 1200, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 80, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 2],"float32"),Tensor([1, 1200, 2],"float32"),Tensor([1, 300, 2],"float32"),Tensor([1, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800],"float32"),Tensor([1, 0],"float32"),Tensor([1, 300],"float32"),Tensor([1, 80],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800],"float32"),Tensor([1, 1200],"float32"),Tensor([1, 0],"float32"),Tensor([1, 80],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800],"float32"),Tensor([1, 1200],"float32"),Tensor([1, 300],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([0, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([0, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([0, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([0, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([0, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([0, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([0, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([0, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([0, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([0, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([0, 4],"float32"),Tensor([11, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([0, 4],"float32"),Tensor([3, 4],"float32"),], )
paddle.concat(list[Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([2, 4],"float32"),Tensor([5, 4],"float32"),Tensor([8, 4],"float32"),Tensor([22, 4],"float32"),Tensor([5, 4],"float32"),Tensor([5, 4],"float32"),Tensor([18, 4],"float32"),Tensor([3, 4],"float32"),Tensor([9, 4],"float32"),Tensor([4, 4],"float32"),Tensor([1, 4],"float32"),Tensor([2, 4],"float32"),Tensor([11, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([1, 5, 0],"float64"),Tensor([1, 5, 1],"float64"),Tensor([1, 5, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 5, 1],"float64"),Tensor([1, 5, 0],"float64"),Tensor([1, 5, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 5, 1],"float64"),Tensor([1, 5, 1],"float64"),Tensor([1, 5, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([1, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 14, 8],"float32"),Tensor([0, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 5],"float64"),Tensor([0, 5],"float64"),Tensor([1, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 5],"float64"),Tensor([1, 5],"float64"),Tensor([0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([1, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 6408],"float32"),Tensor([1, 0],"float32"),Tensor([1, 414],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 6408],"float32"),Tensor([1, 1620],"float32"),Tensor([1, 0],"float32"),Tensor([1, 108],"float32"),], 1, )
paddle.concat(list[Tensor([1, 6408],"float32"),Tensor([1, 1620],"float32"),Tensor([1, 414],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 7],"float32"),Tensor([0, 7],"float32"),], axis=0, )
paddle.concat(list[Tensor([10, 0],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),Tensor([77, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([10, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([10, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),Tensor([77, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([10, 1],"float32"),Tensor([10, 0],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 0],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 0],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 0],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 0],"float32"),Tensor([10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 1],"float32"),Tensor([10, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([100, 256],"float32"),Tensor([100, 256],"float32"),Tensor([100, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 128],"float32"),Tensor([100, 0],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 0],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 1],"float32"),Tensor([0, 1],"float32"),Tensor([1600, 1],"float32"),], )
paddle.concat(list[Tensor([100, 1],"float32"),Tensor([400, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([100, 256],"float32"),Tensor([100, 0],"float32"),Tensor([100, 256],"float32"),Tensor([100, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 256],"float32"),Tensor([100, 256],"float32"),Tensor([100, 0],"float32"),Tensor([100, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 256],"float32"),Tensor([100, 256],"float32"),Tensor([100, 256],"float32"),Tensor([100, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 2],"float32"),Tensor([0, 2],"float32"),Tensor([1600, 2],"float32"),], )
paddle.concat(list[Tensor([100, 2],"float32"),Tensor([400, 2],"float32"),Tensor([0, 2],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([0, 1],"float32"),Tensor([469, 1],"float32"),Tensor([636, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([0, 1],"float32"),Tensor([633, 1],"float32"),Tensor([326, 1],"float32"),Tensor([236, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([517, 1],"float32"),Tensor([0, 1],"float32"),Tensor([636, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([517, 1],"float32"),Tensor([469, 1],"float32"),Tensor([0, 1],"float32"),Tensor([221, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([517, 1],"float32"),Tensor([469, 1],"float32"),Tensor([636, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([632, 1],"float32"),Tensor([0, 1],"float32"),Tensor([326, 1],"float32"),Tensor([236, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([632, 1],"float32"),Tensor([633, 1],"float32"),Tensor([0, 1],"float32"),Tensor([236, 1],"float32"),], )
paddle.concat(list[Tensor([1000, 1],"float32"),Tensor([632, 1],"float32"),Tensor([633, 1],"float32"),Tensor([326, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([0],"float32"),Tensor([108],"float32"),Tensor([136],"float32"),Tensor([84],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([0],"float32"),Tensor([140],"float32"),Tensor([56],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([10],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([132],"float32"),Tensor([0],"float32"),Tensor([56],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([132],"float32"),Tensor([140],"float32"),Tensor([0],"float32"),Tensor([24],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([132],"float32"),Tensor([140],"float32"),Tensor([56],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([184],"float32"),Tensor([0],"float32"),Tensor([136],"float32"),Tensor([84],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([184],"float32"),Tensor([108],"float32"),Tensor([0],"float32"),Tensor([84],"float32"),], )
paddle.concat(list[Tensor([100],"float32"),Tensor([184],"float32"),Tensor([108],"float32"),Tensor([136],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),Tensor([100],"int64"),], )
paddle.concat(list[Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([100],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([0, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([0, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([0, 1],"float32"),Tensor([396, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"float32"),Tensor([25344, 1],"float32"),Tensor([6336, 1],"float32"),Tensor([1584, 1],"float32"),Tensor([0, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"int32"),Tensor([0, 1],"int32"),Tensor([6336, 1],"int32"),Tensor([1584, 1],"int32"),Tensor([396, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"int32"),Tensor([25344, 1],"int32"),Tensor([0, 1],"int32"),Tensor([1584, 1],"int32"),Tensor([396, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"int32"),Tensor([25344, 1],"int32"),Tensor([6336, 1],"int32"),Tensor([0, 1],"int32"),Tensor([396, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([101376, 1],"int32"),Tensor([25344, 1],"int32"),Tensor([6336, 1],"int32"),Tensor([1584, 1],"int32"),Tensor([0, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([10240, 0],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 1],"float32"),], -1, )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 0],"float32"),], -1, )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),Tensor([1820, 1],"float32"),], )
paddle.concat(list[Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([0],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([0],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([0],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([0],"float32"),Tensor([1024],"float32"),], )
paddle.concat(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1048576],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([10],"float32"),Tensor([0],"float32"),Tensor([35],"float32"),Tensor([50],"float32"),], axis=0, )
paddle.concat(list[Tensor([10],"float32"),Tensor([0],"float32"),Tensor([77],"float32"),Tensor([128],"float32"),], axis=0, )
paddle.concat(list[Tensor([10],"float32"),Tensor([102],"float32"),Tensor([0],"float32"),Tensor([50],"float32"),], axis=0, )
paddle.concat(list[Tensor([10],"float32"),Tensor([102],"float32"),Tensor([35],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([10],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),], axis=0, )
paddle.concat(list[Tensor([10],"float32"),Tensor([128],"float32"),Tensor([77],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([11, 0],"float32"),Tensor([11, 1],"float32"),Tensor([11, 1],"float32"),Tensor([11, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([11, 1],"float32"),Tensor([11, 0],"float32"),Tensor([11, 1],"float32"),Tensor([11, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([11, 1],"float32"),Tensor([11, 1],"float32"),Tensor([11, 0],"float32"),Tensor([11, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([11, 1],"float32"),Tensor([11, 1],"float32"),Tensor([11, 1],"float32"),Tensor([11, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0],"int64"),Tensor([12, 10],"int64"),Tensor([12, 7],"int64"),], axis=1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 1],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 1],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 7],"int64"),Tensor([12, 0],"int64"),Tensor([12, 7],"int64"),], axis=1, )
paddle.concat(list[Tensor([12, 7],"int64"),Tensor([12, 10],"int64"),Tensor([12, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([128, 0, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 0, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 0],"float16"),Tensor([128, 128],"float16"),Tensor([128, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.argsort(Tensor([2, 0],"int64"), axis=1, stable=True, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.unique_consecutive(x=Tensor([0, 6],"float32"), )
paddle.unique_consecutive(x=Tensor([0, 6],"float64"), )
paddle.unique_consecutive(x=Tensor([2, 0],"float32"), )
paddle.unique_consecutive(x=Tensor([2, 0],"float64"), )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 128, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),], axis=1, )
paddle.unsqueeze(Tensor([0, 10],"float32"), axis=0, )
paddle.unsqueeze(Tensor([0, 128, 32],"float32"), 2, )
paddle.unsqueeze(Tensor([0, 128],"int64"), 2, )
paddle.unsqueeze(Tensor([0, 128],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([0, 128],"int64"), axis=1, )
paddle.unsqueeze(Tensor([0, 14, 8],"float32"), axis=0, )
paddle.unsqueeze(Tensor([0, 1],"float64"), axis=2, )
paddle.unsqueeze(Tensor([0, 2, 2],"int64"), axis=1, )
paddle.unsqueeze(Tensor([0, 20, 1],"float32"), -1, )
paddle.unsqueeze(Tensor([0, 256, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([0, 256],"int64"), axis=1, )
paddle.unsqueeze(Tensor([0, 2],"float32"), -1, )
paddle.unsqueeze(Tensor([0, 2],"float64"), axis=2, )
paddle.unsqueeze(Tensor([0, 3, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([0, 3, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([0, 3, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([0, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([0, 32],"float32"), axis=0, )
paddle.unsqueeze(Tensor([0, 384],"float32"), 0, )
paddle.unsqueeze(Tensor([0, 4, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([0, 4, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([0, 4, 5, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([0, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([0, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([0, 4],"float32"), 1, )
paddle.unsqueeze(Tensor([0, 4],"float64"), -1, )
paddle.unsqueeze(Tensor([0, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([0, 5, 1, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([0, 5, 3],"float32"), axis=2, )
paddle.unsqueeze(Tensor([0, 500],"int64"), 2, )
paddle.unsqueeze(Tensor([0, 7, 14],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([0, 7, 14],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([0, 7, 14],"int32"), axis=0, )
paddle.unsqueeze(Tensor([0, 7, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([0, 80],"float32"), 0, )
paddle.unsqueeze(Tensor([0],"float32"), 1, )
paddle.unsqueeze(Tensor([0],"float32"), axis=0, )
paddle.unsqueeze(Tensor([0],"float64"), axis=0, )
paddle.unsqueeze(Tensor([0],"int64"), -1, )
paddle.unsqueeze(Tensor([0],"int64"), 0, )
paddle.unsqueeze(Tensor([0],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([0],"int64"), axis=1, )
paddle.unsqueeze(Tensor([1, 0, 14],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 0, 14],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 0, 32],"float32"), 2, )
paddle.unsqueeze(Tensor([1, 0],"float32"), 1, )
paddle.unsqueeze(Tensor([1, 0],"float64"), axis=2, )
paddle.unsqueeze(Tensor([1, 0],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1, 0],"int64"), axis=1, )
paddle.unsqueeze(Tensor([1, 128, 0],"float32"), 2, )
paddle.unsqueeze(Tensor([1, 7, 0],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([1, 7, 0],"int32"), axis=-1, )
paddle.unsqueeze(Tensor([10, 0, 1],"float32"), -1, )
paddle.unsqueeze(Tensor([10, 0],"float32"), -1, )
paddle.unsqueeze(Tensor([10, 0],"float32"), 1, )
paddle.unsqueeze(Tensor([10, 20, 0],"float32"), -1, )
paddle.unsqueeze(Tensor([12, 0],"float64"), -1, )
paddle.unsqueeze(Tensor([13, 0, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 0, 1, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 0, 14],"int32"), axis=0, )
paddle.unsqueeze(Tensor([13, 0, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 0, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 0, 3],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 0, 5, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 3, 0],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 4, 0, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 0, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4, 1, 0, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 1, 1, 0],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 3, 0, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4, 3, 1, 0],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4, 5, 0, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 4, 5, 1, 0],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 5, 0, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 5, 0],"float32"), axis=2, )
paddle.unsqueeze(Tensor([13, 5, 1, 0],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 7, 0],"float32"), 1, )
paddle.unsqueeze(Tensor([13, 7, 0],"int32"), axis=0, )
paddle.unsqueeze(Tensor([14, 0],"float32"), axis=0, )
paddle.unsqueeze(Tensor([2, 0, 2],"int64"), axis=1, )
paddle.unsqueeze(Tensor([2, 0],"float32"), axis=0, )
paddle.unsqueeze(Tensor([2, 2, 0],"int64"), axis=1, )
paddle.unsqueeze(Tensor([20, 0],"int64"), 2, )
paddle.unsqueeze(Tensor([3, 0, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([3, 0, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 0, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 0, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 0, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 0, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 256, 0],"float32"), 0, )
paddle.unsqueeze(Tensor([3, 3, 0, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 0, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 0, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 3, 0, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 3, 40, 0],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 40, 0, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 40, 0],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 40, 40, 0],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 40, 0, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 40, 0],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 40, 40, 0],"float32"), axis=1, )
paddle.unsqueeze(Tensor([4, 0],"int64"), 2, )
paddle.unsqueeze(Tensor([498, 0],"float32"), 0, )
paddle.unsqueeze(Tensor([5000, 0],"float32"), 0, )
paddle.unsqueeze(Tensor([52, 0, 1, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 0, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 0, 3],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 0, 8],"float32"), axis=0, )
paddle.unsqueeze(Tensor([52, 14, 0],"float32"), axis=0, )
paddle.unsqueeze(Tensor([52, 4, 0, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 4, 3, 0, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 4, 3, 1, 0],"float32"), axis=3, )
paddle.unsqueeze(Tensor([52, 5, 0, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 5, 0],"float32"), axis=2, )
paddle.unsqueeze(Tensor([52, 5, 1, 0],"float32"), 1, )
paddle.unsqueeze(x=Tensor([0, 3],"float32"), axis=1, )
paddle.unsqueeze(x=Tensor([0, 3],"float64"), axis=-1, )
paddle.unsqueeze(x=Tensor([0, 3],"float64"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 0],"float32"), axis=1, )
paddle.unsqueeze(x=Tensor([2, 0],"float64"), axis=-1, )
paddle.unsqueeze(x=Tensor([2, 0],"float64"), axis=1, )
paddle.vsplit(Tensor([0, 4, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([0, 4, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([0, 4, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([0, 4, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([0, 4],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([0, 4],"int64"), list[-1,], )
paddle.vsplit(Tensor([0, 4],"int64"), list[2,4,], )
paddle.vsplit(Tensor([0, 4],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 0, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 0, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 0, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 0, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 0],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 0],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 0],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 0],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 4, 0],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 4, 0],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 4, 0],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 4, 0],"int64"), tuple(2,1,3,), )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([2],"float64"),Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([2],"float64"),Tensor([0, 2],"float64"),], name=None, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),], axis=1, )
paddle.vstack(list[Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], name=None, )
paddle.zeros_like(Tensor([0, 1, 10285],"float32"), )
paddle.zeros_like(Tensor([0, 1, 3598],"float32"), )
paddle.zeros_like(Tensor([0, 1024, 1, 1],"float16"), )
paddle.zeros_like(Tensor([0, 1024, 1, 1],"float32"), )
paddle.zeros_like(Tensor([0, 1],"int32"), )
paddle.zeros_like(Tensor([0, 1],"int64"), )
paddle.zeros_like(Tensor([0, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.zeros_like(Tensor([0, 3],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([0, 40],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([0, 8, 9, 18],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([0, 8, 9, 18],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([0],"bool"), )
paddle.zeros_like(Tensor([0],"float16"), )
paddle.zeros_like(Tensor([0],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([0],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([1, 0, 10285],"float32"), )
paddle.zeros_like(Tensor([1, 0, 3598],"float32"), )
paddle.zeros_like(Tensor([1, 0],"int32"), )
paddle.zeros_like(Tensor([1, 0],"int64"), )
paddle.zeros_like(Tensor([1, 1, 0],"float32"), )
paddle.zeros_like(Tensor([1024, 0, 1, 1],"float16"), )
paddle.zeros_like(Tensor([1024, 0, 1, 1],"float32"), )
paddle.zeros_like(Tensor([1024, 1024, 0, 1],"float16"), )
paddle.zeros_like(Tensor([1024, 1024, 0, 1],"float32"), )
paddle.zeros_like(Tensor([1024, 1024, 1, 0],"float16"), )
paddle.zeros_like(Tensor([1024, 1024, 1, 0],"float32"), )
paddle.zeros_like(Tensor([3, 0, 3, 4, 5, 1, 2],"float64"), )
paddle.zeros_like(Tensor([3, 0],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([3, 0],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([3, 2, 0, 4, 5, 1, 2],"float64"), )
paddle.zeros_like(Tensor([3, 2, 3, 0, 5, 1, 2],"float64"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 0, 1, 2],"float64"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 5, 0, 2],"float64"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 5, 1, 0],"float64"), )
paddle.zeros_like(Tensor([6, 0, 9, 18],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 0, 9, 18],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 0, 18],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 0, 18],"float32"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 9, 0],"float16"), dtype=type(int), )
paddle.zeros_like(Tensor([6, 8, 9, 0],"float32"), dtype=type(int), )
paddle.zeros_like(x=Tensor([0, 3, 3, 3, 3, 3],"float64"), )
paddle.zeros_like(x=Tensor([0, 3, 3],"bool"), )
paddle.zeros_like(x=Tensor([0, 3, 3],"float16"), )
paddle.zeros_like(x=Tensor([3, 0, 3, 3, 3, 3],"float64"), )
paddle.zeros_like(x=Tensor([3, 0, 3],"bool"), )
paddle.zeros_like(x=Tensor([3, 0, 3],"float16"), )
paddle.zeros_like(x=Tensor([3, 3, 0, 3, 3, 3],"float64"), )
paddle.zeros_like(x=Tensor([3, 3, 0],"bool"), )
paddle.zeros_like(x=Tensor([3, 3, 0],"float16"), )
paddle.zeros_like(x=Tensor([3, 3, 3, 0, 3, 3],"float64"), )
paddle.zeros_like(x=Tensor([3, 3, 3, 3, 0, 3],"float64"), )
paddle.zeros_like(x=Tensor([3, 3, 3, 3, 3, 0],"float64"), )
paddle.concat(list[Tensor([128, 224, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 128, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 512],"float16"),Tensor([128, 0],"float16"),Tensor([128, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 512],"float16"),Tensor([128, 128],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([12988, 32, 0],"float32"),Tensor([12988, 32, 3],"float32"),Tensor([12988, 32, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12988, 32, 4],"float32"),Tensor([12988, 32, 0],"float32"),Tensor([12988, 32, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12988, 32, 4],"float32"),Tensor([12988, 32, 3],"float32"),Tensor([12988, 32, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),Tensor([12],"float64"),], axis=0, )
paddle.concat(list[Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([12],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([13, 0, 64],"float32"),Tensor([13, 3, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([13, 1, 8, 0],"int64"),Tensor([13, 1, 8, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 1, 8, 4],"int64"),Tensor([13, 1, 8, 0],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 13, 64],"float32"),Tensor([13, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([13, 2, 0, 4, 16],"float32"),Tensor([13, 2, 15, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 0, 4, 16],"float32"),Tensor([13, 2, 7, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 0],"float32"),Tensor([13, 2, 32],"float32"),Tensor([13, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 4, 16],"float32"),Tensor([13, 2, 0, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 16, 0, 16],"float32"),Tensor([13, 2, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 0],"int64"),Tensor([13, 2, 16, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 4, 16],"float32"),Tensor([13, 2, 16, 0, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 4],"int64"),Tensor([13, 2, 16, 0],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 32],"float32"),Tensor([13, 2, 0],"float32"),Tensor([13, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 32],"float32"),Tensor([13, 2, 32],"float32"),Tensor([13, 2, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 4, 16, 0],"float32"),Tensor([13, 2, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 4, 16, 1],"float32"),Tensor([13, 2, 4, 16, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 8, 0, 16],"float32"),Tensor([13, 2, 8, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 8, 4, 16],"float32"),Tensor([13, 2, 8, 0, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 3, 0],"float32"),Tensor([13, 3, 1],"float32"),Tensor([13, 3, 1],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 3, 1],"float32"),Tensor([13, 3, 0],"float32"),Tensor([13, 3, 1],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 3, 1],"float32"),Tensor([13, 3, 1],"float32"),Tensor([13, 3, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 1, 8],"float32"),Tensor([13, 4, 3, 1, 8],"float32"),Tensor([13, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 5, 1, 8],"float32"),Tensor([13, 4, 3, 5, 1, 8],"float32"),Tensor([13, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 8],"float32"),Tensor([13, 4, 5, 8],"float32"),Tensor([13, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 1, 8],"float32"),Tensor([13, 4, 0, 1, 8],"float32"),Tensor([13, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1, 8],"float32"),Tensor([13, 4, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 1, 8],"float32"),Tensor([13, 4, 0, 5, 1, 8],"float32"),Tensor([13, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 1, 8],"float32"),Tensor([13, 4, 3, 5, 1, 8],"float32"),Tensor([13, 4, 0, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 8],"float32"),Tensor([13, 4, 0, 8],"float32"),Tensor([13, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 8],"float32"),Tensor([13, 4, 5, 8],"float32"),Tensor([13, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 3, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 8],"float32"),Tensor([13, 4, 3, 3, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 5, 1, 0],"float32"),Tensor([13, 4, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5, 1, 5],"float32"),Tensor([13, 4, 5, 1, 0],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 5, 1, 0],"float32"),Tensor([13, 5, 1, 3],"float32"),Tensor([13, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 1],"float32"),Tensor([13, 5, 1, 0],"float32"),Tensor([13, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 1],"float32"),Tensor([13, 5, 1, 3],"float32"),Tensor([13, 5, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([13125, 0],"float32"),Tensor([13125, 1],"float32"),Tensor([13125, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13125, 2],"float32"),Tensor([13125, 0],"float32"),Tensor([13125, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13125, 2],"float32"),Tensor([13125, 1],"float32"),Tensor([13125, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 1],"bool"),Tensor([15000, 0],"bool"),], axis=1, )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([0, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([0, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([0, 1],"float32"),Tensor([406, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([0, 1],"float32"),Tensor([97, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 1],"float32"),Tensor([1570, 1],"float32"),Tensor([1690, 1],"float32"),Tensor([1866, 1],"float32"),Tensor([406, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([1514, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1690, 4],"float32"),Tensor([1866, 4],"float32"),Tensor([406, 4],"float32"),Tensor([97, 4],"float32"),], )
paddle.concat(list[Tensor([1514, 4],"float32"),Tensor([1570, 4],"float32"),Tensor([0, 4],"float32"),Tensor([1866, 4],"float32"),Tensor([406, 4],"float32"),Tensor([97, 4],"float32"),], )
paddle.concat(list[Tensor([1514, 4],"float32"),Tensor([1570, 4],"float32"),Tensor([1690, 4],"float32"),Tensor([0, 4],"float32"),Tensor([406, 4],"float32"),Tensor([97, 4],"float32"),], )
paddle.concat(list[Tensor([1514, 4],"float32"),Tensor([1570, 4],"float32"),Tensor([1690, 4],"float32"),Tensor([1866, 4],"float32"),Tensor([0, 4],"float32"),Tensor([97, 4],"float32"),], )
paddle.concat(list[Tensor([1514, 4],"float32"),Tensor([1570, 4],"float32"),Tensor([1690, 4],"float32"),Tensor([1866, 4],"float32"),Tensor([406, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([1536, 0],"float16"),Tensor([1536, 256],"float16"),Tensor([1536, 256],"float16"),], axis=-1, )
paddle.concat(list[Tensor([1536, 1536],"float16"),Tensor([1536, 0],"float16"),Tensor([1536, 256],"float16"),], axis=-1, )
paddle.concat(list[Tensor([1536, 1536],"float16"),Tensor([1536, 256],"float16"),Tensor([1536, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([16, 0, 64, 64, 2],"float32"),Tensor([16, 10, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 0, 640, 640],"float16"),Tensor([16, 1, 640, 640],"float16"),Tensor([16, 1, 640, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 0, 640, 640],"float32"),Tensor([16, 1, 640, 640],"float32"),Tensor([16, 1, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 64, 64, 2],"float32"),Tensor([16, 0, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 640],"float16"),Tensor([16, 0, 640, 640],"float16"),Tensor([16, 1, 640, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 640],"float16"),Tensor([16, 1, 640, 640],"float16"),Tensor([16, 0, 640, 640],"float16"),], axis=1, )
paddle.argsort(Tensor([2, 3, 0],"float64"), descending=True, )
paddle.argsort(Tensor([26, 0],"int64"), axis=-1, )
paddle.concat(list[Tensor([16, 1, 640, 640],"float32"),Tensor([16, 0, 640, 640],"float32"),Tensor([16, 1, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 640],"float32"),Tensor([16, 1, 640, 640],"float32"),Tensor([16, 0, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 10, 0, 2],"float32"),Tensor([16, 10, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 10, 1, 2],"float32"),Tensor([16, 10, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([18, 0],"float32"),Tensor([18, 2],"float32"),], -1, )
paddle.concat(list[Tensor([18, 2],"float32"),Tensor([18, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1820, 0],"float32"),Tensor([1820, 1],"float32"),Tensor([1820, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1820, 1],"float32"),Tensor([1820, 0],"float32"),Tensor([1820, 1],"float32"),], -1, )
paddle.concat(list[Tensor([1820, 1],"float32"),Tensor([1820, 1],"float32"),Tensor([1820, 0],"float32"),], -1, )
paddle.concat(list[Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),Tensor([18],"float64"),], axis=0, )
paddle.concat(list[Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([18],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1024],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),Tensor([1],"float16"),], )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.concat(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], )
paddle.concat(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1],"float64"),Tensor([511],"float64"),Tensor([0],"float64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1],"int64"),Tensor([0],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([0],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([0],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([0],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([0],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([0],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([0],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([0],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([0],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([0],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([0],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([0],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([0],"int64"),Tensor([11],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([0],"int64"),Tensor([3],"int64"),], )
paddle.concat(list[Tensor([1],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([5],"int64"),Tensor([8],"int64"),Tensor([22],"int64"),Tensor([5],"int64"),Tensor([5],"int64"),Tensor([18],"int64"),Tensor([3],"int64"),Tensor([9],"int64"),Tensor([4],"int64"),Tensor([1],"int64"),Tensor([2],"int64"),Tensor([11],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([2, 0, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 1, 8],"float32"),Tensor([2, 0, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),Tensor([2, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 12],"float64"),Tensor([2, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 1],"float64"),Tensor([2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),Tensor([2, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([2, 1],"int64"),Tensor([0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 3, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 3, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 3, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),Tensor([2, 3, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),Tensor([2, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([2, 400],"float32"),Tensor([0, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([20, 3, 112, 112],"float32"),Tensor([0, 3, 112, 112],"float32"),], 0, )
paddle.concat(list[Tensor([2048],"float32"),Tensor([0],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([0],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([0],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([0],"float32"),Tensor([2048],"float32"),], )
paddle.concat(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([0],"float32"),], )
paddle.nn.functional.cosine_similarity(Tensor([0, 13],"float32"), Tensor([0, 13],"float32"), axis=0, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0, 2],"float64"), Tensor([1, 0, 2],"float64"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0, 2],"float64"), Tensor([1, 0, 2],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 0],"float64"), Tensor([1, 5, 0],"float64"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 0],"float64"), Tensor([1, 5, 0],"float64"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 12, 0],"float32"), Tensor([10, 1, 0],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([210, 0],"float32"), Tensor([210, 0],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([3, 0, 2],"float64"), Tensor([3, 0, 2],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([32, 0],"float32"), Tensor([32, 0],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([0, 3],"float64"), x2=Tensor([0, 3],"float64"), axis=0, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0],"float32"), x2=Tensor([2, 0],"float32"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0],"float64"), x2=Tensor([2, 0],"float64"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0],"float64"), x2=Tensor([2, 0],"float64"), axis=1, )
paddle.nn.functional.fold(Tensor([0, 12, 12],"float32"), output_sizes=list[4,5,], kernel_sizes=2, )
paddle.nn.functional.fold(Tensor([0, 12, 12],"float64"), output_sizes=list[4,5,], kernel_sizes=2, )
paddle.nn.functional.fold(Tensor([0, 12, 2],"float64"), output_sizes=4, kernel_sizes=tuple(2,3,), strides=2, )
paddle.nn.functional.fold(Tensor([0, 12, 2],"float64"), output_sizes=4, kernel_sizes=tuple(2,3,), strides=2, paddings=1, dilations=2, )
paddle.nn.functional.fold(Tensor([0, 12, 6],"float64"), output_sizes=4, kernel_sizes=tuple(2,3,), )
paddle.nn.functional.fold(Tensor([0, 12, 6],"float64"), output_sizes=4, kernel_sizes=tuple(2,3,), strides=2, paddings=1, )
paddle.nn.functional.fold(Tensor([0, 12, 9],"float64"), output_sizes=4, kernel_sizes=2, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 176, 176],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 176, 176],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 28, 28],"float32"), Tensor([1, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 28, 28],"float32"), Tensor([1, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 280, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 0, 20, 20],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 0, 256, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 0, 256, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 0, 64, 64],"float32"), Tensor([16, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([0],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.nn.functional.grid_sample(Tensor([2, 0, 3, 3],"float64"), Tensor([2, 3, 3, 2],"float64"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 0, 16, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 0, 2, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(x=Tensor([4, 0, 80, 94, 311],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([0],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([0],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([0],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.argsort(Tensor([3, 0, 2],"int64"), axis=1, stable=True, )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([0],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.bitwise_xor(Tensor([0, 3, 1, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.bitwise_xor(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([0, 3, 5],"int32"), Tensor([0, 3, 5],"int32"), )
paddle.bitwise_xor(Tensor([0, 4, 1],"int32"), Tensor([0, 4, 1],"int32"), )
paddle.bitwise_xor(Tensor([0],"int32"), Tensor([0],"int32"), )
paddle.bitwise_xor(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 0, 5],"int32"), Tensor([2, 0, 5],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 0],"int32"), Tensor([2, 3, 0],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 1, 0],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 1, 5],"int64"), Tensor([3, 0, 1],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([3, 0, 1],"int32"), Tensor([3, 0, 1],"int32"), )
paddle.bitwise_xor(Tensor([3, 0, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 0],"int32"), Tensor([3, 4, 0],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 0],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 0],"int32"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([0, 3, 1, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 0],"int64"), )
paddle.bmm(Tensor([0, 300, 128],"float32"), Tensor([0, 128, 30976],"float32"), )
paddle.bmm(Tensor([0, 300, 128],"float32"), Tensor([0, 128, 33856],"float32"), )
paddle.bmm(Tensor([1, 0, 128],"float32"), Tensor([1, 128, 30976],"float32"), )
paddle.bmm(Tensor([1, 0, 128],"float32"), Tensor([1, 128, 33856],"float32"), )
paddle.bmm(Tensor([1, 300, 128],"float32"), Tensor([1, 128, 0],"float32"), )
paddle.bmm(x=Tensor([0, 2, 3],"float32"), y=Tensor([0, 3, 2],"float32"), )
paddle.bmm(x=Tensor([0, 2, 3],"float64"), y=Tensor([0, 3, 2],"float64"), )
paddle.bmm(x=Tensor([2, 0, 3],"float32"), y=Tensor([2, 3, 2],"float32"), )
paddle.bmm(x=Tensor([2, 0, 3],"float64"), y=Tensor([2, 3, 2],"float64"), )
paddle.bmm(x=Tensor([2, 2, 3],"float32"), y=Tensor([2, 3, 0],"float32"), )
paddle.bmm(x=Tensor([2, 2, 3],"float64"), y=Tensor([2, 3, 0],"float64"), )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([0],"float16"),Tensor([16777216],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([0],"float16"),Tensor([2048],"float16"),], )
paddle.concat(list[Tensor([2097152],"float16"),Tensor([12582912],"float16"),Tensor([6144],"float16"),Tensor([4194304],"float16"),Tensor([2048],"float16"),Tensor([16777216],"float16"),Tensor([8192],"float16"),Tensor([16777216],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 1],"float32"),Tensor([216, 248, 1, 1, 2, 3],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.nn.functional.rrelu(Tensor([0, 2, 3, 4],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 2, 3, 4],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([1, 0, 3, 4],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 0, 3, 4],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 0, 4],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 0, 4],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 0],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 0],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.unfold(Tensor([0, 3, 10, 10],"float32"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([0, 3, 10, 10],"float64"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], strides=1, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], strides=2, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], strides=1, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([0, 3, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([0, 3, 64, 64],"float32"), 3, 1, 1, tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([0, 3, 64, 64],"float32"), 3, 1, tuple(1,1,), 1, )
paddle.nn.functional.unfold(Tensor([0, 3, 64, 64],"float32"), 3, tuple(1,1,), 1, 1, )
paddle.nn.functional.unfold(Tensor([0, 3, 64, 64],"float32"), 3, tuple(1,1,), tuple(1,1,), tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([0, 3, 64, 64],"float32"), tuple(3,3,), tuple(1,1,), tuple(1,1,), tuple(1,1,), )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.nn.functional.unfold(x=Tensor([0, 3, 10, 10],"float32"), kernel_sizes=3, )
paddle.nn.functional.unfold(x=Tensor([0, 3, 10, 10],"float64"), kernel_sizes=3, )
paddle.nn.functional.unfold(x=Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], paddings=1, )
paddle.nn.functional.unfold(x=Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], paddings=1, strides=2, )
paddle.nn.functional.unfold(x=Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], )
paddle.nn.functional.unfold(x=Tensor([0, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], paddings=1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 20],"float32"),Tensor([20],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([0, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 0],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 0],"float32"),Tensor([20],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 15],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 20],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([22071, 20, 5],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955, 20, 5],"float32"),Tensor([20524, 20, 5],"float32"),Tensor([19780, 20, 5],"float32"),Tensor([17980, 20, 5],"float32"),Tensor([14701, 20, 5],"float32"),Tensor([25757, 20, 5],"float32"),Tensor([27860, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([0, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([0, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([0, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([0, 4],"int32"),Tensor([17980, 4],"int32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([0, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([0, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([0, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([0, 4],"int32"),Tensor([22071, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 4],"int32"),Tensor([20524, 4],"int32"),Tensor([19780, 4],"int32"),Tensor([17980, 4],"int32"),Tensor([14701, 4],"int32"),Tensor([25757, 4],"int32"),Tensor([27860, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955],"int32"),Tensor([0],"int32"),Tensor([19780],"int32"),Tensor([17980],"int32"),Tensor([14701],"int32"),Tensor([25757],"int32"),Tensor([27860],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955],"int32"),Tensor([20524],"int32"),Tensor([0],"int32"),Tensor([17980],"int32"),Tensor([14701],"int32"),Tensor([25757],"int32"),Tensor([27860],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([21955],"int32"),Tensor([20524],"int32"),Tensor([19780],"int32"),Tensor([0],"int32"),Tensor([14701],"int32"),Tensor([25757],"int32"),Tensor([27860],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955],"int32"),Tensor([20524],"int32"),Tensor([19780],"int32"),Tensor([17980],"int32"),Tensor([0],"int32"),Tensor([25757],"int32"),Tensor([27860],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955],"int32"),Tensor([20524],"int32"),Tensor([19780],"int32"),Tensor([17980],"int32"),Tensor([14701],"int32"),Tensor([0],"int32"),Tensor([27860],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955],"int32"),Tensor([20524],"int32"),Tensor([19780],"int32"),Tensor([17980],"int32"),Tensor([14701],"int32"),Tensor([25757],"int32"),Tensor([0],"int32"),Tensor([22071],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955],"int32"),Tensor([20524],"int32"),Tensor([19780],"int32"),Tensor([17980],"int32"),Tensor([14701],"int32"),Tensor([25757],"int32"),Tensor([27860],"int32"),Tensor([0],"int32"),], axis=0, )
paddle.concat(list[Tensor([24, 0],"float32"),Tensor([24, 50],"float32"),], 1, )
paddle.concat(list[Tensor([24, 96],"float32"),Tensor([24, 0],"float32"),], 1, )
paddle.concat(list[Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),], axis=0, )
paddle.concat(list[Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([256, 256, 0],"float32"),Tensor([256, 256, 1],"float32"),], 2, )
paddle.concat(list[Tensor([256, 256, 1],"float32"),Tensor([256, 256, 0],"float32"),], 2, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([0, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([0, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([0, 256],"float32"),Tensor([108, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([0, 256],"float32"),Tensor([30, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([27648, 256],"float32"),Tensor([6912, 256],"float32"),Tensor([1728, 256],"float32"),Tensor([432, 256],"float32"),Tensor([108, 256],"float32"),Tensor([0, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([28800, 256],"float32"),Tensor([0, 256],"float32"),Tensor([1800, 256],"float32"),Tensor([450, 256],"float32"),Tensor([117, 256],"float32"),Tensor([35, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([28800, 256],"float32"),Tensor([7200, 256],"float32"),Tensor([0, 256],"float32"),Tensor([450, 256],"float32"),Tensor([117, 256],"float32"),Tensor([35, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([28800, 256],"float32"),Tensor([7200, 256],"float32"),Tensor([1800, 256],"float32"),Tensor([0, 256],"float32"),Tensor([117, 256],"float32"),Tensor([35, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([28800, 256],"float32"),Tensor([7200, 256],"float32"),Tensor([1800, 256],"float32"),Tensor([450, 256],"float32"),Tensor([0, 256],"float32"),Tensor([35, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([28800, 256],"float32"),Tensor([7200, 256],"float32"),Tensor([1800, 256],"float32"),Tensor([450, 256],"float32"),Tensor([117, 256],"float32"),Tensor([0, 256],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([2],"int64"),Tensor([0],"int64"),], -1, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([3, 2],"float32"),], -1, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 100, 120],"float64"),Tensor([0, 100, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 1],"float16"),Tensor([0, 1],"float16"),Tensor([18, 1],"float16"),], 0, )
paddle.concat(list[Tensor([3, 1],"float16"),Tensor([18, 1],"float16"),Tensor([0, 1],"float16"),], 0, )
paddle.concat(list[Tensor([3, 1],"float32"),Tensor([0, 1],"float32"),Tensor([18, 1],"float32"),], 0, )
paddle.concat(list[Tensor([3, 1],"float32"),Tensor([18, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([3, 2],"float32"),Tensor([3, 0],"float32"),], -1, )
paddle.concat(list[Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),], axis=1, name=None, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 6],"float64"),Tensor([3, 0],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 0],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 0],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 0],"float64"),Tensor([3, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 6],"float64"),Tensor([3, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),Tensor([32],"float64"),], axis=0, )
paddle.concat(list[Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([32],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),Tensor([36],"float64"),], axis=0, )
paddle.concat(list[Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([36],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([3],"float32"),Tensor([0],"float32"),Tensor([3],"float32"),], axis=0, )
paddle.concat(list[Tensor([3],"float32"),Tensor([3],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 10],"float32"),Tensor([4, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 10],"float32"),Tensor([4, 0],"float32"),Tensor([4, 10],"float32"),], 1, )
paddle.concat(list[Tensor([4, 10],"float32"),Tensor([4, 10],"float32"),Tensor([4, 0],"float32"),], 1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.equal(Tensor([0, 1, 8, 8],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([0, 1],"float64"), Tensor([0, 1],"float64"), )
paddle.equal(Tensor([0, 1],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([0, 20],"int32"), 0, )
paddle.equal(Tensor([0, 28, 28],"int32"), Tensor([0, 1, 1],"int32"), )
paddle.equal(Tensor([0, 7],"int64"), 1, )
paddle.equal(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.equal(Tensor([0],"float32"), Tensor([1],"float32"), )
paddle.equal(Tensor([0],"int64"), 0, )
paddle.equal(Tensor([0],"int64"), 1, )
paddle.equal(Tensor([0],"int64"), 1.0, )
paddle.equal(Tensor([0],"int64"), 10, )
paddle.equal(Tensor([0],"int64"), 2, )
paddle.equal(Tensor([0],"int64"), True, )
paddle.equal(Tensor([1, 0, 28],"int32"), Tensor([6, 0, 1],"int32"), )
paddle.equal(Tensor([1, 0, 28],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1, 28, 0],"int32"), Tensor([6, 1, 0],"int32"), )
paddle.equal(Tensor([1, 28, 0],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1, 28, 28],"int32"), Tensor([0, 1, 1],"int32"), )
paddle.equal(Tensor([10, 0],"int32"), 0, )
paddle.equal(Tensor([114, 0],"float64"), Tensor([114, 0],"float64"), )
paddle.equal(Tensor([114, 0],"float64"), Tensor([114, 1],"float64"), )
paddle.equal(Tensor([114, 1],"float64"), Tensor([114, 0],"float64"), )
paddle.equal(Tensor([1],"float32"), Tensor([0],"float32"), )
paddle.equal(Tensor([2, 0],"int64"), 1, )
paddle.equal(Tensor([2, 0],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([2, 1, 0, 8],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([2, 1, 8, 0],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([2, 1, 8, 8],"int32"), Tensor([0, 1, 1],"int32"), )
paddle.equal(Tensor([2, 1],"int64"), Tensor([0],"int64"), )
paddle.equal(x=Tensor([0, 1, 1, 1, 3, 3],"float64"), y=Tensor([0, 1, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([0, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([0, 1, 1, 1, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal(x=Tensor([0, 1, 3, 3],"float64"), y=Tensor([1, 3],"float64"), )
paddle.equal(x=Tensor([0, 3, 3, 1],"float64"), y=Tensor([3, 3, 1],"float64"), )
paddle.equal(x=Tensor([0, 3, 3],"float32"), y=Tensor([0, 3, 3],"float32"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.equal(x=Tensor([0, 3],"float64"), y=Tensor([0, 3],"float64"), )
paddle.equal(x=Tensor([0, 3],"float64"), y=Tensor([1, 3],"float64"), )
paddle.equal(x=Tensor([0, 3],"float64"), y=Tensor([3],"float64"), )
paddle.equal(x=Tensor([0],"int64"), y=Tensor([0],"int64"), )
paddle.equal(x=Tensor([1, 0, 1, 1, 3, 3],"float64"), y=Tensor([1, 0, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 0, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 0, 1, 1, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal(x=Tensor([1, 0, 3, 3],"float64"), y=Tensor([1, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 0, 1, 3, 3],"float64"), y=Tensor([1, 1, 0, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 0, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 0, 1, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 0, 3],"float64"), y=Tensor([1, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 0, 3, 3],"float64"), y=Tensor([1, 1, 1, 0, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 0, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 0, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 0, 3],"float64"), y=Tensor([1, 1, 1, 1, 0, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 0],"float64"), y=Tensor([1, 1, 1, 1, 3, 0],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([0, 1, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 0, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 0, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 0, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([0, 1, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([0, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 0, 1, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 0, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 0, 3, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 0, 3],"float64"), )
paddle.equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 1, 0, 3],"float64"), )
paddle.equal(x=Tensor([3, 0, 3],"float32"), y=Tensor([3, 0, 3],"float32"), )
paddle.equal(x=Tensor([3, 0],"float64"), y=Tensor([1, 0],"float64"), )
paddle.equal(x=Tensor([3, 3, 0],"float32"), y=Tensor([3, 3, 0],"float32"), )
paddle.equal(x=Tensor([3, 3, 0],"float64"), y=Tensor([3, 3, 3, 1],"float64"), )
paddle.equal(x=Tensor([3, 3, 1],"float64"), y=Tensor([0, 3, 3, 1],"float64"), )
paddle.equal(x=Tensor([3, 3, 1],"float64"), y=Tensor([3, 3, 3, 0],"float64"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.equal(x=Tensor([3, 3, 3, 0],"float64"), y=Tensor([3, 3, 1],"float64"), )
paddle.equal(x=Tensor([3, 3, 3, 1],"float64"), y=Tensor([3, 3, 0],"float64"), )
paddle.erf(Tensor([0, 17],"float64"), )
paddle.erf(Tensor([0, 2, 3, 5, 4],"float64"), )
paddle.erf(Tensor([0, 2, 3, 5],"float64"), )
paddle.erf(Tensor([0, 2, 3],"float64"), )
paddle.erf(Tensor([0],"float64"), )
paddle.erf(Tensor([11, 0],"float64"), )
paddle.erf(Tensor([4, 0, 3, 5, 4],"float64"), )
paddle.erf(Tensor([4, 0, 3, 5],"float64"), )
paddle.erf(Tensor([4, 0, 3],"float64"), )
paddle.erf(Tensor([4, 2, 0, 5, 4],"float64"), )
paddle.erf(Tensor([4, 2, 0, 5],"float64"), )
paddle.erf(Tensor([4, 2, 0],"float64"), )
paddle.erf(Tensor([4, 2, 3, 0, 4],"float64"), )
paddle.erf(Tensor([4, 2, 3, 0],"float64"), )
paddle.erf(Tensor([4, 2, 3, 5, 0],"float64"), )
paddle.erf(x=Tensor([0, 2],"float32"), )
paddle.erf(x=Tensor([0],"float32"), )
paddle.erf(x=Tensor([2, 0],"float32"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.fft(x=Tensor([0],"complex128"), n=1, )
paddle.fft.fft2(x=Tensor([3, 3, 0, 2],"complex128"), s=tuple(1,2,), )
paddle.fft.fft2(x=Tensor([3, 3, 2, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.fftn(Tensor([3, 3, 0, 2],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.fftn(Tensor([3, 3, 2, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.fftn(x=Tensor([0, 4, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.fftn(x=Tensor([4, 0, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.fftn(x=Tensor([4, 0, 6],"float64"), s=list[2,4,], )
paddle.fft.fftn(x=Tensor([4, 4, 0],"float64"), s=list[1,], )
paddle.fft.fftn(x=Tensor([4, 4, 0],"float64"), s=list[2,4,], )
paddle.fft.fftshift(x=Tensor([0, 4, 2],"float64"), )
paddle.fft.fftshift(x=Tensor([0, 5, 4, 4],"complex128"), )
paddle.fft.fftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=tuple(1,3,), )
paddle.fft.fftshift(x=Tensor([0],"float32"), )
paddle.fft.fftshift(x=Tensor([2, 0, 2],"float64"), )
paddle.fft.fftshift(x=Tensor([2, 4, 0],"float64"), )
paddle.fft.fftshift(x=Tensor([4, 0, 4, 4],"complex128"), )
paddle.fft.fftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=tuple(1,3,), )
paddle.fft.fftshift(x=Tensor([4, 5, 0, 4],"complex128"), )
paddle.fft.fftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=tuple(1,3,), )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 0],"complex128"), )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=tuple(1,3,), )
paddle.fft.hfft(x=Tensor([3, 0, 2, 3],"complex128"), n=2, axis=1, )
paddle.fft.hfft(x=Tensor([3, 2, 2, 0],"complex128"), n=2, )
paddle.fft.hfft2(x=Tensor([0, 4, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.hfft2(x=Tensor([0, 4, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.hfft2(x=Tensor([0, 4, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.hfft2(x=Tensor([1, 4, 0],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.hfft2(x=Tensor([1, 4, 0],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.hfft2(x=Tensor([1, 4, 0],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.hfft2(x=Tensor([3, 0, 2],"complex128"), s=tuple(1,2,), )
paddle.fft.hfft2(x=Tensor([3, 1, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.hfftn(Tensor([0, 4, 2],"complex128"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.hfftn(Tensor([0, 4, 2],"complex128"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.hfftn(Tensor([0, 4, 2],"complex128"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.hfftn(Tensor([1, 4, 0],"complex128"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.hfftn(Tensor([1, 4, 0],"complex128"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.hfftn(Tensor([1, 4, 0],"complex128"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.hfftn(Tensor([3, 0, 2],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.hfftn(Tensor([3, 1, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.hfftn(x=Tensor([0, 3, 2, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.hfftn(x=Tensor([0, 3, 2, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.hfftn(x=Tensor([0, 3, 2, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.hfftn(x=Tensor([1, 3, 0, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.hfftn(x=Tensor([1, 3, 0, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.hfftn(x=Tensor([1, 3, 0, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.hfftn(x=Tensor([2, 3, 0, 2],"complex128"), s=tuple(1,2,), )
paddle.fft.hfftn(x=Tensor([2, 3, 1, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.ifft(x=Tensor([0],"complex128"), n=1, )
paddle.fft.ifft2(x=Tensor([3, 3, 0, 2],"complex128"), s=tuple(1,2,), )
paddle.fft.ifft2(x=Tensor([3, 3, 2, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.ifftn(Tensor([3, 3, 0, 2],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ifftn(Tensor([3, 3, 2, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ifftn(x=Tensor([0, 4, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([4, 0, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([4, 0, 6],"float64"), s=list[2,4,], )
paddle.fft.ifftn(x=Tensor([4, 4, 0],"float64"), s=list[1,], )
paddle.fft.ifftn(x=Tensor([4, 4, 0],"float64"), s=list[2,4,], )
paddle.fft.ifftshift(x=Tensor([0, 4, 2],"float64"), )
paddle.fft.ifftshift(x=Tensor([0, 5, 4, 4],"complex128"), )
paddle.fft.ifftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=tuple(0,3,), )
paddle.fft.ifftshift(x=Tensor([0],"float32"), )
paddle.fft.ifftshift(x=Tensor([2, 0, 2],"float64"), )
paddle.fft.ifftshift(x=Tensor([2, 4, 0],"float64"), )
paddle.fft.ifftshift(x=Tensor([4, 0, 4, 4],"complex128"), )
paddle.fft.ifftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=tuple(0,3,), )
paddle.fft.ifftshift(x=Tensor([4, 5, 0, 4],"complex128"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=tuple(0,3,), )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 0],"complex128"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=tuple(0,3,), )
paddle.fft.ihfft(x=Tensor([2, 0, 3, 3],"float64"), n=2, axis=1, )
paddle.fft.ihfft(x=Tensor([2, 4, 3, 0],"float64"), n=2, )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfft2(x=Tensor([4, 0, 3],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.ihfftn(Tensor([4, 0, 3],"float64"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.ihfftn(x=Tensor([0, 3, 2],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfftn(x=Tensor([0, 3, 2],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfftn(x=Tensor([0, 3, 2],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfftn(x=Tensor([4, 0, 2],"float64"), s=tuple(1,2,), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.irfft(x=Tensor([3, 0, 4],"complex128"), n=2, axis=1, )
paddle.fft.irfft(x=Tensor([4, 4, 0],"complex128"), n=2, )
paddle.fft.irfft2(x=Tensor([0, 4, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.irfft2(x=Tensor([0, 4, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.irfft2(x=Tensor([0, 4, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.irfft2(x=Tensor([1, 4, 0],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.irfft2(x=Tensor([1, 4, 0],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.irfft2(x=Tensor([1, 4, 0],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.irfft2(x=Tensor([3, 0, 2],"complex128"), s=tuple(1,2,), )
paddle.fft.irfft2(x=Tensor([3, 1, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.irfftn(Tensor([0, 4, 2],"complex128"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.irfftn(Tensor([0, 4, 2],"complex128"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.irfftn(Tensor([0, 4, 2],"complex128"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.irfftn(Tensor([1, 4, 0],"complex128"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.irfftn(Tensor([1, 4, 0],"complex128"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.irfftn(Tensor([1, 4, 0],"complex128"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.irfftn(Tensor([3, 0, 2],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.irfftn(Tensor([3, 1, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.irfftn(x=Tensor([0, 3, 2, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.irfftn(x=Tensor([0, 3, 2, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.irfftn(x=Tensor([0, 3, 2, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.irfftn(x=Tensor([1, 3, 0, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.irfftn(x=Tensor([1, 3, 0, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.irfftn(x=Tensor([1, 3, 0, 2],"complex128"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.irfftn(x=Tensor([2, 3, 0, 2],"complex128"), s=tuple(1,2,), )
paddle.fft.irfftn(x=Tensor([2, 3, 1, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.rfft(x=Tensor([2, 2, 0],"float64"), n=1, )
paddle.fft.rfft(x=Tensor([2, 2, 0],"float64"), n=1, norm="backward", )
paddle.fft.rfft(x=Tensor([2, 2, 0],"float64"), n=1, norm="forward", )
paddle.fft.rfft(x=Tensor([2, 2, 0],"float64"), n=1, norm="ortho", )
paddle.fft.rfft(x=Tensor([2, 2, 0],"float64"), n=1, norm="ortho", axis=2, )
paddle.fft.rfft2(x=Tensor([2, 0, 2],"float64"), s=list[1,2,], )
paddle.fft.rfft2(x=Tensor([2, 0, 2],"float64"), s=list[1,2,], norm="backward", )
paddle.fft.rfft2(x=Tensor([2, 0, 2],"float64"), s=list[1,2,], norm="forward", )
paddle.fft.rfft2(x=Tensor([2, 0, 2],"float64"), s=list[1,2,], norm="ortho", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="backward", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="forward", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="ortho", )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fft.rfftn(Tensor([2, 0, 2],"float64"), list[1,2,], None, "ortho", None, )
paddle.fft.rfftn(Tensor([2, 0, 2],"float64"), list[1,2,], tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([2, 0, 2],"float64"), list[1,2,], tuple(-2,-1,), "forward", None, )
paddle.fft.rfftn(Tensor([2, 0, 2],"float64"), list[1,2,], tuple(-2,-1,), "ortho", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], None, "ortho", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "forward", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "ortho", None, )
paddle.fft.rfftn(x=Tensor([0, 2, 2],"float64"), s=list[1,], axes=list[0,], norm="ortho", )
paddle.fft.rfftn(x=Tensor([2, 2, 0],"float64"), s=list[1,], )
paddle.fft.rfftn(x=Tensor([2, 2, 0],"float64"), s=list[1,], norm="backward", )
paddle.fft.rfftn(x=Tensor([2, 2, 0],"float64"), s=list[1,], norm="forward", )
paddle.fft.rfftn(x=Tensor([2, 2, 0],"float64"), s=list[1,], norm="ortho", )
paddle.flatten(Tensor([0, 1, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([0, 10, 7, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([0, 100, 120],"float64"), 1, 2, )
paddle.flatten(Tensor([0, 1024, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([0, 1024, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([0, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([0, 16, 5, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([0, 2, 26, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=-1, stop_axis=-1, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=-3, stop_axis=-3, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=-3, stop_axis=1, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([0, 2, 3],"float64"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([0, 2, 4, 4, 5],"float64"), )
paddle.flatten(Tensor([0, 2, 4, 5],"float64"), )
paddle.flatten(Tensor([0, 3, 4, 5],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([0, 3, 4],"float64"), start_axis=-2, stop_axis=1, )
paddle.flatten(Tensor([0, 512],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([0, 6, 3, 4, 2, 5],"float64"), )
paddle.flatten(Tensor([0, 768, 28, 28],"float32"), 2, )
paddle.flatten(Tensor([0, 784],"float32"), )
paddle.flatten(Tensor([0, 8, 14, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([0, 8, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 0, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 0, 14, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.flatten(Tensor([1, 0, 28, 28],"float32"), 2, )
paddle.flatten(Tensor([1, 0, 3],"float64"), start_axis=-3, stop_axis=-3, )
paddle.flatten(Tensor([1, 0, 3],"float64"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([1, 0, 3],"float64"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 0, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 1024, 0, 1],"float32"), 1, )
paddle.flatten(Tensor([1, 1024, 1, 0],"float32"), 1, )
paddle.flatten(Tensor([1, 2, 0],"float64"), start_axis=-3, stop_axis=-3, )
paddle.flatten(Tensor([1, 2, 0],"float64"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([1, 2, 0],"float64"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 768, 0, 28],"float32"), 2, )
paddle.flatten(Tensor([1, 768, 28, 0],"float32"), 2, )
paddle.flatten(Tensor([1, 8, 0, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 8, 0, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 8, 14, 0],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([1, 8, 7, 0],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1000, 0],"float32"), )
paddle.flatten(Tensor([12, 0, 1],"float32"), 1, )
paddle.flatten(Tensor([12, 1024, 0],"float32"), 1, )
paddle.flatten(Tensor([128, 0, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 0],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 0, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 1, 0],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([13, 0, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([13, 1, 0, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([13, 1, 16, 0],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([2, 0, 3],"float64"), start_axis=-1, stop_axis=-1, )
paddle.flatten(Tensor([2, 0, 3],"float64"), start_axis=-3, stop_axis=1, )
paddle.flatten(Tensor([2, 0, 3],"float64"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([2, 0, 3],"float64"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 0, 3],"float64"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 0, 4, 5],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([2, 0, 4],"float64"), start_axis=-2, stop_axis=1, )
paddle.flatten(Tensor([2, 2, 0],"float64"), start_axis=-1, stop_axis=-1, )
paddle.flatten(Tensor([2, 2, 0],"float64"), start_axis=-3, stop_axis=1, )
paddle.flatten(Tensor([2, 2, 0],"float64"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([2, 2, 0],"float64"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 2, 0],"float64"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 0, 5],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 0],"float64"), start_axis=-2, stop_axis=1, )
paddle.flatten(Tensor([2, 3, 4, 0],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([3, 0, 120],"float64"), 1, 2, )
paddle.flatten(Tensor([3, 0, 3, 4, 2, 5],"float64"), )
paddle.flatten(Tensor([3, 100, 0],"float64"), 1, 2, )
paddle.flatten(Tensor([3, 6, 0, 4, 2, 5],"float64"), )
paddle.flatten(Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.flatten(Tensor([3, 6, 3, 4, 0, 5],"float64"), )
paddle.flatten(Tensor([3, 6, 3, 4, 2, 0],"float64"), )
paddle.flatten(Tensor([32, 0, 26, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([32, 2, 0, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([32, 2, 26, 0],"float32"), start_axis=1, )
paddle.flatten(Tensor([4, 0, 4, 4, 5],"float64"), )
paddle.flatten(Tensor([4, 0, 4, 5],"float64"), )
paddle.flatten(Tensor([4, 0, 7, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 0, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 7, 0],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 2, 0, 4, 5],"float64"), )
paddle.flatten(Tensor([4, 2, 0, 5],"float64"), )
paddle.flatten(Tensor([4, 2, 4, 0, 5],"float64"), )
paddle.flatten(Tensor([4, 2, 4, 0],"float64"), )
paddle.flatten(Tensor([4, 2, 4, 4, 0],"float64"), )
paddle.flatten(Tensor([64, 0, 5, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([64, 16, 0, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([64, 16, 5, 0],"float32"), 1, -1, )
paddle.flatten(x=Tensor([0, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([0, 2, 3],"float32"), )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=-3, stop_axis=-3, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=-3, stop_axis=1, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=0, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=0, stop_axis=-1, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([0, 2, 3],"float64"), stop_axis=-1, )
paddle.flatten(x=Tensor([0, 3, 3],"float64"), name="test_name", )
paddle.flatten(x=Tensor([0, 3, 4, 5],"float64"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([0, 3, 4, 5],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([0, 3, 4],"float64"), start_axis=-2, stop_axis=1, )
paddle.flatten(x=Tensor([0],"float64"), )
paddle.flatten(x=Tensor([1, 0, 3],"float64"), start_axis=-3, stop_axis=-3, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.flatten(x=Tensor([1, 0, 3],"float64"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([1, 0, 3],"float64"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([1, 2, 0],"float64"), start_axis=-3, stop_axis=-3, )
paddle.flatten(x=Tensor([1, 2, 0],"float64"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([1, 2, 0],"float64"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([124, 0, 1, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 1280, 0, 1],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([124, 1280, 1, 0],"float32"), start_axis=1, )
paddle.flatten(x=Tensor([2, 0, 3],"float32"), )
paddle.flatten(x=Tensor([2, 0, 3],"float64"), start_axis=-3, stop_axis=1, )
paddle.flatten(x=Tensor([2, 0, 3],"float64"), start_axis=0, )
paddle.flatten(x=Tensor([2, 0, 3],"float64"), start_axis=0, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 0, 3],"float64"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([2, 0, 3],"float64"), stop_axis=-1, )
paddle.flatten(x=Tensor([2, 0, 4, 5],"float64"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 0, 4, 5],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 0, 4],"float64"), start_axis=-2, stop_axis=1, )
paddle.flatten(x=Tensor([2, 2, 0],"float32"), )
paddle.flatten(x=Tensor([2, 2, 0],"float64"), start_axis=-3, stop_axis=1, )
paddle.flatten(x=Tensor([2, 2, 0],"float64"), start_axis=0, )
paddle.flatten(x=Tensor([2, 2, 0],"float64"), start_axis=0, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 2, 0],"float64"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([2, 2, 0],"float64"), stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 0, 5],"float64"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 0, 5],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 0],"float64"), start_axis=-2, stop_axis=1, )
paddle.flatten(x=Tensor([2, 3, 4, 0],"float64"), start_axis=-2, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 4, 0],"float64"), start_axis=-3, stop_axis=-1, )
paddle.flatten(x=Tensor([3, 0, 3],"float64"), name="test_name", )
paddle.flatten(x=Tensor([3, 3, 0],"float64"), name="test_name", )
paddle.fmax(Tensor([0, 15],"float32"), Tensor([0, 15],"float32"), )
paddle.fmax(Tensor([0, 15],"float32"), Tensor([15],"float32"), )
paddle.fmax(Tensor([0, 200, 40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.fmax(Tensor([0],"int64"), Tensor([0],"int64"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.fmax(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.fmax(Tensor([30, 0, 40],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.fmax(Tensor([30, 200, 0],"float32"), Tensor([30, 200, 0],"float32"), )
paddle.fmin(Tensor([0, 15],"float32"), Tensor([0, 15],"float32"), )
paddle.fmin(Tensor([0, 15],"float32"), Tensor([15],"float32"), )
paddle.fmin(Tensor([0, 200, 40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.fmin(Tensor([0],"int64"), Tensor([0],"int64"), )
paddle.fmin(Tensor([0],"int64"), Tensor([1],"int64"), )
paddle.fmin(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.fmin(Tensor([1],"int64"), Tensor([0],"int64"), )
paddle.fmin(Tensor([30, 0, 40],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.fmin(Tensor([30, 200, 0],"float32"), Tensor([30, 200, 0],"float32"), )
paddle.full_like(Tensor([0, 1, 1, 1],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([0, 1, 6],"float64"), fill_value=6, )
paddle.full_like(Tensor([0, 10164],"int32"), 80, )
paddle.full_like(Tensor([0, 1024],"float32"), 0.334840825619673, )
paddle.full_like(Tensor([0, 10285],"int32"), 11, )
paddle.full_like(Tensor([0, 1],"float32"), 0.5, )
paddle.full_like(Tensor([0, 1],"float32"), fill_value=2, )
paddle.full_like(Tensor([0, 1],"float32"), fill_value=6, )
paddle.full_like(Tensor([0, 1],"float64"), -2.220446049250313e-16, )
paddle.full_like(Tensor([0, 1],"float64"), 1.7976931348623157e+308, )
paddle.full_like(Tensor([0, 1],"float64"), fill_value=11, )
paddle.full_like(Tensor([0, 1],"float64"), fill_value=23, )
paddle.full_like(Tensor([0, 1],"float64"), fill_value=41, )
paddle.full_like(Tensor([0, 1],"float64"), math.inf, )
paddle.full_like(Tensor([0, 1],"int64"), -1, )
paddle.full_like(Tensor([0, 1],"int64"), 0, )
paddle.full_like(Tensor([0, 1],"int64"), 1, )
paddle.full_like(Tensor([0, 1],"int64"), 151643, )
paddle.full_like(Tensor([0, 1],"int64"), 2, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.full_like(Tensor([0, 1],"int64"), 255, )
paddle.full_like(Tensor([0, 1],"int64"), 3, )
paddle.full_like(Tensor([0, 1],"int64"), 7, )
paddle.full_like(Tensor([0, 1],"int64"), 98, )
paddle.full_like(Tensor([0, 200],"float32"), 0.0, )
paddle.full_like(Tensor([0, 21504],"int32"), 10, )
paddle.full_like(Tensor([0, 21504],"int32"), 15, )
paddle.full_like(Tensor([0, 232],"float16"), 0.0, None, None, )
paddle.full_like(Tensor([0, 232],"int32"), 1.0, None, None, )
paddle.full_like(Tensor([0, 232],"int32"), 1e-10, None, None, )
paddle.full_like(Tensor([0, 232],"int32"), 1e-100, None, None, )
paddle.full_like(Tensor([0, 2],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([0, 2],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([0, 3, 3],"float32"), fill_value=2, )
paddle.full_like(Tensor([0, 3, 4],"float64"), fill_value=1, )
paddle.full_like(Tensor([0, 300, 4096],"float32"), 1, )
paddle.full_like(Tensor([0, 36858],"int32"), 4, )
paddle.full_like(Tensor([0, 3],"float32"), -10.0, )
paddle.full_like(Tensor([0, 3],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([0, 3],"float32"), 100.0, )
paddle.full_like(Tensor([0, 3],"float32"), 2.0, )
paddle.full_like(Tensor([0, 3],"float32"), fill_value=math.inf, )
paddle.full_like(Tensor([0, 3],"float32"), fill_value=nan, )
paddle.full_like(Tensor([0, 3],"float64"), 0.9999998807907104, )
paddle.full_like(Tensor([0, 3],"float64"), 1.1754943508222875e-38, )
paddle.full_like(Tensor([0, 40],"float32"), -1.0, )
paddle.full_like(Tensor([0, 5, 2],"float32"), 0, )
paddle.full_like(Tensor([0, 5, 3],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([0, 5, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([0, 5, 3],"float32"), 0.0, )
paddle.full_like(Tensor([0, 5, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([0, 5, 3],"float32"), math.inf, )
paddle.full_like(Tensor([0, 512],"float16"), -127, )
paddle.full_like(Tensor([0, 512],"float16"), 127, )
paddle.full_like(Tensor([0, 56, 56],"int64"), 15, )
paddle.full_like(Tensor([0, 56, 56],"int64"), 31, )
paddle.full_like(Tensor([0, 6, 3, 1, 2, 5],"float64"), fill_value=3, )
paddle.full_like(Tensor([0, 6, 3, 4, 1, 5],"float64"), fill_value=1, )
paddle.full_like(Tensor([0, 6, 3, 4, 2, 1],"float64"), fill_value=4, )
paddle.full_like(Tensor([0, 64],"float32"), 1.0, )
paddle.full_like(Tensor([0, 64],"float32"), 1e-20, )
paddle.full_like(Tensor([0, 7, 1],"float64"), fill_value=5, )
paddle.full_like(Tensor([0, 8, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([0, 8, 64, 64],"float16"), 127, )
paddle.full_like(Tensor([0, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([0],"float32"), 0.5, )
paddle.full_like(Tensor([0],"float32"), 1.0, )
paddle.full_like(Tensor([0],"float32"), 1e-20, )
paddle.full_like(Tensor([0],"float32"), fill_value=0, )
paddle.full_like(Tensor([0],"float32"), fill_value=1023, )
paddle.full_like(Tensor([0],"float32"), fill_value=1183, )
paddle.full_like(Tensor([0],"float32"), fill_value=16383, )
paddle.full_like(Tensor([0],"float32"), fill_value=19, )
paddle.full_like(Tensor([0],"float32"), fill_value=2, )
paddle.full_like(Tensor([0],"float32"), fill_value=31, )
paddle.full_like(Tensor([0],"float32"), fill_value=35967, )
paddle.full_like(Tensor([0],"float32"), fill_value=36, )
paddle.full_like(Tensor([0],"float32"), fill_value=5, )
paddle.full_like(Tensor([0],"float32"), fill_value=511, )
paddle.full_like(Tensor([0],"float32"), fill_value=7, )
paddle.full_like(Tensor([0],"float64"), -2.220446049250313e-16, )
paddle.full_like(Tensor([0],"float64"), -math.inf, )
paddle.full_like(Tensor([0],"float64"), 0.0, )
paddle.full_like(Tensor([0],"float64"), 0.9999998807907104, )
paddle.full_like(Tensor([0],"float64"), 1.1754943508222875e-38, )
paddle.full_like(Tensor([0],"float64"), 1.7976931348623157e+308, )
paddle.full_like(Tensor([0],"float64"), fill_value=167, )
paddle.full_like(Tensor([0],"float64"), fill_value=2159, )
paddle.full_like(Tensor([0],"float64"), math.inf, )
paddle.full_like(Tensor([0],"int64"), 0, )
paddle.full_like(Tensor([0],"int64"), 1, )
paddle.full_like(Tensor([0],"int64"), 10, )
paddle.full_like(Tensor([0],"int64"), 11, )
paddle.full_like(Tensor([0],"int64"), 12, )
paddle.full_like(Tensor([0],"int64"), 13, )
paddle.full_like(Tensor([0],"int64"), 14, )
paddle.full_like(Tensor([0],"int64"), 15, )
paddle.full_like(Tensor([0],"int64"), 2, )
paddle.full_like(Tensor([0],"int64"), 3, )
paddle.full_like(Tensor([0],"int64"), 4, )
paddle.full_like(Tensor([0],"int64"), 5, )
paddle.full_like(Tensor([0],"int64"), 6, )
paddle.full_like(Tensor([0],"int64"), 7, )
paddle.full_like(Tensor([0],"int64"), 8, )
paddle.full_like(Tensor([0],"int64"), 9, )
paddle.full_like(Tensor([1, 0, 1, 1],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([1, 0, 3],"float32"), fill_value=2, )
paddle.full_like(Tensor([1, 0, 4096],"float32"), 1, )
paddle.full_like(Tensor([1, 0, 4],"float64"), fill_value=1, )
paddle.full_like(Tensor([1, 0],"float32"), -math.inf, )
paddle.full_like(Tensor([1, 0],"float32"), 0.0, )
paddle.full_like(Tensor([1, 0],"int32"), 10, )
paddle.full_like(Tensor([1, 0],"int32"), 11, )
paddle.full_like(Tensor([1, 0],"int32"), 15, )
paddle.full_like(Tensor([1, 0],"int32"), 4, )
paddle.full_like(Tensor([1, 0],"int64"), -1, )
paddle.full_like(Tensor([1, 0],"int64"), 0, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.full_like(Tensor([1, 0],"int64"), 1, )
paddle.full_like(Tensor([1, 0],"int64"), 2, )
paddle.full_like(Tensor([1, 0],"int64"), 255, )
paddle.full_like(Tensor([1, 0],"int64"), 3, )
paddle.full_like(Tensor([1, 0],"int64"), 7, )
paddle.full_like(Tensor([1, 0],"int64"), 98, )
paddle.full_like(Tensor([1, 1, 0, 1],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([1, 1, 1, 0],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([1, 3, 0],"float32"), fill_value=2, )
paddle.full_like(Tensor([1, 3, 0],"float64"), fill_value=1, )
paddle.full_like(Tensor([1, 300, 0],"float32"), 1, )
paddle.full_like(Tensor([1024, 0],"float32"), 0.334840825619673, )
paddle.full_like(Tensor([114, 0],"float64"), -2.220446049250313e-16, )
paddle.full_like(Tensor([114, 0],"float64"), 1.7976931348623157e+308, )
paddle.full_like(Tensor([114, 0],"float64"), math.inf, )
paddle.full_like(Tensor([128, 0],"float16"), -127, )
paddle.full_like(Tensor([128, 0],"float16"), 127, )
paddle.full_like(Tensor([13, 0, 56],"int64"), 15, )
paddle.full_like(Tensor([13, 0, 56],"int64"), 31, )
paddle.full_like(Tensor([13, 56, 0],"int64"), 15, )
paddle.full_like(Tensor([13, 56, 0],"int64"), 31, )
paddle.full_like(Tensor([148, 0, 3],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([148, 0, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([148, 0, 3],"float32"), 0.0, )
paddle.full_like(Tensor([148, 0, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([148, 0, 3],"float32"), math.inf, )
paddle.full_like(Tensor([148, 5, 0],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([148, 5, 0],"float32"), -math.inf, )
paddle.full_like(Tensor([148, 5, 0],"float32"), 0.0, )
paddle.full_like(Tensor([148, 5, 0],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([148, 5, 0],"float32"), math.inf, )
paddle.full_like(Tensor([16, 0],"float32"), 1.0, )
paddle.full_like(Tensor([16, 0],"float32"), 1e-20, )
paddle.full_like(Tensor([16, 0],"int32"), 80, )
paddle.full_like(Tensor([1948, 0],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([1948, 0],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 0, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([2, 0, 64, 64],"float16"), 127, )
paddle.full_like(Tensor([2, 0],"float32"), -10.0, )
paddle.full_like(Tensor([2, 0],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 0],"float32"), 0.5, )
paddle.full_like(Tensor([2, 0],"float32"), 100.0, )
paddle.full_like(Tensor([2, 0],"float32"), 2.0, )
paddle.full_like(Tensor([2, 0],"float32"), fill_value=2, )
paddle.full_like(Tensor([2, 0],"float32"), fill_value=math.inf, )
paddle.full_like(Tensor([2, 0],"float32"), fill_value=nan, )
paddle.full_like(Tensor([2, 0],"int64"), 151643, )
paddle.full_like(Tensor([2, 8, 0, 64],"float16"), -127, )
paddle.full_like(Tensor([2, 8, 0, 64],"float16"), 127, )
paddle.full_like(Tensor([2, 8, 64, 0],"float16"), -127, )
paddle.full_like(Tensor([2, 8, 64, 0],"float16"), 127, )
paddle.full_like(Tensor([219, 0],"float16"), 0.0, None, None, )
paddle.full_like(Tensor([219, 0],"int32"), 1.0, None, None, )
paddle.full_like(Tensor([219, 0],"int32"), 1e-10, None, None, )
paddle.full_like(Tensor([219, 0],"int32"), 1e-100, None, None, )
paddle.full_like(Tensor([3, 0, 3, 1, 2, 5],"float64"), fill_value=3, )
paddle.full_like(Tensor([3, 0, 3, 4, 1, 5],"float64"), fill_value=1, )
paddle.full_like(Tensor([3, 0, 3, 4, 2, 1],"float64"), fill_value=4, )
paddle.full_like(Tensor([3, 0],"float32"), -1.0, )
paddle.full_like(Tensor([3, 6, 0, 1, 2, 5],"float64"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 0, 4, 1, 5],"float64"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 0, 4, 2, 1],"float64"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 0, 1, 5],"float64"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 3, 0, 2, 1],"float64"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 0, 2, 5],"float64"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 3, 1, 0, 5],"float64"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 3, 1, 2, 0],"float64"), fill_value=3, )
paddle.full_like(Tensor([3, 6, 3, 4, 0, 1],"float64"), fill_value=4, )
paddle.full_like(Tensor([3, 6, 3, 4, 0, 5],"float64"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 3, 4, 1, 0],"float64"), fill_value=1, )
paddle.full_like(Tensor([3, 6, 3, 4, 2, 0],"float64"), fill_value=4, )
paddle.full_like(Tensor([4, 0, 1],"float64"), fill_value=5, )
paddle.full_like(Tensor([4, 0, 2],"float32"), 0, )
paddle.full_like(Tensor([4, 0, 6],"float64"), fill_value=6, )
paddle.full_like(Tensor([4, 0],"float32"), fill_value=6, )
paddle.full_like(Tensor([4, 0],"float64"), fill_value=41, )
paddle.full_like(Tensor([4, 1, 0],"float64"), fill_value=6, )
paddle.full_like(Tensor([4, 5, 0],"float32"), 0, )
paddle.full_like(Tensor([4, 7, 0],"float64"), fill_value=5, )
paddle.full_like(Tensor([5, 0],"float64"), 0.9999998807907104, )
paddle.full_like(Tensor([5, 0],"float64"), 1.1754943508222875e-38, )
paddle.full_like(Tensor([5, 0],"float64"), fill_value=11, )
paddle.full_like(Tensor([7, 0],"float64"), fill_value=23, )
paddle.full_like(x=Tensor([0],"bool"), fill_value=1, )
paddle.full_like(x=Tensor([0],"float64"), fill_value=-math.inf, )
paddle.full_like(x=Tensor([0],"float64"), fill_value=math.inf, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.heaviside(Tensor([0, 100, 13, 17],"float32"), Tensor([100, 13, 17],"float32"), )
paddle.heaviside(Tensor([0, 13, 17],"float32"), Tensor([0, 13, 1],"float32"), )
paddle.heaviside(Tensor([0, 13, 17],"float32"), Tensor([13, 17],"float32"), )
paddle.heaviside(Tensor([0, 17],"float32"), Tensor([0, 17],"float32"), )
paddle.heaviside(Tensor([0, 17],"float32"), Tensor([1],"float32"), )
paddle.heaviside(Tensor([100, 0, 17],"float32"), Tensor([100, 0, 1],"float32"), )
paddle.heaviside(Tensor([100, 13, 0],"float32"), Tensor([100, 13, 0],"float32"), )
paddle.heaviside(Tensor([100, 13, 0],"float32"), Tensor([100, 13, 1],"float32"), )
paddle.heaviside(Tensor([13, 0],"float32"), Tensor([13, 0],"float32"), )
paddle.heaviside(Tensor([13, 0],"float32"), Tensor([1],"float32"), )
paddle.heaviside(Tensor([1],"float32"), Tensor([0, 2048],"float32"), )
paddle.heaviside(Tensor([1],"float32"), Tensor([300, 0],"float32"), )
paddle.hsplit(Tensor([0, 6, 3],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([0, 6, 3],"int64"), list[-1,], )
paddle.hsplit(Tensor([0, 6, 3],"int64"), list[2,4,], )
paddle.hsplit(Tensor([0, 6, 3],"int64"), tuple(2,1,3,), )
paddle.hsplit(Tensor([0, 6],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([0, 6],"int64"), list[-1,], )
paddle.hsplit(Tensor([0, 6],"int64"), list[2,4,], )
paddle.hsplit(Tensor([0, 6],"int64"), tuple(2,1,3,), )
paddle.hsplit(Tensor([0],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([0],"int64"), list[-1,], )
paddle.hsplit(Tensor([0],"int64"), list[2,4,], )
paddle.hsplit(Tensor([0],"int64"), tuple(2,1,3,), )
paddle.hsplit(Tensor([4, 0, 3],"int64"), list[-1,1,3,], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.hsplit(Tensor([4, 0, 3],"int64"), list[-1,], )
paddle.hsplit(Tensor([4, 0, 3],"int64"), list[2,4,], )
paddle.hsplit(Tensor([4, 0, 3],"int64"), tuple(2,1,3,), )
paddle.hsplit(Tensor([4, 0],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([4, 0],"int64"), list[-1,], )
paddle.hsplit(Tensor([4, 0],"int64"), list[2,4,], )
paddle.hsplit(Tensor([4, 0],"int64"), tuple(2,1,3,), )
paddle.hsplit(Tensor([4, 6, 0],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([4, 6, 0],"int64"), list[-1,], )
paddle.hsplit(Tensor([4, 6, 0],"int64"), list[2,4,], )
paddle.hsplit(Tensor([4, 6, 0],"int64"), tuple(2,1,3,), )
paddle.hstack(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.hstack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], )
paddle.imag(Tensor([0, 10, 10, 20],"complex128"), )
paddle.imag(Tensor([0, 3],"complex128"), )
paddle.imag(Tensor([10, 0, 10, 20],"complex128"), )
paddle.imag(Tensor([10, 10, 0, 20],"complex128"), )
paddle.imag(Tensor([10, 10, 10, 0],"complex128"), )
paddle.imag(Tensor([2, 0],"complex128"), )
paddle.imag(x=Tensor([0, 10],"complex64"), )
paddle.imag(x=Tensor([1, 0],"complex64"), )
paddle.inner(Tensor([0, 10, 10],"complex128"), Tensor([2, 10],"complex128"), )
paddle.inner(Tensor([0, 10, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.inner(Tensor([0, 50],"complex128"), Tensor([50],"complex128"), )
paddle.inner(Tensor([0, 50],"float64"), Tensor([50],"float64"), )
paddle.inner(Tensor([5, 0, 10],"complex128"), Tensor([2, 10],"complex128"), )
paddle.inner(Tensor([5, 0, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.inner(Tensor([5, 10, 10],"complex128"), Tensor([0, 10],"complex128"), )
paddle.inner(Tensor([5, 10, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.inner(x=Tensor([0, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.inner(x=Tensor([0, 3, 4],"float64"), y=Tensor([2, 5, 4],"float64"), )
paddle.inner(x=Tensor([0, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.inner(x=Tensor([0, 4],"float32"), y=Tensor([4, 4],"float32"), )
paddle.inner(x=Tensor([0, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.inner(x=Tensor([0, 4],"float64"), y=Tensor([3, 2, 4],"float64"), )
paddle.inner(x=Tensor([0, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([0, 4],"float64"), y=Tensor([5, 4],"float64"), )
paddle.inner(x=Tensor([0, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([0, 5, 3, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 0, 3, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 0, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 0, 4],"float64"), y=Tensor([3, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.inner(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.inner(x=Tensor([5, 0, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.inner(x=Tensor([5, 0, 4],"float64"), y=Tensor([2, 5, 4],"float64"), )
paddle.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.is_complex(Tensor([0, 10285, 2],"float32"), )
paddle.is_complex(Tensor([0, 14, 5, 14],"complex128"), )
paddle.is_complex(Tensor([0, 2, 2],"float32"), )
paddle.is_complex(Tensor([0, 2],"float32"), )
paddle.is_complex(Tensor([0, 3, 4, 5],"bfloat16"), )
paddle.is_complex(Tensor([0, 4, 5, 6, 8],"float32"), )
paddle.is_complex(Tensor([0],"float32"), )
paddle.is_complex(Tensor([0],"int64"), )
paddle.is_complex(Tensor([1, 0, 2],"float32"), )
paddle.is_complex(Tensor([1, 0, 5, 14],"complex128"), )
paddle.is_complex(Tensor([1, 0],"float32"), )
paddle.is_complex(Tensor([1, 10285, 0],"float32"), )
paddle.is_complex(Tensor([1, 14, 0, 14],"complex128"), )
paddle.is_complex(Tensor([1, 14, 5, 0],"complex128"), )
paddle.is_complex(Tensor([1, 2, 0],"float32"), )
paddle.is_complex(Tensor([2, 0, 4, 5],"bfloat16"), )
paddle.is_complex(Tensor([2, 3, 0, 5],"bfloat16"), )
paddle.is_complex(Tensor([2, 3, 4, 0],"bfloat16"), )
paddle.is_complex(Tensor([3, 0, 5, 6, 8],"float32"), )
paddle.is_complex(Tensor([3, 4, 0, 6, 8],"float32"), )
paddle.is_complex(Tensor([3, 4, 5, 0, 8],"float32"), )
paddle.is_complex(Tensor([3, 4, 5, 6, 0],"float32"), )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.isin(Tensor([0, 2, 5, 10],"float16"), Tensor([4, 5, 5],"float16"), True, False, )
paddle.isin(Tensor([0, 2, 5, 10],"float16"), Tensor([4, 5, 5],"float16"), True, True, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.isin(Tensor([0, 2, 5, 10],"float32"), Tensor([4, 5, 5],"float32"), True, False, )
paddle.isin(Tensor([0, 2, 5, 10],"float32"), Tensor([4, 5, 5],"float32"), True, True, )
paddle.isin(Tensor([0, 5, 100],"float16"), Tensor([500],"float16"), True, False, )
paddle.isin(Tensor([0, 5, 100],"float16"), Tensor([500],"float16"), True, True, )
paddle.isin(Tensor([0, 5, 100],"float32"), Tensor([500],"float32"), True, False, )
paddle.isin(Tensor([0, 5, 100],"float32"), Tensor([500],"float32"), True, True, )
paddle.isin(Tensor([2, 0, 100],"float16"), Tensor([500],"float16"), True, False, )
paddle.isin(Tensor([2, 0, 100],"float16"), Tensor([500],"float16"), True, True, )
paddle.isin(Tensor([2, 0, 100],"float32"), Tensor([500],"float32"), True, False, )
paddle.isin(Tensor([2, 0, 100],"float32"), Tensor([500],"float32"), True, True, )
paddle.isin(Tensor([2, 0, 5, 10],"float16"), Tensor([4, 5, 5],"float16"), True, False, )
paddle.isin(Tensor([2, 0, 5, 10],"float16"), Tensor([4, 5, 5],"float16"), True, True, )
paddle.isin(Tensor([2, 0, 5, 10],"float32"), Tensor([4, 5, 5],"float32"), True, False, )
paddle.isin(Tensor([2, 0, 5, 10],"float32"), Tensor([4, 5, 5],"float32"), True, True, )
paddle.isin(Tensor([2, 2, 0, 10],"float16"), Tensor([4, 5, 5],"float16"), True, False, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.isin(Tensor([2, 2, 0, 10],"float16"), Tensor([4, 5, 5],"float16"), True, True, )
paddle.isin(Tensor([2, 2, 0, 10],"float32"), Tensor([4, 5, 5],"float32"), True, False, )
paddle.isin(Tensor([2, 2, 0, 10],"float32"), Tensor([4, 5, 5],"float32"), True, True, )
paddle.isin(Tensor([2, 2, 5, 0],"float16"), Tensor([4, 5, 5],"float16"), True, False, )
paddle.isin(Tensor([2, 2, 5, 0],"float16"), Tensor([4, 5, 5],"float16"), True, True, )
paddle.isin(Tensor([2, 2, 5, 0],"float32"), Tensor([4, 5, 5],"float32"), True, False, )
paddle.isin(Tensor([2, 2, 5, 0],"float32"), Tensor([4, 5, 5],"float32"), True, True, )
paddle.isin(Tensor([2, 2, 5, 10],"float16"), Tensor([0, 5, 5],"float16"), True, False, )
paddle.isin(Tensor([2, 2, 5, 10],"float16"), Tensor([0, 5, 5],"float16"), True, True, )
paddle.isin(Tensor([2, 2, 5, 10],"float16"), Tensor([4, 0, 5],"float16"), True, False, )
paddle.isin(Tensor([2, 2, 5, 10],"float16"), Tensor([4, 0, 5],"float16"), True, True, )
paddle.isin(Tensor([2, 2, 5, 10],"float16"), Tensor([4, 5, 0],"float16"), True, False, )
paddle.isin(Tensor([2, 2, 5, 10],"float16"), Tensor([4, 5, 0],"float16"), True, True, )
paddle.isin(Tensor([2, 2, 5, 10],"float32"), Tensor([0, 5, 5],"float32"), True, False, )
paddle.isin(Tensor([2, 2, 5, 10],"float32"), Tensor([0, 5, 5],"float32"), True, True, )
paddle.isin(Tensor([2, 2, 5, 10],"float32"), Tensor([4, 0, 5],"float32"), True, False, )
paddle.isin(Tensor([2, 2, 5, 10],"float32"), Tensor([4, 0, 5],"float32"), True, True, )
paddle.isin(Tensor([2, 2, 5, 10],"float32"), Tensor([4, 5, 0],"float32"), True, False, )
paddle.isin(Tensor([2, 2, 5, 10],"float32"), Tensor([4, 5, 0],"float32"), True, True, )
paddle.isin(Tensor([2, 5, 0],"float16"), Tensor([500],"float16"), True, False, )
paddle.isin(Tensor([2, 5, 0],"float16"), Tensor([500],"float16"), True, True, )
paddle.isin(Tensor([2, 5, 0],"float32"), Tensor([500],"float32"), True, False, )
paddle.isin(Tensor([2, 5, 0],"float32"), Tensor([500],"float32"), True, True, )
paddle.isin(Tensor([2, 5, 100],"float16"), Tensor([0],"float16"), True, False, )
paddle.isin(Tensor([2, 5, 100],"float16"), Tensor([0],"float16"), True, True, )
paddle.isin(Tensor([2, 5, 100],"float32"), Tensor([0],"float32"), True, False, )
paddle.isin(Tensor([2, 5, 100],"float32"), Tensor([0],"float32"), True, True, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.isin(Tensor([4, 8],"float16"), Tensor([0, 3],"float16"), False, False, )
paddle.isin(Tensor([4, 8],"float16"), Tensor([0, 3],"float16"), False, True, )
paddle.isin(Tensor([4, 8],"float16"), Tensor([2, 0],"float16"), False, False, )
paddle.isin(Tensor([4, 8],"float16"), Tensor([2, 0],"float16"), False, True, )
paddle.isin(Tensor([4, 8],"float32"), Tensor([0, 3],"float32"), False, False, )
paddle.isin(Tensor([4, 8],"float32"), Tensor([0, 3],"float32"), False, True, )
paddle.isin(Tensor([4, 8],"float32"), Tensor([2, 0],"float32"), False, False, )
paddle.isin(Tensor([4, 8],"float32"), Tensor([2, 0],"float32"), False, True, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.isreal(Tensor([0, 3],"bfloat16"), )
paddle.isreal(Tensor([0, 3],"bool"), )
paddle.isreal(Tensor([2, 0],"bfloat16"), )
paddle.isreal(Tensor([2, 0],"bool"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), )
paddle.lerp(Tensor([1, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.lerp(Tensor([1, 3],"float64"), Tensor([1, 3],"float64"), Tensor([0, 3],"float64"), )
paddle.lerp(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), )
paddle.lerp(Tensor([1],"float64"), Tensor([1],"float64"), Tensor([0],"float64"), )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), Tensor([2, 0],"float32"), )
paddle.lerp(Tensor([2, 5],"float32"), Tensor([2, 2, 5],"float32"), Tensor([0, 2, 2, 5],"float32"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 0],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([0, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 0],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([0],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([0],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([0, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 0],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([0, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 0],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([0],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 0, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 0, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 0, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 0],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([0, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 0],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([0],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([0],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([0, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 0],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([0, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 0],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([0],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 918],"float16"),Tensor([4, 304, 0],"float16"),], axis=-1, )
paddle.linalg.cholesky_solve(Tensor([0, 30, 2],"float64"), Tensor([0, 30, 30],"float64"), upper=True, )
paddle.concat(list[Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.linalg.cholesky_solve(Tensor([1, 30, 0],"float64"), Tensor([2, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([1, 30, 2],"float64"), Tensor([0, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([20, 0],"float64"), Tensor([20, 20],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([0, 4, 3],"float64"), y=Tensor([0, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 4, 0],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([0, 4, 3, 3],"float32"), "nuc", )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.ones_like(Tensor([0, 10, 8, 2],"float32"), )
paddle.ones_like(Tensor([0, 1024, 1],"float32"), )
paddle.ones_like(Tensor([0, 12, 9, 2],"float32"), )
paddle.ones_like(Tensor([0, 128, 128],"float32"), )
paddle.ones_like(Tensor([0, 1],"float32"), )
paddle.ones_like(Tensor([0, 1],"int64"), )
paddle.ones_like(Tensor([0, 280, 376, 25, 1],"float32"), )
paddle.ones_like(Tensor([0],"int32"), )
paddle.ones_like(Tensor([1, 0, 128],"float32"), )
paddle.ones_like(Tensor([1, 0, 1],"float32"), )
paddle.ones_like(Tensor([1, 0, 8, 2],"float32"), )
paddle.ones_like(Tensor([1, 0, 9, 2],"float32"), )
paddle.ones_like(Tensor([1, 0],"float32"), )
paddle.ones_like(Tensor([1, 0],"int64"), )
paddle.ones_like(Tensor([1, 10, 0, 2],"float32"), )
paddle.ones_like(Tensor([1, 10, 8, 0],"float32"), )
paddle.ones_like(Tensor([1, 1024, 0],"float32"), )
paddle.ones_like(Tensor([1, 12, 0, 2],"float32"), )
paddle.ones_like(Tensor([1, 12, 9, 0],"float32"), )
paddle.ones_like(Tensor([1, 128, 0],"float32"), )
paddle.ones_like(Tensor([4, 0, 376, 25, 1],"float32"), )
paddle.ones_like(Tensor([4, 280, 0, 25, 1],"float32"), )
paddle.ones_like(Tensor([4, 280, 376, 0, 1],"float32"), )
paddle.ones_like(Tensor([4, 280, 376, 25, 0],"float32"), )
paddle.ones_like(x=Tensor([0, 3, 3, 3, 3, 3],"float64"), )
paddle.ones_like(x=Tensor([0, 3, 3],"bool"), )
paddle.ones_like(x=Tensor([0, 3, 3],"float16"), )
paddle.ones_like(x=Tensor([3, 0, 3, 3, 3, 3],"float64"), )
paddle.ones_like(x=Tensor([3, 0, 3],"bool"), )
paddle.ones_like(x=Tensor([3, 0, 3],"float16"), )
paddle.ones_like(x=Tensor([3, 3, 0, 3, 3, 3],"float64"), )
paddle.ones_like(x=Tensor([3, 3, 0],"bool"), )
paddle.ones_like(x=Tensor([3, 3, 0],"float16"), )
paddle.ones_like(x=Tensor([3, 3, 3, 0, 3, 3],"float64"), )
paddle.ones_like(x=Tensor([3, 3, 3, 3, 0, 3],"float64"), )
paddle.ones_like(x=Tensor([3, 3, 3, 3, 3, 0],"float64"), )
paddle.outer(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.outer(Tensor([0],"float32"), Tensor([2],"float32"), )
paddle.outer(Tensor([0],"float32"), Tensor([4],"float32"), )
paddle.outer(Tensor([10],"float32"), Tensor([0],"float32"), )
paddle.outer(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.outer(x=Tensor([0],"float64"), y=Tensor([4],"float64"), )
paddle.outer(x=Tensor([4],"float64"), y=Tensor([0],"float64"), )
paddle.rad2deg(Tensor([0, 16, 32],"float32"), )
paddle.rad2deg(Tensor([0],"float32"), )
paddle.rad2deg(Tensor([0],"int64"), )
paddle.rad2deg(Tensor([8, 0, 32],"float32"), )
paddle.rad2deg(Tensor([8, 16, 0],"float32"), )
paddle.rad2deg(x=Tensor([0, 4, 4, 4],"float64"), )
paddle.rad2deg(x=Tensor([0, 4, 4],"float64"), )
paddle.rad2deg(x=Tensor([0, 4],"float64"), )
paddle.rad2deg(x=Tensor([0],"float32"), )
paddle.rad2deg(x=Tensor([0],"float64"), )
paddle.rad2deg(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.rad2deg(x=Tensor([4, 0, 4],"float64"), )
paddle.rad2deg(x=Tensor([4, 0],"float64"), )
paddle.rad2deg(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.rad2deg(x=Tensor([4, 4, 0],"float64"), )
paddle.rad2deg(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.real(Tensor([0, 10, 10, 20],"complex64"), )
paddle.real(Tensor([0, 20, 2, 3],"complex128"), )
paddle.real(Tensor([10, 0, 10, 20],"complex64"), )
paddle.real(Tensor([10, 10, 0, 20],"complex64"), )
paddle.real(Tensor([10, 10, 10, 0],"complex64"), )
paddle.real(Tensor([2, 0, 2, 3],"complex128"), )
paddle.real(Tensor([2, 20, 0, 3],"complex128"), )
paddle.real(Tensor([2, 20, 2, 0],"complex128"), )
paddle.real(x=Tensor([0, 10],"complex128"), )
paddle.real(x=Tensor([0, 10],"complex64"), )
paddle.real(x=Tensor([1, 0],"complex64"), )
paddle.real(x=Tensor([20, 0],"complex128"), )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 918],"float16"),Tensor([4, 346, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([40, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),Tensor([40, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([40, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([40, 50, 50, 5],"float32"),Tensor([0, 50, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([4],"int64"),Tensor([0],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([0],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([0],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([0],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([0],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([0],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([0],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([0],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([0],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([0],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([0],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([0],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([0],"int64"),Tensor([44],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([0],"int64"),Tensor([12],"int64"),], )
paddle.concat(list[Tensor([4],"int64"),Tensor([8],"int64"),Tensor([8],"int64"),Tensor([20],"int64"),Tensor([32],"int64"),Tensor([88],"int64"),Tensor([20],"int64"),Tensor([20],"int64"),Tensor([72],"int64"),Tensor([12],"int64"),Tensor([36],"int64"),Tensor([16],"int64"),Tensor([4],"int64"),Tensor([8],"int64"),Tensor([44],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([5, 5, 0],"float32"),Tensor([5, 5, 1],"float32"),], 2, )
paddle.concat(list[Tensor([5, 5, 1],"float32"),Tensor([5, 5, 0],"float32"),], 2, )
paddle.concat(list[Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),Tensor([512, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 32],"float32"),Tensor([512, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512],"float16"),Tensor([0],"float16"),Tensor([128],"float16"),], axis=-1, )
paddle.concat(list[Tensor([512],"float16"),Tensor([0],"float16"),Tensor([512],"float16"),], axis=-1, )
paddle.concat(list[Tensor([512],"float16"),Tensor([128],"float16"),Tensor([0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([512],"float16"),Tensor([512],"float16"),Tensor([0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([512],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([52, 4, 0, 1, 8],"float32"),Tensor([52, 4, 3, 1, 8],"float32"),Tensor([52, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 0, 5, 1, 8],"float32"),Tensor([52, 4, 3, 5, 1, 8],"float32"),Tensor([52, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 0, 8],"float32"),Tensor([52, 4, 5, 8],"float32"),Tensor([52, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 1, 8],"float32"),Tensor([52, 4, 0, 1, 8],"float32"),Tensor([52, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 1, 8],"float32"),Tensor([52, 4, 3, 1, 8],"float32"),Tensor([52, 4, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 5, 1, 8],"float32"),Tensor([52, 4, 0, 5, 1, 8],"float32"),Tensor([52, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 5, 1, 8],"float32"),Tensor([52, 4, 3, 5, 1, 8],"float32"),Tensor([52, 4, 0, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 8],"float32"),Tensor([52, 4, 0, 8],"float32"),Tensor([52, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 8],"float32"),Tensor([52, 4, 5, 8],"float32"),Tensor([52, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 5, 1, 0],"float32"),Tensor([52, 4, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 4, 5, 1, 5],"float32"),Tensor([52, 4, 5, 1, 0],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 5, 1, 0],"float32"),Tensor([52, 5, 1, 3],"float32"),Tensor([52, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([52, 5, 1, 1],"float32"),Tensor([52, 5, 1, 0],"float32"),Tensor([52, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([52, 5, 1, 1],"float32"),Tensor([52, 5, 1, 3],"float32"),Tensor([52, 5, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([56, 0, 16, 16],"float32"),Tensor([56, 3, 16, 16],"float32"),Tensor([56, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 0, 2, 2],"float32"),Tensor([56, 3, 2, 2],"float32"),Tensor([56, 2, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 16],"float32"),Tensor([56, 0, 16, 16],"float32"),Tensor([56, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 16],"float32"),Tensor([56, 3, 16, 16],"float32"),Tensor([56, 0, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 2, 2],"float32"),Tensor([56, 0, 2, 2],"float32"),Tensor([56, 2, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 2, 2],"float32"),Tensor([56, 3, 2, 2],"float32"),Tensor([56, 0, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([5],"float64"),Tensor([0],"float64"),Tensor([5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 1, 1, 1, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([0, 1, 1, 1, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([0, 1, 1, 11],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([0, 1, 1, 3],"float32"), list[-1,3,], )
paddle.reshape(Tensor([0, 1, 1, 7],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([0, 1, 1000],"float16"), shape=list[-1,1000,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 1, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([0, 1, 102144],"float16"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([0, 1, 102144],"float32"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([0, 1, 102],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([0, 1, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([0, 1, 112896],"float16"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([0, 1, 112896],"float32"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([0, 1, 128],"float32"), list[13,-1,32,], )
paddle.reshape(Tensor([0, 1, 128],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([0, 1, 128],"float32"), shape=list[-1,32,128,], )
paddle.reshape(Tensor([0, 1, 159],"float32"), shape=list[-1,159,], )
paddle.reshape(Tensor([0, 1, 192612],"float16"), shape=list[-1,192612,], )
paddle.reshape(Tensor([0, 1, 192612],"float32"), shape=list[-1,192612,], )
paddle.reshape(Tensor([0, 1, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([0, 1, 1],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([0, 1, 200, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([0, 1, 24],"float32"), list[-1,24,], )
paddle.reshape(Tensor([0, 1, 272, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([0, 1, 272, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([0, 1, 280, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([0, 1, 296, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([0, 1, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([0, 1, 3, 3],"complex128"), list[-1,3,], )
paddle.reshape(Tensor([0, 1, 304, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([0, 1, 304, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([0, 1, 312, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([0, 1, 320, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([0, 1, 32],"float32"), list[1,1,4,-1,], )
paddle.reshape(Tensor([0, 1, 32],"int64"), shape=list[13,1,-1,4,], )
paddle.reshape(Tensor([0, 1, 336, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([0, 1, 3],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([0, 1, 4],"float32"), shape=list[-1,4,], )
paddle.reshape(Tensor([0, 1, 67200],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([0, 1, 73984],"float16"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([0, 1, 73984],"float32"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([0, 1, 784],"float32"), shape=list[128,-1,], )
paddle.reshape(Tensor([0, 1, 8, 64],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([0, 1, 80512],"float16"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([0, 1, 80512],"float32"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([0, 1, 82688],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([0, 1, 84864],"float16"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([0, 1, 84864],"float32"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([0, 1, 87360],"float16"), shape=tuple(-1,280,312,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 1, 87360],"float32"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([0, 1, 8],"float32"), list[-1,8,], )
paddle.reshape(Tensor([0, 1, 8],"float32"), list[13,4,5,2,-1,], )
paddle.reshape(Tensor([0, 1, 8],"float32"), list[52,4,5,2,-1,], )
paddle.reshape(Tensor([0, 1, 92416],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([0, 1, 97280],"float16"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([0, 1, 97280],"float32"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([0, 10, 1, 1],"float32"), list[-1,10,], )
paddle.reshape(Tensor([0, 10, 102144],"float16"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([0, 10, 102144],"float32"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([0, 10, 104832],"float16"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([0, 10, 104832],"float32"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([0, 10, 14, 12],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([0, 10, 14, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([0, 10, 15, 12],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([0, 10, 15, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([0, 10, 200, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([0, 10, 200, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([0, 10, 200, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([0, 10, 200, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([0, 10, 208, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([0, 10, 208, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([0, 10, 216, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([0, 10, 216, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([0, 10, 232, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([0, 10, 256, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([0, 10, 256, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([0, 10, 264, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([0, 10, 272, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([0, 10, 272, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([0, 10, 272, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([0, 10, 272, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([0, 10, 272, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([0, 10, 272, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([0, 10, 272, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([0, 10, 280, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([0, 10, 280, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([0, 10, 280, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([0, 10, 288, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([0, 10, 296, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([0, 10, 296, 304],"float32"), shape=list[-1,296,304,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 10, 296, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([0, 10, 304, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([0, 10, 304, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([0, 10, 304, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([0, 10, 304, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([0, 10, 304, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([0, 10, 304, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([0, 10, 312, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([0, 10, 312, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([0, 10, 312, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([0, 10, 320, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([0, 10, 328, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([0, 10, 32],"float32"), shape=list[14,-1,4,8,], )
paddle.reshape(Tensor([0, 10, 336, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([0, 10, 336, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([0, 10, 336, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([0, 10, 336, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([0, 10, 336, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([0, 10, 54400],"float16"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([0, 10, 56576],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([0, 10, 59200],"float16"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([0, 10, 59200],"float32"), shape=tuple(-1,200,296,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 10, 63232],"float16"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([0, 10, 63232],"float32"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([0, 10, 63936],"float16"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([0, 10, 63936],"float32"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([0, 10, 64000],"float16"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([0, 10, 64000],"float32"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([0, 10, 67200],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([0, 10, 67200],"float16"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([0, 10, 67200],"float32"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([0, 10, 67392],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([0, 10, 69632],"float16"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([0, 10, 69632],"float32"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([0, 10, 70528],"float16"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([0, 10, 70528],"float32"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([0, 10, 76160],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([0, 10, 78144],"float16"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([0, 10, 78144],"float32"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([0, 10, 78336],"float16"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([0, 10, 78336],"float32"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([0, 10, 78400],"float16"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([0, 10, 78400],"float32"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([0, 10, 80512],"float16"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([0, 10, 80512],"float32"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([0, 10, 82688],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([0, 10, 82688],"float16"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([0, 10, 82688],"float32"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([0, 10, 84864],"float16"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([0, 10, 84864],"float32"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([0, 10, 85120],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([0, 10, 86016],"float16"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([0, 10, 86016],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([0, 10, 87040],"float16"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([0, 10, 87040],"float32"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([0, 10, 89216],"float16"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([0, 10, 89216],"float32"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([0, 10, 89984],"float16"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([0, 10, 89984],"float32"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([0, 10, 91392],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([0, 10, 91392],"float16"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([0, 10, 91392],"float32"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([0, 10, 91392],"float32"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([0, 10, 92416],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([0, 10, 94080],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([0, 10, 94080],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([0, 10, 94848],"float16"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([0, 10, 94848],"float16"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([0, 10, 94848],"float32"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([0, 10, 94848],"float32"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([0, 10, 97280],"float16"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([0, 10, 97280],"float32"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([0, 10, 99456],"float16"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([0, 10, 99456],"float32"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([0, 10, 99712],"float16"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([0, 10, 99712],"float32"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([0, 100, 100, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([0, 100, 100, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([0, 100, 120, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([0, 100, 120, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 100, 120, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([0, 100, 120, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([0, 100, 136, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([0, 100, 136, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([0, 100, 136, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([0, 100, 136, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([0, 100, 8000],"float32"), list[-1,8000,], )
paddle.reshape(Tensor([0, 1000],"float16"), shape=list[-1,1000,], )
paddle.reshape(Tensor([0, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([0, 100],"bool"), list[-1,100,1,], )
paddle.reshape(Tensor([0, 101, 8000],"float32"), list[-1,8000,], )
paddle.reshape(Tensor([0, 1024, 1, 1],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([0, 1024, 7, 7],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([0, 102],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([0, 108, 132, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([0, 108, 132, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([0, 10],"float32"), list[-1,10,1,1,], )
paddle.reshape(Tensor([0, 10],"float32"), shape=list[-1,1,10,], )
paddle.reshape(Tensor([0, 10],"float32"), shape=list[1,-1,10,], )
paddle.reshape(Tensor([0, 11, 200, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([0, 11, 208, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([0, 11, 248, 304],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([0, 11, 264, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([0, 11, 272, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([0, 11, 272, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([0, 11, 272, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([0, 11, 296, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([0, 11, 304, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([0, 11, 304, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([0, 11, 312, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([0, 11, 328, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([0, 11, 32],"float32"), shape=list[14,-1,4,8,], )
paddle.reshape(Tensor([0, 11, 336, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([0, 11, 75392],"float16"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([0, 11, 75392],"float32"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([0, 11, 97088],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([0, 112, 84, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([0, 112, 84, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([0, 114, 1, 64],"float16"), list[4,114,-1,], )
paddle.reshape(Tensor([0, 12, 12, 2],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([0, 12, 12, 80],"float16"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([0, 12, 12, 80],"float32"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([0, 12, 200, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([0, 12, 200, 312],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([0, 12, 208, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([0, 12, 216, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([0, 12, 224, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([0, 12, 232, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([0, 12, 248, 304],"float32"), shape=list[-1,248,304,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 12, 248, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([0, 12, 256, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([0, 12, 264, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([0, 12, 264, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([0, 12, 272, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([0, 12, 272, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([0, 12, 272, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([0, 12, 280, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([0, 12, 280, 304],"float32"), shape=list[-1,280,304,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 12, 280, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([0, 12, 280, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([0, 12, 288, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([0, 12, 296, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([0, 12, 296, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([0, 12, 304, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([0, 12, 304, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([0, 12, 304, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([0, 12, 304, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([0, 12, 304, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([0, 12, 304, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([0, 12, 312, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([0, 12, 320, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([0, 12, 328, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([0, 12, 328, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([0, 12, 336, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([0, 12, 57600],"float16"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([0, 12, 57600],"float32"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([0, 12, 62400],"float16"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([0, 12, 65664],"float16"), shape=tuple(-1,304,216,), )
paddle.reshape(Tensor([0, 12, 68096],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([0, 12, 69888],"float16"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([0, 12, 69888],"float32"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([0, 12, 76160],"float16"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([0, 12, 76160],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([0, 12, 76160],"float32"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([0, 12, 80256],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([0, 12, 83328],"float16"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([0, 12, 83328],"float32"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([0, 12, 85120],"float16"), shape=tuple(-1,280,304,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 12, 85120],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([0, 12, 85120],"float32"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([0, 12, 87040],"float16"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([0, 12, 87040],"float32"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([0, 12, 87552],"float16"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([0, 12, 87552],"float16"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([0, 12, 87552],"float32"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([0, 12, 87552],"float32"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([0, 12, 88704],"float16"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([0, 12, 88704],"float32"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([0, 12, 89216],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([0, 12, 89984],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([0, 12, 91840],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([0, 12, 94080],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([0, 12, 97088],"float16"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([0, 12, 97088],"float32"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([0, 12, 99712],"float16"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([0, 12, 99712],"float32"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([0, 128, 128, 2],"float32"), shape=list[4,-1,2,], )
paddle.reshape(Tensor([0, 128, 60],"float32"), list[-1,60,], )
paddle.reshape(Tensor([0, 128, 768],"float16"), list[-1,768,], )
paddle.reshape(Tensor([0, 128, 768],"float32"), list[-1,768,], )
paddle.reshape(Tensor([0, 1280, 1, 1],"float32"), list[-1,16,1280,], )
paddle.reshape(Tensor([0, 1280, 1, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([0, 1280, 1, 1],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([0, 1280],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([0, 1296],"int64"), shape=list[-1,], )
paddle.reshape(Tensor([0, 13, 102400],"float16"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([0, 13, 102400],"float32"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([0, 13, 104832],"float16"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([0, 13, 104832],"float32"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([0, 13, 216, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([0, 13, 28, 14],"int32"), tuple(-1,14,), )
paddle.reshape(Tensor([0, 13, 288, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([0, 13, 304, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([0, 13, 312, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([0, 13, 320, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([0, 13, 336, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([0, 13, 4, 7, 8],"float32"), tuple(104,7,-1,), )
paddle.reshape(Tensor([0, 13, 65664],"float16"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([0, 13, 65664],"float16"), shape=tuple(-1,304,216,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 13, 65664],"float32"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([0, 13, 92352],"float16"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([0, 13, 92352],"float32"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([0, 14, 216, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([0, 14, 256, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([0, 14, 264, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([0, 14, 264, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([0, 14, 264, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([0, 14, 280, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([0, 14, 296, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([0, 14, 304, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([0, 14, 32],"float32"), list[1,14,4,-1,], )
paddle.reshape(Tensor([0, 14, 32],"float32"), tuple(13,2,7,-1,), )
paddle.reshape(Tensor([0, 14, 76032],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([0, 14, 77824],"float16"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([0, 14, 77824],"float32"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([0, 14, 80256],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([0, 14, 80256],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([0, 14, 84480],"float16"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([0, 14, 84480],"float32"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([0, 14, 97088],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([0, 144, 256],"float32"), shape=tuple(-1,256,), )
paddle.reshape(Tensor([0, 144],"int64"), shape=list[-1,], )
paddle.reshape(Tensor([0, 14],"float32"), tuple(2,52,7,-1,), )
paddle.reshape(Tensor([0, 15, 208, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([0, 15, 208, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([0, 15, 248, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([0, 15, 256, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([0, 15, 272, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([0, 15, 280, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([0, 15, 288, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([0, 15, 304, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([0, 15, 304, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([0, 15, 328, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([0, 15, 56576],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([0, 15, 58752],"float16"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([0, 15, 58752],"float32"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([0, 15, 65600],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([0, 15, 67456],"float16"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([0, 15, 67456],"float32"), shape=tuple(-1,248,272,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 15, 68224],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([0, 15, 89984],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([0, 15, 91840],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([0, 15, 96768],"float16"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([0, 15, 96768],"float32"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([0, 152, 272, 128],"float16"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([0, 152, 272, 128],"float32"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([0, 152, 272, 2],"float16"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([0, 152, 272, 2],"float32"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([0, 152, 272, 4],"float16"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([0, 152, 272, 4],"float32"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([0, 16, 16, 2],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([0, 16, 2, 16],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([0, 16, 200, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([0, 16, 208, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([0, 16, 240, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([0, 16, 272, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([0, 16, 280, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([0, 16, 304, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([0, 16, 312, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([0, 16, 336, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([0, 16, 54400],"float16"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([0, 16, 54400],"float32"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([0, 16, 68224],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([0, 16, 72960],"float16"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([0, 16, 72960],"float32"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([0, 16, 94080],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([0, 165, 50000],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([0, 16],"float32"), list[-1,1,], )
paddle.reshape(Tensor([0, 16],"float32"), shape=list[-1,4,16,], )
paddle.reshape(Tensor([0, 17, 200, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([0, 17, 240, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([0, 17, 272, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([0, 17, 272, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([0, 17, 336, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([0, 17, 65600],"float16"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([0, 17, 65600],"float32"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([0, 18, 232, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([0, 18, 272, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([0, 18, 328, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([0, 18, 65600],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([0, 18, 74240],"float16"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([0, 18, 74240],"float32"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([0, 19, 216, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([0, 19, 34, 512],"float16"), list[-1,512,], )
paddle.reshape(Tensor([0, 19, 34, 512],"float32"), list[-1,512,], )
paddle.reshape(Tensor([0, 19, 67392],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([0, 198],"float32"), list[6,-1,], )
paddle.reshape(Tensor([0, 1],"float32"), list[-1,], )
paddle.reshape(Tensor([0, 1],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([0, 1],"float32"), list[52,4,5,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 1],"float32"), shape=list[-1,3,], )
paddle.reshape(Tensor([0, 1],"float64"), shape=list[-1,3,], )
paddle.reshape(Tensor([0, 1],"int64"), tuple(-1,1,), )
paddle.reshape(Tensor([0, 2, 107520],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([0, 2, 2],"float32"), list[-1,], )
paddle.reshape(Tensor([0, 2, 3, 3],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([0, 2, 32, 16],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([0, 2, 320, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([0, 2, 320, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([0, 2, 328, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([0, 2, 32],"int64"), shape=list[13,2,-1,4,], )
paddle.reshape(Tensor([0, 2, 336, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[-1,1,3,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[-1,3,2,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[-1,6,2,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[-1,9,1,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[-1,9,2,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[-1,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[1,-1,2,], )
paddle.reshape(Tensor([0, 2, 3],"float32"), list[2,-1,18,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[-1,1,3,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[-1,3,2,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[-1,6,2,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[-1,9,1,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[-1,9,2,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[1,-1,2,], )
paddle.reshape(Tensor([0, 2, 3],"int64"), list[2,-1,18,], )
paddle.reshape(Tensor([0, 2, 64, 16],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([0, 2, 64],"int64"), shape=list[13,2,-1,4,], )
paddle.reshape(Tensor([0, 2, 8, 64],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([0, 20, 10],"float32"), list[-1,10,], )
paddle.reshape(Tensor([0, 20, 208, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([0, 20, 4, 8],"float32"), list[1,20,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 20, 96],"float32"), list[1,20,4,-1,], )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(104,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(120,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(124,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(132,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(136,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(144,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(152,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(172,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(180,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(184,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(204,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(208,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(224,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(232,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(236,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(24,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(244,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(256,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(268,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(32,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(36,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(84,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float16"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(104,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(120,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(124,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(132,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(136,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(144,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(152,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(172,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(180,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(184,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(204,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(208,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(224,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(232,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(236,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(24,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(244,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(256,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(268,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(32,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(36,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(9,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([0, 200, 272],"float32"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([0, 200, 280],"float16"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([0, 200, 280],"float16"), shape=tuple(156,-1,), )
paddle.reshape(Tensor([0, 200, 280],"float32"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([0, 200, 280],"float32"), shape=tuple(156,-1,), )
paddle.reshape(Tensor([0, 200, 288],"float16"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([0, 200, 288],"float16"), shape=tuple(168,-1,), )
paddle.reshape(Tensor([0, 200, 288],"float32"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([0, 200, 288],"float32"), shape=tuple(168,-1,), )
paddle.reshape(Tensor([0, 200, 296],"float16"), shape=tuple(148,-1,), )
paddle.reshape(Tensor([0, 200, 296],"float32"), shape=tuple(148,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(100,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(164,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(176,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(188,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(192,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(196,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(200,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(216,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(220,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(260,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(272,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(28,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(280,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(296,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(332,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(100,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(164,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(176,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(188,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(192,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(196,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(200,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(216,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(220,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(260,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(272,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(28,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(280,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(296,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(332,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([0, 200, 304],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float16"), shape=tuple(228,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float16"), shape=tuple(304,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float16"), shape=tuple(360,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float16"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float32"), shape=tuple(228,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float32"), shape=tuple(304,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float32"), shape=tuple(360,-1,), )
paddle.reshape(Tensor([0, 200, 336],"float32"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([0, 2048, 1, 1],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([0, 2048, 1, 1],"float16"), list[-1,8,2048,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 2048, 1, 1],"float16"), shape=list[-1,2048,], )
paddle.reshape(Tensor([0, 2048, 1, 1],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([0, 2048, 1, 1],"float32"), list[-1,8,2048,], )
paddle.reshape(Tensor([0, 2048, 1, 1],"float32"), shape=list[-1,2048,], )
paddle.reshape(Tensor([0, 2048],"float32"), shape=list[-1,2048,], )
paddle.reshape(Tensor([0, 209, 50000],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([0, 20],"bool"), list[-1,20,1,], )
paddle.reshape(Tensor([0, 21, 264, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([0, 21, 32],"float32"), tuple(13,-1,4,8,), )
paddle.reshape(Tensor([0, 22, 200, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([0, 22, 200, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([0, 22, 248, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([0, 22, 256, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([0, 22, 264, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([0, 22, 56000],"float16"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([0, 22, 56000],"float32"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([0, 24, 248, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([0, 24, 6626],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([0, 25, 25, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([0, 25, 25, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([0, 25, 264, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([0, 25, 288, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([0, 25, 336, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([0, 25, 76032],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([0, 256, 1, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([0, 256, 1, 2],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([0, 256, 1, 2],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([0, 256, 12, 12],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([0, 256, 12, 12],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([0, 256, 12, 12],"float32"), shape=tuple(4,256,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 256, 16, 16],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([0, 256, 256],"float32"), shape=tuple(-1,256,), )
paddle.reshape(Tensor([0, 256],"float16"), shape=list[4,-1,256,], )
paddle.reshape(Tensor([0, 256],"float32"), shape=list[1,-1,256,], )
paddle.reshape(Tensor([0, 256],"float32"), shape=list[4,-1,256,], )
paddle.reshape(Tensor([0, 272, 272],"float16"), shape=tuple(288,-1,), )
paddle.reshape(Tensor([0, 272, 272],"float32"), shape=tuple(288,-1,), )
paddle.reshape(Tensor([0, 272, 304],"float16"), shape=tuple(240,-1,), )
paddle.reshape(Tensor([0, 272, 304],"float32"), shape=tuple(240,-1,), )
paddle.reshape(Tensor([0, 272, 336],"float16"), shape=tuple(320,-1,), )
paddle.reshape(Tensor([0, 272, 336],"float32"), shape=tuple(320,-1,), )
paddle.reshape(Tensor([0, 28, 7],"int32"), tuple(-1,7,), )
paddle.reshape(Tensor([0, 280, 336],"float16"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([0, 280, 336],"float32"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([0, 2],"float32"), shape=list[5,-1,], )
paddle.reshape(Tensor([0, 3, 1, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([0, 3, 1, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([0, 3, 1, 10],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([0, 3, 1, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([0, 3, 10],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([0, 3, 1],"float32"), shape=list[-1,3,], )
paddle.reshape(Tensor([0, 3, 256, 256],"float32"), list[-1,196608,], )
paddle.reshape(Tensor([0, 3, 3, 2],"float64"), list[-1,], )
paddle.reshape(Tensor([0, 3, 3, 3, 3],"float32"), tuple(5,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 3, 3, 3],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([0, 3, 3, 3],"float32"), tuple(2,-1,), )
paddle.reshape(Tensor([0, 3, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([0, 3, 32, 32],"float32"), list[-1,3072,], )
paddle.reshape(Tensor([0, 3, 3],"float32"), list[3,-1,3,], )
paddle.reshape(Tensor([0, 3, 4],"complex128"), tuple(2,-1,), )
paddle.reshape(Tensor([0, 3, 4],"complex64"), tuple(2,-1,), )
paddle.reshape(Tensor([0, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([0, 3, 5, 3],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([0, 3, 7, 32],"float32"), tuple(13,-1,32,), )
paddle.reshape(Tensor([0, 30, 107520],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([0, 30, 336, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([0, 304, 200],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([0, 304, 304],"float16"), shape=tuple(308,-1,), )
paddle.reshape(Tensor([0, 304, 304],"float32"), shape=tuple(308,-1,), )
paddle.reshape(Tensor([0, 304, 336],"float16"), shape=tuple(364,-1,), )
paddle.reshape(Tensor([0, 304, 336],"float16"), shape=tuple(372,-1,), )
paddle.reshape(Tensor([0, 304, 336],"float32"), shape=tuple(364,-1,), )
paddle.reshape(Tensor([0, 304, 336],"float32"), shape=tuple(372,-1,), )
paddle.reshape(Tensor([0, 30],"float32"), list[-1,3,10,], )
paddle.reshape(Tensor([0, 32, 15, 15],"float32"), shape=list[12,32,-1,], )
paddle.reshape(Tensor([0, 32, 2, 16],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([0, 3200, 2],"float16"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([0, 3200, 2],"float32"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([0, 32],"bool"), list[-1,32,1,], )
paddle.reshape(Tensor([0, 32],"float32"), list[16,-1,], )
paddle.reshape(Tensor([0, 32],"float32"), shape=list[-1,4,32,], )
paddle.reshape(Tensor([0, 32],"float32"), shape=list[-1,8,32,], )
paddle.reshape(Tensor([0, 32],"float64"), shape=list[-1,4,32,], )
paddle.reshape(Tensor([0, 32],"int64"), shape=list[-1,1,], )
paddle.reshape(Tensor([0, 35, 200, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([0, 39, 232, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([0, 39, 304, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([0, 39, 80256],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([0, 3],"float32"), list[1,1,1,-1,1,3,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 3],"float64"), shape=list[4,-1,], )
paddle.reshape(Tensor([0, 3],"int32"), shape=tuple(-1,1,), )
paddle.reshape(Tensor([0, 3],"int64"), list[-1,1,], )
paddle.reshape(Tensor([0, 4, 100],"float64"), list[-1,400,], )
paddle.reshape(Tensor([0, 4, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([0, 4, 10],"float32"), shape=list[1,-1,10,], )
paddle.reshape(Tensor([0, 4, 16],"float32"), list[-1,64,], )
paddle.reshape(Tensor([0, 4, 16],"float32"), shape=list[-1,16,], )
paddle.reshape(Tensor([0, 4, 19, 34, 2],"float16"), list[-1,2,], )
paddle.reshape(Tensor([0, 4, 19, 34, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([0, 4, 19, 34, 4],"float16"), list[-1,4,], )
paddle.reshape(Tensor([0, 4, 200, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([0, 4, 21, 8],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([0, 4, 288, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([0, 4, 2],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([0, 4, 32],"float32"), list[-1,128,], )
paddle.reshape(Tensor([0, 4, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([0, 4, 4, 4, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([0, 4, 4],"float32"), tuple(-1,4,), )
paddle.reshape(Tensor([0, 4, 5, 1, 8],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([0, 4, 5, 1, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([0, 4, 5, 5, 1, 8],"float32"), list[13,4,5,5,-1,], )
paddle.reshape(Tensor([0, 4, 5, 5, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([0, 4, 5, 6, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([0, 4, 512],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([0, 4, 5],"float32"), list[1,-1,], )
paddle.reshape(Tensor([0, 4, 5],"float32"), list[2,-1,], )
paddle.reshape(Tensor([0, 4, 5],"float32"), list[3,-1,], )
paddle.reshape(Tensor([0, 4, 5],"float32"), list[4,-1,], )
paddle.reshape(Tensor([0, 4, 5],"float32"), list[5,-1,], )
paddle.reshape(Tensor([0, 4, 6, 5, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([0, 4, 6, 6, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([0, 4, 7, 8],"float32"), list[13,4,7,1,-1,], )
paddle.reshape(Tensor([0, 4, 7, 8],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([0, 4, 7, 8],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([0, 4, 8, 32],"float32"), shape=list[13,32,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 40, 6, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([0, 400],"float16"), list[-1,8,400,], )
paddle.reshape(Tensor([0, 400],"float32"), list[-1,8,400,], )
paddle.reshape(Tensor([0, 400],"float32"), shape=list[-1,400,], )
paddle.reshape(Tensor([0, 40],"float16"), shape=list[-1,20,2,], )
paddle.reshape(Tensor([0, 40],"float32"), shape=list[-1,20,2,], )
paddle.reshape(Tensor([0, 4],"float16"), list[1,-1,4,], )
paddle.reshape(Tensor([0, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([0, 4],"float32"), list[1,-1,4,], )
paddle.reshape(Tensor([0, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([0, 5, 4],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([0, 5, 6, 6, 6],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([0, 5, 7, 7],"bool"), list[-1,1,], )
paddle.reshape(Tensor([0, 5, 7, 7],"bool"), list[-1,], )
paddle.reshape(Tensor([0, 5, 7, 7],"float32"), list[8,-1,], )
paddle.reshape(Tensor([0, 50, 4, 4],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([0, 50, 53, 53],"float32"), shape=list[-1,140450,], )
paddle.reshape(Tensor([0, 501, 30],"float32"), list[-1,30,], )
paddle.reshape(Tensor([0, 512, 1, 1],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([0, 512, 1024],"float16"), list[-1,1024,], )
paddle.reshape(Tensor([0, 512, 1024],"float32"), list[-1,1024,], )
paddle.reshape(Tensor([0, 512, 512, 150],"float32"), list[-1,150,], )
paddle.reshape(Tensor([0, 512, 512, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([0, 52, 7, 14],"float32"), tuple(2,13,4,7,-1,), )
paddle.reshape(Tensor([0, 5],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([0, 6, 200, 304],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([0, 6, 224, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([0, 6, 280, 304],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([0, 6, 304, 200],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([0, 6, 32, 32],"float32"), list[2,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 6, 328, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([0, 6, 60800],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([0, 6, 60800],"float32"), shape=tuple(-1,304,200,), )
paddle.reshape(Tensor([0, 6, 68096],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([0, 6, 89216],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([0, 64, 1],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([0, 64, 3],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([0, 64, 3],"float32"), tuple(128,-1,), )
paddle.reshape(Tensor([0, 640, 640],"float32"), shape=list[-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0, 6],"float32"), shape=list[-1,6,], )
paddle.reshape(Tensor([0, 7, 32],"float32"), list[13,-1,4,8,], )
paddle.reshape(Tensor([0, 7, 32],"float32"), list[13,7,4,-1,], )
paddle.reshape(Tensor([0, 7, 32],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([0, 7, 4, 8],"float32"), list[13,7,-1,], )
paddle.reshape(Tensor([0, 7, 4, 8],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([0, 7, 7],"float32"), tuple(13,4,7,-1,), )
paddle.reshape(Tensor([0, 7, 8],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([0, 7, 8],"float32"), tuple(13,4,-1,8,), )
paddle.reshape(Tensor([0, 7, 8],"float32"), tuple(2,-1,7,8,), )
paddle.reshape(Tensor([0, 7, 96],"float32"), list[13,7,4,-1,], )
paddle.reshape(Tensor([0, 7, 96],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([0, 7],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([0, 7],"float32"), tuple(-1,7,), )
paddle.reshape(Tensor([0, 7],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([0, 8, 16, 2],"float32"), list[-1,8,32,], )
paddle.reshape(Tensor([0, 8, 3, 224, 224],"float32"), list[-1,3,224,224,], )
paddle.reshape(Tensor([0, 8, 32],"float32"), list[-1,256,], )
paddle.reshape(Tensor([0, 8, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([0, 80, 1],"float32"), tuple(128,-1,), )
paddle.reshape(Tensor([0, 80, 2, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([0, 80, 5],"float32"), tuple(80,-1,), )
paddle.reshape(Tensor([0, 8],"float32"), list[-1,1,8,], )
paddle.reshape(Tensor([0, 8],"float32"), list[-1,3,8,], )
paddle.reshape(Tensor([0, 9, 200, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([0, 9, 200, 304],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([0, 9, 200, 312],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([0, 9, 304, 200],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([0, 9, 54400],"float32"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([0, 9, 60800],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([0, 9, 60800],"float32"), shape=tuple(-1,304,200,), )
paddle.reshape(Tensor([0, 9, 62400],"float32"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([0, 96, 16, 16],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([0, 96, 16, 16],"float32"), list[24,96,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0],"float16"), shape=list[-1,128,], )
paddle.reshape(Tensor([0],"float16"), tuple(128,-1,), )
paddle.reshape(Tensor([0],"float32"), list[-1,1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0],"float32"), list[-1,24,], )
paddle.reshape(Tensor([0],"float32"), list[-1,3,], )
paddle.reshape(Tensor([0],"float32"), list[-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([0],"float32"), shape=list[-1,4,], )
paddle.reshape(Tensor([0],"float32"), shape=list[1,-1,], )
paddle.reshape(Tensor([0],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([0],"float32"), tuple(128,-1,), )
paddle.reshape(Tensor([0],"float64"), list[-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([0],"float64"), shape=list[1,-1,], )
paddle.reshape(Tensor([0],"float64"), tuple(-1,1,), )
paddle.reshape(Tensor([0],"float64"), tuple(1,-1,), )
paddle.reshape(Tensor([0],"int32"), shape=tuple(-1,5,), )
paddle.reshape(Tensor([0],"int32"), shape=tuple(-1,5,1,), )
paddle.reshape(Tensor([0],"int64"), list[-1,1,], )
paddle.reshape(Tensor([0],"int64"), list[1,-1,], )
paddle.reshape(Tensor([0],"int64"), list[1,-1,], name="Categorical_probs", )
paddle.reshape(Tensor([0],"int64"), list[1,1,-1,], name="Categorical_probs", )
paddle.reshape(Tensor([0],"int64"), tuple(-1,1,), )
paddle.reshape(Tensor([1, 0, 1, 11],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 0, 1, 1],"float32"), list[-1,10,], )
paddle.reshape(Tensor([1, 0, 1, 1],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([1, 0, 1, 1],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([1, 0, 1, 1],"float32"), shape=list[-1,2048,], )
paddle.reshape(Tensor([1, 0, 1, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([1, 0, 1, 1],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([1, 0, 1, 3],"float32"), list[-1,3,], )
paddle.reshape(Tensor([1, 0, 1, 7],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 0, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([1, 0, 10],"float32"), shape=list[1,-1,10,], )
paddle.reshape(Tensor([1, 0, 12, 12],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([1, 0, 12, 2],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([1, 0, 14, 12],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([1, 0, 14, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([1, 0, 15, 12],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([1, 0, 15, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([1, 0, 16, 16],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([1, 0, 16, 2],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([1, 0, 1],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 0, 200, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([1, 0, 200, 304],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([1, 0, 200, 312],"float32"), shape=list[-1,200,312,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([1, 0, 256, 256],"float32"), list[-1,196608,], )
paddle.reshape(Tensor([1, 0, 256],"float32"), shape=tuple(-1,256,), )
paddle.reshape(Tensor([1, 0, 2],"float32"), list[-1,], )
paddle.reshape(Tensor([1, 0, 304, 200],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([1, 0, 32, 32],"float32"), list[-1,3072,], )
paddle.reshape(Tensor([1, 0, 32],"float32"), list[1,1,4,-1,], )
paddle.reshape(Tensor([1, 0, 32],"float32"), list[1,14,4,-1,], )
paddle.reshape(Tensor([1, 0, 3],"float32"), list[-1,], )
paddle.reshape(Tensor([1, 0, 3],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 0, 4, 8],"float32"), list[1,20,-1,], )
paddle.reshape(Tensor([1, 0, 53, 53],"float32"), shape=list[-1,140450,], )
paddle.reshape(Tensor([1, 0, 54400],"float32"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([1, 0, 60800],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([1, 0, 60800],"float32"), shape=tuple(-1,304,200,), )
paddle.reshape(Tensor([1, 0, 62400],"float32"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([1, 0, 96],"float32"), list[1,20,4,-1,], )
paddle.reshape(Tensor([1, 0],"float32"), list[-1,10,1,1,], )
paddle.reshape(Tensor([1, 0],"float32"), list[-1,], )
paddle.reshape(Tensor([1, 0],"float32"), list[1,-1,4,], )
paddle.reshape(Tensor([1, 0],"float32"), list[1,1,1,-1,1,3,], )
paddle.reshape(Tensor([1, 0],"float32"), shape=list[-1,6,], )
paddle.reshape(Tensor([1, 0],"int64"), shape=list[-1,], )
paddle.reshape(Tensor([1, 1, 0, 11],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 1, 0, 3],"float32"), list[-1,3,], )
paddle.reshape(Tensor([1, 1, 0, 7],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 1, 0],"float32"), list[1,1,4,-1,], )
paddle.reshape(Tensor([1, 1, 1, 0],"float32"), list[-1,3,], )
paddle.reshape(Tensor([1, 1, 1, 0],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 10, 0, 12],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([1, 10, 0, 1],"float32"), list[-1,10,], )
paddle.reshape(Tensor([1, 10, 0, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([1, 10, 1, 0],"float32"), list[-1,10,], )
paddle.reshape(Tensor([1, 10, 14, 0],"float32"), shape=tuple(1,-1,1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([1, 10, 14, 0],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([1, 10, 15, 0],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([1, 10, 15, 0],"float32"), shape=tuple(1,-1,4,), )
paddle.reshape(Tensor([1, 1024, 0, 1],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([1, 1024, 1, 0],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([1, 12, 0, 2],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([1, 12, 12, 0],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([1, 1280, 0, 1],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([1, 1280, 1, 0],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([1, 14, 0],"float32"), list[1,14,4,-1,], )
paddle.reshape(Tensor([1, 144, 0],"float32"), shape=tuple(-1,256,), )
paddle.reshape(Tensor([1, 16, 0, 2],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([1, 16, 16, 0],"float32"), shape=tuple(-1,2,), )
paddle.reshape(Tensor([1, 2, 0],"float32"), list[-1,], )
paddle.reshape(Tensor([1, 20, 0, 8],"float32"), list[1,20,-1,], )
paddle.reshape(Tensor([1, 20, 0],"float32"), list[1,20,4,-1,], )
paddle.reshape(Tensor([1, 20, 4, 0],"float32"), list[1,20,-1,], )
paddle.reshape(Tensor([1, 2048, 0, 1],"float32"), shape=list[-1,2048,], )
paddle.reshape(Tensor([1, 2048, 1, 0],"float32"), shape=list[-1,2048,], )
paddle.reshape(Tensor([1, 256, 0, 12],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([1, 256, 0, 16],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([1, 256, 0, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([1, 256, 0],"float32"), shape=tuple(-1,256,), )
paddle.reshape(Tensor([1, 256, 1, 0],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([1, 256, 12, 0],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([1, 256, 16, 0],"float32"), shape=tuple(1,256,-1,), )
paddle.reshape(Tensor([1, 3, 0, 256],"float32"), list[-1,196608,], )
paddle.reshape(Tensor([1, 3, 0, 32],"float32"), list[-1,3072,], )
paddle.reshape(Tensor([1, 3, 256, 0],"float32"), list[-1,196608,], )
paddle.reshape(Tensor([1, 3, 32, 0],"float32"), list[-1,3072,], )
paddle.reshape(Tensor([1, 4, 0],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([1, 4, 0],"float32"), shape=list[1,-1,10,], )
paddle.reshape(Tensor([1, 50, 0, 53],"float32"), shape=list[-1,140450,], )
paddle.reshape(Tensor([1, 50, 53, 0],"float32"), shape=list[-1,140450,], )
paddle.reshape(Tensor([1, 512, 0, 1],"float32"), shape=list[-1,512,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([1, 512, 1, 0],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([1, 6, 0, 200],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([1, 6, 0, 304],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([1, 6, 0],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([1, 6, 0],"float32"), shape=tuple(-1,304,200,), )
paddle.reshape(Tensor([1, 6, 200, 0],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([1, 6, 304, 0],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([1, 64, 0],"float32"), tuple(1,-1,), )
paddle.reshape(Tensor([1, 9, 0, 200],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([1, 9, 0, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([1, 9, 0, 304],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([1, 9, 0, 312],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([1, 9, 0],"float32"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([1, 9, 0],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([1, 9, 0],"float32"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([1, 9, 0],"float32"), shape=tuple(-1,304,200,), )
paddle.reshape(Tensor([1, 9, 200, 0],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([1, 9, 200, 0],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([1, 9, 200, 0],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([1, 9, 304, 0],"float32"), shape=list[-1,304,200,], )
paddle.reshape(Tensor([10, 0],"float32"), list[-1,1,], )
paddle.reshape(Tensor([100, 0, 304],"float16"), shape=tuple(100,-1,), )
paddle.reshape(Tensor([100, 0, 304],"float32"), shape=tuple(100,-1,), )
paddle.reshape(Tensor([100, 0],"float16"), shape=list[4,-1,256,], )
paddle.reshape(Tensor([100, 0],"float32"), shape=list[4,-1,256,], )
paddle.reshape(Tensor([100, 200, 0],"float16"), shape=tuple(100,-1,), )
paddle.reshape(Tensor([100, 200, 0],"float32"), shape=tuple(100,-1,), )
paddle.reshape(Tensor([1000, 0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([1000, 0],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([1000, 0],"int64"), tuple(-1,1,), )
paddle.reshape(Tensor([1000, 3, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([10044, 0],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([1008, 0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([1008, 0],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([1008, 0],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([1008, 3, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([1024, 0, 1000],"float16"), shape=list[-1,1000,], )
paddle.reshape(Tensor([1024, 0, 1000],"float32"), shape=list[-1,1000,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([1024, 0, 128],"float32"), shape=list[-1,32,128,], )
paddle.reshape(Tensor([1024, 1, 0],"float16"), shape=list[-1,1000,], )
paddle.reshape(Tensor([1024, 1, 0],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([1024, 1, 0],"float32"), shape=list[-1,32,128,], )
paddle.reshape(Tensor([104, 0, 272],"float16"), shape=tuple(104,-1,), )
paddle.reshape(Tensor([104, 0, 272],"float32"), shape=tuple(104,-1,), )
paddle.reshape(Tensor([104, 0, 8],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([104, 0, 8],"float32"), tuple(2,-1,7,8,), )
paddle.reshape(Tensor([104, 200, 0],"float16"), shape=tuple(104,-1,), )
paddle.reshape(Tensor([104, 200, 0],"float32"), shape=tuple(104,-1,), )
paddle.reshape(Tensor([104, 7, 0],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([104, 7, 0],"float32"), tuple(2,-1,7,8,), )
paddle.reshape(Tensor([108, 0, 272],"float16"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([108, 0, 272],"float32"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([108, 200, 0],"float16"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([108, 200, 0],"float32"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([11, 0, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([11, 1, 0],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([112, 0, 272],"float16"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([112, 0, 272],"float32"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([112, 200, 0],"float16"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([112, 200, 0],"float32"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([116, 0, 272],"float16"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([116, 0, 272],"float32"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([116, 200, 0],"float16"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([116, 200, 0],"float32"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([12, 0, 15, 15],"float32"), shape=list[12,32,-1,], )
paddle.reshape(Tensor([12, 0, 19, 34, 2],"float16"), list[-1,2,], )
paddle.reshape(Tensor([12, 0, 19, 34, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([12, 0, 19, 34, 4],"float16"), list[-1,4,], )
paddle.reshape(Tensor([12, 0, 304],"float16"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([12, 0, 304],"float32"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([12, 0, 34, 512],"float16"), list[-1,512,], )
paddle.reshape(Tensor([12, 0, 34, 512],"float32"), list[-1,512,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([12, 0],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([12, 0],"float32"), shape=list[-1,3,], )
paddle.reshape(Tensor([12, 0],"float64"), shape=list[-1,3,], )
paddle.reshape(Tensor([12, 19, 0, 512],"float16"), list[-1,512,], )
paddle.reshape(Tensor([12, 19, 0, 512],"float32"), list[-1,512,], )
paddle.reshape(Tensor([12, 19, 34, 0],"float16"), list[-1,512,], )
paddle.reshape(Tensor([12, 19, 34, 0],"float32"), list[-1,512,], )
paddle.reshape(Tensor([12, 200, 0],"float16"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([12, 200, 0],"float32"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([12, 32, 0, 15],"float32"), shape=list[12,32,-1,], )
paddle.reshape(Tensor([12, 32, 15, 0],"float32"), shape=list[12,32,-1,], )
paddle.reshape(Tensor([12, 4, 0, 34, 2],"float16"), list[-1,2,], )
paddle.reshape(Tensor([12, 4, 0, 34, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([12, 4, 0, 34, 4],"float16"), list[-1,4,], )
paddle.reshape(Tensor([12, 4, 19, 0, 2],"float16"), list[-1,2,], )
paddle.reshape(Tensor([12, 4, 19, 0, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([12, 4, 19, 0, 4],"float16"), list[-1,4,], )
paddle.reshape(Tensor([12, 4, 19, 34, 0],"float16"), list[-1,2,], )
paddle.reshape(Tensor([12, 4, 19, 34, 0],"float16"), list[-1,4,], )
paddle.reshape(Tensor([12, 4, 19, 34, 0],"float32"), list[-1,2,], )
paddle.reshape(Tensor([120, 0, 272],"float16"), shape=tuple(120,-1,), )
paddle.reshape(Tensor([120, 0, 272],"float32"), shape=tuple(120,-1,), )
paddle.reshape(Tensor([120, 200, 0],"float16"), shape=tuple(120,-1,), )
paddle.reshape(Tensor([120, 200, 0],"float32"), shape=tuple(120,-1,), )
paddle.reshape(Tensor([124, 0, 272],"float16"), shape=tuple(124,-1,), )
paddle.reshape(Tensor([124, 0, 272],"float32"), shape=tuple(124,-1,), )
paddle.reshape(Tensor([124, 0],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([124, 200, 0],"float16"), shape=tuple(124,-1,), )
paddle.reshape(Tensor([124, 200, 0],"float32"), shape=tuple(124,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([128, 0, 1, 1],"float16"), list[-1,8,2048,], )
paddle.reshape(Tensor([128, 0, 1, 1],"float32"), list[-1,16,1280,], )
paddle.reshape(Tensor([128, 0, 1, 1],"float32"), list[-1,8,2048,], )
paddle.reshape(Tensor([128, 0, 102],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([128, 0, 159],"float32"), shape=list[-1,159,], )
paddle.reshape(Tensor([128, 0, 192612],"float16"), shape=list[-1,192612,], )
paddle.reshape(Tensor([128, 0, 192612],"float32"), shape=list[-1,192612,], )
paddle.reshape(Tensor([128, 0, 1],"float32"), tuple(128,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([128, 0, 288],"float16"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([128, 0, 288],"float32"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([128, 0, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([128, 0, 3],"float32"), tuple(128,-1,), )
paddle.reshape(Tensor([128, 0, 4, 4],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([128, 0, 768],"float16"), list[-1,768,], )
paddle.reshape(Tensor([128, 0, 768],"float32"), list[-1,768,], )
paddle.reshape(Tensor([128, 0, 784],"float32"), shape=list[128,-1,], )
paddle.reshape(Tensor([128, 0],"float16"), shape=list[-1,1000,], )
paddle.reshape(Tensor([128, 0],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([128, 1, 0],"float16"), shape=list[-1,192612,], )
paddle.reshape(Tensor([128, 1, 0],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([128, 1, 0],"float32"), shape=list[-1,159,], )
paddle.reshape(Tensor([128, 1, 0],"float32"), shape=list[-1,192612,], )
paddle.reshape(Tensor([128, 1, 0],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([128, 1, 0],"float32"), shape=list[128,-1,], )
paddle.reshape(Tensor([128, 128, 0],"float16"), list[-1,768,], )
paddle.reshape(Tensor([128, 128, 0],"float32"), list[-1,768,], )
paddle.reshape(Tensor([128, 1280, 0, 1],"float32"), list[-1,16,1280,], )
paddle.reshape(Tensor([128, 1280, 1, 0],"float32"), list[-1,16,1280,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([128, 200, 0],"float16"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([128, 200, 0],"float32"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([128, 2048, 0, 1],"float16"), list[-1,8,2048,], )
paddle.reshape(Tensor([128, 2048, 0, 1],"float32"), list[-1,8,2048,], )
paddle.reshape(Tensor([128, 2048, 1, 0],"float16"), list[-1,8,2048,], )
paddle.reshape(Tensor([128, 2048, 1, 0],"float32"), list[-1,8,2048,], )
paddle.reshape(Tensor([128, 50, 0, 4],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([128, 50, 4, 0],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([128, 64, 0],"float32"), tuple(128,-1,), )
paddle.reshape(Tensor([128, 80, 0],"float32"), tuple(128,-1,), )
paddle.reshape(Tensor([12988, 0],"bool"), list[-1,32,1,], )
paddle.reshape(Tensor([13, 0, 128],"float32"), list[13,-1,32,], )
paddle.reshape(Tensor([13, 0, 2, 16],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([13, 0, 21, 8],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([13, 0, 32, 16],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([13, 0, 32],"float32"), list[13,-1,4,8,], )
paddle.reshape(Tensor([13, 0, 32],"float32"), list[13,7,4,-1,], )
paddle.reshape(Tensor([13, 0, 32],"float32"), tuple(13,-1,4,8,), )
paddle.reshape(Tensor([13, 0, 32],"float32"), tuple(13,2,7,-1,), )
paddle.reshape(Tensor([13, 0, 32],"int64"), shape=list[13,1,-1,4,], )
paddle.reshape(Tensor([13, 0, 32],"int64"), shape=list[13,2,-1,4,], )
paddle.reshape(Tensor([13, 0, 4, 8],"float32"), list[13,7,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([13, 0, 5, 1, 8],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([13, 0, 5, 5, 1, 8],"float32"), list[13,4,5,5,-1,], )
paddle.reshape(Tensor([13, 0, 64, 16],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([13, 0, 64],"int64"), shape=list[13,2,-1,4,], )
paddle.reshape(Tensor([13, 0, 7, 32],"float32"), tuple(13,-1,32,), )
paddle.reshape(Tensor([13, 0, 7, 8],"float32"), list[13,4,7,1,-1,], )
paddle.reshape(Tensor([13, 0, 7, 8],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([13, 0, 7],"int32"), tuple(-1,7,), )
paddle.reshape(Tensor([13, 0, 8, 32],"float32"), shape=list[13,32,-1,], )
paddle.reshape(Tensor([13, 0, 8, 64],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([13, 0, 96],"float32"), list[13,7,4,-1,], )
paddle.reshape(Tensor([13, 1, 0, 64],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([13, 1, 0],"float32"), list[13,-1,32,], )
paddle.reshape(Tensor([13, 1, 0],"int64"), shape=list[13,1,-1,4,], )
paddle.reshape(Tensor([13, 1, 8, 0],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([13, 14, 0],"float32"), tuple(13,2,7,-1,), )
paddle.reshape(Tensor([13, 16, 0, 16],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([13, 16, 2, 0],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([13, 2, 0, 16],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([13, 2, 0, 64],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([13, 2, 0],"int64"), shape=list[13,2,-1,4,], )
paddle.reshape(Tensor([13, 2, 32, 0],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([13, 2, 64, 0],"float32"), shape=list[13,2,-1,4,16,], )
paddle.reshape(Tensor([13, 2, 8, 0],"float32"), shape=list[13,-1,64,], )
paddle.reshape(Tensor([13, 21, 0],"float32"), tuple(13,-1,4,8,), )
paddle.reshape(Tensor([13, 28, 0],"int32"), tuple(-1,7,), )
paddle.reshape(Tensor([13, 3, 0, 32],"float32"), tuple(13,-1,32,), )
paddle.reshape(Tensor([13, 3, 7, 0],"float32"), tuple(13,-1,32,), )
paddle.reshape(Tensor([13, 32, 0, 16],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([13, 32, 2, 0],"float32"), shape=list[13,-1,32,], )
paddle.reshape(Tensor([13, 4, 0, 1, 8],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([13, 4, 0, 32],"float32"), shape=list[13,32,-1,], )
paddle.reshape(Tensor([13, 4, 0, 5, 1, 8],"float32"), list[13,4,5,5,-1,], )
paddle.reshape(Tensor([13, 4, 0, 8],"float32"), list[13,4,7,1,-1,], )
paddle.reshape(Tensor([13, 4, 0, 8],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([13, 4, 21, 0],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([13, 4, 5, 0, 1, 8],"float32"), list[13,4,5,5,-1,], )
paddle.reshape(Tensor([13, 4, 5, 0, 8],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([13, 4, 5, 1, 0],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([13, 4, 5, 5, 0, 8],"float32"), list[13,4,5,5,-1,], )
paddle.reshape(Tensor([13, 4, 5, 5, 1, 0],"float32"), list[13,4,5,5,-1,], )
paddle.reshape(Tensor([13, 4, 7, 0],"float32"), list[13,4,7,1,-1,], )
paddle.reshape(Tensor([13, 4, 7, 0],"float32"), tuple(52,-1,8,), )
paddle.reshape(Tensor([13, 4, 8, 0],"float32"), shape=list[13,32,-1,], )
paddle.reshape(Tensor([13, 7, 0, 8],"float32"), list[13,7,-1,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([13, 7, 0],"float32"), list[13,-1,4,8,], )
paddle.reshape(Tensor([13, 7, 0],"float32"), list[13,7,4,-1,], )
paddle.reshape(Tensor([13, 7, 4, 0],"float32"), list[13,7,-1,], )
paddle.reshape(Tensor([132, 0, 272],"float16"), shape=tuple(132,-1,), )
paddle.reshape(Tensor([132, 0, 272],"float32"), shape=tuple(132,-1,), )
paddle.reshape(Tensor([132, 200, 0],"float16"), shape=tuple(132,-1,), )
paddle.reshape(Tensor([132, 200, 0],"float32"), shape=tuple(132,-1,), )
paddle.reshape(Tensor([136, 0, 272],"float16"), shape=tuple(136,-1,), )
paddle.reshape(Tensor([136, 0, 272],"float32"), shape=tuple(136,-1,), )
paddle.reshape(Tensor([136, 200, 0],"float16"), shape=tuple(136,-1,), )
paddle.reshape(Tensor([136, 200, 0],"float32"), shape=tuple(136,-1,), )
paddle.reshape(Tensor([14, 0, 32],"float32"), shape=list[14,-1,4,8,], )
paddle.reshape(Tensor([14, 0, 50000],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([14, 10, 0],"float32"), shape=list[14,-1,4,8,], )
paddle.reshape(Tensor([14, 11, 0],"float32"), shape=list[14,-1,4,8,], )
paddle.reshape(Tensor([14, 209, 0],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([140, 0, 280],"float16"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([140, 0, 280],"float32"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([140, 200, 0],"float16"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([140, 200, 0],"float32"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([144, 0, 272],"float16"), shape=tuple(144,-1,), )
paddle.reshape(Tensor([144, 0, 272],"float32"), shape=tuple(144,-1,), )
paddle.reshape(Tensor([144, 200, 0],"float16"), shape=tuple(144,-1,), )
paddle.reshape(Tensor([144, 200, 0],"float32"), shape=tuple(144,-1,), )
paddle.reshape(Tensor([148, 0, 296],"float16"), shape=tuple(148,-1,), )
paddle.reshape(Tensor([148, 0, 296],"float32"), shape=tuple(148,-1,), )
paddle.reshape(Tensor([148, 200, 0],"float16"), shape=tuple(148,-1,), )
paddle.reshape(Tensor([148, 200, 0],"float32"), shape=tuple(148,-1,), )
paddle.reshape(Tensor([15, 0, 4],"float32"), tuple(-1,4,), )
paddle.reshape(Tensor([15, 0],"float16"), list[1,-1,4,], )
paddle.reshape(Tensor([15, 4, 0],"float32"), tuple(-1,4,), )
paddle.reshape(Tensor([152, 0, 272],"float16"), shape=tuple(152,-1,), )
paddle.reshape(Tensor([152, 0, 272],"float32"), shape=tuple(152,-1,), )
paddle.reshape(Tensor([152, 200, 0],"float16"), shape=tuple(152,-1,), )
paddle.reshape(Tensor([152, 200, 0],"float32"), shape=tuple(152,-1,), )
paddle.reshape(Tensor([154, 0, 102],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([154, 1, 0],"float32"), shape=list[-1,102,], )
paddle.reshape(Tensor([156, 0, 280],"float16"), shape=tuple(156,-1,), )
paddle.reshape(Tensor([156, 0, 280],"float32"), shape=tuple(156,-1,), )
paddle.reshape(Tensor([156, 200, 0],"float16"), shape=tuple(156,-1,), )
paddle.reshape(Tensor([156, 200, 0],"float32"), shape=tuple(156,-1,), )
paddle.reshape(Tensor([16, 0, 1, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([16, 0, 128],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([16, 0, 304],"float16"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([16, 0, 304],"float32"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([16, 0, 4],"float32"), shape=list[-1,4,], )
paddle.reshape(Tensor([16, 0, 640],"float32"), shape=list[-1,], )
paddle.reshape(Tensor([16, 0],"float32"), shape=list[-1,2048,], )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([16, 0],"float32"), shape=list[-1,4,16,], )
paddle.reshape(Tensor([16, 0],"float32"), shape=list[-1,4,32,], )
paddle.reshape(Tensor([16, 1, 0],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([16, 1, 0],"float32"), shape=list[-1,4,], )
paddle.reshape(Tensor([16, 1280, 0, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([16, 1280, 1, 0],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([16, 200, 0],"float16"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([16, 200, 0],"float32"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([16, 640, 0],"float32"), shape=list[-1,], )
paddle.reshape(Tensor([160, 0, 272],"float16"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([160, 0, 272],"float32"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([160, 200, 0],"float16"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([160, 200, 0],"float32"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([164, 0, 304],"float16"), shape=tuple(164,-1,), )
paddle.reshape(Tensor([164, 0, 304],"float32"), shape=tuple(164,-1,), )
paddle.reshape(Tensor([164, 200, 0],"float16"), shape=tuple(164,-1,), )
paddle.reshape(Tensor([164, 200, 0],"float32"), shape=tuple(164,-1,), )
paddle.reshape(Tensor([168, 0, 288],"float16"), shape=tuple(168,-1,), )
paddle.reshape(Tensor([168, 0, 288],"float32"), shape=tuple(168,-1,), )
paddle.reshape(Tensor([168, 200, 0],"float16"), shape=tuple(168,-1,), )
paddle.reshape(Tensor([168, 200, 0],"float32"), shape=tuple(168,-1,), )
paddle.reshape(Tensor([170628, 0],"bool"), list[-1,20,1,], )
paddle.reshape(Tensor([172, 0, 272],"float16"), shape=tuple(172,-1,), )
paddle.reshape(Tensor([172, 0, 272],"float32"), shape=tuple(172,-1,), )
paddle.reshape(Tensor([172, 200, 0],"float16"), shape=tuple(172,-1,), )
paddle.reshape(Tensor([172, 200, 0],"float32"), shape=tuple(172,-1,), )
paddle.reshape(Tensor([176, 0, 304],"float16"), shape=tuple(176,-1,), )
paddle.reshape(Tensor([176, 0, 304],"float32"), shape=tuple(176,-1,), )
paddle.reshape(Tensor([176, 200, 0],"float16"), shape=tuple(176,-1,), )
paddle.reshape(Tensor([176, 200, 0],"float32"), shape=tuple(176,-1,), )
paddle.reshape(Tensor([180, 0, 272],"float16"), shape=tuple(180,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([180, 0, 272],"float32"), shape=tuple(180,-1,), )
paddle.reshape(Tensor([180, 200, 0],"float16"), shape=tuple(180,-1,), )
paddle.reshape(Tensor([180, 200, 0],"float32"), shape=tuple(180,-1,), )
paddle.reshape(Tensor([184, 0, 272],"float16"), shape=tuple(184,-1,), )
paddle.reshape(Tensor([184, 0, 272],"float32"), shape=tuple(184,-1,), )
paddle.reshape(Tensor([184, 200, 0],"float16"), shape=tuple(184,-1,), )
paddle.reshape(Tensor([184, 200, 0],"float32"), shape=tuple(184,-1,), )
paddle.reshape(Tensor([188, 0, 304],"float16"), shape=tuple(188,-1,), )
paddle.reshape(Tensor([188, 0, 304],"float32"), shape=tuple(188,-1,), )
paddle.reshape(Tensor([188, 200, 0],"float16"), shape=tuple(188,-1,), )
paddle.reshape(Tensor([188, 200, 0],"float32"), shape=tuple(188,-1,), )
paddle.reshape(Tensor([192, 0, 304],"float16"), shape=tuple(192,-1,), )
paddle.reshape(Tensor([192, 0, 304],"float32"), shape=tuple(192,-1,), )
paddle.reshape(Tensor([192, 200, 0],"float16"), shape=tuple(192,-1,), )
paddle.reshape(Tensor([192, 200, 0],"float32"), shape=tuple(192,-1,), )
paddle.reshape(Tensor([196, 0, 304],"float16"), shape=tuple(196,-1,), )
paddle.reshape(Tensor([196, 0, 304],"float32"), shape=tuple(196,-1,), )
paddle.reshape(Tensor([196, 200, 0],"float16"), shape=tuple(196,-1,), )
paddle.reshape(Tensor([196, 200, 0],"float32"), shape=tuple(196,-1,), )
paddle.reshape(Tensor([1960, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([2, 0, 1, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([2, 0, 1, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([2, 0, 1, 1],"float16"), shape=list[-1,2048,], )
paddle.reshape(Tensor([2, 0, 128],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([2, 0, 132, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([2, 0, 132, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([2, 0, 16, 2],"float32"), list[-1,8,32,], )
paddle.reshape(Tensor([2, 0, 24],"float32"), list[-1,24,], )
paddle.reshape(Tensor([2, 0, 28, 14],"int32"), tuple(-1,14,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 1],"bool"),], axis=1, )
paddle.reshape(Tensor([2, 0, 3, 224, 224],"float32"), list[-1,3,224,224,], )
paddle.reshape(Tensor([2, 0, 3, 2],"float64"), list[-1,], )
paddle.reshape(Tensor([2, 0, 3, 3],"complex128"), list[-1,3,], )
paddle.reshape(Tensor([2, 0, 3, 3],"float32"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 0, 32, 32],"float32"), list[2,-1,], )
paddle.reshape(Tensor([2, 0, 4, 4],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([2, 0, 4, 7, 8],"float32"), tuple(104,7,-1,), )
paddle.reshape(Tensor([2, 0, 4],"complex128"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 0, 4],"complex64"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 0, 60],"float32"), list[-1,60,], )
paddle.reshape(Tensor([2, 0, 7, 14],"float32"), tuple(2,13,4,7,-1,), )
paddle.reshape(Tensor([2, 0, 84, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([2, 0, 84, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([2, 0, 8],"float32"), list[-1,8,], )
paddle.reshape(Tensor([2, 0],"float32"), list[-1,1,8,], )
paddle.reshape(Tensor([2, 0],"float32"), list[6,-1,], )
paddle.reshape(Tensor([2, 0],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([2, 0],"float32"), shape=list[-1,2048,], )
paddle.reshape(Tensor([2, 0],"int32"), shape=tuple(-1,1,), )
paddle.reshape(Tensor([2, 0],"int64"), list[-1,1,], )
paddle.reshape(Tensor([2, 1, 0, 3],"complex128"), list[-1,3,], )
paddle.reshape(Tensor([2, 1, 0],"float32"), list[-1,24,], )
paddle.reshape(Tensor([2, 1, 0],"float32"), list[-1,8,], )
paddle.reshape(Tensor([2, 1, 0],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([2, 1, 3, 0],"complex128"), list[-1,3,], )
paddle.reshape(Tensor([2, 108, 0, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([2, 108, 0, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([2, 108, 132, 0],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([2, 108, 132, 0],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([2, 112, 0, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([2, 112, 0, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([2, 112, 84, 0],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(Tensor([2, 112, 84, 0],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([2, 128, 0],"float32"), list[-1,60,], )
paddle.reshape(Tensor([2, 13, 0, 14],"int32"), tuple(-1,14,), )
paddle.reshape(Tensor([2, 13, 0, 7, 8],"float32"), tuple(104,7,-1,), )
paddle.reshape(Tensor([2, 13, 28, 0],"int32"), tuple(-1,14,), )
paddle.reshape(Tensor([2, 13, 4, 0, 8],"float32"), tuple(104,7,-1,), )
paddle.reshape(Tensor([2, 13, 4, 7, 0],"float32"), tuple(104,7,-1,), )
paddle.concat(list[Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 1],"bool"),Tensor([60000, 0],"bool"),], axis=1, )
paddle.reshape(Tensor([2, 2048, 0, 1],"float16"), shape=list[-1,2048,], )
paddle.reshape(Tensor([2, 2048, 1, 0],"float16"), shape=list[-1,2048,], )
paddle.reshape(Tensor([2, 3, 0, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([2, 3, 0, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([2, 3, 0, 2],"float64"), list[-1,], )
paddle.reshape(Tensor([2, 3, 0, 3],"float32"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 3, 0],"complex128"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 3, 0],"complex64"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 3, 1, 0],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([2, 3, 1, 0],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([2, 3, 3, 0],"float32"), tuple(2,-1,), )
paddle.reshape(Tensor([2, 3, 3, 0],"float64"), list[-1,], )
paddle.reshape(Tensor([2, 50, 0, 4],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([2, 50, 4, 0],"float32"), shape=list[-1,800,], )
paddle.reshape(Tensor([2, 52, 0, 14],"float32"), tuple(2,13,4,7,-1,), )
paddle.reshape(Tensor([2, 52, 7, 0],"float32"), tuple(2,13,4,7,-1,), )
paddle.reshape(Tensor([2, 6, 0, 32],"float32"), list[2,-1,], )
paddle.reshape(Tensor([2, 6, 32, 0],"float32"), list[2,-1,], )
paddle.reshape(Tensor([2, 8, 0, 224, 224],"float32"), list[-1,3,224,224,], )
paddle.reshape(Tensor([2, 8, 0, 2],"float32"), list[-1,8,32,], )
paddle.reshape(Tensor([2, 8, 16, 0],"float32"), list[-1,8,32,], )
paddle.reshape(Tensor([2, 8, 3, 0, 224],"float32"), list[-1,3,224,224,], )
paddle.reshape(Tensor([2, 8, 3, 224, 0],"float32"), list[-1,3,224,224,], )
paddle.reshape(Tensor([20, 0, 272, 128],"float16"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([20, 0, 272, 128],"float32"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([20, 0, 272, 2],"float16"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([20, 0, 272, 2],"float32"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([20, 0, 272, 4],"float16"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([20, 0, 272, 4],"float32"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([20, 0, 304],"float16"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([20, 0, 304],"float32"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([20, 152, 0, 128],"float16"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([20, 152, 0, 128],"float32"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([20, 152, 0, 2],"float16"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([20, 152, 0, 2],"float32"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([20, 152, 0, 4],"float16"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([20, 152, 0, 4],"float32"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([20, 152, 272, 0],"float16"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([20, 152, 272, 0],"float16"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([20, 152, 272, 0],"float16"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([20, 152, 272, 0],"float32"), shape=list[20,-1,128,], )
paddle.reshape(Tensor([20, 152, 272, 0],"float32"), shape=list[20,-1,2,], )
paddle.reshape(Tensor([20, 152, 272, 0],"float32"), shape=list[20,-1,4,], )
paddle.reshape(Tensor([20, 200, 0],"float16"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([20, 200, 0],"float32"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([200, 0, 304],"float16"), shape=tuple(200,-1,), )
paddle.reshape(Tensor([200, 0, 304],"float32"), shape=tuple(200,-1,), )
paddle.reshape(Tensor([200, 200, 0],"float16"), shape=tuple(200,-1,), )
paddle.reshape(Tensor([200, 200, 0],"float32"), shape=tuple(200,-1,), )
paddle.reshape(Tensor([204, 0, 272],"float16"), shape=tuple(204,-1,), )
paddle.reshape(Tensor([204, 0, 272],"float32"), shape=tuple(204,-1,), )
paddle.reshape(Tensor([204, 200, 0],"float16"), shape=tuple(204,-1,), )
paddle.reshape(Tensor([204, 200, 0],"float32"), shape=tuple(204,-1,), )
paddle.reshape(Tensor([208, 0, 272],"float16"), shape=tuple(208,-1,), )
paddle.reshape(Tensor([208, 0, 272],"float32"), shape=tuple(208,-1,), )
paddle.reshape(Tensor([208, 200, 0],"float16"), shape=tuple(208,-1,), )
paddle.reshape(Tensor([208, 200, 0],"float32"), shape=tuple(208,-1,), )
paddle.reshape(Tensor([2080, 0, 8],"float32"), list[52,4,5,2,-1,], )
paddle.reshape(Tensor([2080, 0],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([2080, 1, 0],"float32"), list[52,4,5,2,-1,], )
paddle.reshape(Tensor([21, 0, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([21, 1, 0],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([212, 0, 272],"float16"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([212, 0, 272],"float32"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([212, 200, 0],"float16"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([212, 200, 0],"float32"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([216, 0, 304],"float16"), shape=tuple(216,-1,), )
paddle.reshape(Tensor([216, 0, 304],"float32"), shape=tuple(216,-1,), )
paddle.reshape(Tensor([216, 200, 0],"float16"), shape=tuple(216,-1,), )
paddle.reshape(Tensor([216, 200, 0],"float32"), shape=tuple(216,-1,), )
paddle.reshape(Tensor([220, 0, 304],"float16"), shape=tuple(220,-1,), )
paddle.reshape(Tensor([220, 0, 304],"float32"), shape=tuple(220,-1,), )
paddle.reshape(Tensor([220, 200, 0],"float16"), shape=tuple(220,-1,), )
paddle.reshape(Tensor([220, 200, 0],"float32"), shape=tuple(220,-1,), )
paddle.reshape(Tensor([224, 0, 272],"float16"), shape=tuple(224,-1,), )
paddle.reshape(Tensor([224, 0, 272],"float32"), shape=tuple(224,-1,), )
paddle.reshape(Tensor([224, 200, 0],"float16"), shape=tuple(224,-1,), )
paddle.reshape(Tensor([224, 200, 0],"float32"), shape=tuple(224,-1,), )
paddle.reshape(Tensor([228, 0, 336],"float16"), shape=tuple(228,-1,), )
paddle.reshape(Tensor([228, 0, 336],"float32"), shape=tuple(228,-1,), )
paddle.reshape(Tensor([228, 200, 0],"float16"), shape=tuple(228,-1,), )
paddle.reshape(Tensor([228, 200, 0],"float32"), shape=tuple(228,-1,), )
paddle.reshape(Tensor([232, 0, 272],"float16"), shape=tuple(232,-1,), )
paddle.reshape(Tensor([232, 0, 272],"float32"), shape=tuple(232,-1,), )
paddle.reshape(Tensor([232, 200, 0],"float16"), shape=tuple(232,-1,), )
paddle.reshape(Tensor([232, 200, 0],"float32"), shape=tuple(232,-1,), )
paddle.reshape(Tensor([236, 0, 272],"float16"), shape=tuple(236,-1,), )
paddle.reshape(Tensor([236, 0, 272],"float32"), shape=tuple(236,-1,), )
paddle.reshape(Tensor([236, 200, 0],"float16"), shape=tuple(236,-1,), )
paddle.reshape(Tensor([236, 200, 0],"float32"), shape=tuple(236,-1,), )
paddle.reshape(Tensor([24, 0, 16, 16],"float32"), list[24,96,-1,], )
paddle.reshape(Tensor([24, 0, 272],"float16"), shape=tuple(24,-1,), )
paddle.reshape(Tensor([24, 0, 272],"float32"), shape=tuple(24,-1,), )
paddle.reshape(Tensor([24, 200, 0],"float16"), shape=tuple(24,-1,), )
paddle.reshape(Tensor([24, 200, 0],"float32"), shape=tuple(24,-1,), )
paddle.reshape(Tensor([24, 96, 0, 16],"float32"), list[24,96,-1,], )
paddle.reshape(Tensor([24, 96, 16, 0],"float32"), list[24,96,-1,], )
paddle.reshape(Tensor([240, 0, 304],"float16"), shape=tuple(240,-1,), )
paddle.reshape(Tensor([240, 0, 304],"float32"), shape=tuple(240,-1,), )
paddle.reshape(Tensor([240, 0],"float16"), list[-1,8,400,], )
paddle.reshape(Tensor([240, 0],"float32"), list[-1,8,400,], )
paddle.reshape(Tensor([240, 272, 0],"float16"), shape=tuple(240,-1,), )
paddle.reshape(Tensor([240, 272, 0],"float32"), shape=tuple(240,-1,), )
paddle.reshape(Tensor([244, 0, 272],"float16"), shape=tuple(244,-1,), )
paddle.reshape(Tensor([244, 0, 272],"float32"), shape=tuple(244,-1,), )
paddle.reshape(Tensor([244, 200, 0],"float16"), shape=tuple(244,-1,), )
paddle.reshape(Tensor([244, 200, 0],"float32"), shape=tuple(244,-1,), )
paddle.reshape(Tensor([248, 0, 272],"float16"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([248, 0, 272],"float32"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([248, 200, 0],"float16"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([248, 200, 0],"float32"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([252, 0, 304],"float16"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([252, 0, 304],"float32"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([252, 200, 0],"float16"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([252, 200, 0],"float32"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([256, 0, 272],"float16"), shape=tuple(256,-1,), )
paddle.reshape(Tensor([256, 0, 272],"float32"), shape=tuple(256,-1,), )
paddle.reshape(Tensor([256, 200, 0],"float16"), shape=tuple(256,-1,), )
paddle.reshape(Tensor([256, 200, 0],"float32"), shape=tuple(256,-1,), )
paddle.reshape(Tensor([260, 0, 304],"float16"), shape=tuple(260,-1,), )
paddle.reshape(Tensor([260, 0, 304],"float32"), shape=tuple(260,-1,), )
paddle.reshape(Tensor([260, 200, 0],"float16"), shape=tuple(260,-1,), )
paddle.reshape(Tensor([260, 200, 0],"float32"), shape=tuple(260,-1,), )
paddle.reshape(Tensor([264, 0, 336],"float16"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([264, 0, 336],"float32"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([264, 280, 0],"float16"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([264, 280, 0],"float32"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([268, 0, 272],"float16"), shape=tuple(268,-1,), )
paddle.reshape(Tensor([268, 0, 272],"float32"), shape=tuple(268,-1,), )
paddle.reshape(Tensor([268, 200, 0],"float16"), shape=tuple(268,-1,), )
paddle.reshape(Tensor([268, 200, 0],"float32"), shape=tuple(268,-1,), )
paddle.reshape(Tensor([272, 0, 304],"float16"), shape=tuple(272,-1,), )
paddle.reshape(Tensor([272, 0, 304],"float32"), shape=tuple(272,-1,), )
paddle.reshape(Tensor([272, 200, 0],"float16"), shape=tuple(272,-1,), )
paddle.reshape(Tensor([272, 200, 0],"float32"), shape=tuple(272,-1,), )
paddle.reshape(Tensor([28, 0, 304],"float16"), shape=tuple(28,-1,), )
paddle.reshape(Tensor([28, 0, 304],"float32"), shape=tuple(28,-1,), )
paddle.reshape(Tensor([28, 200, 0],"float16"), shape=tuple(28,-1,), )
paddle.reshape(Tensor([28, 200, 0],"float32"), shape=tuple(28,-1,), )
paddle.reshape(Tensor([280, 0, 304],"float16"), shape=tuple(280,-1,), )
paddle.reshape(Tensor([280, 0, 304],"float32"), shape=tuple(280,-1,), )
paddle.reshape(Tensor([280, 200, 0],"float16"), shape=tuple(280,-1,), )
paddle.reshape(Tensor([280, 200, 0],"float32"), shape=tuple(280,-1,), )
paddle.reshape(Tensor([288, 0, 272],"float16"), shape=tuple(288,-1,), )
paddle.reshape(Tensor([288, 0, 272],"float32"), shape=tuple(288,-1,), )
paddle.reshape(Tensor([288, 272, 0],"float16"), shape=tuple(288,-1,), )
paddle.reshape(Tensor([288, 272, 0],"float32"), shape=tuple(288,-1,), )
paddle.reshape(Tensor([29151, 0],"bool"), list[-1,100,1,], )
paddle.reshape(Tensor([292, 0, 304],"float16"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([292, 0, 304],"float32"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([292, 200, 0],"float16"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([292, 200, 0],"float32"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([296, 0, 304],"float16"), shape=tuple(296,-1,), )
paddle.reshape(Tensor([296, 0, 304],"float32"), shape=tuple(296,-1,), )
paddle.reshape(Tensor([296, 200, 0],"float16"), shape=tuple(296,-1,), )
paddle.reshape(Tensor([296, 200, 0],"float32"), shape=tuple(296,-1,), )
paddle.reshape(Tensor([3, 0, 3, 3],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 0, 3],"float32"), list[3,-1,3,], )
paddle.reshape(Tensor([3, 0, 5, 3],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 0, 5],"float32"), list[1,-1,], )
paddle.reshape(Tensor([3, 0, 5],"float32"), list[2,-1,], )
paddle.reshape(Tensor([3, 0, 5],"float32"), list[3,-1,], )
paddle.reshape(Tensor([3, 0, 5],"float32"), list[4,-1,], )
paddle.reshape(Tensor([3, 0, 5],"float32"), list[5,-1,], )
paddle.reshape(Tensor([3, 0],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 2, 0, 3],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 2, 3, 0],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 3, 0, 3],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 3, 0],"float32"), list[3,-1,3,], )
paddle.reshape(Tensor([3, 3, 5, 0],"float32"), tuple(3,-1,), )
paddle.reshape(Tensor([3, 4, 0],"float32"), list[1,-1,], )
paddle.reshape(Tensor([3, 4, 0],"float32"), list[2,-1,], )
paddle.reshape(Tensor([3, 4, 0],"float32"), list[3,-1,], )
paddle.reshape(Tensor([3, 4, 0],"float32"), list[4,-1,], )
paddle.reshape(Tensor([3, 4, 0],"float32"), list[5,-1,], )
paddle.reshape(Tensor([30, 0, 8000],"float32"), list[-1,8000,], )
paddle.reshape(Tensor([30, 0],"float32"), shape=list[-1,400,], )
paddle.reshape(Tensor([30, 100, 0],"float32"), list[-1,8000,], )
paddle.reshape(Tensor([30, 101, 0],"float32"), list[-1,8000,], )
paddle.reshape(Tensor([304, 0, 336],"float16"), shape=tuple(304,-1,), )
paddle.reshape(Tensor([304, 0, 336],"float32"), shape=tuple(304,-1,), )
paddle.reshape(Tensor([304, 200, 0],"float16"), shape=tuple(304,-1,), )
paddle.reshape(Tensor([304, 200, 0],"float32"), shape=tuple(304,-1,), )
paddle.reshape(Tensor([308, 0, 304],"float16"), shape=tuple(308,-1,), )
paddle.reshape(Tensor([308, 0, 304],"float32"), shape=tuple(308,-1,), )
paddle.reshape(Tensor([308, 304, 0],"float16"), shape=tuple(308,-1,), )
paddle.reshape(Tensor([308, 304, 0],"float32"), shape=tuple(308,-1,), )
paddle.reshape(Tensor([32, 0, 1, 1],"float32"), list[-1,16,1280,], )
paddle.reshape(Tensor([32, 0, 272],"float16"), shape=tuple(32,-1,), )
paddle.reshape(Tensor([32, 0, 272],"float32"), shape=tuple(32,-1,), )
paddle.reshape(Tensor([32, 0, 30],"float32"), list[-1,30,], )
paddle.reshape(Tensor([32, 0, 512],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([32, 0],"float32"), shape=list[-1,8,32,], )
paddle.reshape(Tensor([32, 0],"float64"), shape=list[-1,4,32,], )
paddle.reshape(Tensor([32, 0],"int64"), shape=list[-1,1,], )
paddle.reshape(Tensor([32, 1280, 0, 1],"float32"), list[-1,16,1280,], )
paddle.reshape(Tensor([32, 1280, 1, 0],"float32"), list[-1,16,1280,], )
paddle.reshape(Tensor([32, 200, 0],"float16"), shape=tuple(32,-1,), )
paddle.reshape(Tensor([32, 200, 0],"float32"), shape=tuple(32,-1,), )
paddle.reshape(Tensor([32, 4, 0],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([32, 501, 0],"float32"), list[-1,30,], )
paddle.reshape(Tensor([320, 0, 336],"float16"), shape=tuple(320,-1,), )
paddle.reshape(Tensor([320, 0, 336],"float32"), shape=tuple(320,-1,), )
paddle.reshape(Tensor([320, 272, 0],"float16"), shape=tuple(320,-1,), )
paddle.reshape(Tensor([320, 272, 0],"float32"), shape=tuple(320,-1,), )
paddle.reshape(Tensor([332, 0, 304],"float16"), shape=tuple(332,-1,), )
paddle.reshape(Tensor([332, 0, 304],"float32"), shape=tuple(332,-1,), )
paddle.reshape(Tensor([332, 200, 0],"float16"), shape=tuple(332,-1,), )
paddle.reshape(Tensor([332, 200, 0],"float32"), shape=tuple(332,-1,), )
paddle.reshape(Tensor([36, 0, 272],"float16"), shape=tuple(36,-1,), )
paddle.reshape(Tensor([36, 0, 272],"float32"), shape=tuple(36,-1,), )
paddle.reshape(Tensor([36, 0],"int64"), tuple(-1,1,), )
paddle.reshape(Tensor([36, 200, 0],"float16"), shape=tuple(36,-1,), )
paddle.reshape(Tensor([36, 200, 0],"float32"), shape=tuple(36,-1,), )
paddle.reshape(Tensor([360, 0, 336],"float16"), shape=tuple(360,-1,), )
paddle.reshape(Tensor([360, 0, 336],"float32"), shape=tuple(360,-1,), )
paddle.reshape(Tensor([360, 200, 0],"float16"), shape=tuple(360,-1,), )
paddle.reshape(Tensor([360, 200, 0],"float32"), shape=tuple(360,-1,), )
paddle.reshape(Tensor([364, 0, 336],"float16"), shape=tuple(364,-1,), )
paddle.reshape(Tensor([364, 0, 336],"float32"), shape=tuple(364,-1,), )
paddle.reshape(Tensor([364, 0],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([364, 304, 0],"float16"), shape=tuple(364,-1,), )
paddle.reshape(Tensor([364, 304, 0],"float32"), shape=tuple(364,-1,), )
paddle.reshape(Tensor([372, 0, 336],"float16"), shape=tuple(372,-1,), )
paddle.reshape(Tensor([372, 0, 336],"float32"), shape=tuple(372,-1,), )
paddle.reshape(Tensor([372, 304, 0],"float16"), shape=tuple(372,-1,), )
paddle.reshape(Tensor([372, 304, 0],"float32"), shape=tuple(372,-1,), )
paddle.reshape(Tensor([4, 0, 1, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([4, 0, 1, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 0, 1, 10],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 0, 1, 1],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([4, 0, 1, 1],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([4, 0, 1, 64],"float16"), list[4,114,-1,], )
paddle.reshape(Tensor([4, 0, 102144],"float16"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([4, 0, 102144],"float16"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([4, 0, 102144],"float32"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([4, 0, 102144],"float32"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([4, 0, 102400],"float16"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([4, 0, 102400],"float32"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([4, 0, 1024],"float16"), list[-1,1024,], )
paddle.reshape(Tensor([4, 0, 1024],"float32"), list[-1,1024,], )
paddle.reshape(Tensor([4, 0, 104832],"float16"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([4, 0, 104832],"float16"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([4, 0, 104832],"float32"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([4, 0, 104832],"float32"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([4, 0, 107520],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([4, 0, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 0, 10],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 0, 112896],"float16"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([4, 0, 112896],"float32"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([4, 0, 12, 12],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 0, 12, 12],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 0, 12, 80],"float16"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 0, 12, 80],"float32"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 0, 120, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 0, 120, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 0, 120, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 0, 120, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 0, 128, 2],"float32"), shape=list[4,-1,2,], )
paddle.reshape(Tensor([4, 0, 16],"float32"), list[-1,64,], )
paddle.reshape(Tensor([4, 0, 16],"float32"), shape=list[-1,16,], )
paddle.reshape(Tensor([4, 0, 1],"float32"), shape=list[-1,3,], )
paddle.reshape(Tensor([4, 0, 200, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([4, 0, 200, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 0, 200, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 0, 200, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 0, 200, 312],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([4, 0, 200, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 0, 200, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 0, 200, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 0, 208, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 0, 208, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 0, 208, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 0, 208, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 0, 216, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 0, 216, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 0, 216, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 0, 224, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 0, 232, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 0, 232, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 0, 240, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 0, 248, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 0, 248, 304],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 0, 248, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 0, 256, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 0, 256, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 0, 256, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 0, 264, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 0, 264, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 0, 264, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 0, 264, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 0, 264, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 0, 272, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 0, 272, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 0, 272, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 0, 272, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 0, 272, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 0, 272, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 0, 272, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 0, 272, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 0, 272, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 0, 272, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 0, 280, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 0, 280, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 0, 280, 304],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 0, 280, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 0, 280, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 0, 280, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 0, 288, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 0, 288, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 0, 288, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 0, 296, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 0, 296, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 0, 296, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 0, 296, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 0, 304, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 0, 304, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 0, 304, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 0, 304, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 0, 304, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 0, 304, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 0, 304, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 0, 304, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 0, 304, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 0, 304, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 0, 304, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 0, 312, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 0, 312, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 0, 312, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 0, 312, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 0, 320, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 0, 320, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 0, 320, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 0, 328, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 0, 328, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 0, 328, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 0, 328, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 0, 32],"float32"), list[-1,128,], )
paddle.reshape(Tensor([4, 0, 32],"float32"), list[-1,256,], )
paddle.reshape(Tensor([4, 0, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([4, 0, 336, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 0, 336, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 0, 336, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 0, 336, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 0, 336, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 0, 336, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 0, 336, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 0, 336],"float16"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([4, 0, 336],"float32"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([4, 0, 4],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 0, 512, 150],"float32"), list[-1,150,], )
paddle.reshape(Tensor([4, 0, 512, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([4, 0, 54400],"float16"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([4, 0, 54400],"float16"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([4, 0, 54400],"float32"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([4, 0, 56000],"float16"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([4, 0, 56000],"float32"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([4, 0, 56576],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([4, 0, 57600],"float16"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([4, 0, 57600],"float32"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([4, 0, 58752],"float16"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([4, 0, 58752],"float32"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([4, 0, 59200],"float16"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([4, 0, 59200],"float32"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([4, 0, 6, 6, 6],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 0, 62400],"float16"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([4, 0, 63232],"float16"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([4, 0, 63232],"float32"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([4, 0, 63936],"float16"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([4, 0, 63936],"float32"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([4, 0, 64000],"float16"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([4, 0, 64000],"float32"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([4, 0, 640],"float32"), shape=list[-1,], )
paddle.reshape(Tensor([4, 0, 65600],"float16"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([4, 0, 65600],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([4, 0, 65600],"float32"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([4, 0, 65664],"float16"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([4, 0, 65664],"float16"), shape=tuple(-1,304,216,), )
paddle.reshape(Tensor([4, 0, 65664],"float32"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([4, 0, 67200],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([4, 0, 67200],"float16"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([4, 0, 67200],"float32"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([4, 0, 67392],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([4, 0, 67456],"float16"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([4, 0, 67456],"float32"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([4, 0, 68096],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([4, 0, 68224],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([4, 0, 69632],"float16"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([4, 0, 69632],"float32"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([4, 0, 69888],"float16"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([4, 0, 69888],"float32"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([4, 0, 70528],"float16"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([4, 0, 70528],"float32"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([4, 0, 72960],"float16"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 0, 72960],"float32"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 0, 73984],"float16"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([4, 0, 73984],"float32"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([4, 0, 74240],"float16"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([4, 0, 74240],"float32"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([4, 0, 75392],"float16"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([4, 0, 75392],"float32"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([4, 0, 76032],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([4, 0, 76160],"float16"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([4, 0, 76160],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([4, 0, 76160],"float32"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([4, 0, 77824],"float16"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([4, 0, 77824],"float32"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([4, 0, 78144],"float16"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([4, 0, 78144],"float32"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([4, 0, 78336],"float16"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([4, 0, 78336],"float32"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([4, 0, 78400],"float16"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([4, 0, 78400],"float32"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([4, 0, 80256],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([4, 0, 80256],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([4, 0, 80512],"float16"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([4, 0, 80512],"float16"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([4, 0, 80512],"float32"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([4, 0, 80512],"float32"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([4, 0, 82688],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([4, 0, 82688],"float16"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 0, 82688],"float32"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 0, 83328],"float16"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 0, 83328],"float32"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 0, 84480],"float16"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 0, 84480],"float32"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 0, 84864],"float16"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 0, 84864],"float16"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 0, 84864],"float32"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 0, 84864],"float32"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 0, 85120],"float16"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 0, 85120],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([4, 0, 85120],"float32"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 0, 86016],"float16"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 0, 86016],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 0, 87040],"float16"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 0, 87040],"float16"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 0, 87040],"float32"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 0, 87040],"float32"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 0, 87360],"float16"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 0, 87360],"float32"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 0, 87552],"float16"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 0, 87552],"float16"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 0, 87552],"float32"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 0, 87552],"float32"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 0, 88704],"float16"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 0, 88704],"float32"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 0, 89216],"float16"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 0, 89216],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([4, 0, 89216],"float32"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 0, 89984],"float16"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 0, 89984],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([4, 0, 89984],"float32"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 0, 91392],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 0, 91392],"float16"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 0, 91392],"float32"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 0, 91392],"float32"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 0, 91840],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([4, 0, 92352],"float16"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 0, 92352],"float32"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 0, 92416],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([4, 0, 94080],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([4, 0, 94080],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([4, 0, 94848],"float16"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 0, 94848],"float16"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 0, 94848],"float32"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 0, 94848],"float32"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 0, 96768],"float16"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 0, 96768],"float32"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 0, 97088],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([4, 0, 97088],"float16"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 0, 97088],"float32"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 0, 97280],"float16"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 0, 97280],"float16"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 0, 97280],"float32"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 0, 97280],"float32"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 0, 99456],"float16"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 0, 99456],"float32"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 0, 99712],"float16"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 0, 99712],"float16"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 0, 99712],"float32"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 0, 99712],"float32"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 0],"float32"), list[-1,3,10,], )
paddle.reshape(Tensor([4, 0],"float32"), shape=list[-1,1,10,], )
paddle.reshape(Tensor([4, 0],"float32"), shape=list[1,-1,10,], )
paddle.reshape(Tensor([4, 0],"float32"), tuple(-1,7,), )
paddle.reshape(Tensor([4, 0],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 0],"float64"), shape=list[4,-1,], )
paddle.reshape(Tensor([4, 1, 0, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 1, 0, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 1, 0, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 1, 0, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 1, 0, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 1, 0, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 1, 0, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 1, 0, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 1, 0, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 1, 0, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([4, 1, 200, 0],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 1, 272, 0],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 1, 272, 0],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 1, 280, 0],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 1, 296, 0],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 1, 304, 0],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 1, 304, 0],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 1, 312, 0],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 1, 320, 0],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 1, 336, 0],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 10, 0, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 10, 0, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 10, 0, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 10, 0, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 10, 0, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 10, 0, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 10, 0, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 10, 0, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 10, 0, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 10, 0, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 10, 0, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 10, 208, 0],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 10, 208, 0],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 10, 216, 0],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 10, 216, 0],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 10, 232, 0],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 10, 256, 0],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 10, 256, 0],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 10, 264, 0],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 10, 280, 0],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 10, 280, 0],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 10, 280, 0],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 10, 288, 0],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 10, 296, 0],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 10, 296, 0],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 10, 296, 0],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 10, 312, 0],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 10, 312, 0],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 10, 312, 0],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 10, 320, 0],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 10, 328, 0],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 100, 0, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 100, 0, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 100, 0, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 0, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 1024, 0, 1],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([4, 1024, 1, 0],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([4, 11, 0, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 11, 0, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 11, 0, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 11, 0, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 11, 0, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 11, 0, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 11, 0, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 11, 0, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 11, 0, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 11, 0],"float16"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([4, 11, 0],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([4, 11, 0],"float32"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([4, 11, 200, 0],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 11, 208, 0],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 11, 248, 0],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 11, 264, 0],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 11, 272, 0],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 11, 272, 0],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 11, 272, 0],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 11, 296, 0],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 11, 304, 0],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 11, 304, 0],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 11, 312, 0],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 11, 328, 0],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 11, 336, 0],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 114, 0, 64],"float16"), list[4,114,-1,], )
paddle.reshape(Tensor([4, 114, 1, 0],"float16"), list[4,114,-1,], )
paddle.reshape(Tensor([4, 12, 0, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 12, 0, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 12, 0, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 12, 0, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 12, 0, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 12, 0, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 12, 0, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 12, 0, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 12, 0, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 12, 0, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 12, 0, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 12, 0, 312],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([4, 12, 0, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 12, 0, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 12, 0, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 12, 0, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 12, 0, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 12, 0, 80],"float16"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 0, 80],"float32"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,216,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 12, 12, 0],"float16"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 12, 0],"float32"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 200, 0],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 12, 200, 0],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([4, 12, 208, 0],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 12, 216, 0],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 12, 224, 0],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 12, 232, 0],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 12, 248, 0],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 12, 248, 0],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 12, 256, 0],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 12, 264, 0],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 12, 264, 0],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 12, 272, 0],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 12, 272, 0],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 12, 272, 0],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 12, 288, 0],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 12, 296, 0],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 12, 296, 0],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 12, 312, 0],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 12, 320, 0],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 12, 328, 0],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 12, 328, 0],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 12, 336, 0],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 128, 0, 2],"float32"), shape=list[4,-1,2,], )
paddle.reshape(Tensor([4, 128, 128, 0],"float32"), shape=list[4,-1,2,], )
paddle.reshape(Tensor([4, 1280, 0, 1],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([4, 1280, 1, 0],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([4, 13, 0, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 13, 0, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 13, 0, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 13, 0, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 13, 0, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 13, 0, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,304,216,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([4, 13, 216, 0],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 13, 288, 0],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 13, 304, 0],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 13, 312, 0],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 13, 320, 0],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 13, 336, 0],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 14, 0, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 14, 0, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 14, 0, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 14, 0, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 14, 0, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 14, 0, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 14, 0, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 14, 0, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([4, 14, 0],"float32"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([4, 14, 0],"float32"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 14, 216, 0],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 14, 256, 0],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 14, 264, 0],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 14, 264, 0],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 14, 264, 0],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 14, 280, 0],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 14, 296, 0],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 14, 304, 0],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 15, 0, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 15, 0, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 15, 0, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 15, 0, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 15, 0, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 15, 0, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 15, 0, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 15, 0, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 15, 0, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 15, 0, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([4, 15, 0],"float32"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([4, 15, 0],"float32"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([4, 15, 0],"float32"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 15, 208, 0],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 15, 208, 0],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 15, 248, 0],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 15, 256, 0],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 15, 272, 0],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 15, 280, 0],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 15, 288, 0],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 15, 304, 0],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 15, 304, 0],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 15, 328, 0],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 16, 0, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 16, 0, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 16, 0, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 16, 0, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 16, 0, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 16, 0, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 16, 0, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 16, 0, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([4, 16, 0],"float32"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 16, 0],"float32"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([4, 16, 200, 0],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 16, 208, 0],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 16, 240, 0],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 16, 272, 0],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 16, 280, 0],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 16, 304, 0],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 16, 312, 0],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 16, 336, 0],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 17, 0, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 17, 0, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 17, 0, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 17, 0, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 17, 0, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 17, 0],"float16"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([4, 17, 0],"float32"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([4, 17, 200, 0],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 17, 240, 0],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 17, 272, 0],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 17, 272, 0],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 17, 336, 0],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 18, 0, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 18, 0, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 18, 0, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 18, 0],"float16"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([4, 18, 0],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([4, 18, 0],"float32"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([4, 18, 232, 0],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 18, 272, 0],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 18, 328, 0],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 19, 0, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 19, 0],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([4, 19, 216, 0],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 2, 0, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 2, 0, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 2, 0, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 2, 0, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 2, 0],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([4, 2, 320, 0],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 2, 320, 0],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 2, 328, 0],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 2, 336, 0],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 20, 0, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 20, 208, 0],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 200, 0],"float16"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([4, 200, 0],"float32"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([4, 21, 0, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 21, 264, 0],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 22, 0, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 22, 0, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 22, 0, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 22, 0, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 22, 0, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 22, 0],"float16"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([4, 22, 0],"float32"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([4, 22, 200, 0],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 22, 200, 0],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 22, 248, 0],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 22, 256, 0],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 22, 264, 0],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 24, 0, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 24, 248, 0],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 25, 0, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 25, 0, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 25, 0, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 25, 0],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([4, 25, 264, 0],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 25, 288, 0],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 25, 336, 0],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 256, 0, 12],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 256, 0, 12],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 256, 12, 0],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 256, 12, 0],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 3, 0, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([4, 3, 0, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 3, 0, 10],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 3, 0],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 3, 0],"float32"), shape=list[-1,3,], )
paddle.reshape(Tensor([4, 3, 1, 0],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 3, 1, 0],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([4, 3, 1, 0],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 30, 0, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 30, 0],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([4, 30, 336, 0],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 35, 0, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 35, 200, 0],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 39, 0, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 39, 0, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 39, 0],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([4, 39, 232, 0],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 39, 304, 0],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 4, 0, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 4, 0, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), list[-1,128,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), list[-1,64,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), shape=list[-1,16,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([4, 4, 200, 0],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 4, 288, 0],"float32"), shape=list[-1,288,336,], )
paddle.concat(list[Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 288, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.argsort(Tensor([3, 4, 0],"int64"), axis=2, stable=True, )
paddle.dsplit(Tensor([0, 3, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([0, 3, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([0, 3, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([0, 3, 6],"int64"), tuple(2,1,3,), )
paddle.dsplit(Tensor([4, 0, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([4, 0, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([4, 0, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([4, 0, 6],"int64"), tuple(2,1,3,), )
paddle.dsplit(Tensor([4, 3, 0],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([4, 3, 0],"int64"), list[-1,], )
paddle.dsplit(Tensor([4, 3, 0],"int64"), list[2,4,], )
paddle.dsplit(Tensor([4, 3, 0],"int64"), tuple(2,1,3,), )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 2, 0],"float64"),], )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.bitwise_or(Tensor([0, 3, 1, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.bitwise_or(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([0, 3, 5],"int32"), Tensor([0, 3, 5],"int32"), )
paddle.bitwise_or(Tensor([0, 4, 1],"int32"), Tensor([0, 4, 1],"int32"), )
paddle.bitwise_or(Tensor([0],"int32"), Tensor([0],"int32"), )
paddle.bitwise_or(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 0, 5],"int32"), Tensor([2, 0, 5],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 0],"int32"), Tensor([2, 3, 0],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 1, 0],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 1, 5],"int64"), Tensor([3, 0, 1],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([3, 0, 1],"int32"), Tensor([3, 0, 1],"int32"), )
paddle.bitwise_or(Tensor([3, 0, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 0],"int32"), Tensor([3, 4, 0],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 0],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 0],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([0, 3, 1, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 0],"int64"), )
paddle.bitwise_right_shift(Tensor([0, 300],"int16"), Tensor([0, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([0, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_right_shift(Tensor([0, 300],"int32"), Tensor([0, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([0, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_right_shift(Tensor([0],"int8"), Tensor([0],"int8"), )
paddle.bitwise_right_shift(Tensor([0],"int8"), Tensor([1],"int8"), )
paddle.bitwise_right_shift(Tensor([0],"uint8"), Tensor([0],"uint8"), )
paddle.bitwise_right_shift(Tensor([0],"uint8"), Tensor([1],"uint8"), )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([0],"int8"), )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([0],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 0],"int16"), Tensor([200, 0],"int16"), )
paddle.bitwise_right_shift(Tensor([200, 0],"int32"), Tensor([200, 0],"int32"), )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([0, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([0, 300],"int32"), )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.as_real(Tensor([0, 10, 10, 20],"complex128"), )
paddle.as_real(Tensor([0, 10],"complex128"), )
paddle.as_real(Tensor([0, 4],"complex128"), )
paddle.as_real(Tensor([10, 0, 10, 20],"complex128"), )
paddle.as_real(Tensor([10, 0],"complex128"), )
paddle.as_real(Tensor([10, 10, 0, 20],"complex128"), )
paddle.as_real(Tensor([10, 10, 10, 0],"complex128"), )
paddle.as_real(Tensor([2, 0],"complex128"), )
paddle.as_real(x=Tensor([0, 2, 3],"complex128"), )
paddle.as_real(x=Tensor([0, 2, 3],"complex64"), )
paddle.as_real(x=Tensor([0, 3],"complex128"), )
paddle.as_real(x=Tensor([0, 3],"complex64"), )
paddle.as_real(x=Tensor([0],"complex128"), )
paddle.as_real(x=Tensor([0],"complex64"), )
paddle.as_real(x=Tensor([9, 0, 3],"complex128"), )
paddle.as_real(x=Tensor([9, 0, 3],"complex64"), )
paddle.as_real(x=Tensor([9, 0],"complex128"), )
paddle.as_real(x=Tensor([9, 0],"complex64"), )
paddle.as_real(x=Tensor([9, 2, 0],"complex128"), )
paddle.as_real(x=Tensor([9, 2, 0],"complex64"), )
paddle.atan2(Tensor([0, 17],"float64"), Tensor([0, 17],"float64"), )
paddle.atan2(Tensor([0, 222, 333],"float64"), Tensor([222, 333],"float64"), )
paddle.atan2(Tensor([0, 3, 2],"float16"), Tensor([0, 3, 2],"float32"), )
paddle.atan2(Tensor([0, 3, 2],"float16"), Tensor([0, 3, 2],"float64"), )
paddle.atan2(Tensor([100],"float64"), Tensor([0, 100],"float64"), )
paddle.atan2(Tensor([11, 0],"float64"), Tensor([11, 0],"float64"), )
paddle.atan2(Tensor([4, 0, 2],"float16"), Tensor([4, 0, 2],"float32"), )
paddle.atan2(Tensor([4, 0, 2],"float16"), Tensor([4, 0, 2],"float64"), )
paddle.atan2(Tensor([4, 3, 0],"float16"), Tensor([4, 3, 0],"float32"), )
paddle.atan2(Tensor([4, 3, 0],"float16"), Tensor([4, 3, 0],"float64"), )
paddle.atan2(x=Tensor([0, 6, 6, 6, 6],"float64"), y=Tensor([0, 6, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([0, 6, 6, 6],"float64"), y=Tensor([0, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([0, 6, 6],"float64"), y=Tensor([0, 6, 6],"float64"), )
paddle.atan2(x=Tensor([0, 6],"float16"), y=Tensor([0, 6],"float16"), )
paddle.atan2(x=Tensor([0, 6],"float32"), y=Tensor([0, 6],"float32"), )
paddle.atan2(x=Tensor([3, 0, 6, 6, 6],"float64"), y=Tensor([3, 0, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([3, 6, 0, 6, 6],"float64"), y=Tensor([3, 6, 0, 6, 6],"float64"), )
paddle.atan2(x=Tensor([3, 6, 6, 0, 6],"float64"), y=Tensor([3, 6, 6, 0, 6],"float64"), )
paddle.atan2(x=Tensor([3, 6, 6, 6, 0],"float64"), y=Tensor([3, 6, 6, 6, 0],"float64"), )
paddle.atan2(x=Tensor([6, 0, 6, 6],"float64"), y=Tensor([6, 0, 6, 6],"float64"), )
paddle.atan2(x=Tensor([6, 0, 6],"float64"), y=Tensor([6, 0, 6],"float64"), )
paddle.atan2(x=Tensor([6, 0],"float16"), y=Tensor([6, 0],"float16"), )
paddle.atan2(x=Tensor([6, 0],"float32"), y=Tensor([6, 0],"float32"), )
paddle.atan2(x=Tensor([6, 6, 0, 6],"float64"), y=Tensor([6, 6, 0, 6],"float64"), )
paddle.atan2(x=Tensor([6, 6, 0],"float64"), y=Tensor([6, 6, 0],"float64"), )
paddle.atan2(x=Tensor([6, 6, 6, 0],"float64"), y=Tensor([6, 6, 6, 0],"float64"), )
paddle.bitwise_and(Tensor([0, 3, 1, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.bitwise_and(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([0, 3, 5],"int32"), Tensor([0, 3, 5],"int32"), )
paddle.bitwise_and(Tensor([0, 4, 1],"int32"), Tensor([0, 4, 1],"int32"), )
paddle.bitwise_and(Tensor([0],"int32"), Tensor([0],"int32"), )
paddle.bitwise_and(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 0, 5],"int32"), Tensor([2, 0, 5],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 0],"int32"), Tensor([2, 3, 0],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 1, 0],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 1, 5],"int64"), Tensor([3, 0, 1],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([3, 0, 1],"int32"), Tensor([3, 0, 1],"int32"), )
paddle.bitwise_and(Tensor([3, 0, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 0],"int32"), Tensor([3, 4, 0],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 0],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 0],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([0, 3, 1, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 0],"int64"), )
paddle.bitwise_left_shift(Tensor([0, 300],"int16"), Tensor([0, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([0, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_left_shift(Tensor([0, 300],"int32"), Tensor([0, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([0, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_left_shift(Tensor([0],"int16"), Tensor([0],"int16"), )
paddle.bitwise_left_shift(Tensor([0],"int16"), Tensor([1],"int16"), )
paddle.bitwise_left_shift(Tensor([0],"uint8"), Tensor([0],"uint8"), )
paddle.bitwise_left_shift(Tensor([0],"uint8"), Tensor([1],"uint8"), )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([0],"int16"), )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([0],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 0],"int16"), Tensor([200, 0],"int16"), )
paddle.bitwise_left_shift(Tensor([200, 0],"int32"), Tensor([200, 0],"int32"), )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([0, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([0, 300],"int32"), )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 192, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([0, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([0, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([0, 214272],"float32"),Tensor([64, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([64, 214272],"float32"),Tensor([0, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([64, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([64, 262144],"float32"),Tensor([0, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([64, 96],"float32"),Tensor([0, 96],"float32"),], 0, )
paddle.concat(list[Tensor([6],"float64"),Tensor([0],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),], axis=0, )
paddle.concat(list[Tensor([6],"float64"),Tensor([6],"float64"),Tensor([0],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),], axis=0, )
paddle.concat(list[Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([0],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),], axis=0, )
paddle.concat(list[Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([0],"float64"),Tensor([6],"float64"),], axis=0, )
paddle.concat(list[Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([6],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),Tensor([72],"float64"),], axis=0, )
paddle.concat(list[Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([72],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([8, 16, 0, 64],"float32"),Tensor([8, 16, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 128, 64],"float32"),Tensor([8, 16, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([80],"float32"),Tensor([0],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([0],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([0],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([0],"float32"),Tensor([10],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([0],"float32"),Tensor([200],"float32"),], )
paddle.concat(list[Tensor([80],"float32"),Tensor([8],"float32"),Tensor([80],"float32"),Tensor([10],"float32"),Tensor([100],"float32"),Tensor([10],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([8141, 4],"int32"),Tensor([0, 4],"int32"),Tensor([7485, 4],"int32"),Tensor([5551, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([8141, 4],"int32"),Tensor([7974, 4],"int32"),Tensor([0, 4],"int32"),Tensor([5551, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([8141, 4],"int32"),Tensor([7974, 4],"int32"),Tensor([7485, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),Tensor([9],"float64"),], axis=0, )
paddle.concat(list[Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([9],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(tuple(Tensor([0, 1],"int64"),Tensor([1, 1],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([0, 2, 2, 128],"float16"),Tensor([1, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([0, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([0],"float32"),Tensor([1],"float32"),), )
paddle.concat(tuple(Tensor([0],"float64"),Tensor([24],"float64"),Tensor([24],"float64"),), )
paddle.concat(tuple(Tensor([0],"float64"),Tensor([3],"float64"),Tensor([3],"float64"),), )
paddle.concat(tuple(Tensor([0],"int32"),Tensor([1],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([0],"int64"),Tensor([104],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0, 192],"float32"),Tensor([1, 576, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 256, 256],"float32"),Tensor([1, 3, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 0, 256],"float32"),Tensor([1, 108, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 8, 4],"float32"),Tensor([1, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0],"bool"),Tensor([1, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0],"int64"),Tensor([1, 1],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 192],"float32"),Tensor([1, 0, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 2, 0],"float32"),Tensor([1, 1, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 2, 4],"float32"),Tensor([1, 1, 2, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 20, 0],"float32"),Tensor([1, 1, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 20, 2],"float32"),Tensor([1, 1, 20, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 256],"float32"),Tensor([1, 0, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 8, 4],"float32"),Tensor([1, 0, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 10, 8, 0],"float32"),Tensor([1, 10, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 8, 0],"float32"),Tensor([1, 10, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 128],"float32"),Tensor([1, 10, 8, 0],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 8, 2],"float32"),Tensor([1, 10, 8, 0],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10],"bool"),Tensor([1, 0],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 10],"int64"),Tensor([1, 0],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 12, 9, 0],"float32"),Tensor([1, 12, 9, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 12, 9, 0],"float32"),Tensor([1, 12, 9, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 12, 9, 128],"float32"),Tensor([1, 12, 9, 0],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 12, 9, 2],"float32"),Tensor([1, 12, 9, 0],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 1],"bool"),Tensor([1, 0],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1],"int64"),Tensor([0, 1],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([1, 1],"int64"),Tensor([1, 0],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 2, 8, 4],"float32"),Tensor([1, 0, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 20, 0],"float32"),Tensor([1, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 20, 2],"float32"),Tensor([1, 20, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 3, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 4, 0, 8],"float32"),Tensor([1, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 1, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 2, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 768],"float32"),Tensor([0, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 2, 128],"float16"),Tensor([0, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 2, 2, 128],"float16"),Tensor([0, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 1, 32],"float32"),Tensor([13, 0, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 32],"float32"),Tensor([13, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 0],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 7, 0],"float32"),Tensor([13, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 7, 32],"float32"),Tensor([13, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 4],"float32"),Tensor([13, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 0],"float32"),Tensor([140, 188, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 0],"float32"),Tensor([140, 188, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 6],"float32"),Tensor([140, 188, 1, 1, 2, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 3],"float32"),Tensor([140, 188, 1, 1, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1],"float32"),Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([1],"int32"),Tensor([0],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([1],"int64"),Tensor([0],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([2, 0, 32, 32],"float32"),Tensor([2, 3, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 32, 32],"float32"),Tensor([2, 0, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 4, 0],"float32"),Tensor([2, 4, 32],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([2, 4, 32],"float32"),Tensor([2, 4, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([24],"float64"),Tensor([0],"float64"),Tensor([24],"float64"),), )
paddle.concat(tuple(Tensor([24],"float64"),Tensor([24],"float64"),Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([3, 0],"float64"),Tensor([3, 3],"float64"),), 1, )
paddle.concat(tuple(Tensor([3, 3],"float64"),Tensor([3, 0],"float64"),), 1, )
paddle.concat(tuple(Tensor([385, 0],"float16"),Tensor([385, 2],"float16"),), 1, )
paddle.concat(tuple(Tensor([385, 2],"float16"),Tensor([385, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([3],"float64"),Tensor([0],"float64"),Tensor([3],"float64"),), )
paddle.concat(tuple(Tensor([3],"float64"),Tensor([3],"float64"),Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([4, 0, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0, 248, 216],"float32"),Tensor([4, 1, 248, 216],"float32"),Tensor([4, 3, 248, 216],"float32"),Tensor([4, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0],"float32"),Tensor([4, 1],"float32"),Tensor([4, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 1],"float32"),Tensor([4, 0],"float32"),Tensor([4, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 1],"float32"),Tensor([4, 1],"float32"),Tensor([4, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 128],"float32"),Tensor([4, 1, 128, 128],"float32"),Tensor([4, 3, 128, 128],"float32"),Tensor([4, 2, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),Tensor([4, 3, 248, 216],"float32"),Tensor([4, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 216],"float32"),Tensor([4, 1, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),Tensor([4, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 216],"float32"),Tensor([4, 1, 248, 216],"float32"),Tensor([4, 3, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 280, 376, 25, 0],"float32"),Tensor([4, 280, 376, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 280, 376, 25, 2],"float32"),Tensor([4, 280, 376, 25, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([52, 7, 0],"float32"),Tensor([52, 7, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([52, 7, 4],"float32"),Tensor([52, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 112, 14, 14],"float16"),Tensor([64, 112, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 112, 14, 14],"float32"),Tensor([64, 112, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 256, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 128, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 7, 7],"float16"),Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 7, 7],"float32"),Tensor([64, 1024, 7, 7],"float32"),Tensor([64, 512, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 0, 7, 7],"float16"),Tensor([64, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 1024, 7, 7],"float16"),Tensor([64, 0, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 512, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 7],"float32"),Tensor([64, 1024, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 112, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 112, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 14],"float16"),Tensor([64, 112, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 112, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 14],"float32"),Tensor([64, 112, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),Tensor([64, 120, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 128, 28, 28],"float16"),Tensor([64, 256, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 128, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 128, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 128, 28, 28],"float32"),Tensor([64, 256, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 26, 0],"float32"),Tensor([64, 26, 512],"float32"),Tensor([64, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 26, 512],"float32"),Tensor([64, 26, 0],"float32"),Tensor([64, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 26, 512],"float32"),Tensor([64, 26, 512],"float32"),Tensor([64, 26, 0],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 256, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 512, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 256, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 256, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 256, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 256, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 256, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 512, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([8, 0, 128, 128],"float32"),Tensor([8, 1, 128, 128],"float32"),Tensor([8, 3, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 2, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 3, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 2, 128, 128],"float32"),Tensor([8, 1, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 2, 128, 128],"float32"),Tensor([8, 1, 128, 128],"float32"),Tensor([8, 3, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 2, 128, 128],"float32"),Tensor([8, 1, 128, 128],"float32"),Tensor([8, 3, 128, 128],"float32"),Tensor([8, 2, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 26, 0],"float32"),Tensor([8, 26, 512],"float32"),Tensor([8, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([8, 26, 512],"float32"),Tensor([8, 26, 0],"float32"),Tensor([8, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([8, 26, 512],"float32"),Tensor([8, 26, 512],"float32"),Tensor([8, 26, 0],"float32"),), 2, )
paddle.concat(x=list[Tensor([0, 3],"float32"),Tensor([1, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([0, 8, 14, 12],"float32"),Tensor([1, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 14, 12],"float32"),Tensor([0, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([13, 0, 1],"float32"),Tensor([13, 96, 1],"float32"),Tensor([13, 12, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 12, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 12, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 12, 1],"float32"),Tensor([13, 96, 1],"float32"),Tensor([13, 0, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([16, 16, 0],"float32"),Tensor([16, 16, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([16, 16, 32],"float32"),Tensor([16, 16, 0],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([2048, 0],"float16"),Tensor([2048, 1408],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([2048, 1408],"float16"),Tensor([2048, 0],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([8, 0, 1, 1, 1],"float32"),Tensor([8, 256, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 0, 4, 14, 14],"float32"),Tensor([8, 256, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 14, 14],"float32"),Tensor([8, 0, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 2048, 1, 1, 1],"float32"),Tensor([8, 0, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=tuple(Tensor([0, 3],"float32"),Tensor([2, 3],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([1, 0, 1024],"float32"),Tensor([1, 256, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 1, 1024],"float32"),Tensor([1, 0, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 16, 0, 64],"float32"),Tensor([1, 16, 256, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 16, 1, 64],"float32"),Tensor([1, 16, 0, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([124, 0, 56, 56],"float32"),Tensor([124, 30, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 10, 56, 56],"float32"),Tensor([124, 0, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 0, 1],"float32"),Tensor([13, 384, 1],"float32"),Tensor([13, 384, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 0],"float32"),Tensor([13, 1, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 32],"float32"),Tensor([13, 1, 96, 0],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 96, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 384, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 96, 1],"float32"),Tensor([13, 384, 1],"float32"),Tensor([13, 0, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([2, 3],"float32"),Tensor([0, 3],"float32"),), axis=0, )
paddle.conj(Tensor([0, 1],"complex128"), )
paddle.conj(Tensor([0, 20, 2, 3],"complex128"), )
paddle.conj(Tensor([2, 0, 2, 3],"complex128"), )
paddle.conj(Tensor([2, 20, 0, 3],"complex128"), )
paddle.conj(Tensor([2, 20, 2, 0],"complex128"), )
paddle.conj(Tensor([4, 0],"complex128"), )
paddle.conj(x=Tensor([0, 10],"complex128"), )
paddle.conj(x=Tensor([20, 0],"complex128"), )
paddle.copysign(Tensor([0, 17, 5, 6, 7],"float16"), Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.copysign(Tensor([0, 20],"float32"), -3.0, )
paddle.copysign(Tensor([0, 3, 4, 5],"float64"), Tensor([0, 3, 4, 5],"float64"), )
paddle.copysign(Tensor([0, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.copysign(Tensor([0, 4, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([0],"int64"), Tensor([0],"int64"), )
paddle.copysign(Tensor([10, 0],"float32"), -3.0, )
paddle.copysign(Tensor([2, 0, 4, 5],"float64"), Tensor([2, 0, 4, 5],"float64"), )
paddle.copysign(Tensor([2, 3, 0, 5],"float64"), Tensor([2, 3, 0, 5],"float64"), )
paddle.copysign(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 4, 0],"float64"), )
paddle.copysign(Tensor([3, 0, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([4, 5],"float16"), Tensor([0, 4, 5],"float16"), )
paddle.copysign(Tensor([8, 0, 5, 6, 7],"float16"), Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.copysign(Tensor([8, 17, 0, 6, 7],"float16"), Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.copysign(Tensor([8, 17, 5, 0, 7],"float16"), Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.copysign(Tensor([8, 17, 5, 6, 0],"float16"), Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.count_nonzero(Tensor([0, 5],"float32"), axis=None, )
paddle.count_nonzero(Tensor([0],"float32"), axis=0, )
paddle.count_nonzero(Tensor([3, 0],"float32"), axis=None, )
paddle.cross(x=Tensor([0, 3, 3],"float64"), y=Tensor([0, 3, 3],"float64"), axis=1, )
paddle.cross(x=Tensor([0, 3, 3],"float64"), y=Tensor([0, 3, 3],"float64"), axis=2, )
paddle.cross(x=Tensor([0, 3],"float32"), y=Tensor([0, 3],"float32"), )
paddle.cross(x=Tensor([0, 3],"float64"), y=Tensor([0, 3],"float64"), axis=-1, )
paddle.cross(x=Tensor([0, 3],"float64"), y=Tensor([0, 3],"float64"), axis=1, )
paddle.cross(x=Tensor([3, 0, 3],"float64"), y=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.cross(x=Tensor([3, 0, 3],"float64"), y=Tensor([3, 0, 3],"float64"), axis=2, )
paddle.cross(x=Tensor([3, 0],"float32"), y=Tensor([3, 0],"float32"), )
paddle.cross(x=Tensor([3, 0],"float64"), y=Tensor([3, 0],"float64"), axis=0, )
paddle.cross(x=Tensor([3, 3, 0],"float64"), y=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.cross(x=Tensor([3, 3, 0],"float64"), y=Tensor([3, 3, 0],"float64"), axis=1, )
paddle.cumsum(Tensor([0, 3],"float32"), axis=0, )
paddle.cumsum(Tensor([0, 4],"int64"), axis=-2, )
paddle.cumsum(Tensor([0],"float32"), axis=0, )
paddle.cumsum(Tensor([1, 0],"int64"), 1, )
paddle.cumsum(Tensor([1, 0],"int64"), axis=-1, )
paddle.cumsum(Tensor([1, 0],"int64"), axis=1, )
paddle.cumsum(Tensor([3, 0, 4],"float32"), axis=1, )
paddle.cumsum(x=Tensor([0, 2, 1, 3],"float64"), axis=-4, )
paddle.cumsum(x=Tensor([1, 16, 0, 32],"float64"), axis=2, )
paddle.cumsum(x=Tensor([1, 2, 1, 0],"float64"), axis=3, )
paddle.deg2rad(Tensor([0, 16, 32],"float32"), )
paddle.deg2rad(Tensor([0],"int64"), )
paddle.deg2rad(Tensor([8, 0, 32],"float32"), )
paddle.deg2rad(Tensor([8, 16, 0],"float32"), )
paddle.diag(Tensor([0, 10],"float32"), )
paddle.diag(Tensor([0, 10],"float32"), offset=1, )
paddle.diag(Tensor([0],"float32"), offset=-1, )
paddle.diag(Tensor([0],"float32"), offset=1, )
paddle.diag(Tensor([0],"float64"), )
paddle.diag(Tensor([10, 0],"float32"), )
paddle.diag(Tensor([10, 0],"float32"), offset=-1, )
paddle.diag(x=Tensor([0, 1],"float64"), )
paddle.diag(x=Tensor([0, 2],"float64"), offset=1, )
paddle.diag(x=Tensor([0, 3],"float64"), offset=0, )
paddle.diag(x=Tensor([0, 3],"float64"), offset=2, )
paddle.diag(x=Tensor([0],"float64"), )
paddle.diag(x=Tensor([0],"float64"), offset=-1, )
paddle.diag(x=Tensor([0],"float64"), offset=0, )
paddle.diag(x=Tensor([0],"float64"), offset=10, )
paddle.diag(x=Tensor([2, 0],"float64"), offset=-1, )
paddle.diag(x=Tensor([2, 0],"float64"), offset=0, )
paddle.diag(x=Tensor([3, 0],"float64"), )
paddle.diagflat(Tensor([0, 10],"float64"), )
paddle.diagflat(Tensor([0, 10],"float64"), offset=-1, )
paddle.diagflat(Tensor([0, 10],"float64"), offset=1, )
paddle.diagflat(Tensor([0],"float64"), )
paddle.diagflat(Tensor([0],"float64"), offset=-1, )
paddle.diagflat(Tensor([0],"float64"), offset=1, )
paddle.diagflat(Tensor([10, 0],"float64"), )
paddle.diagflat(Tensor([10, 0],"float64"), offset=-1, )
paddle.diagflat(Tensor([10, 0],"float64"), offset=1, )
paddle.diagflat(x=Tensor([0, 2, 2, 1, 2, 4, 2, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([0, 2, 2, 1, 2, 4],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([0],"float32"), offset=0, )
paddle.diagflat(x=Tensor([0],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([0],"float64"), offset=1, )
paddle.diagflat(x=Tensor([3, 0, 2, 1, 2, 4, 2, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([3, 0, 2, 1, 2, 4],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([3, 2, 0, 1, 2, 4, 2, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([3, 2, 0, 1, 2, 4],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([3, 2, 2, 0, 2, 4, 2, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([3, 2, 2, 0, 2, 4],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([3, 2, 2, 1, 0, 4, 2, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([3, 2, 2, 1, 0, 4],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([3, 2, 2, 1, 2, 0, 2, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([3, 2, 2, 1, 2, 0],"float64"), offset=-1, )
paddle.diagflat(x=Tensor([3, 2, 2, 1, 2, 4, 0, 2],"float64"), offset=2, )
paddle.diagflat(x=Tensor([3, 2, 2, 1, 2, 4, 2, 0],"float64"), offset=2, )
paddle.diagonal(Tensor([0, 2, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([1, 0, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([1, 2, 0],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([0, 6, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([0, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([0, 6],"float32"), )
paddle.diagonal(x=Tensor([0, 6],"float64"), offset=-1, )
paddle.diagonal(x=Tensor([0, 6],"float64"), offset=1, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 0, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 0, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 0],"float32"), )
paddle.diagonal(x=Tensor([6, 0],"float64"), offset=-1, )
paddle.diagonal(x=Tensor([6, 0],"float64"), offset=1, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 0, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=4, axis2=2, )
paddle.diff(Tensor([0, 10],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([0, 3],"float32"), axis=1, )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=Tensor([0, 4],"float32"), append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=Tensor([0, 4],"float32"), append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=0, prepend=Tensor([3, 4],"float32"), append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=0, prepend=Tensor([0, 4],"float32"), append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=0, prepend=Tensor([0, 4],"float32"), append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=1, prepend=None, append=None, )
paddle.diff(Tensor([0],"float32"), )
paddle.diff(Tensor([0],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([0],"float32"), n=2, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([10, 0],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([2, 0],"float32"), axis=1, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 0],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 0],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([0, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([0, 4],"float32"), )
paddle.diff(x=Tensor([0, 4, 4, 4],"float64"), )
paddle.diff(x=Tensor([0, 4, 4, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([0, 4, 4, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([0, 4, 4],"float64"), )
paddle.diff(x=Tensor([0, 4],"float64"), )
paddle.diff(x=Tensor([0, 4],"float64"), axis=0, prepend=Tensor([0, 4],"float64"), append=Tensor([0, 4],"float64"), )
paddle.diff(x=Tensor([0, 4],"float64"), axis=0, prepend=Tensor([4, 4],"float64"), append=Tensor([4, 4],"float64"), )
paddle.diff(x=Tensor([0],"float64"), )
paddle.diff(x=Tensor([0],"float64"), prepend=Tensor([0],"float64"), )
paddle.diff(x=Tensor([0],"float64"), prepend=Tensor([0],"float64"), append=Tensor([0],"float64"), )
paddle.diff(x=Tensor([0],"float64"), prepend=Tensor([4],"float64"), )
paddle.diff(x=Tensor([0],"float64"), prepend=Tensor([4],"float64"), append=Tensor([4],"float64"), )
paddle.diff(x=Tensor([10, 0],"float64"), axis=0, prepend=Tensor([4, 0],"float64"), append=Tensor([4, 0],"float64"), )
paddle.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([0, 4],"float64"), append=Tensor([4, 4],"float64"), )
paddle.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([4, 4],"float64"), append=Tensor([0, 4],"float64"), )
paddle.diff(x=Tensor([10],"float64"), prepend=Tensor([0],"float64"), )
paddle.diff(x=Tensor([10],"float64"), prepend=Tensor([0],"float64"), append=Tensor([4],"float64"), )
paddle.diff(x=Tensor([10],"float64"), prepend=Tensor([4],"float64"), append=Tensor([0],"float64"), )
paddle.diff(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.diff(x=Tensor([4, 0, 4, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 0, 4, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 0, 4],"float64"), )
paddle.diff(x=Tensor([4, 0],"float64"), )
paddle.diff(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.diff(x=Tensor([4, 4, 0, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 0, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 4, 0],"float64"), )
paddle.diff(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.diff(x=Tensor([4, 4, 4, 0],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 4, 0],"float64"), axis=2, )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 3],"float32"), )
paddle.diff(x=Tensor([10, 0],"float64"), axis=0, prepend=Tensor([4, 0],"float64"), append=Tensor([4, 0],"float64"), )
paddle.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([0, 4],"float64"), append=Tensor([4, 4],"float64"), )
paddle.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([4, 4],"float64"), append=Tensor([0, 4],"float64"), )
paddle.diff(x=Tensor([10],"float64"), prepend=Tensor([0],"float64"), )
paddle.diff(x=Tensor([10],"float64"), prepend=Tensor([0],"float64"), append=Tensor([4],"float64"), )
paddle.diff(x=Tensor([10],"float64"), prepend=Tensor([4],"float64"), append=Tensor([0],"float64"), )
paddle.diff(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.diff(x=Tensor([4, 0, 4, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 0, 4, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 0, 4],"float64"), )
paddle.diff(x=Tensor([4, 0],"float64"), )
paddle.diff(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.diff(x=Tensor([4, 4, 0, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 0, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 4, 0],"float64"), )
paddle.diff(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.diff(x=Tensor([4, 4, 4, 0],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 4, 0],"float64"), axis=2, )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=-1, prepend=Tensor([2, 2],"float32"), append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=-1, prepend=Tensor([2, 3],"float32"), append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=0, prepend=Tensor([2, 0],"float32"), append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=0, prepend=Tensor([3, 0],"float32"), append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=0, prepend=Tensor([2, 0],"float32"), append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=0, prepend=Tensor([2, 0],"float32"), append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=1, prepend=None, append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 0],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 0],"float32"), append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 2],"float32"), append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([0, 4],"float32"), append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([0, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([0, 4],"float32"), append=None, )
