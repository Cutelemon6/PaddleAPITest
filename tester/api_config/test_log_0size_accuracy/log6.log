2025-03-05 15:22:15.009245 test begin: paddle.broadcast_to(Tensor([4, 1, 173, 0],"bool"), list[4,8,173,173,], )

W0305 15:22:18.314298 137386 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:22:18.315483 137386 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.
[torch error] paddle.broadcast_to(Tensor([4, 1, 173, 0],"bool"), list[4,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 173, 173].  Tensor sizes: [4, 1, 173, 0]
2025-03-05 15:23:02.715954 test begin: paddle.broadcast_to(Tensor([4, 1, 173, 0],"bool"), list[4,8,173,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 173, 0],"bool"), list[4,8,173,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 173, 77].  Tensor sizes: [4, 1, 173, 0]
2025-03-05 15:23:02.718160 test begin: paddle.broadcast_to(Tensor([4, 1, 174, 0],"bool"), list[4,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 174, 0],"bool"), list[4,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 174, 174].  Tensor sizes: [4, 1, 174, 0]
2025-03-05 15:23:02.718922 test begin: paddle.broadcast_to(Tensor([4, 1, 174, 0],"bool"), list[4,8,174,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 174, 0],"bool"), list[4,8,174,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 174, 77].  Tensor sizes: [4, 1, 174, 0]
2025-03-05 15:23:02.719648 test begin: paddle.broadcast_to(Tensor([4, 1, 175, 0],"bool"), list[4,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 175, 0],"bool"), list[4,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 175, 175].  Tensor sizes: [4, 1, 175, 0]
2025-03-05 15:23:02.720365 test begin: paddle.broadcast_to(Tensor([4, 1, 175, 0],"bool"), list[4,8,175,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 175, 0],"bool"), list[4,8,175,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 175, 77].  Tensor sizes: [4, 1, 175, 0]
2025-03-05 15:23:02.721052 test begin: paddle.broadcast_to(Tensor([4, 1, 176, 0],"bool"), list[4,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 176, 0],"bool"), list[4,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 176, 176].  Tensor sizes: [4, 1, 176, 0]
2025-03-05 15:23:02.721728 test begin: paddle.broadcast_to(Tensor([4, 1, 176, 0],"bool"), list[4,8,176,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 176, 0],"bool"), list[4,8,176,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 176, 77].  Tensor sizes: [4, 1, 176, 0]
2025-03-05 15:23:02.722367 test begin: paddle.broadcast_to(Tensor([4, 1, 177, 0],"bool"), list[4,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 177, 0],"bool"), list[4,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 177, 177].  Tensor sizes: [4, 1, 177, 0]
2025-03-05 15:23:02.723021 test begin: paddle.broadcast_to(Tensor([4, 1, 177, 0],"bool"), list[4,8,177,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 177, 0],"bool"), list[4,8,177,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 177, 77].  Tensor sizes: [4, 1, 177, 0]
2025-03-05 15:23:02.723750 test begin: paddle.broadcast_to(Tensor([4, 1, 178, 0],"bool"), list[4,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 178, 0],"bool"), list[4,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 178, 178].  Tensor sizes: [4, 1, 178, 0]
2025-03-05 15:23:02.724488 test begin: paddle.broadcast_to(Tensor([4, 1, 178, 0],"bool"), list[4,8,178,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 178, 0],"bool"), list[4,8,178,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 178, 77].  Tensor sizes: [4, 1, 178, 0]
2025-03-05 15:23:02.725241 test begin: paddle.broadcast_to(Tensor([4, 1, 179, 0],"bool"), list[4,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 179, 0],"bool"), list[4,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 179, 179].  Tensor sizes: [4, 1, 179, 0]
2025-03-05 15:23:02.725991 test begin: paddle.broadcast_to(Tensor([4, 1, 179, 0],"bool"), list[4,8,179,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 179, 0],"bool"), list[4,8,179,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 179, 77].  Tensor sizes: [4, 1, 179, 0]
2025-03-05 15:23:02.726719 test begin: paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 18, 13].  Tensor sizes: [4, 1, 18, 0]
2025-03-05 15:23:02.727440 test begin: paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 18, 18].  Tensor sizes: [4, 1, 18, 0]
2025-03-05 15:23:02.728901 test begin: paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 18, 25].  Tensor sizes: [4, 1, 18, 0]
2025-03-05 15:23:02.729726 test begin: paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 18, 37].  Tensor sizes: [4, 1, 18, 0]
2025-03-05 15:23:02.730518 test begin: paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 18, 61].  Tensor sizes: [4, 1, 18, 0]
2025-03-05 15:23:02.731676 test begin: paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 18, 0],"bool"), list[4,8,18,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 18, 77].  Tensor sizes: [4, 1, 18, 0]
2025-03-05 15:23:02.732404 test begin: paddle.broadcast_to(Tensor([4, 1, 180, 0],"bool"), list[4,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 180, 0],"bool"), list[4,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 180, 180].  Tensor sizes: [4, 1, 180, 0]
2025-03-05 15:23:02.733117 test begin: paddle.broadcast_to(Tensor([4, 1, 180, 0],"bool"), list[4,8,180,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 180, 0],"bool"), list[4,8,180,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 180, 77].  Tensor sizes: [4, 1, 180, 0]
2025-03-05 15:23:02.734392 test begin: paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 19, 13].  Tensor sizes: [4, 1, 19, 0]
2025-03-05 15:23:02.736166 test begin: paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 19, 19].  Tensor sizes: [4, 1, 19, 0]
2025-03-05 15:23:02.738070 test begin: paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 19, 25].  Tensor sizes: [4, 1, 19, 0]
2025-03-05 15:23:02.738769 test begin: paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 19, 37].  Tensor sizes: [4, 1, 19, 0]
2025-03-05 15:23:02.739331 test begin: paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 19, 61].  Tensor sizes: [4, 1, 19, 0]
2025-03-05 15:23:02.739864 test begin: paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 19, 0],"bool"), list[4,8,19,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 19, 77].  Tensor sizes: [4, 1, 19, 0]
2025-03-05 15:23:02.740390 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 13].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.740925 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 2].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.741446 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 25].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.741991 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 37].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.742507 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 5].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.743044 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 61].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.743550 test begin: paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 2, 0],"bool"), list[4,8,2,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 2, 77].  Tensor sizes: [4, 1, 2, 0]
2025-03-05 15:23:02.744083 test begin: paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 20, 13].  Tensor sizes: [4, 1, 20, 0]
2025-03-05 15:23:02.744601 test begin: paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 20, 20].  Tensor sizes: [4, 1, 20, 0]
2025-03-05 15:23:02.745121 test begin: paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 20, 25].  Tensor sizes: [4, 1, 20, 0]
2025-03-05 15:23:02.746199 test begin: paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 20, 37].  Tensor sizes: [4, 1, 20, 0]
2025-03-05 15:23:02.747096 test begin: paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 20, 61].  Tensor sizes: [4, 1, 20, 0]
2025-03-05 15:23:02.747870 test begin: paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 20, 0],"bool"), list[4,8,20,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 20, 77].  Tensor sizes: [4, 1, 20, 0]
2025-03-05 15:23:02.749409 test begin: paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 21, 13].  Tensor sizes: [4, 1, 21, 0]
2025-03-05 15:23:02.750251 test begin: paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 21, 21].  Tensor sizes: [4, 1, 21, 0]
2025-03-05 15:23:02.750946 test begin: paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 21, 25].  Tensor sizes: [4, 1, 21, 0]
2025-03-05 15:23:02.751497 test begin: paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 21, 37].  Tensor sizes: [4, 1, 21, 0]
2025-03-05 15:23:02.752062 test begin: paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 21, 61].  Tensor sizes: [4, 1, 21, 0]
2025-03-05 15:23:02.752652 test begin: paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 21, 0],"bool"), list[4,8,21,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 21, 77].  Tensor sizes: [4, 1, 21, 0]
2025-03-05 15:23:02.753237 test begin: paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 22, 13].  Tensor sizes: [4, 1, 22, 0]
2025-03-05 15:23:02.753786 test begin: paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 22, 22].  Tensor sizes: [4, 1, 22, 0]
2025-03-05 15:23:02.754337 test begin: paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 22, 25].  Tensor sizes: [4, 1, 22, 0]
2025-03-05 15:23:02.754873 test begin: paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 22, 37].  Tensor sizes: [4, 1, 22, 0]
2025-03-05 15:23:02.755396 test begin: paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 22, 61].  Tensor sizes: [4, 1, 22, 0]
2025-03-05 15:23:02.756047 test begin: paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 22, 0],"bool"), list[4,8,22,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 22, 77].  Tensor sizes: [4, 1, 22, 0]
2025-03-05 15:23:02.757030 test begin: paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 23, 13].  Tensor sizes: [4, 1, 23, 0]
2025-03-05 15:23:02.757706 test begin: paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 23, 23].  Tensor sizes: [4, 1, 23, 0]
2025-03-05 15:23:02.758241 test begin: paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 23, 25].  Tensor sizes: [4, 1, 23, 0]
2025-03-05 15:23:02.758769 test begin: paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 23, 37].  Tensor sizes: [4, 1, 23, 0]
2025-03-05 15:23:02.759301 test begin: paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 23, 61].  Tensor sizes: [4, 1, 23, 0]
2025-03-05 15:23:02.759842 test begin: paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 23, 0],"bool"), list[4,8,23,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 23, 77].  Tensor sizes: [4, 1, 23, 0]
2025-03-05 15:23:02.760358 test begin: paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 24, 13].  Tensor sizes: [4, 1, 24, 0]
2025-03-05 15:23:02.760965 test begin: paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 24, 24].  Tensor sizes: [4, 1, 24, 0]
2025-03-05 15:23:02.761488 test begin: paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 24, 25].  Tensor sizes: [4, 1, 24, 0]
2025-03-05 15:23:02.762018 test begin: paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 24, 37].  Tensor sizes: [4, 1, 24, 0]
2025-03-05 15:23:02.762588 test begin: paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 24, 61].  Tensor sizes: [4, 1, 24, 0]
2025-03-05 15:23:02.763109 test begin: paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 24, 0],"bool"), list[4,8,24,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 24, 77].  Tensor sizes: [4, 1, 24, 0]
2025-03-05 15:23:02.763630 test begin: paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 25, 13].  Tensor sizes: [4, 1, 25, 0]
2025-03-05 15:23:02.764141 test begin: paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 25, 25].  Tensor sizes: [4, 1, 25, 0]
2025-03-05 15:23:02.764726 test begin: paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 25, 37].  Tensor sizes: [4, 1, 25, 0]
2025-03-05 15:23:02.765319 test begin: paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 25, 61].  Tensor sizes: [4, 1, 25, 0]
2025-03-05 15:23:02.765878 test begin: paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 25, 0],"bool"), list[4,8,25,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 25, 77].  Tensor sizes: [4, 1, 25, 0]
2025-03-05 15:23:02.766410 test begin: paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 26, 13].  Tensor sizes: [4, 1, 26, 0]
2025-03-05 15:23:02.766935 test begin: paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 26, 26].  Tensor sizes: [4, 1, 26, 0]
2025-03-05 15:23:02.767457 test begin: paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 26, 37].  Tensor sizes: [4, 1, 26, 0]
2025-03-05 15:23:02.767991 test begin: paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 26, 61].  Tensor sizes: [4, 1, 26, 0]
2025-03-05 15:23:02.768514 test begin: paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 26, 0],"bool"), list[4,8,26,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 26, 77].  Tensor sizes: [4, 1, 26, 0]
2025-03-05 15:23:02.769044 test begin: paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 27, 13].  Tensor sizes: [4, 1, 27, 0]
2025-03-05 15:23:02.769569 test begin: paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 27, 27].  Tensor sizes: [4, 1, 27, 0]
2025-03-05 15:23:02.770152 test begin: paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 27, 37].  Tensor sizes: [4, 1, 27, 0]
2025-03-05 15:23:02.770709 test begin: paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 27, 61].  Tensor sizes: [4, 1, 27, 0]
2025-03-05 15:23:02.771241 test begin: paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 27, 0],"bool"), list[4,8,27,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 27, 77].  Tensor sizes: [4, 1, 27, 0]
2025-03-05 15:23:02.771771 test begin: paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 28, 13].  Tensor sizes: [4, 1, 28, 0]
2025-03-05 15:23:02.772301 test begin: paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 28, 28].  Tensor sizes: [4, 1, 28, 0]
2025-03-05 15:23:02.772962 test begin: paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 28, 37].  Tensor sizes: [4, 1, 28, 0]
2025-03-05 15:23:02.773556 test begin: paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 28, 61].  Tensor sizes: [4, 1, 28, 0]
2025-03-05 15:23:02.774455 test begin: paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 28, 0],"bool"), list[4,8,28,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 28, 77].  Tensor sizes: [4, 1, 28, 0]
2025-03-05 15:23:02.779182 test begin: paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 29, 29].  Tensor sizes: [4, 1, 29, 0]
2025-03-05 15:23:02.779903 test begin: paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 29, 37].  Tensor sizes: [4, 1, 29, 0]
2025-03-05 15:23:02.780485 test begin: paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 29, 61].  Tensor sizes: [4, 1, 29, 0]
2025-03-05 15:23:02.781182 test begin: paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 29, 0],"bool"), list[4,8,29,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 29, 77].  Tensor sizes: [4, 1, 29, 0]
2025-03-05 15:23:02.781759 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 13].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.782600 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 25].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.783229 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 3].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.784012 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 37].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.784743 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 5].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.785299 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 61].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.785940 test begin: paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 3, 0],"bool"), list[4,8,3,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 3, 77].  Tensor sizes: [4, 1, 3, 0]
2025-03-05 15:23:02.786688 test begin: paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 30, 30].  Tensor sizes: [4, 1, 30, 0]
2025-03-05 15:23:02.788020 test begin: paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 30, 37].  Tensor sizes: [4, 1, 30, 0]
2025-03-05 15:23:02.788599 test begin: paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 30, 61].  Tensor sizes: [4, 1, 30, 0]
2025-03-05 15:23:02.789180 test begin: paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 30, 0],"bool"), list[4,8,30,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 30, 77].  Tensor sizes: [4, 1, 30, 0]
2025-03-05 15:23:02.789744 test begin: paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 31, 31].  Tensor sizes: [4, 1, 31, 0]
2025-03-05 15:23:02.790318 test begin: paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 31, 37].  Tensor sizes: [4, 1, 31, 0]
2025-03-05 15:23:02.793857 test begin: paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 31, 61].  Tensor sizes: [4, 1, 31, 0]
2025-03-05 15:23:02.796291 test begin: paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 31, 0],"bool"), list[4,8,31,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 31, 77].  Tensor sizes: [4, 1, 31, 0]
2025-03-05 15:23:02.798084 test begin: paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 32, 32].  Tensor sizes: [4, 1, 32, 0]
2025-03-05 15:23:02.798922 test begin: paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 32, 37].  Tensor sizes: [4, 1, 32, 0]
2025-03-05 15:23:02.799741 test begin: paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 32, 61].  Tensor sizes: [4, 1, 32, 0]
2025-03-05 15:23:02.800675 test begin: paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 32, 0],"bool"), list[4,8,32,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 32, 77].  Tensor sizes: [4, 1, 32, 0]
2025-03-05 15:23:02.801267 test begin: paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 33, 33].  Tensor sizes: [4, 1, 33, 0]
2025-03-05 15:23:02.802578 test begin: paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 33, 37].  Tensor sizes: [4, 1, 33, 0]
2025-03-05 15:23:02.803631 test begin: paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 33, 61].  Tensor sizes: [4, 1, 33, 0]
2025-03-05 15:23:02.804352 test begin: paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 33, 0],"bool"), list[4,8,33,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 33, 77].  Tensor sizes: [4, 1, 33, 0]
2025-03-05 15:23:02.804989 test begin: paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 34, 34].  Tensor sizes: [4, 1, 34, 0]
2025-03-05 15:23:02.807256 test begin: paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 34, 37].  Tensor sizes: [4, 1, 34, 0]
2025-03-05 15:23:02.808192 test begin: paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 34, 61].  Tensor sizes: [4, 1, 34, 0]
2025-03-05 15:23:02.808937 test begin: paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 34, 0],"bool"), list[4,8,34,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 34, 77].  Tensor sizes: [4, 1, 34, 0]
2025-03-05 15:23:02.809526 test begin: paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 35, 35].  Tensor sizes: [4, 1, 35, 0]
2025-03-05 15:23:02.810152 test begin: paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 35, 37].  Tensor sizes: [4, 1, 35, 0]
2025-03-05 15:23:02.810728 test begin: paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 35, 61].  Tensor sizes: [4, 1, 35, 0]
2025-03-05 15:23:02.811255 test begin: paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 35, 0],"bool"), list[4,8,35,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 35, 77].  Tensor sizes: [4, 1, 35, 0]
2025-03-05 15:23:02.811775 test begin: paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 36, 36].  Tensor sizes: [4, 1, 36, 0]
2025-03-05 15:23:02.812293 test begin: paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 36, 37].  Tensor sizes: [4, 1, 36, 0]
2025-03-05 15:23:02.812805 test begin: paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 36, 61].  Tensor sizes: [4, 1, 36, 0]
2025-03-05 15:23:02.813376 test begin: paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 36, 0],"bool"), list[4,8,36,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 36, 77].  Tensor sizes: [4, 1, 36, 0]
2025-03-05 15:23:02.814315 test begin: paddle.broadcast_to(Tensor([4, 1, 37, 0],"bool"), list[4,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 37, 0],"bool"), list[4,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 37, 37].  Tensor sizes: [4, 1, 37, 0]
2025-03-05 15:23:02.815170 test begin: paddle.broadcast_to(Tensor([4, 1, 37, 0],"bool"), list[4,8,37,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 37, 0],"bool"), list[4,8,37,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 37, 61].  Tensor sizes: [4, 1, 37, 0]
2025-03-05 15:23:02.815712 test begin: paddle.broadcast_to(Tensor([4, 1, 37, 0],"bool"), list[4,8,37,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 37, 0],"bool"), list[4,8,37,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 37, 77].  Tensor sizes: [4, 1, 37, 0]
2025-03-05 15:23:02.816405 test begin: paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 38, 37].  Tensor sizes: [4, 1, 38, 0]
2025-03-05 15:23:02.816985 test begin: paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 38, 38].  Tensor sizes: [4, 1, 38, 0]
2025-03-05 15:23:02.817556 test begin: paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 38, 61].  Tensor sizes: [4, 1, 38, 0]
2025-03-05 15:23:02.819111 test begin: paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 38, 0],"bool"), list[4,8,38,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 38, 77].  Tensor sizes: [4, 1, 38, 0]
2025-03-05 15:23:02.820497 test begin: paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 39, 37].  Tensor sizes: [4, 1, 39, 0]
2025-03-05 15:23:02.821469 test begin: paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 39, 39].  Tensor sizes: [4, 1, 39, 0]
2025-03-05 15:23:02.822611 test begin: paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 39, 61].  Tensor sizes: [4, 1, 39, 0]
2025-03-05 15:23:02.823313 test begin: paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 39, 0],"bool"), list[4,8,39,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 39, 77].  Tensor sizes: [4, 1, 39, 0]
2025-03-05 15:23:02.824030 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 13].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.825077 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 25].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.829076 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 37].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.829688 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 4].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.832282 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 5].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.832936 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 61].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.833545 test begin: paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 4, 0],"bool"), list[4,8,4,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 4, 77].  Tensor sizes: [4, 1, 4, 0]
2025-03-05 15:23:02.834277 test begin: paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 40, 37].  Tensor sizes: [4, 1, 40, 0]
2025-03-05 15:23:02.835614 test begin: paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 40, 40].  Tensor sizes: [4, 1, 40, 0]
2025-03-05 15:23:02.836264 test begin: paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 40, 61].  Tensor sizes: [4, 1, 40, 0]
2025-03-05 15:23:02.836913 test begin: paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 40, 0],"bool"), list[4,8,40,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 40, 77].  Tensor sizes: [4, 1, 40, 0]
2025-03-05 15:23:02.837470 test begin: paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 41, 37].  Tensor sizes: [4, 1, 41, 0]
2025-03-05 15:23:02.838003 test begin: paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 41, 41].  Tensor sizes: [4, 1, 41, 0]
2025-03-05 15:23:02.838528 test begin: paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 41, 61].  Tensor sizes: [4, 1, 41, 0]
2025-03-05 15:23:02.839061 test begin: paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 41, 0],"bool"), list[4,8,41,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 41, 77].  Tensor sizes: [4, 1, 41, 0]
2025-03-05 15:23:02.839602 test begin: paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 42, 37].  Tensor sizes: [4, 1, 42, 0]
2025-03-05 15:23:02.840134 test begin: paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 42, 42].  Tensor sizes: [4, 1, 42, 0]
2025-03-05 15:23:02.840653 test begin: paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 42, 61].  Tensor sizes: [4, 1, 42, 0]
2025-03-05 15:23:02.841170 test begin: paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 42, 0],"bool"), list[4,8,42,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 42, 77].  Tensor sizes: [4, 1, 42, 0]
2025-03-05 15:23:02.841697 test begin: paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 43, 37].  Tensor sizes: [4, 1, 43, 0]
2025-03-05 15:23:02.842206 test begin: paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 43, 43].  Tensor sizes: [4, 1, 43, 0]
2025-03-05 15:23:02.842730 test begin: paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 43, 61].  Tensor sizes: [4, 1, 43, 0]
2025-03-05 15:23:02.843247 test begin: paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 43, 0],"bool"), list[4,8,43,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 43, 77].  Tensor sizes: [4, 1, 43, 0]
2025-03-05 15:23:02.843783 test begin: paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 44, 37].  Tensor sizes: [4, 1, 44, 0]
2025-03-05 15:23:02.844306 test begin: paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 44, 44].  Tensor sizes: [4, 1, 44, 0]
2025-03-05 15:23:02.844909 test begin: paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 44, 61].  Tensor sizes: [4, 1, 44, 0]
2025-03-05 15:23:02.845454 test begin: paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 44, 0],"bool"), list[4,8,44,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 44, 77].  Tensor sizes: [4, 1, 44, 0]
2025-03-05 15:23:02.846063 test begin: paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 45, 37].  Tensor sizes: [4, 1, 45, 0]
2025-03-05 15:23:02.846770 test begin: paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 45, 45].  Tensor sizes: [4, 1, 45, 0]
2025-03-05 15:23:02.847368 test begin: paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 45, 61].  Tensor sizes: [4, 1, 45, 0]
2025-03-05 15:23:02.847983 test begin: paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 45, 0],"bool"), list[4,8,45,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 45, 77].  Tensor sizes: [4, 1, 45, 0]
2025-03-05 15:23:02.848511 test begin: paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 46, 37].  Tensor sizes: [4, 1, 46, 0]
2025-03-05 15:23:02.849039 test begin: paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 46, 46].  Tensor sizes: [4, 1, 46, 0]
2025-03-05 15:23:02.849556 test begin: paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 46, 61].  Tensor sizes: [4, 1, 46, 0]
2025-03-05 15:23:02.850105 test begin: paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 46, 0],"bool"), list[4,8,46,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 46, 77].  Tensor sizes: [4, 1, 46, 0]
2025-03-05 15:23:02.850651 test begin: paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 47, 37].  Tensor sizes: [4, 1, 47, 0]
2025-03-05 15:23:02.851296 test begin: paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 47, 47].  Tensor sizes: [4, 1, 47, 0]
2025-03-05 15:23:02.851951 test begin: paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 47, 61].  Tensor sizes: [4, 1, 47, 0]
2025-03-05 15:23:02.852562 test begin: paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 47, 0],"bool"), list[4,8,47,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 47, 77].  Tensor sizes: [4, 1, 47, 0]
2025-03-05 15:23:02.853140 test begin: paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 48, 37].  Tensor sizes: [4, 1, 48, 0]
2025-03-05 15:23:02.853840 test begin: paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 48, 48].  Tensor sizes: [4, 1, 48, 0]
2025-03-05 15:23:02.854468 test begin: paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 48, 61].  Tensor sizes: [4, 1, 48, 0]
2025-03-05 15:23:02.855068 test begin: paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 48, 0],"bool"), list[4,8,48,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 48, 77].  Tensor sizes: [4, 1, 48, 0]
2025-03-05 15:23:02.855724 test begin: paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 49, 37].  Tensor sizes: [4, 1, 49, 0]
2025-03-05 15:23:02.856696 test begin: paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 49, 49].  Tensor sizes: [4, 1, 49, 0]
2025-03-05 15:23:02.857308 test begin: paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 49, 61].  Tensor sizes: [4, 1, 49, 0]
2025-03-05 15:23:02.857849 test begin: paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 49, 0],"bool"), list[4,8,49,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 49, 77].  Tensor sizes: [4, 1, 49, 0]
2025-03-05 15:23:02.858431 test begin: paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 5, 13].  Tensor sizes: [4, 1, 5, 0]
2025-03-05 15:23:02.859543 test begin: paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 5, 25].  Tensor sizes: [4, 1, 5, 0]
2025-03-05 15:23:02.860448 test begin: paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 5, 37].  Tensor sizes: [4, 1, 5, 0]
2025-03-05 15:23:02.861335 test begin: paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 5, 5].  Tensor sizes: [4, 1, 5, 0]
2025-03-05 15:23:02.862033 test begin: paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 5, 61].  Tensor sizes: [4, 1, 5, 0]
2025-03-05 15:23:02.862698 test begin: paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 5, 0],"bool"), list[4,8,5,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 5, 77].  Tensor sizes: [4, 1, 5, 0]
2025-03-05 15:23:02.863341 test begin: paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 50, 37].  Tensor sizes: [4, 1, 50, 0]
2025-03-05 15:23:02.864031 test begin: paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 50, 50].  Tensor sizes: [4, 1, 50, 0]
2025-03-05 15:23:02.864638 test begin: paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 50, 61].  Tensor sizes: [4, 1, 50, 0]
2025-03-05 15:23:02.865326 test begin: paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 50, 0],"bool"), list[4,8,50,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 50, 77].  Tensor sizes: [4, 1, 50, 0]
2025-03-05 15:23:02.865924 test begin: paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 51, 37].  Tensor sizes: [4, 1, 51, 0]
2025-03-05 15:23:02.870791 test begin: paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 51, 51].  Tensor sizes: [4, 1, 51, 0]
2025-03-05 15:23:02.872444 test begin: paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 51, 61].  Tensor sizes: [4, 1, 51, 0]
2025-03-05 15:23:02.873769 test begin: paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 51, 0],"bool"), list[4,8,51,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 51, 77].  Tensor sizes: [4, 1, 51, 0]
2025-03-05 15:23:02.874637 test begin: paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 52, 37].  Tensor sizes: [4, 1, 52, 0]
2025-03-05 15:23:02.875448 test begin: paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 52, 52].  Tensor sizes: [4, 1, 52, 0]
2025-03-05 15:23:02.876250 test begin: paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 52, 61].  Tensor sizes: [4, 1, 52, 0]
2025-03-05 15:23:02.877057 test begin: paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 52, 0],"bool"), list[4,8,52,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 52, 77].  Tensor sizes: [4, 1, 52, 0]
2025-03-05 15:23:02.877710 test begin: paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 53, 37].  Tensor sizes: [4, 1, 53, 0]
2025-03-05 15:23:02.878937 test begin: paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 53, 53].  Tensor sizes: [4, 1, 53, 0]
2025-03-05 15:23:02.880062 test begin: paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 53, 61].  Tensor sizes: [4, 1, 53, 0]
2025-03-05 15:23:02.880821 test begin: paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 53, 0],"bool"), list[4,8,53,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 53, 77].  Tensor sizes: [4, 1, 53, 0]
2025-03-05 15:23:02.881414 test begin: paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 54, 37].  Tensor sizes: [4, 1, 54, 0]
2025-03-05 15:23:02.882012 test begin: paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 54, 54].  Tensor sizes: [4, 1, 54, 0]
2025-03-05 15:23:02.882892 test begin: paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 54, 61].  Tensor sizes: [4, 1, 54, 0]
2025-03-05 15:23:02.884042 test begin: paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 54, 0],"bool"), list[4,8,54,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 54, 77].  Tensor sizes: [4, 1, 54, 0]
2025-03-05 15:23:02.884835 test begin: paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 55, 37].  Tensor sizes: [4, 1, 55, 0]
2025-03-05 15:23:02.885644 test begin: paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 55, 55].  Tensor sizes: [4, 1, 55, 0]
2025-03-05 15:23:02.886351 test begin: paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 55, 61].  Tensor sizes: [4, 1, 55, 0]
2025-03-05 15:23:02.887291 test begin: paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 55, 0],"bool"), list[4,8,55,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 55, 77].  Tensor sizes: [4, 1, 55, 0]
2025-03-05 15:23:02.887969 test begin: paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 56, 37].  Tensor sizes: [4, 1, 56, 0]
2025-03-05 15:23:02.888881 test begin: paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 56, 56].  Tensor sizes: [4, 1, 56, 0]
2025-03-05 15:23:02.889659 test begin: paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 56, 61].  Tensor sizes: [4, 1, 56, 0]
2025-03-05 15:23:02.895510 test begin: paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 56, 0],"bool"), list[4,8,56,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 56, 77].  Tensor sizes: [4, 1, 56, 0]
2025-03-05 15:23:02.898858 test begin: paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 57, 37].  Tensor sizes: [4, 1, 57, 0]
2025-03-05 15:23:02.899530 test begin: paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 57, 57].  Tensor sizes: [4, 1, 57, 0]
2025-03-05 15:23:02.902634 test begin: paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 57, 61].  Tensor sizes: [4, 1, 57, 0]
2025-03-05 15:23:02.903307 test begin: paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 57, 0],"bool"), list[4,8,57,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 57, 77].  Tensor sizes: [4, 1, 57, 0]
2025-03-05 15:23:02.904902 test begin: paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 58, 37].  Tensor sizes: [4, 1, 58, 0]
2025-03-05 15:23:02.906131 test begin: paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 58, 58].  Tensor sizes: [4, 1, 58, 0]
2025-03-05 15:23:02.907828 test begin: paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 58, 61].  Tensor sizes: [4, 1, 58, 0]
2025-03-05 15:23:02.908428 test begin: paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 58, 0],"bool"), list[4,8,58,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 58, 77].  Tensor sizes: [4, 1, 58, 0]
2025-03-05 15:23:02.910108 test begin: paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 59, 37].  Tensor sizes: [4, 1, 59, 0]
2025-03-05 15:23:02.911260 test begin: paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 59, 59].  Tensor sizes: [4, 1, 59, 0]
2025-03-05 15:23:02.912538 test begin: paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 59, 61].  Tensor sizes: [4, 1, 59, 0]
2025-03-05 15:23:02.913200 test begin: paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 59, 0],"bool"), list[4,8,59,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 59, 77].  Tensor sizes: [4, 1, 59, 0]
2025-03-05 15:23:02.913832 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 13].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.914935 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 25].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.915544 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 37].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.916148 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 5].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.916726 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 6].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.917251 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 61].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.917897 test begin: paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 6, 0],"bool"), list[4,8,6,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 6, 77].  Tensor sizes: [4, 1, 6, 0]
2025-03-05 15:23:02.918455 test begin: paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 60, 37].  Tensor sizes: [4, 1, 60, 0]
2025-03-05 15:23:02.919064 test begin: paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 60, 60].  Tensor sizes: [4, 1, 60, 0]
2025-03-05 15:23:02.921051 test begin: paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 60, 61].  Tensor sizes: [4, 1, 60, 0]
2025-03-05 15:23:02.922639 test begin: paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 60, 0],"bool"), list[4,8,60,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 60, 77].  Tensor sizes: [4, 1, 60, 0]
2025-03-05 15:23:02.923298 test begin: paddle.broadcast_to(Tensor([4, 1, 61, 0],"bool"), list[4,8,61,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 61, 0],"bool"), list[4,8,61,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 61, 37].  Tensor sizes: [4, 1, 61, 0]
2025-03-05 15:23:02.923933 test begin: paddle.broadcast_to(Tensor([4, 1, 61, 0],"bool"), list[4,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 61, 0],"bool"), list[4,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 61, 61].  Tensor sizes: [4, 1, 61, 0]
2025-03-05 15:23:02.924465 test begin: paddle.broadcast_to(Tensor([4, 1, 61, 0],"bool"), list[4,8,61,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 61, 0],"bool"), list[4,8,61,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 61, 77].  Tensor sizes: [4, 1, 61, 0]
2025-03-05 15:23:02.925010 test begin: paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 62, 37].  Tensor sizes: [4, 1, 62, 0]
2025-03-05 15:23:02.925630 test begin: paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 62, 61].  Tensor sizes: [4, 1, 62, 0]
2025-03-05 15:23:02.926561 test begin: paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 62, 62].  Tensor sizes: [4, 1, 62, 0]
2025-03-05 15:23:02.927148 test begin: paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 62, 0],"bool"), list[4,8,62,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 62, 77].  Tensor sizes: [4, 1, 62, 0]
2025-03-05 15:23:02.927735 test begin: paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 63, 37].  Tensor sizes: [4, 1, 63, 0]
2025-03-05 15:23:02.928327 test begin: paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 63, 61].  Tensor sizes: [4, 1, 63, 0]
2025-03-05 15:23:02.928917 test begin: paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 63, 63].  Tensor sizes: [4, 1, 63, 0]
2025-03-05 15:23:02.929879 test begin: paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 63, 0],"bool"), list[4,8,63,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 63, 77].  Tensor sizes: [4, 1, 63, 0]
2025-03-05 15:23:02.930499 test begin: paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 64, 37].  Tensor sizes: [4, 1, 64, 0]
2025-03-05 15:23:02.931094 test begin: paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 64, 61].  Tensor sizes: [4, 1, 64, 0]
2025-03-05 15:23:02.931701 test begin: paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 64, 64].  Tensor sizes: [4, 1, 64, 0]
2025-03-05 15:23:02.932303 test begin: paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 64, 0],"bool"), list[4,8,64,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 64, 77].  Tensor sizes: [4, 1, 64, 0]
2025-03-05 15:23:02.932896 test begin: paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 65, 37].  Tensor sizes: [4, 1, 65, 0]
2025-03-05 15:23:02.933481 test begin: paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 65, 61].  Tensor sizes: [4, 1, 65, 0]
2025-03-05 15:23:02.934075 test begin: paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 65, 65].  Tensor sizes: [4, 1, 65, 0]
2025-03-05 15:23:02.934661 test begin: paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 65, 0],"bool"), list[4,8,65,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 65, 77].  Tensor sizes: [4, 1, 65, 0]
2025-03-05 15:23:02.935237 test begin: paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 66, 37].  Tensor sizes: [4, 1, 66, 0]
2025-03-05 15:23:02.935822 test begin: paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 66, 61].  Tensor sizes: [4, 1, 66, 0]
2025-03-05 15:23:02.936407 test begin: paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 66, 66].  Tensor sizes: [4, 1, 66, 0]
2025-03-05 15:23:02.936985 test begin: paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 66, 0],"bool"), list[4,8,66,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 66, 77].  Tensor sizes: [4, 1, 66, 0]
2025-03-05 15:23:02.937568 test begin: paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 67, 37].  Tensor sizes: [4, 1, 67, 0]
2025-03-05 15:23:02.938158 test begin: paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 67, 61].  Tensor sizes: [4, 1, 67, 0]
2025-03-05 15:23:02.938736 test begin: paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 67, 67].  Tensor sizes: [4, 1, 67, 0]
2025-03-05 15:23:02.940187 test begin: paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 67, 0],"bool"), list[4,8,67,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 67, 77].  Tensor sizes: [4, 1, 67, 0]
2025-03-05 15:23:02.941392 test begin: paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 68, 37].  Tensor sizes: [4, 1, 68, 0]
2025-03-05 15:23:02.942674 test begin: paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 68, 61].  Tensor sizes: [4, 1, 68, 0]
2025-03-05 15:23:02.943348 test begin: paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 68, 68].  Tensor sizes: [4, 1, 68, 0]
2025-03-05 15:23:02.943949 test begin: paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 68, 0],"bool"), list[4,8,68,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 68, 77].  Tensor sizes: [4, 1, 68, 0]
2025-03-05 15:23:02.944493 test begin: paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 69, 37].  Tensor sizes: [4, 1, 69, 0]
2025-03-05 15:23:02.945074 test begin: paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 69, 61].  Tensor sizes: [4, 1, 69, 0]
2025-03-05 15:23:02.945608 test begin: paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 69, 69].  Tensor sizes: [4, 1, 69, 0]
2025-03-05 15:23:02.946237 test begin: paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 69, 0],"bool"), list[4,8,69,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 69, 77].  Tensor sizes: [4, 1, 69, 0]
2025-03-05 15:23:02.946820 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 13].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.947427 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 25].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.948343 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 37].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.948956 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 5].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.949579 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 61].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.950635 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 7].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.951346 test begin: paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 7, 0],"bool"), list[4,8,7,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 7, 77].  Tensor sizes: [4, 1, 7, 0]
2025-03-05 15:23:02.951984 test begin: paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 70, 37].  Tensor sizes: [4, 1, 70, 0]
2025-03-05 15:23:02.954970 test begin: paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 70, 61].  Tensor sizes: [4, 1, 70, 0]
2025-03-05 15:23:02.956459 test begin: paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 70, 70].  Tensor sizes: [4, 1, 70, 0]
2025-03-05 15:23:02.957612 test begin: paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 70, 0],"bool"), list[4,8,70,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 70, 77].  Tensor sizes: [4, 1, 70, 0]
2025-03-05 15:23:02.958352 test begin: paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 71, 37].  Tensor sizes: [4, 1, 71, 0]
2025-03-05 15:23:02.959092 test begin: paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 71, 61].  Tensor sizes: [4, 1, 71, 0]
2025-03-05 15:23:02.959947 test begin: paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 71, 71].  Tensor sizes: [4, 1, 71, 0]
2025-03-05 15:23:02.960682 test begin: paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 71, 0],"bool"), list[4,8,71,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 71, 77].  Tensor sizes: [4, 1, 71, 0]
2025-03-05 15:23:02.961404 test begin: paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 72, 37].  Tensor sizes: [4, 1, 72, 0]
2025-03-05 15:23:02.962101 test begin: paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 72, 61].  Tensor sizes: [4, 1, 72, 0]
2025-03-05 15:23:02.963236 test begin: paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 72, 72].  Tensor sizes: [4, 1, 72, 0]
2025-03-05 15:23:02.964042 test begin: paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 72, 0],"bool"), list[4,8,72,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 72, 77].  Tensor sizes: [4, 1, 72, 0]
2025-03-05 15:23:02.964631 test begin: paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 73, 37].  Tensor sizes: [4, 1, 73, 0]
2025-03-05 15:23:02.965170 test begin: paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 73, 61].  Tensor sizes: [4, 1, 73, 0]
2025-03-05 15:23:02.966253 test begin: paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 73, 73].  Tensor sizes: [4, 1, 73, 0]
2025-03-05 15:23:02.968347 test begin: paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 73, 0],"bool"), list[4,8,73,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 73, 77].  Tensor sizes: [4, 1, 73, 0]
2025-03-05 15:23:02.968897 test begin: paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 74, 37].  Tensor sizes: [4, 1, 74, 0]
2025-03-05 15:23:02.969431 test begin: paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 74, 61].  Tensor sizes: [4, 1, 74, 0]
2025-03-05 15:23:02.970033 test begin: paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 74, 74].  Tensor sizes: [4, 1, 74, 0]
2025-03-05 15:23:02.970698 test begin: paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 74, 0],"bool"), list[4,8,74,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 74, 77].  Tensor sizes: [4, 1, 74, 0]
2025-03-05 15:23:02.971509 test begin: paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 75, 37].  Tensor sizes: [4, 1, 75, 0]
2025-03-05 15:23:02.972275 test begin: paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 75, 61].  Tensor sizes: [4, 1, 75, 0]
2025-03-05 15:23:02.972947 test begin: paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 75, 75].  Tensor sizes: [4, 1, 75, 0]
2025-03-05 15:23:02.973791 test begin: paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 75, 0],"bool"), list[4,8,75,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 75, 77].  Tensor sizes: [4, 1, 75, 0]
2025-03-05 15:23:02.974568 test begin: paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 76, 37].  Tensor sizes: [4, 1, 76, 0]
2025-03-05 15:23:02.975239 test begin: paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 76, 61].  Tensor sizes: [4, 1, 76, 0]
2025-03-05 15:23:02.975857 test begin: paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 76, 76].  Tensor sizes: [4, 1, 76, 0]
2025-03-05 15:23:02.976416 test begin: paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 76, 0],"bool"), list[4,8,76,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 76, 77].  Tensor sizes: [4, 1, 76, 0]
2025-03-05 15:23:02.976955 test begin: paddle.broadcast_to(Tensor([4, 1, 77, 0],"bool"), list[4,8,77,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 77, 0],"bool"), list[4,8,77,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 77, 37].  Tensor sizes: [4, 1, 77, 0]
2025-03-05 15:23:02.977946 test begin: paddle.broadcast_to(Tensor([4, 1, 77, 0],"bool"), list[4,8,77,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 77, 0],"bool"), list[4,8,77,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 77, 61].  Tensor sizes: [4, 1, 77, 0]
2025-03-05 15:23:02.979031 test begin: paddle.broadcast_to(Tensor([4, 1, 77, 0],"bool"), list[4,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 77, 0],"bool"), list[4,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 77, 77].  Tensor sizes: [4, 1, 77, 0]
2025-03-05 15:23:02.980449 test begin: paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 78, 37].  Tensor sizes: [4, 1, 78, 0]
2025-03-05 15:23:02.981021 test begin: paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 78, 61].  Tensor sizes: [4, 1, 78, 0]
2025-03-05 15:23:02.981642 test begin: paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 78, 77].  Tensor sizes: [4, 1, 78, 0]
2025-03-05 15:23:02.982455 test begin: paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 78, 0],"bool"), list[4,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 78, 78].  Tensor sizes: [4, 1, 78, 0]
2025-03-05 15:23:02.983638 test begin: paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 79, 37].  Tensor sizes: [4, 1, 79, 0]
2025-03-05 15:23:02.984683 test begin: paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 79, 61].  Tensor sizes: [4, 1, 79, 0]
2025-03-05 15:23:02.985502 test begin: paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 79, 77].  Tensor sizes: [4, 1, 79, 0]
2025-03-05 15:23:02.986138 test begin: paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 79, 0],"bool"), list[4,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 79, 79].  Tensor sizes: [4, 1, 79, 0]
2025-03-05 15:23:02.988219 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 13].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.988961 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 25].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.989620 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 37].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.990179 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 5].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.990901 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 61].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.991511 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 77].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.992125 test begin: paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 8, 0],"bool"), list[4,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 8, 8].  Tensor sizes: [4, 1, 8, 0]
2025-03-05 15:23:02.992669 test begin: paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 80, 37].  Tensor sizes: [4, 1, 80, 0]
2025-03-05 15:23:02.993241 test begin: paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 80, 61].  Tensor sizes: [4, 1, 80, 0]
2025-03-05 15:23:02.993786 test begin: paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 80, 77].  Tensor sizes: [4, 1, 80, 0]
2025-03-05 15:23:02.995098 test begin: paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 80, 0],"bool"), list[4,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 80, 80].  Tensor sizes: [4, 1, 80, 0]
2025-03-05 15:23:02.996549 test begin: paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 81, 37].  Tensor sizes: [4, 1, 81, 0]
2025-03-05 15:23:02.997367 test begin: paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 81, 61].  Tensor sizes: [4, 1, 81, 0]
2025-03-05 15:23:02.998779 test begin: paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 81, 77].  Tensor sizes: [4, 1, 81, 0]
2025-03-05 15:23:02.999407 test begin: paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 81, 0],"bool"), list[4,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 81, 81].  Tensor sizes: [4, 1, 81, 0]
2025-03-05 15:23:02.999985 test begin: paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 82, 37].  Tensor sizes: [4, 1, 82, 0]
2025-03-05 15:23:03.000872 test begin: paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 82, 61].  Tensor sizes: [4, 1, 82, 0]
2025-03-05 15:23:03.001517 test begin: paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 82, 77].  Tensor sizes: [4, 1, 82, 0]
2025-03-05 15:23:03.002179 test begin: paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 82, 0],"bool"), list[4,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 82, 82].  Tensor sizes: [4, 1, 82, 0]
2025-03-05 15:23:03.003306 test begin: paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 83, 37].  Tensor sizes: [4, 1, 83, 0]
2025-03-05 15:23:03.003878 test begin: paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 83, 61].  Tensor sizes: [4, 1, 83, 0]
2025-03-05 15:23:03.004463 test begin: paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 83, 77].  Tensor sizes: [4, 1, 83, 0]
2025-03-05 15:23:03.005062 test begin: paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 83, 0],"bool"), list[4,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 83, 83].  Tensor sizes: [4, 1, 83, 0]
2025-03-05 15:23:03.005712 test begin: paddle.broadcast_to(Tensor([4, 1, 84, 0],"bool"), list[4,8,84,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 84, 0],"bool"), list[4,8,84,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 84, 61].  Tensor sizes: [4, 1, 84, 0]
2025-03-05 15:23:03.006265 test begin: paddle.broadcast_to(Tensor([4, 1, 84, 0],"bool"), list[4,8,84,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 84, 0],"bool"), list[4,8,84,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 84, 77].  Tensor sizes: [4, 1, 84, 0]
2025-03-05 15:23:03.007224 test begin: paddle.broadcast_to(Tensor([4, 1, 84, 0],"bool"), list[4,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 84, 0],"bool"), list[4,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 84, 84].  Tensor sizes: [4, 1, 84, 0]
2025-03-05 15:23:03.007924 test begin: paddle.broadcast_to(Tensor([4, 1, 85, 0],"bool"), list[4,8,85,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 85, 0],"bool"), list[4,8,85,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 85, 61].  Tensor sizes: [4, 1, 85, 0]
2025-03-05 15:23:03.008594 test begin: paddle.broadcast_to(Tensor([4, 1, 85, 0],"bool"), list[4,8,85,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 85, 0],"bool"), list[4,8,85,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 85, 77].  Tensor sizes: [4, 1, 85, 0]
2025-03-05 15:23:03.009173 test begin: paddle.broadcast_to(Tensor([4, 1, 85, 0],"bool"), list[4,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 85, 0],"bool"), list[4,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 85, 85].  Tensor sizes: [4, 1, 85, 0]
2025-03-05 15:23:03.009731 test begin: paddle.broadcast_to(Tensor([4, 1, 86, 0],"bool"), list[4,8,86,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 86, 0],"bool"), list[4,8,86,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 86, 61].  Tensor sizes: [4, 1, 86, 0]
2025-03-05 15:23:03.010287 test begin: paddle.broadcast_to(Tensor([4, 1, 86, 0],"bool"), list[4,8,86,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 86, 0],"bool"), list[4,8,86,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 86, 77].  Tensor sizes: [4, 1, 86, 0]
2025-03-05 15:23:03.010827 test begin: paddle.broadcast_to(Tensor([4, 1, 86, 0],"bool"), list[4,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 86, 0],"bool"), list[4,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 86, 86].  Tensor sizes: [4, 1, 86, 0]
2025-03-05 15:23:03.011358 test begin: paddle.broadcast_to(Tensor([4, 1, 87, 0],"bool"), list[4,8,87,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 87, 0],"bool"), list[4,8,87,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 87, 61].  Tensor sizes: [4, 1, 87, 0]
2025-03-05 15:23:03.011889 test begin: paddle.broadcast_to(Tensor([4, 1, 87, 0],"bool"), list[4,8,87,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 87, 0],"bool"), list[4,8,87,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 87, 77].  Tensor sizes: [4, 1, 87, 0]
2025-03-05 15:23:03.012397 test begin: paddle.broadcast_to(Tensor([4, 1, 87, 0],"bool"), list[4,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 87, 0],"bool"), list[4,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 87, 87].  Tensor sizes: [4, 1, 87, 0]
2025-03-05 15:23:03.012908 test begin: paddle.broadcast_to(Tensor([4, 1, 88, 0],"bool"), list[4,8,88,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 88, 0],"bool"), list[4,8,88,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 88, 61].  Tensor sizes: [4, 1, 88, 0]
2025-03-05 15:23:03.013595 test begin: paddle.broadcast_to(Tensor([4, 1, 88, 0],"bool"), list[4,8,88,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 88, 0],"bool"), list[4,8,88,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 88, 77].  Tensor sizes: [4, 1, 88, 0]
2025-03-05 15:23:03.014258 test begin: paddle.broadcast_to(Tensor([4, 1, 88, 0],"bool"), list[4,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 88, 0],"bool"), list[4,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 88, 88].  Tensor sizes: [4, 1, 88, 0]
2025-03-05 15:23:03.014960 test begin: paddle.broadcast_to(Tensor([4, 1, 89, 0],"bool"), list[4,8,89,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 89, 0],"bool"), list[4,8,89,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 89, 61].  Tensor sizes: [4, 1, 89, 0]
2025-03-05 15:23:03.015636 test begin: paddle.broadcast_to(Tensor([4, 1, 89, 0],"bool"), list[4,8,89,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 89, 0],"bool"), list[4,8,89,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 89, 77].  Tensor sizes: [4, 1, 89, 0]
2025-03-05 15:23:03.016298 test begin: paddle.broadcast_to(Tensor([4, 1, 89, 0],"bool"), list[4,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 89, 0],"bool"), list[4,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 89, 89].  Tensor sizes: [4, 1, 89, 0]
2025-03-05 15:23:03.016965 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,13,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 13].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.017830 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,25,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 25].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.018491 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,37,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 37].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.019044 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,5,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 5].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.019577 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 61].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.020115 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 77].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.020654 test begin: paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 9, 0],"bool"), list[4,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 9, 9].  Tensor sizes: [4, 1, 9, 0]
2025-03-05 15:23:03.021175 test begin: paddle.broadcast_to(Tensor([4, 1, 90, 0],"bool"), list[4,8,90,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 90, 0],"bool"), list[4,8,90,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 90, 61].  Tensor sizes: [4, 1, 90, 0]
2025-03-05 15:23:03.021714 test begin: paddle.broadcast_to(Tensor([4, 1, 90, 0],"bool"), list[4,8,90,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 90, 0],"bool"), list[4,8,90,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 90, 77].  Tensor sizes: [4, 1, 90, 0]
2025-03-05 15:23:03.022244 test begin: paddle.broadcast_to(Tensor([4, 1, 90, 0],"bool"), list[4,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 90, 0],"bool"), list[4,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 90, 90].  Tensor sizes: [4, 1, 90, 0]
2025-03-05 15:23:03.022761 test begin: paddle.broadcast_to(Tensor([4, 1, 91, 0],"bool"), list[4,8,91,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 91, 0],"bool"), list[4,8,91,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 91, 61].  Tensor sizes: [4, 1, 91, 0]
2025-03-05 15:23:03.023278 test begin: paddle.broadcast_to(Tensor([4, 1, 91, 0],"bool"), list[4,8,91,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 91, 0],"bool"), list[4,8,91,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 91, 77].  Tensor sizes: [4, 1, 91, 0]
2025-03-05 15:23:03.023800 test begin: paddle.broadcast_to(Tensor([4, 1, 91, 0],"bool"), list[4,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 91, 0],"bool"), list[4,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 91, 91].  Tensor sizes: [4, 1, 91, 0]
2025-03-05 15:23:03.024317 test begin: paddle.broadcast_to(Tensor([4, 1, 92, 0],"bool"), list[4,8,92,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 92, 0],"bool"), list[4,8,92,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 92, 61].  Tensor sizes: [4, 1, 92, 0]
2025-03-05 15:23:03.024830 test begin: paddle.broadcast_to(Tensor([4, 1, 92, 0],"bool"), list[4,8,92,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 92, 0],"bool"), list[4,8,92,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 92, 77].  Tensor sizes: [4, 1, 92, 0]
2025-03-05 15:23:03.025347 test begin: paddle.broadcast_to(Tensor([4, 1, 92, 0],"bool"), list[4,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 92, 0],"bool"), list[4,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 92, 92].  Tensor sizes: [4, 1, 92, 0]
2025-03-05 15:23:03.025871 test begin: paddle.broadcast_to(Tensor([4, 1, 93, 0],"bool"), list[4,8,93,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 93, 0],"bool"), list[4,8,93,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 93, 61].  Tensor sizes: [4, 1, 93, 0]
2025-03-05 15:23:03.026394 test begin: paddle.broadcast_to(Tensor([4, 1, 93, 0],"bool"), list[4,8,93,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 93, 0],"bool"), list[4,8,93,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 93, 77].  Tensor sizes: [4, 1, 93, 0]
2025-03-05 15:23:03.026915 test begin: paddle.broadcast_to(Tensor([4, 1, 93, 0],"bool"), list[4,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 93, 0],"bool"), list[4,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 93, 93].  Tensor sizes: [4, 1, 93, 0]
2025-03-05 15:23:03.027426 test begin: paddle.broadcast_to(Tensor([4, 1, 94, 0],"bool"), list[4,8,94,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 94, 0],"bool"), list[4,8,94,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 94, 61].  Tensor sizes: [4, 1, 94, 0]
2025-03-05 15:23:03.027954 test begin: paddle.broadcast_to(Tensor([4, 1, 94, 0],"bool"), list[4,8,94,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 94, 0],"bool"), list[4,8,94,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 94, 77].  Tensor sizes: [4, 1, 94, 0]
2025-03-05 15:23:03.028464 test begin: paddle.broadcast_to(Tensor([4, 1, 94, 0],"bool"), list[4,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 94, 0],"bool"), list[4,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 94, 94].  Tensor sizes: [4, 1, 94, 0]
2025-03-05 15:23:03.029045 test begin: paddle.broadcast_to(Tensor([4, 1, 95, 0],"bool"), list[4,8,95,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 95, 0],"bool"), list[4,8,95,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 95, 61].  Tensor sizes: [4, 1, 95, 0]
2025-03-05 15:23:03.029658 test begin: paddle.broadcast_to(Tensor([4, 1, 95, 0],"bool"), list[4,8,95,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 95, 0],"bool"), list[4,8,95,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 95, 77].  Tensor sizes: [4, 1, 95, 0]
2025-03-05 15:23:03.030194 test begin: paddle.broadcast_to(Tensor([4, 1, 95, 0],"bool"), list[4,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 95, 0],"bool"), list[4,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 95, 95].  Tensor sizes: [4, 1, 95, 0]
2025-03-05 15:23:03.030799 test begin: paddle.broadcast_to(Tensor([4, 1, 96, 0],"bool"), list[4,8,96,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 96, 0],"bool"), list[4,8,96,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 96, 61].  Tensor sizes: [4, 1, 96, 0]
2025-03-05 15:23:03.031324 test begin: paddle.broadcast_to(Tensor([4, 1, 96, 0],"bool"), list[4,8,96,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 96, 0],"bool"), list[4,8,96,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 96, 77].  Tensor sizes: [4, 1, 96, 0]
2025-03-05 15:23:03.031875 test begin: paddle.broadcast_to(Tensor([4, 1, 96, 0],"bool"), list[4,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 96, 0],"bool"), list[4,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 96, 96].  Tensor sizes: [4, 1, 96, 0]
2025-03-05 15:23:03.035005 test begin: paddle.broadcast_to(Tensor([4, 1, 97, 0],"bool"), list[4,8,97,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 97, 0],"bool"), list[4,8,97,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 97, 61].  Tensor sizes: [4, 1, 97, 0]
2025-03-05 15:23:03.037875 test begin: paddle.broadcast_to(Tensor([4, 1, 97, 0],"bool"), list[4,8,97,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 97, 0],"bool"), list[4,8,97,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 97, 77].  Tensor sizes: [4, 1, 97, 0]
2025-03-05 15:23:03.038516 test begin: paddle.broadcast_to(Tensor([4, 1, 97, 0],"bool"), list[4,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 97, 0],"bool"), list[4,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 97, 97].  Tensor sizes: [4, 1, 97, 0]
2025-03-05 15:23:03.039216 test begin: paddle.broadcast_to(Tensor([4, 1, 98, 0],"bool"), list[4,8,98,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 98, 0],"bool"), list[4,8,98,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 98, 61].  Tensor sizes: [4, 1, 98, 0]
2025-03-05 15:23:03.039832 test begin: paddle.broadcast_to(Tensor([4, 1, 98, 0],"bool"), list[4,8,98,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 98, 0],"bool"), list[4,8,98,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 98, 77].  Tensor sizes: [4, 1, 98, 0]
2025-03-05 15:23:03.040866 test begin: paddle.broadcast_to(Tensor([4, 1, 98, 0],"bool"), list[4,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 98, 0],"bool"), list[4,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 98, 98].  Tensor sizes: [4, 1, 98, 0]
2025-03-05 15:23:03.041548 test begin: paddle.broadcast_to(Tensor([4, 1, 99, 0],"bool"), list[4,8,99,61,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 99, 0],"bool"), list[4,8,99,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 99, 61].  Tensor sizes: [4, 1, 99, 0]
2025-03-05 15:23:03.042227 test begin: paddle.broadcast_to(Tensor([4, 1, 99, 0],"bool"), list[4,8,99,77,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 99, 0],"bool"), list[4,8,99,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 99, 77].  Tensor sizes: [4, 1, 99, 0]
2025-03-05 15:23:03.042772 test begin: paddle.broadcast_to(Tensor([4, 1, 99, 0],"bool"), list[4,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([4, 1, 99, 0],"bool"), list[4,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 8, 99, 99].  Tensor sizes: [4, 1, 99, 0]
2025-03-05 15:23:03.043299 test begin: paddle.broadcast_to(Tensor([4, 2, 0, 4],"float32"), tuple(4,2,3,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 2, 0, 4],"float32"), tuple(4,2,3,4,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 2, 3, 4].  Tensor sizes: [4, 2, 0, 4]
2025-03-05 15:23:03.043861 test begin: paddle.broadcast_to(Tensor([4, 2, 1, 0],"float32"), tuple(4,2,3,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 2, 1, 0],"float32"), tuple(4,2,3,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 2, 3, 4].  Tensor sizes: [4, 2, 1, 0]
2025-03-05 15:23:03.044407 test begin: paddle.broadcast_to(Tensor([4, 3, 0],"float32"), tuple(4,3,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 3, 0],"float32"), tuple(4,3,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 3, 2].  Tensor sizes: [4, 3, 0]
2025-03-05 15:23:03.044928 test begin: paddle.broadcast_to(Tensor([4, 4, 0, 2],"float64"), tuple(4,4,4,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 4, 0, 2],"float64"), tuple(4,4,4,2,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 4, 4, 2].  Tensor sizes: [4, 4, 0, 2]
2025-03-05 15:23:03.045502 test begin: paddle.broadcast_to(Tensor([4, 4, 0],"float64"), tuple(4,4,4,), )

[torch error] paddle.broadcast_to(Tensor([4, 4, 0],"float64"), tuple(4,4,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 4, 4].  Tensor sizes: [4, 4, 0]
2025-03-05 15:23:03.046043 test begin: paddle.broadcast_to(Tensor([4, 4, 4, 0],"float64"), tuple(4,4,4,2,), )

[torch error] paddle.broadcast_to(Tensor([4, 4, 4, 0],"float64"), tuple(4,4,4,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [4, 4, 4, 2].  Tensor sizes: [4, 4, 4, 0]
2025-03-05 15:23:03.046572 test begin: paddle.broadcast_to(Tensor([4, 7, 0],"float64"), tuple(4,7,6,), )

[torch error] paddle.broadcast_to(Tensor([4, 7, 0],"float64"), tuple(4,7,6,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 7, 6].  Tensor sizes: [4, 7, 0]
2025-03-05 15:23:03.047121 test begin: paddle.broadcast_to(Tensor([4, 7, 0],"int32"), tuple(4,7,1,), )

[torch error] paddle.broadcast_to(Tensor([4, 7, 0],"int32"), tuple(4,7,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [4, 7, 1].  Tensor sizes: [4, 7, 0]
2025-03-05 15:23:03.047861 test begin: paddle.broadcast_to(Tensor([5, 0, 1, 145],"bool"), list[5,8,1,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1, 145],"bool"), list[5,8,1,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 1, 145].  Tensor sizes: [5, 0, 1, 145]
2025-03-05 15:23:03.048382 test begin: paddle.broadcast_to(Tensor([5, 0, 1, 1],"bool"), list[5,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1, 1],"bool"), list[5,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 1, 1].  Tensor sizes: [5, 0, 1, 1]
2025-03-05 15:23:03.048917 test begin: paddle.broadcast_to(Tensor([5, 0, 1, 33],"bool"), list[5,8,1,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1, 33],"bool"), list[5,8,1,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 1, 33].  Tensor sizes: [5, 0, 1, 33]
2025-03-05 15:23:03.049443 test begin: paddle.broadcast_to(Tensor([5, 0, 1, 65],"bool"), list[5,8,1,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1, 65],"bool"), list[5,8,1,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 1, 65].  Tensor sizes: [5, 0, 1, 65]
2025-03-05 15:23:03.050027 test begin: paddle.broadcast_to(Tensor([5, 0, 1, 6],"float64"), list[5,17,0,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1, 6],"float64"), list[5,17,0,6,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 17, 0, 6].  Tensor sizes: [5, 0, 1, 6]
2025-03-05 15:23:03.050547 test begin: paddle.broadcast_to(Tensor([5, 0, 10, 10],"bool"), list[5,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 10, 10],"bool"), list[5,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 10, 10].  Tensor sizes: [5, 0, 10, 10]
2025-03-05 15:23:03.054436 test begin: paddle.broadcast_to(Tensor([5, 0, 10, 145],"bool"), list[5,8,10,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 10, 145],"bool"), list[5,8,10,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 10, 145].  Tensor sizes: [5, 0, 10, 145]
2025-03-05 15:23:03.055098 test begin: paddle.broadcast_to(Tensor([5, 0, 10, 33],"bool"), list[5,8,10,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 10, 33],"bool"), list[5,8,10,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 10, 33].  Tensor sizes: [5, 0, 10, 33]
2025-03-05 15:23:03.055749 test begin: paddle.broadcast_to(Tensor([5, 0, 10, 65],"bool"), list[5,8,10,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 10, 65],"bool"), list[5,8,10,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 10, 65].  Tensor sizes: [5, 0, 10, 65]
2025-03-05 15:23:03.056409 test begin: paddle.broadcast_to(Tensor([5, 0, 100, 100],"bool"), list[5,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 100, 100],"bool"), list[5,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 100, 100].  Tensor sizes: [5, 0, 100, 100]
2025-03-05 15:23:03.056967 test begin: paddle.broadcast_to(Tensor([5, 0, 100, 145],"bool"), list[5,8,100,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 100, 145],"bool"), list[5,8,100,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 100, 145].  Tensor sizes: [5, 0, 100, 145]
2025-03-05 15:23:03.057491 test begin: paddle.broadcast_to(Tensor([5, 0, 100, 65],"bool"), list[5,8,100,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 100, 65],"bool"), list[5,8,100,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 100, 65].  Tensor sizes: [5, 0, 100, 65]
2025-03-05 15:23:03.058109 test begin: paddle.broadcast_to(Tensor([5, 0, 101, 101],"bool"), list[5,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 101, 101],"bool"), list[5,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 101, 101].  Tensor sizes: [5, 0, 101, 101]
2025-03-05 15:23:03.058773 test begin: paddle.broadcast_to(Tensor([5, 0, 101, 145],"bool"), list[5,8,101,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 101, 145],"bool"), list[5,8,101,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 101, 145].  Tensor sizes: [5, 0, 101, 145]
2025-03-05 15:23:03.059431 test begin: paddle.broadcast_to(Tensor([5, 0, 101, 65],"bool"), list[5,8,101,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 101, 65],"bool"), list[5,8,101,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 101, 65].  Tensor sizes: [5, 0, 101, 65]
2025-03-05 15:23:03.060116 test begin: paddle.broadcast_to(Tensor([5, 0, 102, 102],"bool"), list[5,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 102, 102],"bool"), list[5,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 102, 102].  Tensor sizes: [5, 0, 102, 102]
2025-03-05 15:23:03.060795 test begin: paddle.broadcast_to(Tensor([5, 0, 102, 145],"bool"), list[5,8,102,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 102, 145],"bool"), list[5,8,102,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 102, 145].  Tensor sizes: [5, 0, 102, 145]
2025-03-05 15:23:03.061906 test begin: paddle.broadcast_to(Tensor([5, 0, 103, 103],"bool"), list[5,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 103, 103],"bool"), list[5,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 103, 103].  Tensor sizes: [5, 0, 103, 103]
2025-03-05 15:23:03.062748 test begin: paddle.broadcast_to(Tensor([5, 0, 103, 145],"bool"), list[5,8,103,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 103, 145],"bool"), list[5,8,103,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 103, 145].  Tensor sizes: [5, 0, 103, 145]
2025-03-05 15:23:03.063741 test begin: paddle.broadcast_to(Tensor([5, 0, 104, 104],"bool"), list[5,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 104, 104],"bool"), list[5,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 104, 104].  Tensor sizes: [5, 0, 104, 104]
2025-03-05 15:23:03.064534 test begin: paddle.broadcast_to(Tensor([5, 0, 104, 145],"bool"), list[5,8,104,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 104, 145],"bool"), list[5,8,104,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 104, 145].  Tensor sizes: [5, 0, 104, 145]
2025-03-05 15:23:03.065386 test begin: paddle.broadcast_to(Tensor([5, 0, 105, 105],"bool"), list[5,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 105, 105],"bool"), list[5,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 105, 105].  Tensor sizes: [5, 0, 105, 105]
2025-03-05 15:23:03.066028 test begin: paddle.broadcast_to(Tensor([5, 0, 105, 145],"bool"), list[5,8,105,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 105, 145],"bool"), list[5,8,105,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 105, 145].  Tensor sizes: [5, 0, 105, 145]
2025-03-05 15:23:03.066768 test begin: paddle.broadcast_to(Tensor([5, 0, 106, 106],"bool"), list[5,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 106, 106],"bool"), list[5,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 106, 106].  Tensor sizes: [5, 0, 106, 106]
2025-03-05 15:23:03.067373 test begin: paddle.broadcast_to(Tensor([5, 0, 106, 145],"bool"), list[5,8,106,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 106, 145],"bool"), list[5,8,106,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 106, 145].  Tensor sizes: [5, 0, 106, 145]
2025-03-05 15:23:03.068013 test begin: paddle.broadcast_to(Tensor([5, 0, 107, 107],"bool"), list[5,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 107, 107],"bool"), list[5,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 107, 107].  Tensor sizes: [5, 0, 107, 107]
2025-03-05 15:23:03.068665 test begin: paddle.broadcast_to(Tensor([5, 0, 107, 145],"bool"), list[5,8,107,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 107, 145],"bool"), list[5,8,107,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 107, 145].  Tensor sizes: [5, 0, 107, 145]
2025-03-05 15:23:03.069219 test begin: paddle.broadcast_to(Tensor([5, 0, 108, 108],"bool"), list[5,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 108, 108],"bool"), list[5,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 108, 108].  Tensor sizes: [5, 0, 108, 108]
2025-03-05 15:23:03.069750 test begin: paddle.broadcast_to(Tensor([5, 0, 108, 145],"bool"), list[5,8,108,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 108, 145],"bool"), list[5,8,108,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 108, 145].  Tensor sizes: [5, 0, 108, 145]
2025-03-05 15:23:03.070325 test begin: paddle.broadcast_to(Tensor([5, 0, 109, 109],"bool"), list[5,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 109, 109],"bool"), list[5,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 109, 109].  Tensor sizes: [5, 0, 109, 109]
2025-03-05 15:23:03.070891 test begin: paddle.broadcast_to(Tensor([5, 0, 109, 145],"bool"), list[5,8,109,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 109, 145],"bool"), list[5,8,109,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 109, 145].  Tensor sizes: [5, 0, 109, 145]
2025-03-05 15:23:03.071478 test begin: paddle.broadcast_to(Tensor([5, 0, 11, 11],"bool"), list[5,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 11, 11],"bool"), list[5,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 11, 11].  Tensor sizes: [5, 0, 11, 11]
2025-03-05 15:23:03.072123 test begin: paddle.broadcast_to(Tensor([5, 0, 11, 145],"bool"), list[5,8,11,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 11, 145],"bool"), list[5,8,11,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 11, 145].  Tensor sizes: [5, 0, 11, 145]
2025-03-05 15:23:03.072688 test begin: paddle.broadcast_to(Tensor([5, 0, 11, 33],"bool"), list[5,8,11,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 11, 33],"bool"), list[5,8,11,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 11, 33].  Tensor sizes: [5, 0, 11, 33]
2025-03-05 15:23:03.073303 test begin: paddle.broadcast_to(Tensor([5, 0, 11, 65],"bool"), list[5,8,11,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 11, 65],"bool"), list[5,8,11,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 11, 65].  Tensor sizes: [5, 0, 11, 65]
2025-03-05 15:23:03.073864 test begin: paddle.broadcast_to(Tensor([5, 0, 110, 110],"bool"), list[5,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 110, 110],"bool"), list[5,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 110, 110].  Tensor sizes: [5, 0, 110, 110]
2025-03-05 15:23:03.074386 test begin: paddle.broadcast_to(Tensor([5, 0, 110, 145],"bool"), list[5,8,110,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 110, 145],"bool"), list[5,8,110,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 110, 145].  Tensor sizes: [5, 0, 110, 145]
2025-03-05 15:23:03.074944 test begin: paddle.broadcast_to(Tensor([5, 0, 111, 111],"bool"), list[5,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 111, 111],"bool"), list[5,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 111, 111].  Tensor sizes: [5, 0, 111, 111]
2025-03-05 15:23:03.075467 test begin: paddle.broadcast_to(Tensor([5, 0, 111, 145],"bool"), list[5,8,111,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 111, 145],"bool"), list[5,8,111,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 111, 145].  Tensor sizes: [5, 0, 111, 145]
2025-03-05 15:23:03.076033 test begin: paddle.broadcast_to(Tensor([5, 0, 112, 112],"bool"), list[5,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 112, 112],"bool"), list[5,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 112, 112].  Tensor sizes: [5, 0, 112, 112]
2025-03-05 15:23:03.076559 test begin: paddle.broadcast_to(Tensor([5, 0, 112, 145],"bool"), list[5,8,112,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 112, 145],"bool"), list[5,8,112,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 112, 145].  Tensor sizes: [5, 0, 112, 145]
2025-03-05 15:23:03.077121 test begin: paddle.broadcast_to(Tensor([5, 0, 113, 113],"bool"), list[5,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 113, 113],"bool"), list[5,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 113, 113].  Tensor sizes: [5, 0, 113, 113]
2025-03-05 15:23:03.077696 test begin: paddle.broadcast_to(Tensor([5, 0, 113, 145],"bool"), list[5,8,113,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 113, 145],"bool"), list[5,8,113,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 113, 145].  Tensor sizes: [5, 0, 113, 145]
2025-03-05 15:23:03.078289 test begin: paddle.broadcast_to(Tensor([5, 0, 114, 114],"bool"), list[5,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 114, 114],"bool"), list[5,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 114, 114].  Tensor sizes: [5, 0, 114, 114]
2025-03-05 15:23:03.078824 test begin: paddle.broadcast_to(Tensor([5, 0, 114, 145],"bool"), list[5,8,114,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 114, 145],"bool"), list[5,8,114,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 114, 145].  Tensor sizes: [5, 0, 114, 145]
2025-03-05 15:23:03.079376 test begin: paddle.broadcast_to(Tensor([5, 0, 115, 115],"bool"), list[5,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 115, 115],"bool"), list[5,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 115, 115].  Tensor sizes: [5, 0, 115, 115]
2025-03-05 15:23:03.079908 test begin: paddle.broadcast_to(Tensor([5, 0, 115, 145],"bool"), list[5,8,115,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 115, 145],"bool"), list[5,8,115,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 115, 145].  Tensor sizes: [5, 0, 115, 145]
2025-03-05 15:23:03.080525 test begin: paddle.broadcast_to(Tensor([5, 0, 116, 116],"bool"), list[5,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 116, 116],"bool"), list[5,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 116, 116].  Tensor sizes: [5, 0, 116, 116]
2025-03-05 15:23:03.081309 test begin: paddle.broadcast_to(Tensor([5, 0, 116, 145],"bool"), list[5,8,116,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 116, 145],"bool"), list[5,8,116,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 116, 145].  Tensor sizes: [5, 0, 116, 145]
2025-03-05 15:23:03.081882 test begin: paddle.broadcast_to(Tensor([5, 0, 117, 117],"bool"), list[5,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 117, 117],"bool"), list[5,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 117, 117].  Tensor sizes: [5, 0, 117, 117]
2025-03-05 15:23:03.082413 test begin: paddle.broadcast_to(Tensor([5, 0, 117, 145],"bool"), list[5,8,117,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 117, 145],"bool"), list[5,8,117,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 117, 145].  Tensor sizes: [5, 0, 117, 145]
2025-03-05 15:23:03.082935 test begin: paddle.broadcast_to(Tensor([5, 0, 118, 118],"bool"), list[5,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 118, 118],"bool"), list[5,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 118, 118].  Tensor sizes: [5, 0, 118, 118]
2025-03-05 15:23:03.083449 test begin: paddle.broadcast_to(Tensor([5, 0, 118, 145],"bool"), list[5,8,118,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 118, 145],"bool"), list[5,8,118,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 118, 145].  Tensor sizes: [5, 0, 118, 145]
2025-03-05 15:23:03.083971 test begin: paddle.broadcast_to(Tensor([5, 0, 119, 119],"bool"), list[5,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 119, 119],"bool"), list[5,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 119, 119].  Tensor sizes: [5, 0, 119, 119]
2025-03-05 15:23:03.084944 test begin: paddle.broadcast_to(Tensor([5, 0, 119, 145],"bool"), list[5,8,119,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 119, 145],"bool"), list[5,8,119,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 119, 145].  Tensor sizes: [5, 0, 119, 145]
2025-03-05 15:23:03.085462 test begin: paddle.broadcast_to(Tensor([5, 0, 12, 12],"bool"), list[5,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 12, 12],"bool"), list[5,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 12, 12].  Tensor sizes: [5, 0, 12, 12]
2025-03-05 15:23:03.086148 test begin: paddle.broadcast_to(Tensor([5, 0, 12, 145],"bool"), list[5,8,12,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 12, 145],"bool"), list[5,8,12,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 12, 145].  Tensor sizes: [5, 0, 12, 145]
2025-03-05 15:23:03.086707 test begin: paddle.broadcast_to(Tensor([5, 0, 12, 33],"bool"), list[5,8,12,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 12, 33],"bool"), list[5,8,12,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 12, 33].  Tensor sizes: [5, 0, 12, 33]
2025-03-05 15:23:03.087383 test begin: paddle.broadcast_to(Tensor([5, 0, 12, 65],"bool"), list[5,8,12,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 12, 65],"bool"), list[5,8,12,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 12, 65].  Tensor sizes: [5, 0, 12, 65]
2025-03-05 15:23:03.087932 test begin: paddle.broadcast_to(Tensor([5, 0, 120, 120],"bool"), list[5,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 120, 120],"bool"), list[5,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 120, 120].  Tensor sizes: [5, 0, 120, 120]
2025-03-05 15:23:03.088572 test begin: paddle.broadcast_to(Tensor([5, 0, 120, 145],"bool"), list[5,8,120,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 120, 145],"bool"), list[5,8,120,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 120, 145].  Tensor sizes: [5, 0, 120, 145]
2025-03-05 15:23:03.089198 test begin: paddle.broadcast_to(Tensor([5, 0, 121, 121],"bool"), list[5,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 121, 121],"bool"), list[5,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 121, 121].  Tensor sizes: [5, 0, 121, 121]
2025-03-05 15:23:03.089766 test begin: paddle.broadcast_to(Tensor([5, 0, 121, 145],"bool"), list[5,8,121,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 121, 145],"bool"), list[5,8,121,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 121, 145].  Tensor sizes: [5, 0, 121, 145]
2025-03-05 15:23:03.090287 test begin: paddle.broadcast_to(Tensor([5, 0, 122, 122],"bool"), list[5,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 122, 122],"bool"), list[5,8,122,122,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 122, 122].  Tensor sizes: [5, 0, 122, 122]
2025-03-05 15:23:03.090826 test begin: paddle.broadcast_to(Tensor([5, 0, 122, 145],"bool"), list[5,8,122,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 122, 145],"bool"), list[5,8,122,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 122, 145].  Tensor sizes: [5, 0, 122, 145]
2025-03-05 15:23:03.091674 test begin: paddle.broadcast_to(Tensor([5, 0, 123, 123],"bool"), list[5,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 123, 123],"bool"), list[5,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 123, 123].  Tensor sizes: [5, 0, 123, 123]
2025-03-05 15:23:03.092256 test begin: paddle.broadcast_to(Tensor([5, 0, 123, 145],"bool"), list[5,8,123,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 123, 145],"bool"), list[5,8,123,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 123, 145].  Tensor sizes: [5, 0, 123, 145]
2025-03-05 15:23:03.092913 test begin: paddle.broadcast_to(Tensor([5, 0, 124, 124],"bool"), list[5,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 124, 124],"bool"), list[5,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 124, 124].  Tensor sizes: [5, 0, 124, 124]
2025-03-05 15:23:03.093502 test begin: paddle.broadcast_to(Tensor([5, 0, 124, 145],"bool"), list[5,8,124,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 124, 145],"bool"), list[5,8,124,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 124, 145].  Tensor sizes: [5, 0, 124, 145]
2025-03-05 15:23:03.094153 test begin: paddle.broadcast_to(Tensor([5, 0, 125, 125],"bool"), list[5,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 125, 125],"bool"), list[5,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 125, 125].  Tensor sizes: [5, 0, 125, 125]
2025-03-05 15:23:03.094951 test begin: paddle.broadcast_to(Tensor([5, 0, 125, 145],"bool"), list[5,8,125,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 125, 145],"bool"), list[5,8,125,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 125, 145].  Tensor sizes: [5, 0, 125, 145]
2025-03-05 15:23:03.095601 test begin: paddle.broadcast_to(Tensor([5, 0, 126, 126],"bool"), list[5,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 126, 126],"bool"), list[5,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 126, 126].  Tensor sizes: [5, 0, 126, 126]
2025-03-05 15:23:03.096196 test begin: paddle.broadcast_to(Tensor([5, 0, 126, 145],"bool"), list[5,8,126,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 126, 145],"bool"), list[5,8,126,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 126, 145].  Tensor sizes: [5, 0, 126, 145]
2025-03-05 15:23:03.096741 test begin: paddle.broadcast_to(Tensor([5, 0, 127, 127],"bool"), list[5,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 127, 127],"bool"), list[5,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 127, 127].  Tensor sizes: [5, 0, 127, 127]
2025-03-05 15:23:03.097267 test begin: paddle.broadcast_to(Tensor([5, 0, 127, 145],"bool"), list[5,8,127,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 127, 145],"bool"), list[5,8,127,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 127, 145].  Tensor sizes: [5, 0, 127, 145]
2025-03-05 15:23:03.097795 test begin: paddle.broadcast_to(Tensor([5, 0, 128, 128],"bool"), list[5,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 128, 128],"bool"), list[5,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 128, 128].  Tensor sizes: [5, 0, 128, 128]
2025-03-05 15:23:03.098444 test begin: paddle.broadcast_to(Tensor([5, 0, 128, 145],"bool"), list[5,8,128,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 128, 145],"bool"), list[5,8,128,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 128, 145].  Tensor sizes: [5, 0, 128, 145]
2025-03-05 15:23:03.099053 test begin: paddle.broadcast_to(Tensor([5, 0, 129, 129],"bool"), list[5,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 129, 129],"bool"), list[5,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 129, 129].  Tensor sizes: [5, 0, 129, 129]
2025-03-05 15:23:03.099594 test begin: paddle.broadcast_to(Tensor([5, 0, 129, 145],"bool"), list[5,8,129,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 129, 145],"bool"), list[5,8,129,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 129, 145].  Tensor sizes: [5, 0, 129, 145]
2025-03-05 15:23:03.100121 test begin: paddle.broadcast_to(Tensor([5, 0, 13, 13],"bool"), list[5,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 13, 13],"bool"), list[5,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 13, 13].  Tensor sizes: [5, 0, 13, 13]
2025-03-05 15:23:03.100637 test begin: paddle.broadcast_to(Tensor([5, 0, 13, 145],"bool"), list[5,8,13,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 13, 145],"bool"), list[5,8,13,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 13, 145].  Tensor sizes: [5, 0, 13, 145]
2025-03-05 15:23:03.101151 test begin: paddle.broadcast_to(Tensor([5, 0, 13, 33],"bool"), list[5,8,13,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 13, 33],"bool"), list[5,8,13,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 13, 33].  Tensor sizes: [5, 0, 13, 33]
2025-03-05 15:23:03.101682 test begin: paddle.broadcast_to(Tensor([5, 0, 13, 65],"bool"), list[5,8,13,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 13, 65],"bool"), list[5,8,13,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 13, 65].  Tensor sizes: [5, 0, 13, 65]
2025-03-05 15:23:03.107673 test begin: paddle.broadcast_to(Tensor([5, 0, 130, 130],"bool"), list[5,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 130, 130],"bool"), list[5,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 130, 130].  Tensor sizes: [5, 0, 130, 130]
2025-03-05 15:23:03.110208 test begin: paddle.broadcast_to(Tensor([5, 0, 130, 145],"bool"), list[5,8,130,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 130, 145],"bool"), list[5,8,130,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 130, 145].  Tensor sizes: [5, 0, 130, 145]
2025-03-05 15:23:03.110794 test begin: paddle.broadcast_to(Tensor([5, 0, 131, 131],"bool"), list[5,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 131, 131],"bool"), list[5,8,131,131,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 131, 131].  Tensor sizes: [5, 0, 131, 131]
2025-03-05 15:23:03.111319 test begin: paddle.broadcast_to(Tensor([5, 0, 131, 145],"bool"), list[5,8,131,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 131, 145],"bool"), list[5,8,131,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 131, 145].  Tensor sizes: [5, 0, 131, 145]
2025-03-05 15:23:03.112038 test begin: paddle.broadcast_to(Tensor([5, 0, 132, 132],"bool"), list[5,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 132, 132],"bool"), list[5,8,132,132,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 132, 132].  Tensor sizes: [5, 0, 132, 132]
2025-03-05 15:23:03.113471 test begin: paddle.broadcast_to(Tensor([5, 0, 132, 145],"bool"), list[5,8,132,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 132, 145],"bool"), list[5,8,132,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 132, 145].  Tensor sizes: [5, 0, 132, 145]
2025-03-05 15:23:03.114143 test begin: paddle.broadcast_to(Tensor([5, 0, 133, 133],"bool"), list[5,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 133, 133],"bool"), list[5,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 133, 133].  Tensor sizes: [5, 0, 133, 133]
2025-03-05 15:23:03.114806 test begin: paddle.broadcast_to(Tensor([5, 0, 133, 145],"bool"), list[5,8,133,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 133, 145],"bool"), list[5,8,133,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 133, 145].  Tensor sizes: [5, 0, 133, 145]
2025-03-05 15:23:03.115450 test begin: paddle.broadcast_to(Tensor([5, 0, 134, 134],"bool"), list[5,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 134, 134],"bool"), list[5,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 134, 134].  Tensor sizes: [5, 0, 134, 134]
2025-03-05 15:23:03.116277 test begin: paddle.broadcast_to(Tensor([5, 0, 134, 145],"bool"), list[5,8,134,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 134, 145],"bool"), list[5,8,134,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 134, 145].  Tensor sizes: [5, 0, 134, 145]
2025-03-05 15:23:03.117020 test begin: paddle.broadcast_to(Tensor([5, 0, 135, 135],"bool"), list[5,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 135, 135],"bool"), list[5,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 135, 135].  Tensor sizes: [5, 0, 135, 135]
2025-03-05 15:23:03.117716 test begin: paddle.broadcast_to(Tensor([5, 0, 135, 145],"bool"), list[5,8,135,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 135, 145],"bool"), list[5,8,135,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 135, 145].  Tensor sizes: [5, 0, 135, 145]
2025-03-05 15:23:03.118409 test begin: paddle.broadcast_to(Tensor([5, 0, 136, 136],"bool"), list[5,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 136, 136],"bool"), list[5,8,136,136,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 136, 136].  Tensor sizes: [5, 0, 136, 136]
2025-03-05 15:23:03.118967 test begin: paddle.broadcast_to(Tensor([5, 0, 136, 145],"bool"), list[5,8,136,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 136, 145],"bool"), list[5,8,136,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 136, 145].  Tensor sizes: [5, 0, 136, 145]
2025-03-05 15:23:03.119522 test begin: paddle.broadcast_to(Tensor([5, 0, 137, 137],"bool"), list[5,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 137, 137],"bool"), list[5,8,137,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 137, 137].  Tensor sizes: [5, 0, 137, 137]
2025-03-05 15:23:03.120241 test begin: paddle.broadcast_to(Tensor([5, 0, 137, 145],"bool"), list[5,8,137,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 137, 145],"bool"), list[5,8,137,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 137, 145].  Tensor sizes: [5, 0, 137, 145]
2025-03-05 15:23:03.121103 test begin: paddle.broadcast_to(Tensor([5, 0, 138, 138],"bool"), list[5,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 138, 138],"bool"), list[5,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 138, 138].  Tensor sizes: [5, 0, 138, 138]
2025-03-05 15:23:03.121849 test begin: paddle.broadcast_to(Tensor([5, 0, 138, 145],"bool"), list[5,8,138,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 138, 145],"bool"), list[5,8,138,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 138, 145].  Tensor sizes: [5, 0, 138, 145]
2025-03-05 15:23:03.122438 test begin: paddle.broadcast_to(Tensor([5, 0, 139, 139],"bool"), list[5,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 139, 139],"bool"), list[5,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 139, 139].  Tensor sizes: [5, 0, 139, 139]
2025-03-05 15:23:03.122992 test begin: paddle.broadcast_to(Tensor([5, 0, 139, 145],"bool"), list[5,8,139,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 139, 145],"bool"), list[5,8,139,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 139, 145].  Tensor sizes: [5, 0, 139, 145]
2025-03-05 15:23:03.123573 test begin: paddle.broadcast_to(Tensor([5, 0, 14, 145],"bool"), list[5,8,14,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 14, 145],"bool"), list[5,8,14,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 14, 145].  Tensor sizes: [5, 0, 14, 145]
2025-03-05 15:23:03.124168 test begin: paddle.broadcast_to(Tensor([5, 0, 14, 14],"bool"), list[5,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 14, 14],"bool"), list[5,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 14, 14].  Tensor sizes: [5, 0, 14, 14]
2025-03-05 15:23:03.124718 test begin: paddle.broadcast_to(Tensor([5, 0, 14, 33],"bool"), list[5,8,14,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 14, 33],"bool"), list[5,8,14,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 14, 33].  Tensor sizes: [5, 0, 14, 33]
2025-03-05 15:23:03.125292 test begin: paddle.broadcast_to(Tensor([5, 0, 14, 65],"bool"), list[5,8,14,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 14, 65],"bool"), list[5,8,14,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 14, 65].  Tensor sizes: [5, 0, 14, 65]
2025-03-05 15:23:03.126045 test begin: paddle.broadcast_to(Tensor([5, 0, 140, 140],"bool"), list[5,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 140, 140],"bool"), list[5,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 140, 140].  Tensor sizes: [5, 0, 140, 140]
2025-03-05 15:23:03.126624 test begin: paddle.broadcast_to(Tensor([5, 0, 140, 145],"bool"), list[5,8,140,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 140, 145],"bool"), list[5,8,140,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 140, 145].  Tensor sizes: [5, 0, 140, 145]
2025-03-05 15:23:03.127383 test begin: paddle.broadcast_to(Tensor([5, 0, 141, 141],"bool"), list[5,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 141, 141],"bool"), list[5,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 141, 141].  Tensor sizes: [5, 0, 141, 141]
2025-03-05 15:23:03.128035 test begin: paddle.broadcast_to(Tensor([5, 0, 141, 145],"bool"), list[5,8,141,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 141, 145],"bool"), list[5,8,141,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 141, 145].  Tensor sizes: [5, 0, 141, 145]
2025-03-05 15:23:03.128623 test begin: paddle.broadcast_to(Tensor([5, 0, 142, 142],"bool"), list[5,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 142, 142],"bool"), list[5,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 142, 142].  Tensor sizes: [5, 0, 142, 142]
2025-03-05 15:23:03.129162 test begin: paddle.broadcast_to(Tensor([5, 0, 142, 145],"bool"), list[5,8,142,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 142, 145],"bool"), list[5,8,142,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 142, 145].  Tensor sizes: [5, 0, 142, 145]
2025-03-05 15:23:03.129749 test begin: paddle.broadcast_to(Tensor([5, 0, 15, 145],"bool"), list[5,8,15,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 15, 145],"bool"), list[5,8,15,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 15, 145].  Tensor sizes: [5, 0, 15, 145]
2025-03-05 15:23:03.130400 test begin: paddle.broadcast_to(Tensor([5, 0, 15, 15],"bool"), list[5,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 15, 15],"bool"), list[5,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 15, 15].  Tensor sizes: [5, 0, 15, 15]
2025-03-05 15:23:03.131034 test begin: paddle.broadcast_to(Tensor([5, 0, 15, 33],"bool"), list[5,8,15,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 15, 33],"bool"), list[5,8,15,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 15, 33].  Tensor sizes: [5, 0, 15, 33]
2025-03-05 15:23:03.131644 test begin: paddle.broadcast_to(Tensor([5, 0, 15, 65],"bool"), list[5,8,15,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 15, 65],"bool"), list[5,8,15,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 15, 65].  Tensor sizes: [5, 0, 15, 65]
2025-03-05 15:23:03.132391 test begin: paddle.broadcast_to(Tensor([5, 0, 16, 145],"bool"), list[5,8,16,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 16, 145],"bool"), list[5,8,16,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 16, 145].  Tensor sizes: [5, 0, 16, 145]
2025-03-05 15:23:03.133021 test begin: paddle.broadcast_to(Tensor([5, 0, 16, 16],"bool"), list[5,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 16, 16],"bool"), list[5,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 16, 16].  Tensor sizes: [5, 0, 16, 16]
2025-03-05 15:23:03.133639 test begin: paddle.broadcast_to(Tensor([5, 0, 16, 33],"bool"), list[5,8,16,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 16, 33],"bool"), list[5,8,16,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 16, 33].  Tensor sizes: [5, 0, 16, 33]
2025-03-05 15:23:03.134272 test begin: paddle.broadcast_to(Tensor([5, 0, 16, 65],"bool"), list[5,8,16,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 16, 65],"bool"), list[5,8,16,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 16, 65].  Tensor sizes: [5, 0, 16, 65]
2025-03-05 15:23:03.134939 test begin: paddle.broadcast_to(Tensor([5, 0, 17, 145],"bool"), list[5,8,17,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 17, 145],"bool"), list[5,8,17,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 17, 145].  Tensor sizes: [5, 0, 17, 145]
2025-03-05 15:23:03.135642 test begin: paddle.broadcast_to(Tensor([5, 0, 17, 17],"bool"), list[5,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 17, 17],"bool"), list[5,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 17, 17].  Tensor sizes: [5, 0, 17, 17]
2025-03-05 15:23:03.136317 test begin: paddle.broadcast_to(Tensor([5, 0, 17, 33],"bool"), list[5,8,17,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 17, 33],"bool"), list[5,8,17,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 17, 33].  Tensor sizes: [5, 0, 17, 33]
2025-03-05 15:23:03.136993 test begin: paddle.broadcast_to(Tensor([5, 0, 17, 65],"bool"), list[5,8,17,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 17, 65],"bool"), list[5,8,17,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 17, 65].  Tensor sizes: [5, 0, 17, 65]
2025-03-05 15:23:03.137797 test begin: paddle.broadcast_to(Tensor([5, 0, 18, 145],"bool"), list[5,8,18,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 18, 145],"bool"), list[5,8,18,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 18, 145].  Tensor sizes: [5, 0, 18, 145]
2025-03-05 15:23:03.139502 test begin: paddle.broadcast_to(Tensor([5, 0, 18, 18],"bool"), list[5,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 18, 18],"bool"), list[5,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 18, 18].  Tensor sizes: [5, 0, 18, 18]
2025-03-05 15:23:03.140107 test begin: paddle.broadcast_to(Tensor([5, 0, 18, 33],"bool"), list[5,8,18,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 18, 33],"bool"), list[5,8,18,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 18, 33].  Tensor sizes: [5, 0, 18, 33]
2025-03-05 15:23:03.140851 test begin: paddle.broadcast_to(Tensor([5, 0, 18, 65],"bool"), list[5,8,18,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 18, 65],"bool"), list[5,8,18,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 18, 65].  Tensor sizes: [5, 0, 18, 65]
2025-03-05 15:23:03.141473 test begin: paddle.broadcast_to(Tensor([5, 0, 19, 145],"bool"), list[5,8,19,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 19, 145],"bool"), list[5,8,19,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 19, 145].  Tensor sizes: [5, 0, 19, 145]
2025-03-05 15:23:03.142142 test begin: paddle.broadcast_to(Tensor([5, 0, 19, 19],"bool"), list[5,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 19, 19],"bool"), list[5,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 19, 19].  Tensor sizes: [5, 0, 19, 19]
2025-03-05 15:23:03.142722 test begin: paddle.broadcast_to(Tensor([5, 0, 19, 33],"bool"), list[5,8,19,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 19, 33],"bool"), list[5,8,19,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 19, 33].  Tensor sizes: [5, 0, 19, 33]
2025-03-05 15:23:03.143997 test begin: paddle.broadcast_to(Tensor([5, 0, 19, 65],"bool"), list[5,8,19,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 19, 65],"bool"), list[5,8,19,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 19, 65].  Tensor sizes: [5, 0, 19, 65]
2025-03-05 15:23:03.144646 test begin: paddle.broadcast_to(Tensor([5, 0, 1],"int32"), tuple(5,5,1,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1],"int32"), tuple(5,5,1,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 5, 1].  Tensor sizes: [5, 0, 1]
2025-03-05 15:23:03.145321 test begin: paddle.broadcast_to(Tensor([5, 0, 1],"int64"), tuple(5,6,1,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 1],"int64"), tuple(5,6,1,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 6, 1].  Tensor sizes: [5, 0, 1]
2025-03-05 15:23:03.145979 test begin: paddle.broadcast_to(Tensor([5, 0, 2, 145],"bool"), list[5,8,2,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 2, 145],"bool"), list[5,8,2,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 2, 145].  Tensor sizes: [5, 0, 2, 145]
2025-03-05 15:23:03.146599 test begin: paddle.broadcast_to(Tensor([5, 0, 2, 2],"bool"), list[5,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 2, 2],"bool"), list[5,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 2, 2].  Tensor sizes: [5, 0, 2, 2]
2025-03-05 15:23:03.147206 test begin: paddle.broadcast_to(Tensor([5, 0, 2, 33],"bool"), list[5,8,2,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 2, 33],"bool"), list[5,8,2,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 2, 33].  Tensor sizes: [5, 0, 2, 33]
2025-03-05 15:23:03.147827 test begin: paddle.broadcast_to(Tensor([5, 0, 2, 65],"bool"), list[5,8,2,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 2, 65],"bool"), list[5,8,2,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 2, 65].  Tensor sizes: [5, 0, 2, 65]
2025-03-05 15:23:03.148450 test begin: paddle.broadcast_to(Tensor([5, 0, 20, 145],"bool"), list[5,8,20,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 20, 145],"bool"), list[5,8,20,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 20, 145].  Tensor sizes: [5, 0, 20, 145]
2025-03-05 15:23:03.149072 test begin: paddle.broadcast_to(Tensor([5, 0, 20, 20],"bool"), list[5,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 20, 20],"bool"), list[5,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 20, 20].  Tensor sizes: [5, 0, 20, 20]
2025-03-05 15:23:03.149687 test begin: paddle.broadcast_to(Tensor([5, 0, 20, 33],"bool"), list[5,8,20,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 20, 33],"bool"), list[5,8,20,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 20, 33].  Tensor sizes: [5, 0, 20, 33]
2025-03-05 15:23:03.150336 test begin: paddle.broadcast_to(Tensor([5, 0, 20, 65],"bool"), list[5,8,20,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 20, 65],"bool"), list[5,8,20,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 20, 65].  Tensor sizes: [5, 0, 20, 65]
2025-03-05 15:23:03.151007 test begin: paddle.broadcast_to(Tensor([5, 0, 21, 145],"bool"), list[5,8,21,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 21, 145],"bool"), list[5,8,21,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 21, 145].  Tensor sizes: [5, 0, 21, 145]
2025-03-05 15:23:03.151703 test begin: paddle.broadcast_to(Tensor([5, 0, 21, 21],"bool"), list[5,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 21, 21],"bool"), list[5,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 21, 21].  Tensor sizes: [5, 0, 21, 21]
2025-03-05 15:23:03.152320 test begin: paddle.broadcast_to(Tensor([5, 0, 21, 33],"bool"), list[5,8,21,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 21, 33],"bool"), list[5,8,21,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 21, 33].  Tensor sizes: [5, 0, 21, 33]
2025-03-05 15:23:03.153032 test begin: paddle.broadcast_to(Tensor([5, 0, 21, 65],"bool"), list[5,8,21,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 21, 65],"bool"), list[5,8,21,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 21, 65].  Tensor sizes: [5, 0, 21, 65]
2025-03-05 15:23:03.153655 test begin: paddle.broadcast_to(Tensor([5, 0, 22, 145],"bool"), list[5,8,22,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 22, 145],"bool"), list[5,8,22,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 22, 145].  Tensor sizes: [5, 0, 22, 145]
2025-03-05 15:23:03.154297 test begin: paddle.broadcast_to(Tensor([5, 0, 22, 22],"bool"), list[5,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 22, 22],"bool"), list[5,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 22, 22].  Tensor sizes: [5, 0, 22, 22]
2025-03-05 15:23:03.154968 test begin: paddle.broadcast_to(Tensor([5, 0, 22, 33],"bool"), list[5,8,22,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 22, 33],"bool"), list[5,8,22,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 22, 33].  Tensor sizes: [5, 0, 22, 33]
2025-03-05 15:23:03.155610 test begin: paddle.broadcast_to(Tensor([5, 0, 22, 65],"bool"), list[5,8,22,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 22, 65],"bool"), list[5,8,22,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 22, 65].  Tensor sizes: [5, 0, 22, 65]
2025-03-05 15:23:03.156276 test begin: paddle.broadcast_to(Tensor([5, 0, 23, 145],"bool"), list[5,8,23,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 23, 145],"bool"), list[5,8,23,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 23, 145].  Tensor sizes: [5, 0, 23, 145]
2025-03-05 15:23:03.156919 test begin: paddle.broadcast_to(Tensor([5, 0, 23, 23],"bool"), list[5,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 23, 23],"bool"), list[5,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 23, 23].  Tensor sizes: [5, 0, 23, 23]
2025-03-05 15:23:03.157534 test begin: paddle.broadcast_to(Tensor([5, 0, 23, 33],"bool"), list[5,8,23,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 23, 33],"bool"), list[5,8,23,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 23, 33].  Tensor sizes: [5, 0, 23, 33]
2025-03-05 15:23:03.158202 test begin: paddle.broadcast_to(Tensor([5, 0, 23, 65],"bool"), list[5,8,23,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 23, 65],"bool"), list[5,8,23,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 23, 65].  Tensor sizes: [5, 0, 23, 65]
2025-03-05 15:23:03.161201 test begin: paddle.broadcast_to(Tensor([5, 0, 24, 145],"bool"), list[5,8,24,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 24, 145],"bool"), list[5,8,24,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 24, 145].  Tensor sizes: [5, 0, 24, 145]
2025-03-05 15:23:03.161966 test begin: paddle.broadcast_to(Tensor([5, 0, 24, 24],"bool"), list[5,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 24, 24],"bool"), list[5,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 24, 24].  Tensor sizes: [5, 0, 24, 24]
2025-03-05 15:23:03.162626 test begin: paddle.broadcast_to(Tensor([5, 0, 24, 33],"bool"), list[5,8,24,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 24, 33],"bool"), list[5,8,24,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 24, 33].  Tensor sizes: [5, 0, 24, 33]
2025-03-05 15:23:03.163187 test begin: paddle.broadcast_to(Tensor([5, 0, 24, 65],"bool"), list[5,8,24,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 24, 65],"bool"), list[5,8,24,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 24, 65].  Tensor sizes: [5, 0, 24, 65]
2025-03-05 15:23:03.163743 test begin: paddle.broadcast_to(Tensor([5, 0, 25, 145],"bool"), list[5,8,25,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 25, 145],"bool"), list[5,8,25,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 25, 145].  Tensor sizes: [5, 0, 25, 145]
2025-03-05 15:23:03.165635 test begin: paddle.broadcast_to(Tensor([5, 0, 25, 25],"bool"), list[5,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 25, 25],"bool"), list[5,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 25, 25].  Tensor sizes: [5, 0, 25, 25]
2025-03-05 15:23:03.166411 test begin: paddle.broadcast_to(Tensor([5, 0, 25, 33],"bool"), list[5,8,25,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 25, 33],"bool"), list[5,8,25,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 25, 33].  Tensor sizes: [5, 0, 25, 33]
2025-03-05 15:23:03.166990 test begin: paddle.broadcast_to(Tensor([5, 0, 25, 65],"bool"), list[5,8,25,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 25, 65],"bool"), list[5,8,25,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 25, 65].  Tensor sizes: [5, 0, 25, 65]
2025-03-05 15:23:03.167542 test begin: paddle.broadcast_to(Tensor([5, 0, 26, 145],"bool"), list[5,8,26,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 26, 145],"bool"), list[5,8,26,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 26, 145].  Tensor sizes: [5, 0, 26, 145]
2025-03-05 15:23:03.168096 test begin: paddle.broadcast_to(Tensor([5, 0, 26, 26],"bool"), list[5,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 26, 26],"bool"), list[5,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 26, 26].  Tensor sizes: [5, 0, 26, 26]
2025-03-05 15:23:03.168636 test begin: paddle.broadcast_to(Tensor([5, 0, 26, 33],"bool"), list[5,8,26,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 26, 33],"bool"), list[5,8,26,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 26, 33].  Tensor sizes: [5, 0, 26, 33]
2025-03-05 15:23:03.169173 test begin: paddle.broadcast_to(Tensor([5, 0, 26, 65],"bool"), list[5,8,26,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 26, 65],"bool"), list[5,8,26,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 26, 65].  Tensor sizes: [5, 0, 26, 65]
2025-03-05 15:23:03.169713 test begin: paddle.broadcast_to(Tensor([5, 0, 27, 145],"bool"), list[5,8,27,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 27, 145],"bool"), list[5,8,27,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 27, 145].  Tensor sizes: [5, 0, 27, 145]
2025-03-05 15:23:03.170236 test begin: paddle.broadcast_to(Tensor([5, 0, 27, 27],"bool"), list[5,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 27, 27],"bool"), list[5,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 27, 27].  Tensor sizes: [5, 0, 27, 27]
2025-03-05 15:23:03.170750 test begin: paddle.broadcast_to(Tensor([5, 0, 27, 33],"bool"), list[5,8,27,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 27, 33],"bool"), list[5,8,27,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 27, 33].  Tensor sizes: [5, 0, 27, 33]
2025-03-05 15:23:03.171256 test begin: paddle.broadcast_to(Tensor([5, 0, 27, 65],"bool"), list[5,8,27,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 27, 65],"bool"), list[5,8,27,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 27, 65].  Tensor sizes: [5, 0, 27, 65]
2025-03-05 15:23:03.171808 test begin: paddle.broadcast_to(Tensor([5, 0, 28, 145],"bool"), list[5,8,28,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 28, 145],"bool"), list[5,8,28,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 28, 145].  Tensor sizes: [5, 0, 28, 145]
2025-03-05 15:23:03.172359 test begin: paddle.broadcast_to(Tensor([5, 0, 28, 28],"bool"), list[5,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 28, 28],"bool"), list[5,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 28, 28].  Tensor sizes: [5, 0, 28, 28]
2025-03-05 15:23:03.172957 test begin: paddle.broadcast_to(Tensor([5, 0, 28, 33],"bool"), list[5,8,28,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 28, 33],"bool"), list[5,8,28,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 28, 33].  Tensor sizes: [5, 0, 28, 33]
2025-03-05 15:23:03.174049 test begin: paddle.broadcast_to(Tensor([5, 0, 28, 65],"bool"), list[5,8,28,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 28, 65],"bool"), list[5,8,28,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 28, 65].  Tensor sizes: [5, 0, 28, 65]
2025-03-05 15:23:03.181088 test begin: paddle.broadcast_to(Tensor([5, 0, 29, 145],"bool"), list[5,8,29,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 29, 145],"bool"), list[5,8,29,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 29, 145].  Tensor sizes: [5, 0, 29, 145]
2025-03-05 15:23:03.182763 test begin: paddle.broadcast_to(Tensor([5, 0, 29, 29],"bool"), list[5,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 29, 29],"bool"), list[5,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 29, 29].  Tensor sizes: [5, 0, 29, 29]
2025-03-05 15:23:03.183330 test begin: paddle.broadcast_to(Tensor([5, 0, 29, 33],"bool"), list[5,8,29,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 29, 33],"bool"), list[5,8,29,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 29, 33].  Tensor sizes: [5, 0, 29, 33]
2025-03-05 15:23:03.183872 test begin: paddle.broadcast_to(Tensor([5, 0, 29, 65],"bool"), list[5,8,29,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 29, 65],"bool"), list[5,8,29,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 29, 65].  Tensor sizes: [5, 0, 29, 65]
2025-03-05 15:23:03.184394 test begin: paddle.broadcast_to(Tensor([5, 0, 3, 145],"bool"), list[5,8,3,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 3, 145],"bool"), list[5,8,3,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 3, 145].  Tensor sizes: [5, 0, 3, 145]
2025-03-05 15:23:03.184916 test begin: paddle.broadcast_to(Tensor([5, 0, 3, 33],"bool"), list[5,8,3,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 3, 33],"bool"), list[5,8,3,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 3, 33].  Tensor sizes: [5, 0, 3, 33]
2025-03-05 15:23:03.185425 test begin: paddle.broadcast_to(Tensor([5, 0, 3, 3],"bool"), list[5,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 3, 3],"bool"), list[5,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 3, 3].  Tensor sizes: [5, 0, 3, 3]
2025-03-05 15:23:03.185938 test begin: paddle.broadcast_to(Tensor([5, 0, 3, 65],"bool"), list[5,8,3,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 3, 65],"bool"), list[5,8,3,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 3, 65].  Tensor sizes: [5, 0, 3, 65]
2025-03-05 15:23:03.186447 test begin: paddle.broadcast_to(Tensor([5, 0, 30, 145],"bool"), list[5,8,30,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 30, 145],"bool"), list[5,8,30,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 30, 145].  Tensor sizes: [5, 0, 30, 145]
2025-03-05 15:23:03.186965 test begin: paddle.broadcast_to(Tensor([5, 0, 30, 30],"bool"), list[5,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 30, 30],"bool"), list[5,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 30, 30].  Tensor sizes: [5, 0, 30, 30]
2025-03-05 15:23:03.187472 test begin: paddle.broadcast_to(Tensor([5, 0, 30, 33],"bool"), list[5,8,30,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 30, 33],"bool"), list[5,8,30,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 30, 33].  Tensor sizes: [5, 0, 30, 33]
2025-03-05 15:23:03.187995 test begin: paddle.broadcast_to(Tensor([5, 0, 30, 65],"bool"), list[5,8,30,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 30, 65],"bool"), list[5,8,30,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 30, 65].  Tensor sizes: [5, 0, 30, 65]
2025-03-05 15:23:03.188501 test begin: paddle.broadcast_to(Tensor([5, 0, 31, 145],"bool"), list[5,8,31,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 31, 145],"bool"), list[5,8,31,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 31, 145].  Tensor sizes: [5, 0, 31, 145]
2025-03-05 15:23:03.189084 test begin: paddle.broadcast_to(Tensor([5, 0, 31, 31],"bool"), list[5,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 31, 31],"bool"), list[5,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 31, 31].  Tensor sizes: [5, 0, 31, 31]
2025-03-05 15:23:03.189607 test begin: paddle.broadcast_to(Tensor([5, 0, 31, 33],"bool"), list[5,8,31,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 31, 33],"bool"), list[5,8,31,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 31, 33].  Tensor sizes: [5, 0, 31, 33]
2025-03-05 15:23:03.190404 test begin: paddle.broadcast_to(Tensor([5, 0, 31, 65],"bool"), list[5,8,31,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 31, 65],"bool"), list[5,8,31,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 31, 65].  Tensor sizes: [5, 0, 31, 65]
2025-03-05 15:23:03.191114 test begin: paddle.broadcast_to(Tensor([5, 0, 32, 145],"bool"), list[5,8,32,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 32, 145],"bool"), list[5,8,32,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 32, 145].  Tensor sizes: [5, 0, 32, 145]
2025-03-05 15:23:03.191704 test begin: paddle.broadcast_to(Tensor([5, 0, 32, 32],"bool"), list[5,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 32, 32],"bool"), list[5,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 32, 32].  Tensor sizes: [5, 0, 32, 32]
2025-03-05 15:23:03.192249 test begin: paddle.broadcast_to(Tensor([5, 0, 32, 33],"bool"), list[5,8,32,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 32, 33],"bool"), list[5,8,32,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 32, 33].  Tensor sizes: [5, 0, 32, 33]
2025-03-05 15:23:03.192789 test begin: paddle.broadcast_to(Tensor([5, 0, 32, 65],"bool"), list[5,8,32,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 32, 65],"bool"), list[5,8,32,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 32, 65].  Tensor sizes: [5, 0, 32, 65]
2025-03-05 15:23:03.193384 test begin: paddle.broadcast_to(Tensor([5, 0, 33, 145],"bool"), list[5,8,33,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 33, 145],"bool"), list[5,8,33,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 33, 145].  Tensor sizes: [5, 0, 33, 145]
2025-03-05 15:23:03.193935 test begin: paddle.broadcast_to(Tensor([5, 0, 33, 33],"bool"), list[5,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 33, 33],"bool"), list[5,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 33, 33].  Tensor sizes: [5, 0, 33, 33]
2025-03-05 15:23:03.194463 test begin: paddle.broadcast_to(Tensor([5, 0, 33, 65],"bool"), list[5,8,33,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 33, 65],"bool"), list[5,8,33,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 33, 65].  Tensor sizes: [5, 0, 33, 65]
2025-03-05 15:23:03.195008 test begin: paddle.broadcast_to(Tensor([5, 0, 34, 145],"bool"), list[5,8,34,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 34, 145],"bool"), list[5,8,34,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 34, 145].  Tensor sizes: [5, 0, 34, 145]
2025-03-05 15:23:03.195541 test begin: paddle.broadcast_to(Tensor([5, 0, 34, 33],"bool"), list[5,8,34,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 34, 33],"bool"), list[5,8,34,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 34, 33].  Tensor sizes: [5, 0, 34, 33]
2025-03-05 15:23:03.196076 test begin: paddle.broadcast_to(Tensor([5, 0, 34, 34],"bool"), list[5,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 34, 34],"bool"), list[5,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 34, 34].  Tensor sizes: [5, 0, 34, 34]
2025-03-05 15:23:03.196657 test begin: paddle.broadcast_to(Tensor([5, 0, 34, 65],"bool"), list[5,8,34,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 34, 65],"bool"), list[5,8,34,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 34, 65].  Tensor sizes: [5, 0, 34, 65]
2025-03-05 15:23:03.197394 test begin: paddle.broadcast_to(Tensor([5, 0, 35, 145],"bool"), list[5,8,35,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 35, 145],"bool"), list[5,8,35,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 35, 145].  Tensor sizes: [5, 0, 35, 145]
2025-03-05 15:23:03.198167 test begin: paddle.broadcast_to(Tensor([5, 0, 35, 33],"bool"), list[5,8,35,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 35, 33],"bool"), list[5,8,35,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 35, 33].  Tensor sizes: [5, 0, 35, 33]
2025-03-05 15:23:03.198862 test begin: paddle.broadcast_to(Tensor([5, 0, 35, 35],"bool"), list[5,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 35, 35],"bool"), list[5,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 35, 35].  Tensor sizes: [5, 0, 35, 35]
2025-03-05 15:23:03.199418 test begin: paddle.broadcast_to(Tensor([5, 0, 35, 65],"bool"), list[5,8,35,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 35, 65],"bool"), list[5,8,35,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 35, 65].  Tensor sizes: [5, 0, 35, 65]
2025-03-05 15:23:03.199958 test begin: paddle.broadcast_to(Tensor([5, 0, 36, 145],"bool"), list[5,8,36,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 36, 145],"bool"), list[5,8,36,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 36, 145].  Tensor sizes: [5, 0, 36, 145]
2025-03-05 15:23:03.200519 test begin: paddle.broadcast_to(Tensor([5, 0, 36, 33],"bool"), list[5,8,36,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 36, 33],"bool"), list[5,8,36,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 36, 33].  Tensor sizes: [5, 0, 36, 33]
2025-03-05 15:23:03.201372 test begin: paddle.broadcast_to(Tensor([5, 0, 36, 36],"bool"), list[5,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 36, 36],"bool"), list[5,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 36, 36].  Tensor sizes: [5, 0, 36, 36]
2025-03-05 15:23:03.202243 test begin: paddle.broadcast_to(Tensor([5, 0, 36, 65],"bool"), list[5,8,36,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 36, 65],"bool"), list[5,8,36,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 36, 65].  Tensor sizes: [5, 0, 36, 65]
2025-03-05 15:23:03.202778 test begin: paddle.broadcast_to(Tensor([5, 0, 37, 145],"bool"), list[5,8,37,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 37, 145],"bool"), list[5,8,37,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 37, 145].  Tensor sizes: [5, 0, 37, 145]
2025-03-05 15:23:03.203361 test begin: paddle.broadcast_to(Tensor([5, 0, 37, 33],"bool"), list[5,8,37,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 37, 33],"bool"), list[5,8,37,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 37, 33].  Tensor sizes: [5, 0, 37, 33]
2025-03-05 15:23:03.203903 test begin: paddle.broadcast_to(Tensor([5, 0, 37, 37],"bool"), list[5,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 37, 37],"bool"), list[5,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 37, 37].  Tensor sizes: [5, 0, 37, 37]
2025-03-05 15:23:03.204439 test begin: paddle.broadcast_to(Tensor([5, 0, 37, 65],"bool"), list[5,8,37,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 37, 65],"bool"), list[5,8,37,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 37, 65].  Tensor sizes: [5, 0, 37, 65]
2025-03-05 15:23:03.204976 test begin: paddle.broadcast_to(Tensor([5, 0, 38, 145],"bool"), list[5,8,38,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 38, 145],"bool"), list[5,8,38,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 38, 145].  Tensor sizes: [5, 0, 38, 145]
2025-03-05 15:23:03.205500 test begin: paddle.broadcast_to(Tensor([5, 0, 38, 33],"bool"), list[5,8,38,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 38, 33],"bool"), list[5,8,38,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 38, 33].  Tensor sizes: [5, 0, 38, 33]
2025-03-05 15:23:03.206030 test begin: paddle.broadcast_to(Tensor([5, 0, 38, 38],"bool"), list[5,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 38, 38],"bool"), list[5,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 38, 38].  Tensor sizes: [5, 0, 38, 38]
2025-03-05 15:23:03.206544 test begin: paddle.broadcast_to(Tensor([5, 0, 38, 65],"bool"), list[5,8,38,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 38, 65],"bool"), list[5,8,38,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 38, 65].  Tensor sizes: [5, 0, 38, 65]
2025-03-05 15:23:03.207083 test begin: paddle.broadcast_to(Tensor([5, 0, 39, 145],"bool"), list[5,8,39,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 39, 145],"bool"), list[5,8,39,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 39, 145].  Tensor sizes: [5, 0, 39, 145]
2025-03-05 15:23:03.207613 test begin: paddle.broadcast_to(Tensor([5, 0, 39, 33],"bool"), list[5,8,39,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 39, 33],"bool"), list[5,8,39,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 39, 33].  Tensor sizes: [5, 0, 39, 33]
2025-03-05 15:23:03.208152 test begin: paddle.broadcast_to(Tensor([5, 0, 39, 39],"bool"), list[5,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 39, 39],"bool"), list[5,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 39, 39].  Tensor sizes: [5, 0, 39, 39]
2025-03-05 15:23:03.208697 test begin: paddle.broadcast_to(Tensor([5, 0, 39, 65],"bool"), list[5,8,39,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 39, 65],"bool"), list[5,8,39,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 39, 65].  Tensor sizes: [5, 0, 39, 65]
2025-03-05 15:23:03.209809 test begin: paddle.broadcast_to(Tensor([5, 0, 4, 145],"bool"), list[5,8,4,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 4, 145],"bool"), list[5,8,4,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 4, 145].  Tensor sizes: [5, 0, 4, 145]
2025-03-05 15:23:03.210347 test begin: paddle.broadcast_to(Tensor([5, 0, 4, 33],"bool"), list[5,8,4,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 4, 33],"bool"), list[5,8,4,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 4, 33].  Tensor sizes: [5, 0, 4, 33]
2025-03-05 15:23:03.210887 test begin: paddle.broadcast_to(Tensor([5, 0, 4, 4],"bool"), list[5,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 4, 4],"bool"), list[5,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 4, 4].  Tensor sizes: [5, 0, 4, 4]
2025-03-05 15:23:03.211449 test begin: paddle.broadcast_to(Tensor([5, 0, 4, 65],"bool"), list[5,8,4,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 4, 65],"bool"), list[5,8,4,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 4, 65].  Tensor sizes: [5, 0, 4, 65]
2025-03-05 15:23:03.211986 test begin: paddle.broadcast_to(Tensor([5, 0, 40, 145],"bool"), list[5,8,40,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 40, 145],"bool"), list[5,8,40,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 40, 145].  Tensor sizes: [5, 0, 40, 145]
2025-03-05 15:23:03.212539 test begin: paddle.broadcast_to(Tensor([5, 0, 40, 33],"bool"), list[5,8,40,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 40, 33],"bool"), list[5,8,40,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 40, 33].  Tensor sizes: [5, 0, 40, 33]
2025-03-05 15:23:03.213100 test begin: paddle.broadcast_to(Tensor([5, 0, 40, 40],"bool"), list[5,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 40, 40],"bool"), list[5,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 40, 40].  Tensor sizes: [5, 0, 40, 40]
2025-03-05 15:23:03.213641 test begin: paddle.broadcast_to(Tensor([5, 0, 40, 65],"bool"), list[5,8,40,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 40, 65],"bool"), list[5,8,40,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 40, 65].  Tensor sizes: [5, 0, 40, 65]
2025-03-05 15:23:03.214162 test begin: paddle.broadcast_to(Tensor([5, 0, 41, 145],"bool"), list[5,8,41,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 41, 145],"bool"), list[5,8,41,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 41, 145].  Tensor sizes: [5, 0, 41, 145]
2025-03-05 15:23:03.214687 test begin: paddle.broadcast_to(Tensor([5, 0, 41, 33],"bool"), list[5,8,41,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 41, 33],"bool"), list[5,8,41,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 41, 33].  Tensor sizes: [5, 0, 41, 33]
2025-03-05 15:23:03.215201 test begin: paddle.broadcast_to(Tensor([5, 0, 41, 41],"bool"), list[5,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 41, 41],"bool"), list[5,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 41, 41].  Tensor sizes: [5, 0, 41, 41]
2025-03-05 15:23:03.215843 test begin: paddle.broadcast_to(Tensor([5, 0, 41, 65],"bool"), list[5,8,41,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 41, 65],"bool"), list[5,8,41,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 41, 65].  Tensor sizes: [5, 0, 41, 65]
2025-03-05 15:23:03.216895 test begin: paddle.broadcast_to(Tensor([5, 0, 42, 145],"bool"), list[5,8,42,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 42, 145],"bool"), list[5,8,42,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 42, 145].  Tensor sizes: [5, 0, 42, 145]
2025-03-05 15:23:03.217610 test begin: paddle.broadcast_to(Tensor([5, 0, 42, 33],"bool"), list[5,8,42,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 42, 33],"bool"), list[5,8,42,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 42, 33].  Tensor sizes: [5, 0, 42, 33]
2025-03-05 15:23:03.218267 test begin: paddle.broadcast_to(Tensor([5, 0, 42, 42],"bool"), list[5,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 42, 42],"bool"), list[5,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 42, 42].  Tensor sizes: [5, 0, 42, 42]
2025-03-05 15:23:03.218895 test begin: paddle.broadcast_to(Tensor([5, 0, 42, 65],"bool"), list[5,8,42,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 42, 65],"bool"), list[5,8,42,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 42, 65].  Tensor sizes: [5, 0, 42, 65]
2025-03-05 15:23:03.219511 test begin: paddle.broadcast_to(Tensor([5, 0, 43, 145],"bool"), list[5,8,43,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 43, 145],"bool"), list[5,8,43,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 43, 145].  Tensor sizes: [5, 0, 43, 145]
2025-03-05 15:23:03.220332 test begin: paddle.broadcast_to(Tensor([5, 0, 43, 33],"bool"), list[5,8,43,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 43, 33],"bool"), list[5,8,43,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 43, 33].  Tensor sizes: [5, 0, 43, 33]
2025-03-05 15:23:03.221204 test begin: paddle.broadcast_to(Tensor([5, 0, 43, 43],"bool"), list[5,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 43, 43],"bool"), list[5,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 43, 43].  Tensor sizes: [5, 0, 43, 43]
2025-03-05 15:23:03.221806 test begin: paddle.broadcast_to(Tensor([5, 0, 43, 65],"bool"), list[5,8,43,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 43, 65],"bool"), list[5,8,43,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 43, 65].  Tensor sizes: [5, 0, 43, 65]
2025-03-05 15:23:03.222369 test begin: paddle.broadcast_to(Tensor([5, 0, 44, 145],"bool"), list[5,8,44,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 44, 145],"bool"), list[5,8,44,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 44, 145].  Tensor sizes: [5, 0, 44, 145]
2025-03-05 15:23:03.222921 test begin: paddle.broadcast_to(Tensor([5, 0, 44, 33],"bool"), list[5,8,44,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 44, 33],"bool"), list[5,8,44,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 44, 33].  Tensor sizes: [5, 0, 44, 33]
2025-03-05 15:23:03.223451 test begin: paddle.broadcast_to(Tensor([5, 0, 44, 44],"bool"), list[5,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 44, 44],"bool"), list[5,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 44, 44].  Tensor sizes: [5, 0, 44, 44]
2025-03-05 15:23:03.223995 test begin: paddle.broadcast_to(Tensor([5, 0, 44, 65],"bool"), list[5,8,44,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 44, 65],"bool"), list[5,8,44,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 44, 65].  Tensor sizes: [5, 0, 44, 65]
2025-03-05 15:23:03.224744 test begin: paddle.broadcast_to(Tensor([5, 0, 45, 145],"bool"), list[5,8,45,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 45, 145],"bool"), list[5,8,45,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 45, 145].  Tensor sizes: [5, 0, 45, 145]
2025-03-05 15:23:03.225343 test begin: paddle.broadcast_to(Tensor([5, 0, 45, 33],"bool"), list[5,8,45,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 45, 33],"bool"), list[5,8,45,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 45, 33].  Tensor sizes: [5, 0, 45, 33]
2025-03-05 15:23:03.225887 test begin: paddle.broadcast_to(Tensor([5, 0, 45, 45],"bool"), list[5,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 45, 45],"bool"), list[5,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 45, 45].  Tensor sizes: [5, 0, 45, 45]
2025-03-05 15:23:03.226428 test begin: paddle.broadcast_to(Tensor([5, 0, 45, 65],"bool"), list[5,8,45,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 45, 65],"bool"), list[5,8,45,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 45, 65].  Tensor sizes: [5, 0, 45, 65]
2025-03-05 15:23:03.227036 test begin: paddle.broadcast_to(Tensor([5, 0, 46, 145],"bool"), list[5,8,46,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 46, 145],"bool"), list[5,8,46,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 46, 145].  Tensor sizes: [5, 0, 46, 145]
2025-03-05 15:23:03.227649 test begin: paddle.broadcast_to(Tensor([5, 0, 46, 33],"bool"), list[5,8,46,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 46, 33],"bool"), list[5,8,46,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 46, 33].  Tensor sizes: [5, 0, 46, 33]
2025-03-05 15:23:03.228183 test begin: paddle.broadcast_to(Tensor([5, 0, 46, 46],"bool"), list[5,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 46, 46],"bool"), list[5,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 46, 46].  Tensor sizes: [5, 0, 46, 46]
2025-03-05 15:23:03.228707 test begin: paddle.broadcast_to(Tensor([5, 0, 46, 65],"bool"), list[5,8,46,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 46, 65],"bool"), list[5,8,46,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 46, 65].  Tensor sizes: [5, 0, 46, 65]
2025-03-05 15:23:03.229233 test begin: paddle.broadcast_to(Tensor([5, 0, 47, 145],"bool"), list[5,8,47,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 47, 145],"bool"), list[5,8,47,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 47, 145].  Tensor sizes: [5, 0, 47, 145]
2025-03-05 15:23:03.229765 test begin: paddle.broadcast_to(Tensor([5, 0, 47, 33],"bool"), list[5,8,47,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 47, 33],"bool"), list[5,8,47,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 47, 33].  Tensor sizes: [5, 0, 47, 33]
2025-03-05 15:23:03.230296 test begin: paddle.broadcast_to(Tensor([5, 0, 47, 47],"bool"), list[5,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 47, 47],"bool"), list[5,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 47, 47].  Tensor sizes: [5, 0, 47, 47]
2025-03-05 15:23:03.230835 test begin: paddle.broadcast_to(Tensor([5, 0, 47, 65],"bool"), list[5,8,47,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 47, 65],"bool"), list[5,8,47,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 47, 65].  Tensor sizes: [5, 0, 47, 65]
2025-03-05 15:23:03.231373 test begin: paddle.broadcast_to(Tensor([5, 0, 48, 145],"bool"), list[5,8,48,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 48, 145],"bool"), list[5,8,48,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 48, 145].  Tensor sizes: [5, 0, 48, 145]
2025-03-05 15:23:03.231990 test begin: paddle.broadcast_to(Tensor([5, 0, 48, 33],"bool"), list[5,8,48,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 48, 33],"bool"), list[5,8,48,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 48, 33].  Tensor sizes: [5, 0, 48, 33]
2025-03-05 15:23:03.232515 test begin: paddle.broadcast_to(Tensor([5, 0, 48, 48],"bool"), list[5,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 48, 48],"bool"), list[5,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 48, 48].  Tensor sizes: [5, 0, 48, 48]
2025-03-05 15:23:03.235914 test begin: paddle.broadcast_to(Tensor([5, 0, 48, 65],"bool"), list[5,8,48,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 48, 65],"bool"), list[5,8,48,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 48, 65].  Tensor sizes: [5, 0, 48, 65]
2025-03-05 15:23:03.237651 test begin: paddle.broadcast_to(Tensor([5, 0, 49, 145],"bool"), list[5,8,49,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 49, 145],"bool"), list[5,8,49,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 49, 145].  Tensor sizes: [5, 0, 49, 145]
2025-03-05 15:23:03.238186 test begin: paddle.broadcast_to(Tensor([5, 0, 49, 33],"bool"), list[5,8,49,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 49, 33],"bool"), list[5,8,49,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 49, 33].  Tensor sizes: [5, 0, 49, 33]
2025-03-05 15:23:03.238727 test begin: paddle.broadcast_to(Tensor([5, 0, 49, 49],"bool"), list[5,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 49, 49],"bool"), list[5,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 49, 49].  Tensor sizes: [5, 0, 49, 49]
2025-03-05 15:23:03.239243 test begin: paddle.broadcast_to(Tensor([5, 0, 49, 65],"bool"), list[5,8,49,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 49, 65],"bool"), list[5,8,49,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 49, 65].  Tensor sizes: [5, 0, 49, 65]
2025-03-05 15:23:03.239767 test begin: paddle.broadcast_to(Tensor([5, 0, 4],"float64"), tuple(5,3,4,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 4],"float64"), tuple(5,3,4,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 3, 4].  Tensor sizes: [5, 0, 4]
2025-03-05 15:23:03.240331 test begin: paddle.broadcast_to(Tensor([5, 0, 4],"int32"), tuple(5,1,4,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 4],"int32"), tuple(5,1,4,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 1, 4].  Tensor sizes: [5, 0, 4]
2025-03-05 15:23:03.241921 test begin: paddle.broadcast_to(Tensor([5, 0, 5, 145],"bool"), list[5,8,5,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 5, 145],"bool"), list[5,8,5,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 5, 145].  Tensor sizes: [5, 0, 5, 145]
2025-03-05 15:23:03.242452 test begin: paddle.broadcast_to(Tensor([5, 0, 5, 33],"bool"), list[5,8,5,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 5, 33],"bool"), list[5,8,5,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 5, 33].  Tensor sizes: [5, 0, 5, 33]
2025-03-05 15:23:03.242993 test begin: paddle.broadcast_to(Tensor([5, 0, 5, 5],"bool"), list[5,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 5, 5],"bool"), list[5,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 5, 5].  Tensor sizes: [5, 0, 5, 5]
2025-03-05 15:23:03.243525 test begin: paddle.broadcast_to(Tensor([5, 0, 5, 65],"bool"), list[5,8,5,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 5, 65],"bool"), list[5,8,5,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 5, 65].  Tensor sizes: [5, 0, 5, 65]
2025-03-05 15:23:03.244058 test begin: paddle.broadcast_to(Tensor([5, 0, 50, 145],"bool"), list[5,8,50,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 50, 145],"bool"), list[5,8,50,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 50, 145].  Tensor sizes: [5, 0, 50, 145]
2025-03-05 15:23:03.244594 test begin: paddle.broadcast_to(Tensor([5, 0, 50, 33],"bool"), list[5,8,50,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 50, 33],"bool"), list[5,8,50,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 50, 33].  Tensor sizes: [5, 0, 50, 33]
2025-03-05 15:23:03.245130 test begin: paddle.broadcast_to(Tensor([5, 0, 50, 50],"bool"), list[5,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 50, 50],"bool"), list[5,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 50, 50].  Tensor sizes: [5, 0, 50, 50]
2025-03-05 15:23:03.246553 test begin: paddle.broadcast_to(Tensor([5, 0, 50, 65],"bool"), list[5,8,50,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 50, 65],"bool"), list[5,8,50,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 50, 65].  Tensor sizes: [5, 0, 50, 65]
2025-03-05 15:23:03.247853 test begin: paddle.broadcast_to(Tensor([5, 0, 51, 145],"bool"), list[5,8,51,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 51, 145],"bool"), list[5,8,51,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 51, 145].  Tensor sizes: [5, 0, 51, 145]
2025-03-05 15:23:03.248387 test begin: paddle.broadcast_to(Tensor([5, 0, 51, 33],"bool"), list[5,8,51,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 51, 33],"bool"), list[5,8,51,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 51, 33].  Tensor sizes: [5, 0, 51, 33]
2025-03-05 15:23:03.248920 test begin: paddle.broadcast_to(Tensor([5, 0, 51, 51],"bool"), list[5,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 51, 51],"bool"), list[5,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 51, 51].  Tensor sizes: [5, 0, 51, 51]
2025-03-05 15:23:03.249445 test begin: paddle.broadcast_to(Tensor([5, 0, 51, 65],"bool"), list[5,8,51,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 51, 65],"bool"), list[5,8,51,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 51, 65].  Tensor sizes: [5, 0, 51, 65]
2025-03-05 15:23:03.249975 test begin: paddle.broadcast_to(Tensor([5, 0, 52, 145],"bool"), list[5,8,52,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 52, 145],"bool"), list[5,8,52,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 52, 145].  Tensor sizes: [5, 0, 52, 145]
2025-03-05 15:23:03.250511 test begin: paddle.broadcast_to(Tensor([5, 0, 52, 33],"bool"), list[5,8,52,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 52, 33],"bool"), list[5,8,52,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 52, 33].  Tensor sizes: [5, 0, 52, 33]
2025-03-05 15:23:03.251047 test begin: paddle.broadcast_to(Tensor([5, 0, 52, 52],"bool"), list[5,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 52, 52],"bool"), list[5,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 52, 52].  Tensor sizes: [5, 0, 52, 52]
2025-03-05 15:23:03.252517 test begin: paddle.broadcast_to(Tensor([5, 0, 52, 65],"bool"), list[5,8,52,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 52, 65],"bool"), list[5,8,52,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 52, 65].  Tensor sizes: [5, 0, 52, 65]
2025-03-05 15:23:03.253085 test begin: paddle.broadcast_to(Tensor([5, 0, 53, 145],"bool"), list[5,8,53,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 53, 145],"bool"), list[5,8,53,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 53, 145].  Tensor sizes: [5, 0, 53, 145]
2025-03-05 15:23:03.253630 test begin: paddle.broadcast_to(Tensor([5, 0, 53, 33],"bool"), list[5,8,53,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 53, 33],"bool"), list[5,8,53,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 53, 33].  Tensor sizes: [5, 0, 53, 33]
2025-03-05 15:23:03.254160 test begin: paddle.broadcast_to(Tensor([5, 0, 53, 53],"bool"), list[5,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 53, 53],"bool"), list[5,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 53, 53].  Tensor sizes: [5, 0, 53, 53]
2025-03-05 15:23:03.254680 test begin: paddle.broadcast_to(Tensor([5, 0, 53, 65],"bool"), list[5,8,53,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 53, 65],"bool"), list[5,8,53,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 53, 65].  Tensor sizes: [5, 0, 53, 65]
2025-03-05 15:23:03.255204 test begin: paddle.broadcast_to(Tensor([5, 0, 54, 145],"bool"), list[5,8,54,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 54, 145],"bool"), list[5,8,54,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 54, 145].  Tensor sizes: [5, 0, 54, 145]
2025-03-05 15:23:03.255726 test begin: paddle.broadcast_to(Tensor([5, 0, 54, 33],"bool"), list[5,8,54,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 54, 33],"bool"), list[5,8,54,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 54, 33].  Tensor sizes: [5, 0, 54, 33]
2025-03-05 15:23:03.256238 test begin: paddle.broadcast_to(Tensor([5, 0, 54, 54],"bool"), list[5,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 54, 54],"bool"), list[5,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 54, 54].  Tensor sizes: [5, 0, 54, 54]
2025-03-05 15:23:03.257628 test begin: paddle.broadcast_to(Tensor([5, 0, 54, 65],"bool"), list[5,8,54,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 54, 65],"bool"), list[5,8,54,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 54, 65].  Tensor sizes: [5, 0, 54, 65]
2025-03-05 15:23:03.258162 test begin: paddle.broadcast_to(Tensor([5, 0, 55, 145],"bool"), list[5,8,55,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 55, 145],"bool"), list[5,8,55,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 55, 145].  Tensor sizes: [5, 0, 55, 145]
2025-03-05 15:23:03.258703 test begin: paddle.broadcast_to(Tensor([5, 0, 55, 33],"bool"), list[5,8,55,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 55, 33],"bool"), list[5,8,55,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 55, 33].  Tensor sizes: [5, 0, 55, 33]
2025-03-05 15:23:03.259246 test begin: paddle.broadcast_to(Tensor([5, 0, 55, 55],"bool"), list[5,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 55, 55],"bool"), list[5,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 55, 55].  Tensor sizes: [5, 0, 55, 55]
2025-03-05 15:23:03.265488 test begin: paddle.broadcast_to(Tensor([5, 0, 55, 65],"bool"), list[5,8,55,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 55, 65],"bool"), list[5,8,55,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 55, 65].  Tensor sizes: [5, 0, 55, 65]
2025-03-05 15:23:03.270603 test begin: paddle.broadcast_to(Tensor([5, 0, 56, 145],"bool"), list[5,8,56,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 56, 145],"bool"), list[5,8,56,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 56, 145].  Tensor sizes: [5, 0, 56, 145]
2025-03-05 15:23:03.272786 test begin: paddle.broadcast_to(Tensor([5, 0, 56, 33],"bool"), list[5,8,56,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 56, 33],"bool"), list[5,8,56,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 56, 33].  Tensor sizes: [5, 0, 56, 33]
2025-03-05 15:23:03.274451 test begin: paddle.broadcast_to(Tensor([5, 0, 56, 56],"bool"), list[5,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 56, 56],"bool"), list[5,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 56, 56].  Tensor sizes: [5, 0, 56, 56]
2025-03-05 15:23:03.295406 test begin: paddle.broadcast_to(Tensor([5, 0, 56, 65],"bool"), list[5,8,56,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 56, 65],"bool"), list[5,8,56,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 56, 65].  Tensor sizes: [5, 0, 56, 65]
2025-03-05 15:23:03.296363 test begin: paddle.broadcast_to(Tensor([5, 0, 57, 145],"bool"), list[5,8,57,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 57, 145],"bool"), list[5,8,57,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 57, 145].  Tensor sizes: [5, 0, 57, 145]
2025-03-05 15:23:03.298025 test begin: paddle.broadcast_to(Tensor([5, 0, 57, 33],"bool"), list[5,8,57,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 57, 33],"bool"), list[5,8,57,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 57, 33].  Tensor sizes: [5, 0, 57, 33]
2025-03-05 15:23:03.300896 test begin: paddle.broadcast_to(Tensor([5, 0, 57, 57],"bool"), list[5,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 57, 57],"bool"), list[5,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 57, 57].  Tensor sizes: [5, 0, 57, 57]
2025-03-05 15:23:03.306736 test begin: paddle.broadcast_to(Tensor([5, 0, 57, 65],"bool"), list[5,8,57,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 57, 65],"bool"), list[5,8,57,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 57, 65].  Tensor sizes: [5, 0, 57, 65]
2025-03-05 15:23:03.308081 test begin: paddle.broadcast_to(Tensor([5, 0, 58, 145],"bool"), list[5,8,58,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 58, 145],"bool"), list[5,8,58,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 58, 145].  Tensor sizes: [5, 0, 58, 145]
2025-03-05 15:23:03.308908 test begin: paddle.broadcast_to(Tensor([5, 0, 58, 33],"bool"), list[5,8,58,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 58, 33],"bool"), list[5,8,58,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 58, 33].  Tensor sizes: [5, 0, 58, 33]
2025-03-05 15:23:03.309594 test begin: paddle.broadcast_to(Tensor([5, 0, 58, 58],"bool"), list[5,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 58, 58],"bool"), list[5,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 58, 58].  Tensor sizes: [5, 0, 58, 58]
2025-03-05 15:23:03.310263 test begin: paddle.broadcast_to(Tensor([5, 0, 58, 65],"bool"), list[5,8,58,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 58, 65],"bool"), list[5,8,58,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 58, 65].  Tensor sizes: [5, 0, 58, 65]
2025-03-05 15:23:03.311028 test begin: paddle.broadcast_to(Tensor([5, 0, 59, 145],"bool"), list[5,8,59,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 59, 145],"bool"), list[5,8,59,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 59, 145].  Tensor sizes: [5, 0, 59, 145]
2025-03-05 15:23:03.311754 test begin: paddle.broadcast_to(Tensor([5, 0, 59, 33],"bool"), list[5,8,59,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 59, 33],"bool"), list[5,8,59,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 59, 33].  Tensor sizes: [5, 0, 59, 33]
2025-03-05 15:23:03.331488 test begin: paddle.broadcast_to(Tensor([5, 0, 59, 59],"bool"), list[5,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 59, 59],"bool"), list[5,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 59, 59].  Tensor sizes: [5, 0, 59, 59]
2025-03-05 15:23:03.334517 test begin: paddle.broadcast_to(Tensor([5, 0, 59, 65],"bool"), list[5,8,59,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 59, 65],"bool"), list[5,8,59,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 59, 65].  Tensor sizes: [5, 0, 59, 65]
2025-03-05 15:23:03.360233 test begin: paddle.broadcast_to(Tensor([5, 0, 5],"float16"), tuple(5,5,5,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 5],"float16"), tuple(5,5,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 5, 5].  Tensor sizes: [5, 0, 5]
2025-03-05 15:23:03.373693 test begin: paddle.broadcast_to(Tensor([5, 0, 5],"float32"), tuple(5,5,5,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 5],"float32"), tuple(5,5,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 5, 5].  Tensor sizes: [5, 0, 5]
2025-03-05 15:23:03.375743 test begin: paddle.broadcast_to(Tensor([5, 0, 6, 145],"bool"), list[5,8,6,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 6, 145],"bool"), list[5,8,6,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 6, 145].  Tensor sizes: [5, 0, 6, 145]
2025-03-05 15:23:03.378403 test begin: paddle.broadcast_to(Tensor([5, 0, 6, 33],"bool"), list[5,8,6,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 6, 33],"bool"), list[5,8,6,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 6, 33].  Tensor sizes: [5, 0, 6, 33]
2025-03-05 15:23:03.379196 test begin: paddle.broadcast_to(Tensor([5, 0, 6, 65],"bool"), list[5,8,6,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 6, 65],"bool"), list[5,8,6,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 6, 65].  Tensor sizes: [5, 0, 6, 65]
2025-03-05 15:23:03.380789 test begin: paddle.broadcast_to(Tensor([5, 0, 6, 6],"bool"), list[5,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 6, 6],"bool"), list[5,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 6, 6].  Tensor sizes: [5, 0, 6, 6]
2025-03-05 15:23:03.381552 test begin: paddle.broadcast_to(Tensor([5, 0, 60, 145],"bool"), list[5,8,60,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 60, 145],"bool"), list[5,8,60,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 60, 145].  Tensor sizes: [5, 0, 60, 145]
2025-03-05 15:23:03.382431 test begin: paddle.broadcast_to(Tensor([5, 0, 60, 33],"bool"), list[5,8,60,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 60, 33],"bool"), list[5,8,60,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 60, 33].  Tensor sizes: [5, 0, 60, 33]
2025-03-05 15:23:03.383042 test begin: paddle.broadcast_to(Tensor([5, 0, 60, 60],"bool"), list[5,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 60, 60],"bool"), list[5,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 60, 60].  Tensor sizes: [5, 0, 60, 60]
2025-03-05 15:23:03.387064 test begin: paddle.broadcast_to(Tensor([5, 0, 60, 65],"bool"), list[5,8,60,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 60, 65],"bool"), list[5,8,60,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 60, 65].  Tensor sizes: [5, 0, 60, 65]
2025-03-05 15:23:03.388212 test begin: paddle.broadcast_to(Tensor([5, 0, 61, 145],"bool"), list[5,8,61,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 61, 145],"bool"), list[5,8,61,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 61, 145].  Tensor sizes: [5, 0, 61, 145]
2025-03-05 15:23:03.388873 test begin: paddle.broadcast_to(Tensor([5, 0, 61, 33],"bool"), list[5,8,61,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 61, 33],"bool"), list[5,8,61,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 61, 33].  Tensor sizes: [5, 0, 61, 33]
2025-03-05 15:23:03.389631 test begin: paddle.broadcast_to(Tensor([5, 0, 61, 61],"bool"), list[5,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 61, 61],"bool"), list[5,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 61, 61].  Tensor sizes: [5, 0, 61, 61]
2025-03-05 15:23:03.390478 test begin: paddle.broadcast_to(Tensor([5, 0, 61, 65],"bool"), list[5,8,61,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 61, 65],"bool"), list[5,8,61,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 61, 65].  Tensor sizes: [5, 0, 61, 65]
2025-03-05 15:23:03.391301 test begin: paddle.broadcast_to(Tensor([5, 0, 62, 145],"bool"), list[5,8,62,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 62, 145],"bool"), list[5,8,62,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 62, 145].  Tensor sizes: [5, 0, 62, 145]
2025-03-05 15:23:03.392631 test begin: paddle.broadcast_to(Tensor([5, 0, 62, 62],"bool"), list[5,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 62, 62],"bool"), list[5,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 62, 62].  Tensor sizes: [5, 0, 62, 62]
2025-03-05 15:23:03.393438 test begin: paddle.broadcast_to(Tensor([5, 0, 62, 65],"bool"), list[5,8,62,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 62, 65],"bool"), list[5,8,62,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 62, 65].  Tensor sizes: [5, 0, 62, 65]
2025-03-05 15:23:03.394077 test begin: paddle.broadcast_to(Tensor([5, 0, 63, 145],"bool"), list[5,8,63,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 63, 145],"bool"), list[5,8,63,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 63, 145].  Tensor sizes: [5, 0, 63, 145]
2025-03-05 15:23:03.394654 test begin: paddle.broadcast_to(Tensor([5, 0, 63, 63],"bool"), list[5,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 63, 63],"bool"), list[5,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 63, 63].  Tensor sizes: [5, 0, 63, 63]
2025-03-05 15:23:03.397077 test begin: paddle.broadcast_to(Tensor([5, 0, 63, 65],"bool"), list[5,8,63,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 63, 65],"bool"), list[5,8,63,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 63, 65].  Tensor sizes: [5, 0, 63, 65]
2025-03-05 15:23:03.397733 test begin: paddle.broadcast_to(Tensor([5, 0, 64, 145],"bool"), list[5,8,64,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 64, 145],"bool"), list[5,8,64,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 64, 145].  Tensor sizes: [5, 0, 64, 145]
2025-03-05 15:23:03.398575 test begin: paddle.broadcast_to(Tensor([5, 0, 64, 64],"bool"), list[5,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 64, 64],"bool"), list[5,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 64, 64].  Tensor sizes: [5, 0, 64, 64]
2025-03-05 15:23:03.399756 test begin: paddle.broadcast_to(Tensor([5, 0, 64, 65],"bool"), list[5,8,64,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 64, 65],"bool"), list[5,8,64,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 64, 65].  Tensor sizes: [5, 0, 64, 65]
2025-03-05 15:23:03.400740 test begin: paddle.broadcast_to(Tensor([5, 0, 65, 145],"bool"), list[5,8,65,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 65, 145],"bool"), list[5,8,65,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 65, 145].  Tensor sizes: [5, 0, 65, 145]
2025-03-05 15:23:03.402283 test begin: paddle.broadcast_to(Tensor([5, 0, 65, 65],"bool"), list[5,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 65, 65],"bool"), list[5,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 65, 65].  Tensor sizes: [5, 0, 65, 65]
2025-03-05 15:23:03.404214 test begin: paddle.broadcast_to(Tensor([5, 0, 66, 145],"bool"), list[5,8,66,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 66, 145],"bool"), list[5,8,66,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 66, 145].  Tensor sizes: [5, 0, 66, 145]
2025-03-05 15:23:03.410408 test begin: paddle.broadcast_to(Tensor([5, 0, 66, 65],"bool"), list[5,8,66,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 66, 65],"bool"), list[5,8,66,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 66, 65].  Tensor sizes: [5, 0, 66, 65]
2025-03-05 15:23:03.413821 test begin: paddle.broadcast_to(Tensor([5, 0, 66, 66],"bool"), list[5,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 66, 66],"bool"), list[5,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 66, 66].  Tensor sizes: [5, 0, 66, 66]
2025-03-05 15:23:03.417490 test begin: paddle.broadcast_to(Tensor([5, 0, 67, 145],"bool"), list[5,8,67,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 67, 145],"bool"), list[5,8,67,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 67, 145].  Tensor sizes: [5, 0, 67, 145]
2025-03-05 15:23:03.418848 test begin: paddle.broadcast_to(Tensor([5, 0, 67, 65],"bool"), list[5,8,67,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 67, 65],"bool"), list[5,8,67,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 67, 65].  Tensor sizes: [5, 0, 67, 65]
2025-03-05 15:23:03.419670 test begin: paddle.broadcast_to(Tensor([5, 0, 67, 67],"bool"), list[5,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 67, 67],"bool"), list[5,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 67, 67].  Tensor sizes: [5, 0, 67, 67]
2025-03-05 15:23:03.421058 test begin: paddle.broadcast_to(Tensor([5, 0, 68, 145],"bool"), list[5,8,68,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 68, 145],"bool"), list[5,8,68,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 68, 145].  Tensor sizes: [5, 0, 68, 145]
2025-03-05 15:23:03.422180 test begin: paddle.broadcast_to(Tensor([5, 0, 68, 65],"bool"), list[5,8,68,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 68, 65],"bool"), list[5,8,68,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 68, 65].  Tensor sizes: [5, 0, 68, 65]
2025-03-05 15:23:03.422929 test begin: paddle.broadcast_to(Tensor([5, 0, 68, 68],"bool"), list[5,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 68, 68],"bool"), list[5,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 68, 68].  Tensor sizes: [5, 0, 68, 68]
2025-03-05 15:23:03.423568 test begin: paddle.broadcast_to(Tensor([5, 0, 69, 145],"bool"), list[5,8,69,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 69, 145],"bool"), list[5,8,69,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 69, 145].  Tensor sizes: [5, 0, 69, 145]
2025-03-05 15:23:03.424139 test begin: paddle.broadcast_to(Tensor([5, 0, 69, 65],"bool"), list[5,8,69,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 69, 65],"bool"), list[5,8,69,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 69, 65].  Tensor sizes: [5, 0, 69, 65]
2025-03-05 15:23:03.424952 test begin: paddle.broadcast_to(Tensor([5, 0, 69, 69],"bool"), list[5,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 69, 69],"bool"), list[5,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 69, 69].  Tensor sizes: [5, 0, 69, 69]
2025-03-05 15:23:03.426187 test begin: paddle.broadcast_to(Tensor([5, 0, 6],"float64"), list[0,5,17,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 6],"float64"), list[0,5,17,6,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [0, 5, 17, 6].  Tensor sizes: [5, 0, 6]
2025-03-05 15:23:03.427206 test begin: paddle.broadcast_to(Tensor([5, 0, 6],"float64"), list[5,17,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 6],"float64"), list[5,17,6,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 17, 6].  Tensor sizes: [5, 0, 6]
2025-03-05 15:23:03.427925 test begin: paddle.broadcast_to(Tensor([5, 0, 7, 145],"bool"), list[5,8,7,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 7, 145],"bool"), list[5,8,7,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 7, 145].  Tensor sizes: [5, 0, 7, 145]
2025-03-05 15:23:03.429620 test begin: paddle.broadcast_to(Tensor([5, 0, 7, 33],"bool"), list[5,8,7,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 7, 33],"bool"), list[5,8,7,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 7, 33].  Tensor sizes: [5, 0, 7, 33]
2025-03-05 15:23:03.430322 test begin: paddle.broadcast_to(Tensor([5, 0, 7, 65],"bool"), list[5,8,7,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 7, 65],"bool"), list[5,8,7,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 7, 65].  Tensor sizes: [5, 0, 7, 65]
2025-03-05 15:23:03.431140 test begin: paddle.broadcast_to(Tensor([5, 0, 7, 7],"bool"), list[5,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 7, 7],"bool"), list[5,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 7, 7].  Tensor sizes: [5, 0, 7, 7]
2025-03-05 15:23:03.432136 test begin: paddle.broadcast_to(Tensor([5, 0, 70, 145],"bool"), list[5,8,70,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 70, 145],"bool"), list[5,8,70,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 70, 145].  Tensor sizes: [5, 0, 70, 145]
2025-03-05 15:23:03.432893 test begin: paddle.broadcast_to(Tensor([5, 0, 70, 65],"bool"), list[5,8,70,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 70, 65],"bool"), list[5,8,70,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 70, 65].  Tensor sizes: [5, 0, 70, 65]
2025-03-05 15:23:03.433523 test begin: paddle.broadcast_to(Tensor([5, 0, 70, 70],"bool"), list[5,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 70, 70],"bool"), list[5,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 70, 70].  Tensor sizes: [5, 0, 70, 70]
2025-03-05 15:23:03.434219 test begin: paddle.broadcast_to(Tensor([5, 0, 71, 145],"bool"), list[5,8,71,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 71, 145],"bool"), list[5,8,71,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 71, 145].  Tensor sizes: [5, 0, 71, 145]
2025-03-05 15:23:03.436667 test begin: paddle.broadcast_to(Tensor([5, 0, 71, 65],"bool"), list[5,8,71,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 71, 65],"bool"), list[5,8,71,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 71, 65].  Tensor sizes: [5, 0, 71, 65]
2025-03-05 15:23:03.437291 test begin: paddle.broadcast_to(Tensor([5, 0, 71, 71],"bool"), list[5,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 71, 71],"bool"), list[5,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 71, 71].  Tensor sizes: [5, 0, 71, 71]
2025-03-05 15:23:03.437878 test begin: paddle.broadcast_to(Tensor([5, 0, 72, 145],"bool"), list[5,8,72,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 72, 145],"bool"), list[5,8,72,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 72, 145].  Tensor sizes: [5, 0, 72, 145]
2025-03-05 15:23:03.438567 test begin: paddle.broadcast_to(Tensor([5, 0, 72, 65],"bool"), list[5,8,72,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 72, 65],"bool"), list[5,8,72,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 72, 65].  Tensor sizes: [5, 0, 72, 65]
2025-03-05 15:23:03.439176 test begin: paddle.broadcast_to(Tensor([5, 0, 72, 72],"bool"), list[5,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 72, 72],"bool"), list[5,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 72, 72].  Tensor sizes: [5, 0, 72, 72]
2025-03-05 15:23:03.439752 test begin: paddle.broadcast_to(Tensor([5, 0, 73, 145],"bool"), list[5,8,73,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 73, 145],"bool"), list[5,8,73,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 73, 145].  Tensor sizes: [5, 0, 73, 145]
2025-03-05 15:23:03.440277 test begin: paddle.broadcast_to(Tensor([5, 0, 73, 65],"bool"), list[5,8,73,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 73, 65],"bool"), list[5,8,73,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 73, 65].  Tensor sizes: [5, 0, 73, 65]
2025-03-05 15:23:03.440811 test begin: paddle.broadcast_to(Tensor([5, 0, 73, 73],"bool"), list[5,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 73, 73],"bool"), list[5,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 73, 73].  Tensor sizes: [5, 0, 73, 73]
2025-03-05 15:23:03.441441 test begin: paddle.broadcast_to(Tensor([5, 0, 74, 145],"bool"), list[5,8,74,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 74, 145],"bool"), list[5,8,74,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 74, 145].  Tensor sizes: [5, 0, 74, 145]
2025-03-05 15:23:03.442418 test begin: paddle.broadcast_to(Tensor([5, 0, 74, 65],"bool"), list[5,8,74,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 74, 65],"bool"), list[5,8,74,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 74, 65].  Tensor sizes: [5, 0, 74, 65]
2025-03-05 15:23:03.443063 test begin: paddle.broadcast_to(Tensor([5, 0, 74, 74],"bool"), list[5,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 74, 74],"bool"), list[5,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 74, 74].  Tensor sizes: [5, 0, 74, 74]
2025-03-05 15:23:03.443732 test begin: paddle.broadcast_to(Tensor([5, 0, 75, 145],"bool"), list[5,8,75,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 75, 145],"bool"), list[5,8,75,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 75, 145].  Tensor sizes: [5, 0, 75, 145]
2025-03-05 15:23:03.444347 test begin: paddle.broadcast_to(Tensor([5, 0, 75, 65],"bool"), list[5,8,75,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 75, 65],"bool"), list[5,8,75,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 75, 65].  Tensor sizes: [5, 0, 75, 65]
2025-03-05 15:23:03.445411 test begin: paddle.broadcast_to(Tensor([5, 0, 75, 75],"bool"), list[5,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 75, 75],"bool"), list[5,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 75, 75].  Tensor sizes: [5, 0, 75, 75]
2025-03-05 15:23:03.446309 test begin: paddle.broadcast_to(Tensor([5, 0, 76, 145],"bool"), list[5,8,76,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 76, 145],"bool"), list[5,8,76,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 76, 145].  Tensor sizes: [5, 0, 76, 145]
2025-03-05 15:23:03.447034 test begin: paddle.broadcast_to(Tensor([5, 0, 76, 65],"bool"), list[5,8,76,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 76, 65],"bool"), list[5,8,76,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 76, 65].  Tensor sizes: [5, 0, 76, 65]
2025-03-05 15:23:03.447674 test begin: paddle.broadcast_to(Tensor([5, 0, 76, 76],"bool"), list[5,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 76, 76],"bool"), list[5,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 76, 76].  Tensor sizes: [5, 0, 76, 76]
2025-03-05 15:23:03.449855 test begin: paddle.broadcast_to(Tensor([5, 0, 77, 145],"bool"), list[5,8,77,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 77, 145],"bool"), list[5,8,77,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 77, 145].  Tensor sizes: [5, 0, 77, 145]
2025-03-05 15:23:03.450787 test begin: paddle.broadcast_to(Tensor([5, 0, 77, 65],"bool"), list[5,8,77,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 77, 65],"bool"), list[5,8,77,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 77, 65].  Tensor sizes: [5, 0, 77, 65]
2025-03-05 15:23:03.451834 test begin: paddle.broadcast_to(Tensor([5, 0, 77, 77],"bool"), list[5,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 77, 77],"bool"), list[5,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 77, 77].  Tensor sizes: [5, 0, 77, 77]
2025-03-05 15:23:03.452529 test begin: paddle.broadcast_to(Tensor([5, 0, 78, 145],"bool"), list[5,8,78,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 78, 145],"bool"), list[5,8,78,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 78, 145].  Tensor sizes: [5, 0, 78, 145]
2025-03-05 15:23:03.453780 test begin: paddle.broadcast_to(Tensor([5, 0, 78, 65],"bool"), list[5,8,78,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 78, 65],"bool"), list[5,8,78,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 78, 65].  Tensor sizes: [5, 0, 78, 65]
2025-03-05 15:23:03.454786 test begin: paddle.broadcast_to(Tensor([5, 0, 78, 78],"bool"), list[5,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 78, 78],"bool"), list[5,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 78, 78].  Tensor sizes: [5, 0, 78, 78]
2025-03-05 15:23:03.455573 test begin: paddle.broadcast_to(Tensor([5, 0, 79, 145],"bool"), list[5,8,79,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 79, 145],"bool"), list[5,8,79,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 79, 145].  Tensor sizes: [5, 0, 79, 145]
2025-03-05 15:23:03.456363 test begin: paddle.broadcast_to(Tensor([5, 0, 79, 65],"bool"), list[5,8,79,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 79, 65],"bool"), list[5,8,79,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 79, 65].  Tensor sizes: [5, 0, 79, 65]
2025-03-05 15:23:03.457431 test begin: paddle.broadcast_to(Tensor([5, 0, 79, 79],"bool"), list[5,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 79, 79],"bool"), list[5,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 79, 79].  Tensor sizes: [5, 0, 79, 79]
2025-03-05 15:23:03.458879 test begin: paddle.broadcast_to(Tensor([5, 0, 7],"float32"), tuple(5,6,7,), )

[torch error] paddle.broadcast_to(Tensor([5, 0, 7],"float32"), tuple(5,6,7,), ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 6, 7].  Tensor sizes: [5, 0, 7]
2025-03-05 15:23:03.459572 test begin: paddle.broadcast_to(Tensor([5, 0, 8, 145],"bool"), list[5,8,8,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 8, 145],"bool"), list[5,8,8,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 8, 145].  Tensor sizes: [5, 0, 8, 145]
2025-03-05 15:23:03.460535 test begin: paddle.broadcast_to(Tensor([5, 0, 8, 33],"bool"), list[5,8,8,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 8, 33],"bool"), list[5,8,8,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 8, 33].  Tensor sizes: [5, 0, 8, 33]
2025-03-05 15:23:03.461961 test begin: paddle.broadcast_to(Tensor([5, 0, 8, 65],"bool"), list[5,8,8,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 8, 65],"bool"), list[5,8,8,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 8, 65].  Tensor sizes: [5, 0, 8, 65]
2025-03-05 15:23:03.464409 test begin: paddle.broadcast_to(Tensor([5, 0, 8, 8],"bool"), list[5,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 8, 8],"bool"), list[5,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 8, 8].  Tensor sizes: [5, 0, 8, 8]
2025-03-05 15:23:03.465109 test begin: paddle.broadcast_to(Tensor([5, 0, 80, 145],"bool"), list[5,8,80,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 80, 145],"bool"), list[5,8,80,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 80, 145].  Tensor sizes: [5, 0, 80, 145]
2025-03-05 15:23:03.465934 test begin: paddle.broadcast_to(Tensor([5, 0, 80, 65],"bool"), list[5,8,80,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 80, 65],"bool"), list[5,8,80,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 80, 65].  Tensor sizes: [5, 0, 80, 65]
2025-03-05 15:23:03.466912 test begin: paddle.broadcast_to(Tensor([5, 0, 80, 80],"bool"), list[5,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 80, 80],"bool"), list[5,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 80, 80].  Tensor sizes: [5, 0, 80, 80]
2025-03-05 15:23:03.468395 test begin: paddle.broadcast_to(Tensor([5, 0, 81, 145],"bool"), list[5,8,81,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 81, 145],"bool"), list[5,8,81,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 81, 145].  Tensor sizes: [5, 0, 81, 145]
2025-03-05 15:23:03.469165 test begin: paddle.broadcast_to(Tensor([5, 0, 81, 65],"bool"), list[5,8,81,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 81, 65],"bool"), list[5,8,81,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 81, 65].  Tensor sizes: [5, 0, 81, 65]
2025-03-05 15:23:03.469868 test begin: paddle.broadcast_to(Tensor([5, 0, 81, 81],"bool"), list[5,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 81, 81],"bool"), list[5,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 81, 81].  Tensor sizes: [5, 0, 81, 81]
2025-03-05 15:23:03.470597 test begin: paddle.broadcast_to(Tensor([5, 0, 82, 145],"bool"), list[5,8,82,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 82, 145],"bool"), list[5,8,82,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 82, 145].  Tensor sizes: [5, 0, 82, 145]
2025-03-05 15:23:03.471196 test begin: paddle.broadcast_to(Tensor([5, 0, 82, 65],"bool"), list[5,8,82,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 82, 65],"bool"), list[5,8,82,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 82, 65].  Tensor sizes: [5, 0, 82, 65]
2025-03-05 15:23:03.472289 test begin: paddle.broadcast_to(Tensor([5, 0, 82, 82],"bool"), list[5,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 82, 82],"bool"), list[5,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 82, 82].  Tensor sizes: [5, 0, 82, 82]
2025-03-05 15:23:03.473014 test begin: paddle.broadcast_to(Tensor([5, 0, 83, 145],"bool"), list[5,8,83,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 83, 145],"bool"), list[5,8,83,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 83, 145].  Tensor sizes: [5, 0, 83, 145]
2025-03-05 15:23:03.473827 test begin: paddle.broadcast_to(Tensor([5, 0, 83, 65],"bool"), list[5,8,83,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 83, 65],"bool"), list[5,8,83,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 83, 65].  Tensor sizes: [5, 0, 83, 65]
2025-03-05 15:23:03.474660 test begin: paddle.broadcast_to(Tensor([5, 0, 83, 83],"bool"), list[5,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 83, 83],"bool"), list[5,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 83, 83].  Tensor sizes: [5, 0, 83, 83]
2025-03-05 15:23:03.475495 test begin: paddle.broadcast_to(Tensor([5, 0, 84, 145],"bool"), list[5,8,84,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 84, 145],"bool"), list[5,8,84,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 84, 145].  Tensor sizes: [5, 0, 84, 145]
2025-03-05 15:23:03.476287 test begin: paddle.broadcast_to(Tensor([5, 0, 84, 65],"bool"), list[5,8,84,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 84, 65],"bool"), list[5,8,84,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 84, 65].  Tensor sizes: [5, 0, 84, 65]
2025-03-05 15:23:03.477067 test begin: paddle.broadcast_to(Tensor([5, 0, 84, 84],"bool"), list[5,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 84, 84],"bool"), list[5,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 84, 84].  Tensor sizes: [5, 0, 84, 84]
2025-03-05 15:23:03.477704 test begin: paddle.broadcast_to(Tensor([5, 0, 85, 145],"bool"), list[5,8,85,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 85, 145],"bool"), list[5,8,85,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 85, 145].  Tensor sizes: [5, 0, 85, 145]
2025-03-05 15:23:03.478336 test begin: paddle.broadcast_to(Tensor([5, 0, 85, 65],"bool"), list[5,8,85,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 85, 65],"bool"), list[5,8,85,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 85, 65].  Tensor sizes: [5, 0, 85, 65]
2025-03-05 15:23:03.479118 test begin: paddle.broadcast_to(Tensor([5, 0, 85, 85],"bool"), list[5,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 85, 85],"bool"), list[5,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 85, 85].  Tensor sizes: [5, 0, 85, 85]
2025-03-05 15:23:03.479706 test begin: paddle.broadcast_to(Tensor([5, 0, 86, 145],"bool"), list[5,8,86,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 86, 145],"bool"), list[5,8,86,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 86, 145].  Tensor sizes: [5, 0, 86, 145]
2025-03-05 15:23:03.480881 test begin: paddle.broadcast_to(Tensor([5, 0, 86, 65],"bool"), list[5,8,86,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 86, 65],"bool"), list[5,8,86,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 86, 65].  Tensor sizes: [5, 0, 86, 65]
2025-03-05 15:23:03.481432 test begin: paddle.broadcast_to(Tensor([5, 0, 86, 86],"bool"), list[5,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 86, 86],"bool"), list[5,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 86, 86].  Tensor sizes: [5, 0, 86, 86]
2025-03-05 15:23:03.482421 test begin: paddle.broadcast_to(Tensor([5, 0, 87, 145],"bool"), list[5,8,87,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 87, 145],"bool"), list[5,8,87,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 87, 145].  Tensor sizes: [5, 0, 87, 145]
2025-03-05 15:23:03.486349 test begin: paddle.broadcast_to(Tensor([5, 0, 87, 65],"bool"), list[5,8,87,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 87, 65],"bool"), list[5,8,87,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 87, 65].  Tensor sizes: [5, 0, 87, 65]
2025-03-05 15:23:03.487400 test begin: paddle.broadcast_to(Tensor([5, 0, 87, 87],"bool"), list[5,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 87, 87],"bool"), list[5,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 87, 87].  Tensor sizes: [5, 0, 87, 87]
2025-03-05 15:23:03.487949 test begin: paddle.broadcast_to(Tensor([5, 0, 88, 145],"bool"), list[5,8,88,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 88, 145],"bool"), list[5,8,88,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 88, 145].  Tensor sizes: [5, 0, 88, 145]
2025-03-05 15:23:03.488487 test begin: paddle.broadcast_to(Tensor([5, 0, 88, 65],"bool"), list[5,8,88,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 88, 65],"bool"), list[5,8,88,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 88, 65].  Tensor sizes: [5, 0, 88, 65]
2025-03-05 15:23:03.489084 test begin: paddle.broadcast_to(Tensor([5, 0, 88, 88],"bool"), list[5,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 88, 88],"bool"), list[5,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 88, 88].  Tensor sizes: [5, 0, 88, 88]
2025-03-05 15:23:03.489618 test begin: paddle.broadcast_to(Tensor([5, 0, 89, 145],"bool"), list[5,8,89,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 89, 145],"bool"), list[5,8,89,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 89, 145].  Tensor sizes: [5, 0, 89, 145]
2025-03-05 15:23:03.491656 test begin: paddle.broadcast_to(Tensor([5, 0, 89, 65],"bool"), list[5,8,89,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 89, 65],"bool"), list[5,8,89,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 89, 65].  Tensor sizes: [5, 0, 89, 65]
2025-03-05 15:23:03.493554 test begin: paddle.broadcast_to(Tensor([5, 0, 89, 89],"bool"), list[5,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 89, 89],"bool"), list[5,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 89, 89].  Tensor sizes: [5, 0, 89, 89]
2025-03-05 15:23:03.494150 test begin: paddle.broadcast_to(Tensor([5, 0, 9, 145],"bool"), list[5,8,9,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 9, 145],"bool"), list[5,8,9,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 9, 145].  Tensor sizes: [5, 0, 9, 145]
2025-03-05 15:23:03.494848 test begin: paddle.broadcast_to(Tensor([5, 0, 9, 33],"bool"), list[5,8,9,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 9, 33],"bool"), list[5,8,9,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 9, 33].  Tensor sizes: [5, 0, 9, 33]
2025-03-05 15:23:03.496020 test begin: paddle.broadcast_to(Tensor([5, 0, 9, 65],"bool"), list[5,8,9,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 9, 65],"bool"), list[5,8,9,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 9, 65].  Tensor sizes: [5, 0, 9, 65]
2025-03-05 15:23:03.496768 test begin: paddle.broadcast_to(Tensor([5, 0, 9, 9],"bool"), list[5,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 9, 9],"bool"), list[5,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 9, 9].  Tensor sizes: [5, 0, 9, 9]
2025-03-05 15:23:03.497380 test begin: paddle.broadcast_to(Tensor([5, 0, 90, 145],"bool"), list[5,8,90,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 90, 145],"bool"), list[5,8,90,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 90, 145].  Tensor sizes: [5, 0, 90, 145]
2025-03-05 15:23:03.499387 test begin: paddle.broadcast_to(Tensor([5, 0, 90, 65],"bool"), list[5,8,90,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 90, 65],"bool"), list[5,8,90,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 90, 65].  Tensor sizes: [5, 0, 90, 65]
2025-03-05 15:23:03.500249 test begin: paddle.broadcast_to(Tensor([5, 0, 90, 90],"bool"), list[5,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 90, 90],"bool"), list[5,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 90, 90].  Tensor sizes: [5, 0, 90, 90]
2025-03-05 15:23:03.501513 test begin: paddle.broadcast_to(Tensor([5, 0, 91, 145],"bool"), list[5,8,91,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 91, 145],"bool"), list[5,8,91,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 91, 145].  Tensor sizes: [5, 0, 91, 145]
2025-03-05 15:23:03.502495 test begin: paddle.broadcast_to(Tensor([5, 0, 91, 65],"bool"), list[5,8,91,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 91, 65],"bool"), list[5,8,91,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 91, 65].  Tensor sizes: [5, 0, 91, 65]
2025-03-05 15:23:03.503372 test begin: paddle.broadcast_to(Tensor([5, 0, 91, 91],"bool"), list[5,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 91, 91],"bool"), list[5,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 91, 91].  Tensor sizes: [5, 0, 91, 91]
2025-03-05 15:23:03.505107 test begin: paddle.broadcast_to(Tensor([5, 0, 92, 145],"bool"), list[5,8,92,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 92, 145],"bool"), list[5,8,92,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 92, 145].  Tensor sizes: [5, 0, 92, 145]
2025-03-05 15:23:03.505785 test begin: paddle.broadcast_to(Tensor([5, 0, 92, 65],"bool"), list[5,8,92,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 92, 65],"bool"), list[5,8,92,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 92, 65].  Tensor sizes: [5, 0, 92, 65]
2025-03-05 15:23:03.506375 test begin: paddle.broadcast_to(Tensor([5, 0, 92, 92],"bool"), list[5,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 92, 92],"bool"), list[5,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 92, 92].  Tensor sizes: [5, 0, 92, 92]
2025-03-05 15:23:03.507615 test begin: paddle.broadcast_to(Tensor([5, 0, 93, 145],"bool"), list[5,8,93,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 93, 145],"bool"), list[5,8,93,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 93, 145].  Tensor sizes: [5, 0, 93, 145]
2025-03-05 15:23:03.508405 test begin: paddle.broadcast_to(Tensor([5, 0, 93, 65],"bool"), list[5,8,93,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 93, 65],"bool"), list[5,8,93,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 93, 65].  Tensor sizes: [5, 0, 93, 65]
2025-03-05 15:23:03.510368 test begin: paddle.broadcast_to(Tensor([5, 0, 93, 93],"bool"), list[5,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 93, 93],"bool"), list[5,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 93, 93].  Tensor sizes: [5, 0, 93, 93]
2025-03-05 15:23:03.511515 test begin: paddle.broadcast_to(Tensor([5, 0, 94, 145],"bool"), list[5,8,94,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 94, 145],"bool"), list[5,8,94,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 94, 145].  Tensor sizes: [5, 0, 94, 145]
2025-03-05 15:23:03.512216 test begin: paddle.broadcast_to(Tensor([5, 0, 94, 65],"bool"), list[5,8,94,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 94, 65],"bool"), list[5,8,94,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 94, 65].  Tensor sizes: [5, 0, 94, 65]
2025-03-05 15:23:03.513142 test begin: paddle.broadcast_to(Tensor([5, 0, 94, 94],"bool"), list[5,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 94, 94],"bool"), list[5,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 94, 94].  Tensor sizes: [5, 0, 94, 94]
2025-03-05 15:23:03.513794 test begin: paddle.broadcast_to(Tensor([5, 0, 95, 145],"bool"), list[5,8,95,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 95, 145],"bool"), list[5,8,95,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 95, 145].  Tensor sizes: [5, 0, 95, 145]
2025-03-05 15:23:03.514970 test begin: paddle.broadcast_to(Tensor([5, 0, 95, 65],"bool"), list[5,8,95,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 95, 65],"bool"), list[5,8,95,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 95, 65].  Tensor sizes: [5, 0, 95, 65]
2025-03-05 15:23:03.517531 test begin: paddle.broadcast_to(Tensor([5, 0, 95, 95],"bool"), list[5,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 95, 95],"bool"), list[5,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 95, 95].  Tensor sizes: [5, 0, 95, 95]
2025-03-05 15:23:03.518164 test begin: paddle.broadcast_to(Tensor([5, 0, 96, 145],"bool"), list[5,8,96,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 96, 145],"bool"), list[5,8,96,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 96, 145].  Tensor sizes: [5, 0, 96, 145]
2025-03-05 15:23:03.519318 test begin: paddle.broadcast_to(Tensor([5, 0, 96, 65],"bool"), list[5,8,96,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 96, 65],"bool"), list[5,8,96,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 96, 65].  Tensor sizes: [5, 0, 96, 65]
2025-03-05 15:23:03.520052 test begin: paddle.broadcast_to(Tensor([5, 0, 96, 96],"bool"), list[5,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 96, 96],"bool"), list[5,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 96, 96].  Tensor sizes: [5, 0, 96, 96]
2025-03-05 15:23:03.521499 test begin: paddle.broadcast_to(Tensor([5, 0, 97, 145],"bool"), list[5,8,97,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 97, 145],"bool"), list[5,8,97,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 97, 145].  Tensor sizes: [5, 0, 97, 145]
2025-03-05 15:23:03.523848 test begin: paddle.broadcast_to(Tensor([5, 0, 97, 65],"bool"), list[5,8,97,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 97, 65],"bool"), list[5,8,97,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 97, 65].  Tensor sizes: [5, 0, 97, 65]
2025-03-05 15:23:03.524937 test begin: paddle.broadcast_to(Tensor([5, 0, 97, 97],"bool"), list[5,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 97, 97],"bool"), list[5,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 97, 97].  Tensor sizes: [5, 0, 97, 97]
2025-03-05 15:23:03.525527 test begin: paddle.broadcast_to(Tensor([5, 0, 98, 145],"bool"), list[5,8,98,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 98, 145],"bool"), list[5,8,98,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 98, 145].  Tensor sizes: [5, 0, 98, 145]
2025-03-05 15:23:03.526286 test begin: paddle.broadcast_to(Tensor([5, 0, 98, 65],"bool"), list[5,8,98,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 98, 65],"bool"), list[5,8,98,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 98, 65].  Tensor sizes: [5, 0, 98, 65]
2025-03-05 15:23:03.527707 test begin: paddle.broadcast_to(Tensor([5, 0, 98, 98],"bool"), list[5,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 98, 98],"bool"), list[5,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 98, 98].  Tensor sizes: [5, 0, 98, 98]
2025-03-05 15:23:03.528716 test begin: paddle.broadcast_to(Tensor([5, 0, 99, 145],"bool"), list[5,8,99,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 99, 145],"bool"), list[5,8,99,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 99, 145].  Tensor sizes: [5, 0, 99, 145]
2025-03-05 15:23:03.529472 test begin: paddle.broadcast_to(Tensor([5, 0, 99, 65],"bool"), list[5,8,99,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 99, 65],"bool"), list[5,8,99,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 99, 65].  Tensor sizes: [5, 0, 99, 65]
2025-03-05 15:23:03.530347 test begin: paddle.broadcast_to(Tensor([5, 0, 99, 99],"bool"), list[5,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([5, 0, 99, 99],"bool"), list[5,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 8, 99, 99].  Tensor sizes: [5, 0, 99, 99]
2025-03-05 15:23:03.531053 test begin: paddle.broadcast_to(Tensor([5, 0],"bool"), list[5,2,], )

[torch error] paddle.broadcast_to(Tensor([5, 0],"bool"), list[5,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 2].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.532293 test begin: paddle.broadcast_to(Tensor([5, 0],"float32"), tuple(5,2,), )

[torch error] paddle.broadcast_to(Tensor([5, 0],"float32"), tuple(5,2,), ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 2].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.533071 test begin: paddle.broadcast_to(Tensor([5, 0],"float32"), tuple(5,799,), )

[torch error] paddle.broadcast_to(Tensor([5, 0],"float32"), tuple(5,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 799].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.533661 test begin: paddle.broadcast_to(Tensor([5, 0],"float64"), tuple(5,12,), )

[torch error] paddle.broadcast_to(Tensor([5, 0],"float64"), tuple(5,12,), ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 12].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.534636 test begin: paddle.broadcast_to(Tensor([5, 0],"int32"), tuple(5,1,), )

[torch error] paddle.broadcast_to(Tensor([5, 0],"int32"), tuple(5,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 1].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.537046 test begin: paddle.broadcast_to(Tensor([5, 0],"int64"), tuple(5,1,), )

[torch error] paddle.broadcast_to(Tensor([5, 0],"int64"), tuple(5,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 1].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.538241 test begin: paddle.broadcast_to(Tensor([5, 0],"int64"), tuple(5,799,), )

[torch error] paddle.broadcast_to(Tensor([5, 0],"int64"), tuple(5,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 799].  Tensor sizes: [5, 0]
2025-03-05 15:23:03.539004 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 100],"bool"), list[5,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 100],"bool"), list[5,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 100, 100].  Tensor sizes: [5, 1, 0, 100]
2025-03-05 15:23:03.539738 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 101],"bool"), list[5,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 101],"bool"), list[5,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 101, 101].  Tensor sizes: [5, 1, 0, 101]
2025-03-05 15:23:03.541734 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 102],"bool"), list[5,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 102],"bool"), list[5,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 102, 102].  Tensor sizes: [5, 1, 0, 102]
2025-03-05 15:23:03.543863 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 103],"bool"), list[5,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 103],"bool"), list[5,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 103, 103].  Tensor sizes: [5, 1, 0, 103]
2025-03-05 15:23:03.544757 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 104],"bool"), list[5,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 104],"bool"), list[5,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 104, 104].  Tensor sizes: [5, 1, 0, 104]
2025-03-05 15:23:03.546110 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 105],"bool"), list[5,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 105],"bool"), list[5,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 105, 105].  Tensor sizes: [5, 1, 0, 105]
2025-03-05 15:23:03.547037 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 106],"bool"), list[5,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 106],"bool"), list[5,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 106, 106].  Tensor sizes: [5, 1, 0, 106]
2025-03-05 15:23:03.551801 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 107],"bool"), list[5,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 107],"bool"), list[5,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 107, 107].  Tensor sizes: [5, 1, 0, 107]
2025-03-05 15:23:03.553479 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 108],"bool"), list[5,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 108],"bool"), list[5,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 108, 108].  Tensor sizes: [5, 1, 0, 108]
2025-03-05 15:23:03.555099 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 109],"bool"), list[5,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 109],"bool"), list[5,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 109, 109].  Tensor sizes: [5, 1, 0, 109]
2025-03-05 15:23:03.558106 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 10],"bool"), list[5,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 10],"bool"), list[5,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 10, 10].  Tensor sizes: [5, 1, 0, 10]
2025-03-05 15:23:03.560646 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 110],"bool"), list[5,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 110],"bool"), list[5,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 110, 110].  Tensor sizes: [5, 1, 0, 110]
2025-03-05 15:23:03.561544 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 111],"bool"), list[5,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 111],"bool"), list[5,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 111, 111].  Tensor sizes: [5, 1, 0, 111]
2025-03-05 15:23:03.562205 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 112],"bool"), list[5,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 112],"bool"), list[5,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 112, 112].  Tensor sizes: [5, 1, 0, 112]
2025-03-05 15:23:03.564166 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 113],"bool"), list[5,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 113],"bool"), list[5,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 113, 113].  Tensor sizes: [5, 1, 0, 113]
2025-03-05 15:23:03.564793 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 114],"bool"), list[5,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 114],"bool"), list[5,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 114, 114].  Tensor sizes: [5, 1, 0, 114]
2025-03-05 15:23:03.565951 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 115],"bool"), list[5,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 115],"bool"), list[5,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 115, 115].  Tensor sizes: [5, 1, 0, 115]
2025-03-05 15:23:03.566648 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 116],"bool"), list[5,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 116],"bool"), list[5,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 116, 116].  Tensor sizes: [5, 1, 0, 116]
2025-03-05 15:23:03.567404 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 117],"bool"), list[5,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 117],"bool"), list[5,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 117, 117].  Tensor sizes: [5, 1, 0, 117]
2025-03-05 15:23:03.568162 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 118],"bool"), list[5,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 118],"bool"), list[5,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 118, 118].  Tensor sizes: [5, 1, 0, 118]
2025-03-05 15:23:03.568725 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 119],"bool"), list[5,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 119],"bool"), list[5,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 119, 119].  Tensor sizes: [5, 1, 0, 119]
2025-03-05 15:23:03.569505 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 11],"bool"), list[5,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 11],"bool"), list[5,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 11, 11].  Tensor sizes: [5, 1, 0, 11]
2025-03-05 15:23:03.570317 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 120],"bool"), list[5,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 120],"bool"), list[5,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 120, 120].  Tensor sizes: [5, 1, 0, 120]
2025-03-05 15:23:03.571221 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 121],"bool"), list[5,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 121],"bool"), list[5,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 121, 121].  Tensor sizes: [5, 1, 0, 121]
2025-03-05 15:23:03.572686 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 122],"bool"), list[5,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 122],"bool"), list[5,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 122, 122].  Tensor sizes: [5, 1, 0, 122]
2025-03-05 15:23:03.573838 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 123],"bool"), list[5,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 123],"bool"), list[5,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 123, 123].  Tensor sizes: [5, 1, 0, 123]
2025-03-05 15:23:03.574761 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 124],"bool"), list[5,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 124],"bool"), list[5,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 124, 124].  Tensor sizes: [5, 1, 0, 124]
2025-03-05 15:23:03.575451 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 125],"bool"), list[5,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 125],"bool"), list[5,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 125, 125].  Tensor sizes: [5, 1, 0, 125]
2025-03-05 15:23:03.579381 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 126],"bool"), list[5,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 126],"bool"), list[5,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 126, 126].  Tensor sizes: [5, 1, 0, 126]
2025-03-05 15:23:03.580671 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 127],"bool"), list[5,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 127],"bool"), list[5,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 127, 127].  Tensor sizes: [5, 1, 0, 127]
2025-03-05 15:23:03.581319 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 128],"bool"), list[5,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 128],"bool"), list[5,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 128, 128].  Tensor sizes: [5, 1, 0, 128]
2025-03-05 15:23:03.581897 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 129],"bool"), list[5,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 129],"bool"), list[5,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 129, 129].  Tensor sizes: [5, 1, 0, 129]
2025-03-05 15:23:03.582440 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 12],"bool"), list[5,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 12],"bool"), list[5,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 12, 12].  Tensor sizes: [5, 1, 0, 12]
2025-03-05 15:23:03.582976 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 130],"bool"), list[5,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 130],"bool"), list[5,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 130, 130].  Tensor sizes: [5, 1, 0, 130]
2025-03-05 15:23:03.584177 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 131],"bool"), list[5,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 131],"bool"), list[5,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 131, 131].  Tensor sizes: [5, 1, 0, 131]
2025-03-05 15:23:03.585217 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 132],"bool"), list[5,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 132],"bool"), list[5,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 132, 132].  Tensor sizes: [5, 1, 0, 132]
2025-03-05 15:23:03.585992 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 133],"bool"), list[5,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 133],"bool"), list[5,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 133, 133].  Tensor sizes: [5, 1, 0, 133]
2025-03-05 15:23:03.586721 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 134],"bool"), list[5,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 134],"bool"), list[5,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 134, 134].  Tensor sizes: [5, 1, 0, 134]
2025-03-05 15:23:03.587394 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 135],"bool"), list[5,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 135],"bool"), list[5,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 135, 135].  Tensor sizes: [5, 1, 0, 135]
2025-03-05 15:23:03.588238 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 136],"bool"), list[5,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 136],"bool"), list[5,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 136, 136].  Tensor sizes: [5, 1, 0, 136]
2025-03-05 15:23:03.588907 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 137],"bool"), list[5,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 137],"bool"), list[5,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 137, 137].  Tensor sizes: [5, 1, 0, 137]
2025-03-05 15:23:03.589667 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 138],"bool"), list[5,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 138],"bool"), list[5,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 138, 138].  Tensor sizes: [5, 1, 0, 138]
2025-03-05 15:23:03.590520 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 139],"bool"), list[5,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 139],"bool"), list[5,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 139, 139].  Tensor sizes: [5, 1, 0, 139]
2025-03-05 15:23:03.591252 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 13],"bool"), list[5,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 13],"bool"), list[5,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 13, 13].  Tensor sizes: [5, 1, 0, 13]
2025-03-05 15:23:03.592058 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 140],"bool"), list[5,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 140],"bool"), list[5,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 140, 140].  Tensor sizes: [5, 1, 0, 140]
2025-03-05 15:23:03.592725 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 141],"bool"), list[5,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 141],"bool"), list[5,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 141, 141].  Tensor sizes: [5, 1, 0, 141]
2025-03-05 15:23:03.593732 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 142],"bool"), list[5,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 142],"bool"), list[5,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 142, 142].  Tensor sizes: [5, 1, 0, 142]
2025-03-05 15:23:03.594667 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,1,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,1,145,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 1, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.595439 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,10,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,10,145,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 10, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.596436 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,100,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,100,145,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 100, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.597716 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,101,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,101,145,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 101, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.598410 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,102,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,102,145,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 102, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.599232 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,103,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,103,145,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 103, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.600079 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,104,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,104,145,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 104, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.600711 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,105,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,105,145,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 105, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.601422 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,106,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,106,145,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 106, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.602149 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,107,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,107,145,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 107, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.602876 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,108,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,108,145,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 108, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.603633 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,109,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,109,145,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 109, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.604379 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,11,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,11,145,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 11, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.604959 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,110,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,110,145,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 110, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.605627 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,111,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,111,145,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 111, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.606407 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,112,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,112,145,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 112, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.607094 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,113,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,113,145,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 113, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.607829 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,114,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,114,145,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 114, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.608640 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,115,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,115,145,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 115, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.609488 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,116,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,116,145,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 116, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.610502 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,117,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,117,145,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 117, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.611202 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,118,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,118,145,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 118, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.611801 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,119,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,119,145,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 119, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.612506 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,12,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,12,145,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 12, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.613564 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,120,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,120,145,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 120, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.614230 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,121,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,121,145,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 121, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.614828 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,122,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,122,145,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 122, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.615538 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,123,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,123,145,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 123, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.616172 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,124,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,124,145,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 124, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.616725 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,125,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,125,145,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 125, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.617458 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,126,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,126,145,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 126, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.618868 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,127,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,127,145,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 127, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.619729 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,128,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,128,145,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 128, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.620355 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,129,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,129,145,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 129, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.620898 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,13,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,13,145,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 13, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.621798 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,130,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,130,145,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 130, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.622658 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,131,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,131,145,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 131, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.623441 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,132,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,132,145,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 132, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.624087 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,133,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,133,145,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 133, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.624664 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,134,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,134,145,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 134, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.625414 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,135,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,135,145,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 135, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.626098 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,136,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,136,145,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 136, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.627212 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,137,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,137,145,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 137, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.628032 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,138,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,138,145,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 138, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.628711 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,139,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,139,145,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 139, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.629433 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,14,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,14,145,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 14, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.630089 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,140,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,140,145,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 140, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.630760 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,141,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,141,145,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 141, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.631411 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,142,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,142,145,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 142, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.632078 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,15,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,15,145,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 15, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.632744 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,16,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,16,145,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 16, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.633394 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,17,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,17,145,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 17, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.638963 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,18,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,18,145,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 18, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.640618 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,19,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,19,145,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 19, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.641414 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,2,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,2,145,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 2, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.642336 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,20,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,20,145,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 20, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.643035 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,21,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,21,145,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 21, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.643749 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,22,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,22,145,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 22, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.644501 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,23,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,23,145,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 23, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.645332 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,24,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,24,145,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 24, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.646118 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,25,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,25,145,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 25, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.646853 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,26,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,26,145,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 26, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.647629 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,27,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,27,145,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 27, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.648603 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,28,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,28,145,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 28, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.649354 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,29,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,29,145,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 29, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.650482 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,3,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,3,145,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 3, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.651451 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,30,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,30,145,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 30, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.652224 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,31,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,31,145,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 31, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.652996 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,32,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,32,145,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 32, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.653864 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,33,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,33,145,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 33, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.654698 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,34,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,34,145,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 34, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.655381 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,35,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,35,145,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 35, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.656096 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,36,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,36,145,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 36, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.656867 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,37,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,37,145,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 37, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.657752 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,38,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,38,145,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 38, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.658407 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,39,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,39,145,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 39, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.659134 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,4,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,4,145,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 4, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.660002 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,40,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,40,145,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 40, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.660975 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,41,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,41,145,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 41, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.661730 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,42,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,42,145,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 42, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.662367 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,43,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,43,145,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 43, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.663051 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,44,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,44,145,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 44, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.664435 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,45,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,45,145,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 45, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.665463 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,46,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,46,145,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 46, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.666090 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,47,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,47,145,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 47, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.666768 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,48,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,48,145,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 48, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.667305 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,49,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,49,145,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 49, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.668036 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,5,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,5,145,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 5, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.668648 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,50,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,50,145,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 50, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.669225 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,51,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,51,145,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 51, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.670916 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,52,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,52,145,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 52, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.671751 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,53,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,53,145,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 53, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.672568 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,54,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,54,145,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 54, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.673377 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,55,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,55,145,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 55, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.674251 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,56,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,56,145,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 56, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.675042 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,57,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,57,145,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 57, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.675845 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,58,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,58,145,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 58, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.676515 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,59,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,59,145,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 59, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.677671 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,6,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,6,145,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 6, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.678628 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,60,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,60,145,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 60, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.679211 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,61,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,61,145,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 61, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.680227 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,62,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,62,145,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 62, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.680931 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,63,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,63,145,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 63, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.681780 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,64,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,64,145,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 64, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.682395 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,65,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,65,145,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 65, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.683006 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,66,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,66,145,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 66, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.683904 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,67,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,67,145,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 67, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.684694 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,68,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,68,145,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 68, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.686171 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,69,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,69,145,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 69, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.687150 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,7,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,7,145,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 7, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.688125 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,70,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,70,145,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 70, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.692927 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,71,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,71,145,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 71, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.696294 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,72,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,72,145,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 72, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.696909 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,73,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,73,145,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 73, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.697483 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,74,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,74,145,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 74, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.698140 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,75,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,75,145,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 75, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.698727 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,76,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,76,145,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 76, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.699682 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,77,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,77,145,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 77, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.701019 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,78,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,78,145,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 78, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.701883 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,79,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,79,145,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 79, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.702597 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,8,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,8,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 8, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.703216 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,80,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,80,145,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 80, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.704304 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,81,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,81,145,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 81, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.704991 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,82,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,82,145,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 82, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.705615 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,83,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,83,145,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 83, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.706168 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,84,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,84,145,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 84, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.706719 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,85,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,85,145,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 85, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.707482 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,86,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,86,145,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 86, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.708315 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,87,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,87,145,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 87, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.708980 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,88,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,88,145,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 88, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.709705 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,89,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,89,145,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 89, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.710455 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,9,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,9,145,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 9, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.711134 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,90,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,90,145,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 90, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.711843 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,91,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,91,145,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 91, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.712457 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,92,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,92,145,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 92, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.713047 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,93,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,93,145,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 93, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.713577 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,94,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,94,145,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 94, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.714143 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,95,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,95,145,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 95, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.714683 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,96,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,96,145,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 96, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.715234 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,97,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,97,145,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 97, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.716320 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,98,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,98,145,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 98, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.717086 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,99,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 145],"bool"), list[5,8,99,145,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 99, 145].  Tensor sizes: [5, 1, 0, 145]
2025-03-05 15:23:03.717739 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 14],"bool"), list[5,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 14],"bool"), list[5,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 14, 14].  Tensor sizes: [5, 1, 0, 14]
2025-03-05 15:23:03.718404 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 15],"bool"), list[5,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 15],"bool"), list[5,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 15, 15].  Tensor sizes: [5, 1, 0, 15]
2025-03-05 15:23:03.719081 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 16],"bool"), list[5,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 16],"bool"), list[5,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 16, 16].  Tensor sizes: [5, 1, 0, 16]
2025-03-05 15:23:03.719674 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 17],"bool"), list[5,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 17],"bool"), list[5,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 17, 17].  Tensor sizes: [5, 1, 0, 17]
2025-03-05 15:23:03.720349 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 18],"bool"), list[5,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 18],"bool"), list[5,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 18, 18].  Tensor sizes: [5, 1, 0, 18]
2025-03-05 15:23:03.720982 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 19],"bool"), list[5,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 19],"bool"), list[5,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 19, 19].  Tensor sizes: [5, 1, 0, 19]
2025-03-05 15:23:03.721549 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 1],"bool"), list[5,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 1],"bool"), list[5,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 1, 1].  Tensor sizes: [5, 1, 0, 1]
2025-03-05 15:23:03.722085 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 20],"bool"), list[5,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 20],"bool"), list[5,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 20, 20].  Tensor sizes: [5, 1, 0, 20]
2025-03-05 15:23:03.722780 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 21],"bool"), list[5,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 21],"bool"), list[5,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 21, 21].  Tensor sizes: [5, 1, 0, 21]
2025-03-05 15:23:03.723381 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 22],"bool"), list[5,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 22],"bool"), list[5,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 22, 22].  Tensor sizes: [5, 1, 0, 22]
2025-03-05 15:23:03.724065 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 23],"bool"), list[5,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 23],"bool"), list[5,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 23, 23].  Tensor sizes: [5, 1, 0, 23]
2025-03-05 15:23:03.724850 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 24],"bool"), list[5,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 24],"bool"), list[5,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 24, 24].  Tensor sizes: [5, 1, 0, 24]
2025-03-05 15:23:03.725564 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 25],"bool"), list[5,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 25],"bool"), list[5,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 25, 25].  Tensor sizes: [5, 1, 0, 25]
2025-03-05 15:23:03.726258 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 26],"bool"), list[5,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 26],"bool"), list[5,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 26, 26].  Tensor sizes: [5, 1, 0, 26]
2025-03-05 15:23:03.727027 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 27],"bool"), list[5,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 27],"bool"), list[5,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 27, 27].  Tensor sizes: [5, 1, 0, 27]
2025-03-05 15:23:03.728719 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 28],"bool"), list[5,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 28],"bool"), list[5,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 28, 28].  Tensor sizes: [5, 1, 0, 28]
2025-03-05 15:23:03.729392 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 29],"bool"), list[5,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 29],"bool"), list[5,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 29, 29].  Tensor sizes: [5, 1, 0, 29]
2025-03-05 15:23:03.729938 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 2],"bool"), list[5,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 2],"bool"), list[5,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 2, 2].  Tensor sizes: [5, 1, 0, 2]
2025-03-05 15:23:03.730462 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 30],"bool"), list[5,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 30],"bool"), list[5,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 30, 30].  Tensor sizes: [5, 1, 0, 30]
2025-03-05 15:23:03.731185 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 31],"bool"), list[5,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 31],"bool"), list[5,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 31, 31].  Tensor sizes: [5, 1, 0, 31]
2025-03-05 15:23:03.732023 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 32],"bool"), list[5,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 32],"bool"), list[5,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 32, 32].  Tensor sizes: [5, 1, 0, 32]
2025-03-05 15:23:03.732969 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,1,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,1,33,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 1, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.733769 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,10,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,10,33,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 10, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.734449 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,11,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,11,33,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 11, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.735337 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,12,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,12,33,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 12, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.736195 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,13,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,13,33,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 13, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.737204 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,14,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,14,33,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 14, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.738046 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,15,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,15,33,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 15, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.738817 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,16,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,16,33,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 16, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.739566 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,17,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,17,33,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 17, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.740346 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,18,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,18,33,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 18, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.740996 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,19,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,19,33,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 19, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.741674 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,2,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,2,33,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 2, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.742380 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,20,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,20,33,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 20, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.743078 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,21,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,21,33,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 21, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.744138 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,22,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,22,33,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 22, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.744819 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,23,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,23,33,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 23, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.745633 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,24,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,24,33,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 24, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.746286 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,25,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,25,33,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 25, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.747071 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,26,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,26,33,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 26, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.747796 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,27,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,27,33,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 27, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.748554 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,28,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,28,33,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 28, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.749281 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,29,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,29,33,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 29, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.750058 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,3,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,3,33,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 3, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.750756 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,30,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,30,33,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 30, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.752335 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,31,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,31,33,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 31, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.759374 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,32,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,32,33,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 32, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.760490 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 33, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.761122 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,34,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,34,33,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 34, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.761876 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,35,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,35,33,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 35, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.762526 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,36,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,36,33,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 36, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.763449 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,37,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,37,33,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 37, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.764246 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,38,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,38,33,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 38, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.765453 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,39,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,39,33,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 39, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.766310 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,4,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,4,33,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 4, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.766977 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,40,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,40,33,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 40, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.767667 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,41,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,41,33,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 41, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.768500 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,42,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,42,33,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 42, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.769398 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,43,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,43,33,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 43, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.770525 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,44,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,44,33,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 44, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.771522 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,45,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,45,33,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 45, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.772192 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,46,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,46,33,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 46, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.776086 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,47,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,47,33,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 47, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.776885 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,48,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,48,33,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 48, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.777836 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,49,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,49,33,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 49, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.778544 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,5,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,5,33,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 5, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.779377 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,50,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,50,33,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 50, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.780069 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,51,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,51,33,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 51, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.780715 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,52,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,52,33,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 52, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.781455 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,53,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,53,33,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 53, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.782202 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,54,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,54,33,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 54, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.782972 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,55,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,55,33,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 55, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.783646 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,56,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,56,33,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 56, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.784741 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,57,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,57,33,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 57, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.785894 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,58,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,58,33,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 58, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.786941 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,59,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,59,33,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 59, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.787759 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,6,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,6,33,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 6, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.789042 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,60,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,60,33,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 60, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.789735 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,61,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,61,33,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 61, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.790328 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,7,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,7,33,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 7, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.791073 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,8,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,8,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 8, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.791741 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,9,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 33],"bool"), list[5,8,9,33,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 9, 33].  Tensor sizes: [5, 1, 0, 33]
2025-03-05 15:23:03.792402 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 34],"bool"), list[5,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 34],"bool"), list[5,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 34, 34].  Tensor sizes: [5, 1, 0, 34]
2025-03-05 15:23:03.793949 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 35],"bool"), list[5,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 35],"bool"), list[5,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 35, 35].  Tensor sizes: [5, 1, 0, 35]
2025-03-05 15:23:03.794713 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 36],"bool"), list[5,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 36],"bool"), list[5,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 36, 36].  Tensor sizes: [5, 1, 0, 36]
2025-03-05 15:23:03.795457 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 37],"bool"), list[5,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 37],"bool"), list[5,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 37, 37].  Tensor sizes: [5, 1, 0, 37]
2025-03-05 15:23:03.796155 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 38],"bool"), list[5,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 38],"bool"), list[5,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 38, 38].  Tensor sizes: [5, 1, 0, 38]
2025-03-05 15:23:03.796804 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 39],"bool"), list[5,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 39],"bool"), list[5,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 39, 39].  Tensor sizes: [5, 1, 0, 39]
2025-03-05 15:23:03.797888 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 3],"bool"), list[5,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 3],"bool"), list[5,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 3, 3].  Tensor sizes: [5, 1, 0, 3]
2025-03-05 15:23:03.798676 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 40],"bool"), list[5,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 40],"bool"), list[5,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 40, 40].  Tensor sizes: [5, 1, 0, 40]
2025-03-05 15:23:03.799500 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 41],"bool"), list[5,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 41],"bool"), list[5,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 41, 41].  Tensor sizes: [5, 1, 0, 41]
2025-03-05 15:23:03.800129 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 42],"bool"), list[5,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 42],"bool"), list[5,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 42, 42].  Tensor sizes: [5, 1, 0, 42]
2025-03-05 15:23:03.800872 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 43],"bool"), list[5,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 43],"bool"), list[5,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 43, 43].  Tensor sizes: [5, 1, 0, 43]
2025-03-05 15:23:03.801652 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 44],"bool"), list[5,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 44],"bool"), list[5,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 44, 44].  Tensor sizes: [5, 1, 0, 44]
2025-03-05 15:23:03.802453 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 45],"bool"), list[5,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 45],"bool"), list[5,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 45, 45].  Tensor sizes: [5, 1, 0, 45]
2025-03-05 15:23:03.803343 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 46],"bool"), list[5,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 46],"bool"), list[5,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 46, 46].  Tensor sizes: [5, 1, 0, 46]
2025-03-05 15:23:03.804108 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 47],"bool"), list[5,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 47],"bool"), list[5,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 47, 47].  Tensor sizes: [5, 1, 0, 47]
2025-03-05 15:23:03.804793 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 48],"bool"), list[5,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 48],"bool"), list[5,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 48, 48].  Tensor sizes: [5, 1, 0, 48]
2025-03-05 15:23:03.805547 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 49],"bool"), list[5,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 49],"bool"), list[5,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 49, 49].  Tensor sizes: [5, 1, 0, 49]
2025-03-05 15:23:03.806305 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 4],"bool"), list[5,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 4],"bool"), list[5,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 4, 4].  Tensor sizes: [5, 1, 0, 4]
2025-03-05 15:23:03.806968 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 50],"bool"), list[5,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 50],"bool"), list[5,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 50, 50].  Tensor sizes: [5, 1, 0, 50]
2025-03-05 15:23:03.808086 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 51],"bool"), list[5,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 51],"bool"), list[5,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 51, 51].  Tensor sizes: [5, 1, 0, 51]
2025-03-05 15:23:03.808665 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 52],"bool"), list[5,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 52],"bool"), list[5,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 52, 52].  Tensor sizes: [5, 1, 0, 52]
2025-03-05 15:23:03.809936 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 53],"bool"), list[5,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 53],"bool"), list[5,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 53, 53].  Tensor sizes: [5, 1, 0, 53]
2025-03-05 15:23:03.811110 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 54],"bool"), list[5,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 54],"bool"), list[5,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 54, 54].  Tensor sizes: [5, 1, 0, 54]
2025-03-05 15:23:03.811820 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 55],"bool"), list[5,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 55],"bool"), list[5,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 55, 55].  Tensor sizes: [5, 1, 0, 55]
2025-03-05 15:23:03.812515 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 56],"bool"), list[5,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 56],"bool"), list[5,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 56, 56].  Tensor sizes: [5, 1, 0, 56]
2025-03-05 15:23:03.813488 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 57],"bool"), list[5,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 57],"bool"), list[5,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 57, 57].  Tensor sizes: [5, 1, 0, 57]
2025-03-05 15:23:03.814242 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 58],"bool"), list[5,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 58],"bool"), list[5,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 58, 58].  Tensor sizes: [5, 1, 0, 58]
2025-03-05 15:23:03.815125 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 59],"bool"), list[5,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 59],"bool"), list[5,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 59, 59].  Tensor sizes: [5, 1, 0, 59]
2025-03-05 15:23:03.816027 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 5],"bool"), list[5,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 5],"bool"), list[5,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 5, 5].  Tensor sizes: [5, 1, 0, 5]
2025-03-05 15:23:03.816711 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 60],"bool"), list[5,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 60],"bool"), list[5,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 60, 60].  Tensor sizes: [5, 1, 0, 60]
2025-03-05 15:23:03.817355 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 61],"bool"), list[5,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 61],"bool"), list[5,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 61, 61].  Tensor sizes: [5, 1, 0, 61]
2025-03-05 15:23:03.817924 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 62],"bool"), list[5,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 62],"bool"), list[5,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 62, 62].  Tensor sizes: [5, 1, 0, 62]
2025-03-05 15:23:03.818442 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 63],"bool"), list[5,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 63],"bool"), list[5,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 63, 63].  Tensor sizes: [5, 1, 0, 63]
2025-03-05 15:23:03.819003 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 64],"bool"), list[5,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 64],"bool"), list[5,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 64, 64].  Tensor sizes: [5, 1, 0, 64]
2025-03-05 15:23:03.819596 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,1,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,1,65,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 1, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.820148 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,10,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,10,65,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 10, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.821267 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,100,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,100,65,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 100, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.822142 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,101,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,101,65,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 101, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.822866 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,11,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,11,65,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 11, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.823791 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,12,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,12,65,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 12, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.824523 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,13,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,13,65,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 13, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.825362 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,14,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,14,65,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 14, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.826131 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,15,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,15,65,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 15, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.826925 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,16,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,16,65,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 16, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.827697 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,17,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,17,65,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 17, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.828341 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,18,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,18,65,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 18, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.829095 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,19,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,19,65,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 19, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.829988 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,2,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,2,65,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 2, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.830817 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,20,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,20,65,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 20, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.831517 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,21,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,21,65,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 21, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.832259 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,22,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,22,65,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 22, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.833172 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,23,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,23,65,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 23, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.833932 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,24,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,24,65,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 24, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.834519 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,25,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,25,65,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 25, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.835129 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,26,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,26,65,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 26, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.835909 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,27,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,27,65,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 27, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.836546 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,28,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,28,65,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 28, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.837171 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,29,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,29,65,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 29, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.837912 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,3,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,3,65,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 3, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.838649 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,30,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,30,65,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 30, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.839297 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,31,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,31,65,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 31, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.840479 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,32,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,32,65,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 32, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.841110 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,33,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,33,65,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 33, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.842249 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,34,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,34,65,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 34, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.842829 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,35,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,35,65,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 35, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.843362 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,36,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,36,65,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 36, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.843889 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,37,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,37,65,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 37, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.844876 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,38,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,38,65,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 38, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.845711 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,39,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,39,65,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 39, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.846349 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,4,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,4,65,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 4, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.847398 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,40,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,40,65,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 40, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.848145 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,41,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,41,65,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 41, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.848893 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,42,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,42,65,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 42, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.849567 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,43,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,43,65,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 43, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.850461 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,44,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,44,65,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 44, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.851161 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,45,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,45,65,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 45, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.851713 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,46,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,46,65,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 46, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.852501 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,47,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,47,65,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 47, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.853676 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,48,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,48,65,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 48, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.854509 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,49,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,49,65,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 49, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.855183 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,5,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,5,65,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 5, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.856050 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,50,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,50,65,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 50, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.856693 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,51,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,51,65,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 51, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.857909 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,52,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,52,65,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 52, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.858561 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,53,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,53,65,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 53, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.859106 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,54,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,54,65,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 54, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.859631 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,55,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,55,65,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 55, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.860145 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,56,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,56,65,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 56, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.860660 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,57,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,57,65,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 57, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.861347 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,58,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,58,65,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 58, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.862048 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,59,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,59,65,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 59, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.862730 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,6,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,6,65,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 6, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.863340 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,60,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,60,65,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 60, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.864057 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,61,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,61,65,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 61, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.864723 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,62,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,62,65,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 62, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.865475 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,63,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,63,65,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 63, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.866130 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,64,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,64,65,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 64, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.866814 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 65, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.867509 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,66,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,66,65,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 66, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.868429 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,67,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,67,65,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 67, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.869249 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,68,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,68,65,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 68, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.869959 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,69,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,69,65,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 69, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.870741 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,7,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,7,65,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 7, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.871358 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,70,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,70,65,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 70, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.872003 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,71,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,71,65,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 71, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.873151 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,72,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,72,65,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 72, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.873830 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,73,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,73,65,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 73, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.874408 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,74,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,74,65,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 74, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.874969 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,75,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,75,65,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 75, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.875513 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,76,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,76,65,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 76, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.876417 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,77,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,77,65,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 77, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.876980 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,78,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,78,65,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 78, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.878278 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,79,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,79,65,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 79, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.878971 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,8,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,8,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 8, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.879696 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,80,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,80,65,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 80, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.880332 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,81,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,81,65,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 81, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.880942 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,82,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,82,65,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 82, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.881624 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,83,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,83,65,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 83, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.882235 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,84,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,84,65,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 84, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.882800 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,85,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,85,65,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 85, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.884071 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,86,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,86,65,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 86, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.884733 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,87,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,87,65,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 87, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.885473 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,88,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,88,65,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 88, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.886271 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,89,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,89,65,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 89, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.887011 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,9,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,9,65,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 9, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.887629 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,90,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,90,65,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 90, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.888621 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,91,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,91,65,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 91, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.889277 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,92,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,92,65,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 92, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.889831 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,93,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,93,65,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 93, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.891060 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,94,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,94,65,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 94, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.891692 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,95,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,95,65,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 95, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.892318 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,96,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,96,65,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 96, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.892958 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,97,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,97,65,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 97, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.893662 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,98,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,98,65,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 98, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.894288 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,99,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 65],"bool"), list[5,8,99,65,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 99, 65].  Tensor sizes: [5, 1, 0, 65]
2025-03-05 15:23:03.894961 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 66],"bool"), list[5,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 66],"bool"), list[5,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 66, 66].  Tensor sizes: [5, 1, 0, 66]
2025-03-05 15:23:03.895552 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 67],"bool"), list[5,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 67],"bool"), list[5,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 67, 67].  Tensor sizes: [5, 1, 0, 67]
2025-03-05 15:23:03.896156 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 68],"bool"), list[5,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 68],"bool"), list[5,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 68, 68].  Tensor sizes: [5, 1, 0, 68]
2025-03-05 15:23:03.896695 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 69],"bool"), list[5,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 69],"bool"), list[5,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 69, 69].  Tensor sizes: [5, 1, 0, 69]
2025-03-05 15:23:03.897448 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 6],"bool"), list[5,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 6],"bool"), list[5,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 6, 6].  Tensor sizes: [5, 1, 0, 6]
2025-03-05 15:23:03.898145 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 70],"bool"), list[5,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 70],"bool"), list[5,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 70, 70].  Tensor sizes: [5, 1, 0, 70]
2025-03-05 15:23:03.898790 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 71],"bool"), list[5,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 71],"bool"), list[5,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 71, 71].  Tensor sizes: [5, 1, 0, 71]
2025-03-05 15:23:03.899435 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 72],"bool"), list[5,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 72],"bool"), list[5,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 72, 72].  Tensor sizes: [5, 1, 0, 72]
2025-03-05 15:23:03.899993 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 73],"bool"), list[5,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 73],"bool"), list[5,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 73, 73].  Tensor sizes: [5, 1, 0, 73]
2025-03-05 15:23:03.900549 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 74],"bool"), list[5,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 74],"bool"), list[5,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 74, 74].  Tensor sizes: [5, 1, 0, 74]
2025-03-05 15:23:03.901091 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 75],"bool"), list[5,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 75],"bool"), list[5,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 75, 75].  Tensor sizes: [5, 1, 0, 75]
2025-03-05 15:23:03.901729 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 76],"bool"), list[5,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 76],"bool"), list[5,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 76, 76].  Tensor sizes: [5, 1, 0, 76]
2025-03-05 15:23:03.902477 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 77],"bool"), list[5,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 77],"bool"), list[5,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 77, 77].  Tensor sizes: [5, 1, 0, 77]
2025-03-05 15:23:03.903317 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 78],"bool"), list[5,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 78],"bool"), list[5,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 78, 78].  Tensor sizes: [5, 1, 0, 78]
2025-03-05 15:23:03.904153 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 79],"bool"), list[5,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 79],"bool"), list[5,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 79, 79].  Tensor sizes: [5, 1, 0, 79]
2025-03-05 15:23:03.904779 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 7],"bool"), list[5,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 7],"bool"), list[5,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 7, 7].  Tensor sizes: [5, 1, 0, 7]
2025-03-05 15:23:03.905422 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 80],"bool"), list[5,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 80],"bool"), list[5,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 80, 80].  Tensor sizes: [5, 1, 0, 80]
2025-03-05 15:23:03.906050 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 81],"bool"), list[5,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 81],"bool"), list[5,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 81, 81].  Tensor sizes: [5, 1, 0, 81]
2025-03-05 15:23:03.906666 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 82],"bool"), list[5,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 82],"bool"), list[5,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 82, 82].  Tensor sizes: [5, 1, 0, 82]
2025-03-05 15:23:03.907321 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 83],"bool"), list[5,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 83],"bool"), list[5,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 83, 83].  Tensor sizes: [5, 1, 0, 83]
2025-03-05 15:23:03.907917 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 84],"bool"), list[5,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 84],"bool"), list[5,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 84, 84].  Tensor sizes: [5, 1, 0, 84]
2025-03-05 15:23:03.908692 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 85],"bool"), list[5,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 85],"bool"), list[5,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 85, 85].  Tensor sizes: [5, 1, 0, 85]
2025-03-05 15:23:03.909447 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 86],"bool"), list[5,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 86],"bool"), list[5,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 86, 86].  Tensor sizes: [5, 1, 0, 86]
2025-03-05 15:23:03.910009 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 87],"bool"), list[5,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 87],"bool"), list[5,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 87, 87].  Tensor sizes: [5, 1, 0, 87]
2025-03-05 15:23:03.910579 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 88],"bool"), list[5,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 88],"bool"), list[5,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 88, 88].  Tensor sizes: [5, 1, 0, 88]
2025-03-05 15:23:03.911154 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 89],"bool"), list[5,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 89],"bool"), list[5,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 89, 89].  Tensor sizes: [5, 1, 0, 89]
2025-03-05 15:23:03.912389 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 8],"bool"), list[5,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 8],"bool"), list[5,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 8, 8].  Tensor sizes: [5, 1, 0, 8]
2025-03-05 15:23:03.913223 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 90],"bool"), list[5,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 90],"bool"), list[5,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 90, 90].  Tensor sizes: [5, 1, 0, 90]
2025-03-05 15:23:03.913910 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 91],"bool"), list[5,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 91],"bool"), list[5,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 91, 91].  Tensor sizes: [5, 1, 0, 91]
2025-03-05 15:23:03.914550 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 92],"bool"), list[5,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 92],"bool"), list[5,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 92, 92].  Tensor sizes: [5, 1, 0, 92]
2025-03-05 15:23:03.915110 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 93],"bool"), list[5,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 93],"bool"), list[5,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 93, 93].  Tensor sizes: [5, 1, 0, 93]
2025-03-05 15:23:03.915683 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 94],"bool"), list[5,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 94],"bool"), list[5,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 94, 94].  Tensor sizes: [5, 1, 0, 94]
2025-03-05 15:23:03.916359 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 95],"bool"), list[5,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 95],"bool"), list[5,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 95, 95].  Tensor sizes: [5, 1, 0, 95]
2025-03-05 15:23:03.916951 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 96],"bool"), list[5,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 96],"bool"), list[5,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 96, 96].  Tensor sizes: [5, 1, 0, 96]
2025-03-05 15:23:03.917518 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 97],"bool"), list[5,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 97],"bool"), list[5,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 97, 97].  Tensor sizes: [5, 1, 0, 97]
2025-03-05 15:23:03.918095 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 98],"bool"), list[5,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 98],"bool"), list[5,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 98, 98].  Tensor sizes: [5, 1, 0, 98]
2025-03-05 15:23:03.918738 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 99],"bool"), list[5,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 99],"bool"), list[5,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 99, 99].  Tensor sizes: [5, 1, 0, 99]
2025-03-05 15:23:03.919337 test begin: paddle.broadcast_to(Tensor([5, 1, 0, 9],"bool"), list[5,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0, 9],"bool"), list[5,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 8, 9, 9].  Tensor sizes: [5, 1, 0, 9]
2025-03-05 15:23:03.920099 test begin: paddle.broadcast_to(Tensor([5, 1, 0],"int32"), tuple(5,1,4,), )

[torch error] paddle.broadcast_to(Tensor([5, 1, 0],"int32"), tuple(5,1,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 1, 4].  Tensor sizes: [5, 1, 0]
2025-03-05 15:23:03.920682 test begin: paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 1, 1].  Tensor sizes: [5, 1, 1, 0]
2025-03-05 15:23:03.921203 test begin: paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 1, 145].  Tensor sizes: [5, 1, 1, 0]
2025-03-05 15:23:03.921723 test begin: paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 1, 33].  Tensor sizes: [5, 1, 1, 0]
2025-03-05 15:23:03.922417 test begin: paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 1, 0],"bool"), list[5,8,1,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 1, 65].  Tensor sizes: [5, 1, 1, 0]
2025-03-05 15:23:03.922980 test begin: paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 10, 10].  Tensor sizes: [5, 1, 10, 0]
2025-03-05 15:23:03.923969 test begin: paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 10, 145].  Tensor sizes: [5, 1, 10, 0]
2025-03-05 15:23:03.924559 test begin: paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 10, 33].  Tensor sizes: [5, 1, 10, 0]
2025-03-05 15:23:03.925108 test begin: paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 10, 0],"bool"), list[5,8,10,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 10, 65].  Tensor sizes: [5, 1, 10, 0]
2025-03-05 15:23:03.925666 test begin: paddle.broadcast_to(Tensor([5, 1, 100, 0],"bool"), list[5,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 100, 0],"bool"), list[5,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 100, 100].  Tensor sizes: [5, 1, 100, 0]
2025-03-05 15:23:03.926248 test begin: paddle.broadcast_to(Tensor([5, 1, 100, 0],"bool"), list[5,8,100,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 100, 0],"bool"), list[5,8,100,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 100, 145].  Tensor sizes: [5, 1, 100, 0]
2025-03-05 15:23:03.926956 test begin: paddle.broadcast_to(Tensor([5, 1, 100, 0],"bool"), list[5,8,100,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 100, 0],"bool"), list[5,8,100,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 100, 65].  Tensor sizes: [5, 1, 100, 0]
2025-03-05 15:23:03.927525 test begin: paddle.broadcast_to(Tensor([5, 1, 101, 0],"bool"), list[5,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 101, 0],"bool"), list[5,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 101, 101].  Tensor sizes: [5, 1, 101, 0]
2025-03-05 15:23:03.928117 test begin: paddle.broadcast_to(Tensor([5, 1, 101, 0],"bool"), list[5,8,101,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 101, 0],"bool"), list[5,8,101,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 101, 145].  Tensor sizes: [5, 1, 101, 0]
2025-03-05 15:23:03.928737 test begin: paddle.broadcast_to(Tensor([5, 1, 101, 0],"bool"), list[5,8,101,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 101, 0],"bool"), list[5,8,101,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 101, 65].  Tensor sizes: [5, 1, 101, 0]
2025-03-05 15:23:03.929385 test begin: paddle.broadcast_to(Tensor([5, 1, 102, 0],"bool"), list[5,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 102, 0],"bool"), list[5,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 102, 102].  Tensor sizes: [5, 1, 102, 0]
2025-03-05 15:23:03.930022 test begin: paddle.broadcast_to(Tensor([5, 1, 102, 0],"bool"), list[5,8,102,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 102, 0],"bool"), list[5,8,102,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 102, 145].  Tensor sizes: [5, 1, 102, 0]
2025-03-05 15:23:03.930652 test begin: paddle.broadcast_to(Tensor([5, 1, 103, 0],"bool"), list[5,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 103, 0],"bool"), list[5,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 103, 103].  Tensor sizes: [5, 1, 103, 0]
2025-03-05 15:23:03.931257 test begin: paddle.broadcast_to(Tensor([5, 1, 103, 0],"bool"), list[5,8,103,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 103, 0],"bool"), list[5,8,103,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 103, 145].  Tensor sizes: [5, 1, 103, 0]
2025-03-05 15:23:03.931806 test begin: paddle.broadcast_to(Tensor([5, 1, 104, 0],"bool"), list[5,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 104, 0],"bool"), list[5,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 104, 104].  Tensor sizes: [5, 1, 104, 0]
2025-03-05 15:23:03.932325 test begin: paddle.broadcast_to(Tensor([5, 1, 104, 0],"bool"), list[5,8,104,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 104, 0],"bool"), list[5,8,104,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 104, 145].  Tensor sizes: [5, 1, 104, 0]
2025-03-05 15:23:03.933006 test begin: paddle.broadcast_to(Tensor([5, 1, 105, 0],"bool"), list[5,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 105, 0],"bool"), list[5,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 105, 105].  Tensor sizes: [5, 1, 105, 0]
2025-03-05 15:23:03.934400 test begin: paddle.broadcast_to(Tensor([5, 1, 105, 0],"bool"), list[5,8,105,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 105, 0],"bool"), list[5,8,105,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 105, 145].  Tensor sizes: [5, 1, 105, 0]
2025-03-05 15:23:03.935163 test begin: paddle.broadcast_to(Tensor([5, 1, 106, 0],"bool"), list[5,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 106, 0],"bool"), list[5,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 106, 106].  Tensor sizes: [5, 1, 106, 0]
2025-03-05 15:23:03.935911 test begin: paddle.broadcast_to(Tensor([5, 1, 106, 0],"bool"), list[5,8,106,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 106, 0],"bool"), list[5,8,106,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 106, 145].  Tensor sizes: [5, 1, 106, 0]
2025-03-05 15:23:03.936588 test begin: paddle.broadcast_to(Tensor([5, 1, 107, 0],"bool"), list[5,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 107, 0],"bool"), list[5,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 107, 107].  Tensor sizes: [5, 1, 107, 0]
2025-03-05 15:23:03.937575 test begin: paddle.broadcast_to(Tensor([5, 1, 107, 0],"bool"), list[5,8,107,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 107, 0],"bool"), list[5,8,107,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 107, 145].  Tensor sizes: [5, 1, 107, 0]
2025-03-05 15:23:03.938518 test begin: paddle.broadcast_to(Tensor([5, 1, 108, 0],"bool"), list[5,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 108, 0],"bool"), list[5,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 108, 108].  Tensor sizes: [5, 1, 108, 0]
2025-03-05 15:23:03.939165 test begin: paddle.broadcast_to(Tensor([5, 1, 108, 0],"bool"), list[5,8,108,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 108, 0],"bool"), list[5,8,108,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 108, 145].  Tensor sizes: [5, 1, 108, 0]
2025-03-05 15:23:03.939723 test begin: paddle.broadcast_to(Tensor([5, 1, 109, 0],"bool"), list[5,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 109, 0],"bool"), list[5,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 109, 109].  Tensor sizes: [5, 1, 109, 0]
2025-03-05 15:23:03.940247 test begin: paddle.broadcast_to(Tensor([5, 1, 109, 0],"bool"), list[5,8,109,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 109, 0],"bool"), list[5,8,109,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 109, 145].  Tensor sizes: [5, 1, 109, 0]
2025-03-05 15:23:03.940755 test begin: paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 11, 11].  Tensor sizes: [5, 1, 11, 0]
2025-03-05 15:23:03.941927 test begin: paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 11, 145].  Tensor sizes: [5, 1, 11, 0]
2025-03-05 15:23:03.942793 test begin: paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 11, 33].  Tensor sizes: [5, 1, 11, 0]
2025-03-05 15:23:03.943644 test begin: paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 11, 0],"bool"), list[5,8,11,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 11, 65].  Tensor sizes: [5, 1, 11, 0]
2025-03-05 15:23:03.944314 test begin: paddle.broadcast_to(Tensor([5, 1, 110, 0],"bool"), list[5,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 110, 0],"bool"), list[5,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 110, 110].  Tensor sizes: [5, 1, 110, 0]
2025-03-05 15:23:03.944949 test begin: paddle.broadcast_to(Tensor([5, 1, 110, 0],"bool"), list[5,8,110,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 110, 0],"bool"), list[5,8,110,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 110, 145].  Tensor sizes: [5, 1, 110, 0]
2025-03-05 15:23:03.945569 test begin: paddle.broadcast_to(Tensor([5, 1, 111, 0],"bool"), list[5,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 111, 0],"bool"), list[5,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 111, 111].  Tensor sizes: [5, 1, 111, 0]
2025-03-05 15:23:03.946139 test begin: paddle.broadcast_to(Tensor([5, 1, 111, 0],"bool"), list[5,8,111,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 111, 0],"bool"), list[5,8,111,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 111, 145].  Tensor sizes: [5, 1, 111, 0]
2025-03-05 15:23:03.946866 test begin: paddle.broadcast_to(Tensor([5, 1, 112, 0],"bool"), list[5,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 112, 0],"bool"), list[5,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 112, 112].  Tensor sizes: [5, 1, 112, 0]
2025-03-05 15:23:03.947750 test begin: paddle.broadcast_to(Tensor([5, 1, 112, 0],"bool"), list[5,8,112,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 112, 0],"bool"), list[5,8,112,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 112, 145].  Tensor sizes: [5, 1, 112, 0]
2025-03-05 15:23:03.948702 test begin: paddle.broadcast_to(Tensor([5, 1, 113, 0],"bool"), list[5,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 113, 0],"bool"), list[5,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 113, 113].  Tensor sizes: [5, 1, 113, 0]
2025-03-05 15:23:03.949353 test begin: paddle.broadcast_to(Tensor([5, 1, 113, 0],"bool"), list[5,8,113,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 113, 0],"bool"), list[5,8,113,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 113, 145].  Tensor sizes: [5, 1, 113, 0]
2025-03-05 15:23:03.949918 test begin: paddle.broadcast_to(Tensor([5, 1, 114, 0],"bool"), list[5,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 114, 0],"bool"), list[5,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 114, 114].  Tensor sizes: [5, 1, 114, 0]
2025-03-05 15:23:03.950671 test begin: paddle.broadcast_to(Tensor([5, 1, 114, 0],"bool"), list[5,8,114,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 114, 0],"bool"), list[5,8,114,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 114, 145].  Tensor sizes: [5, 1, 114, 0]
2025-03-05 15:23:03.951294 test begin: paddle.broadcast_to(Tensor([5, 1, 115, 0],"bool"), list[5,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 115, 0],"bool"), list[5,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 115, 115].  Tensor sizes: [5, 1, 115, 0]
2025-03-05 15:23:03.951991 test begin: paddle.broadcast_to(Tensor([5, 1, 115, 0],"bool"), list[5,8,115,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 115, 0],"bool"), list[5,8,115,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 115, 145].  Tensor sizes: [5, 1, 115, 0]
2025-03-05 15:23:03.952634 test begin: paddle.broadcast_to(Tensor([5, 1, 116, 0],"bool"), list[5,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 116, 0],"bool"), list[5,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 116, 116].  Tensor sizes: [5, 1, 116, 0]
2025-03-05 15:23:03.953414 test begin: paddle.broadcast_to(Tensor([5, 1, 116, 0],"bool"), list[5,8,116,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 116, 0],"bool"), list[5,8,116,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 116, 145].  Tensor sizes: [5, 1, 116, 0]
2025-03-05 15:23:03.954163 test begin: paddle.broadcast_to(Tensor([5, 1, 117, 0],"bool"), list[5,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 117, 0],"bool"), list[5,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 117, 117].  Tensor sizes: [5, 1, 117, 0]
2025-03-05 15:23:03.954956 test begin: paddle.broadcast_to(Tensor([5, 1, 117, 0],"bool"), list[5,8,117,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 117, 0],"bool"), list[5,8,117,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 117, 145].  Tensor sizes: [5, 1, 117, 0]
2025-03-05 15:23:03.955716 test begin: paddle.broadcast_to(Tensor([5, 1, 118, 0],"bool"), list[5,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 118, 0],"bool"), list[5,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 118, 118].  Tensor sizes: [5, 1, 118, 0]
2025-03-05 15:23:03.956430 test begin: paddle.broadcast_to(Tensor([5, 1, 118, 0],"bool"), list[5,8,118,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 118, 0],"bool"), list[5,8,118,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 118, 145].  Tensor sizes: [5, 1, 118, 0]
2025-03-05 15:23:03.957440 test begin: paddle.broadcast_to(Tensor([5, 1, 119, 0],"bool"), list[5,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 119, 0],"bool"), list[5,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 119, 119].  Tensor sizes: [5, 1, 119, 0]
2025-03-05 15:23:03.958039 test begin: paddle.broadcast_to(Tensor([5, 1, 119, 0],"bool"), list[5,8,119,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 119, 0],"bool"), list[5,8,119,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 119, 145].  Tensor sizes: [5, 1, 119, 0]
2025-03-05 15:23:03.958701 test begin: paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 12, 12].  Tensor sizes: [5, 1, 12, 0]
2025-03-05 15:23:03.959288 test begin: paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 12, 145].  Tensor sizes: [5, 1, 12, 0]
2025-03-05 15:23:03.959904 test begin: paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 12, 33].  Tensor sizes: [5, 1, 12, 0]
2025-03-05 15:23:03.960432 test begin: paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 12, 0],"bool"), list[5,8,12,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 12, 65].  Tensor sizes: [5, 1, 12, 0]
2025-03-05 15:23:03.961050 test begin: paddle.broadcast_to(Tensor([5, 1, 120, 0],"bool"), list[5,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 120, 0],"bool"), list[5,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 120, 120].  Tensor sizes: [5, 1, 120, 0]
2025-03-05 15:23:03.961759 test begin: paddle.broadcast_to(Tensor([5, 1, 120, 0],"bool"), list[5,8,120,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 120, 0],"bool"), list[5,8,120,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 120, 145].  Tensor sizes: [5, 1, 120, 0]
2025-03-05 15:23:03.962455 test begin: paddle.broadcast_to(Tensor([5, 1, 121, 0],"bool"), list[5,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 121, 0],"bool"), list[5,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 121, 121].  Tensor sizes: [5, 1, 121, 0]
2025-03-05 15:23:03.963126 test begin: paddle.broadcast_to(Tensor([5, 1, 121, 0],"bool"), list[5,8,121,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 121, 0],"bool"), list[5,8,121,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 121, 145].  Tensor sizes: [5, 1, 121, 0]
2025-03-05 15:23:03.963747 test begin: paddle.broadcast_to(Tensor([5, 1, 122, 0],"bool"), list[5,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 122, 0],"bool"), list[5,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 122, 122].  Tensor sizes: [5, 1, 122, 0]
2025-03-05 15:23:03.964315 test begin: paddle.broadcast_to(Tensor([5, 1, 122, 0],"bool"), list[5,8,122,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 122, 0],"bool"), list[5,8,122,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 122, 145].  Tensor sizes: [5, 1, 122, 0]
2025-03-05 15:23:03.965162 test begin: paddle.broadcast_to(Tensor([5, 1, 123, 0],"bool"), list[5,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 123, 0],"bool"), list[5,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 123, 123].  Tensor sizes: [5, 1, 123, 0]
2025-03-05 15:23:03.965723 test begin: paddle.broadcast_to(Tensor([5, 1, 123, 0],"bool"), list[5,8,123,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 123, 0],"bool"), list[5,8,123,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 123, 145].  Tensor sizes: [5, 1, 123, 0]
2025-03-05 15:23:03.966401 test begin: paddle.broadcast_to(Tensor([5, 1, 124, 0],"bool"), list[5,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 124, 0],"bool"), list[5,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 124, 124].  Tensor sizes: [5, 1, 124, 0]
2025-03-05 15:23:03.967114 test begin: paddle.broadcast_to(Tensor([5, 1, 124, 0],"bool"), list[5,8,124,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 124, 0],"bool"), list[5,8,124,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 124, 145].  Tensor sizes: [5, 1, 124, 0]
2025-03-05 15:23:03.967758 test begin: paddle.broadcast_to(Tensor([5, 1, 125, 0],"bool"), list[5,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 125, 0],"bool"), list[5,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 125, 125].  Tensor sizes: [5, 1, 125, 0]
2025-03-05 15:23:03.968343 test begin: paddle.broadcast_to(Tensor([5, 1, 125, 0],"bool"), list[5,8,125,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 125, 0],"bool"), list[5,8,125,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 125, 145].  Tensor sizes: [5, 1, 125, 0]
2025-03-05 15:23:03.969026 test begin: paddle.broadcast_to(Tensor([5, 1, 126, 0],"bool"), list[5,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 126, 0],"bool"), list[5,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 126, 126].  Tensor sizes: [5, 1, 126, 0]
2025-03-05 15:23:03.969637 test begin: paddle.broadcast_to(Tensor([5, 1, 126, 0],"bool"), list[5,8,126,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 126, 0],"bool"), list[5,8,126,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 126, 145].  Tensor sizes: [5, 1, 126, 0]
2025-03-05 15:23:03.970182 test begin: paddle.broadcast_to(Tensor([5, 1, 127, 0],"bool"), list[5,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 127, 0],"bool"), list[5,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 127, 127].  Tensor sizes: [5, 1, 127, 0]
2025-03-05 15:23:03.970705 test begin: paddle.broadcast_to(Tensor([5, 1, 127, 0],"bool"), list[5,8,127,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 127, 0],"bool"), list[5,8,127,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 127, 145].  Tensor sizes: [5, 1, 127, 0]
2025-03-05 15:23:03.971385 test begin: paddle.broadcast_to(Tensor([5, 1, 128, 0],"bool"), list[5,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 128, 0],"bool"), list[5,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 128, 128].  Tensor sizes: [5, 1, 128, 0]
2025-03-05 15:23:03.972059 test begin: paddle.broadcast_to(Tensor([5, 1, 128, 0],"bool"), list[5,8,128,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 128, 0],"bool"), list[5,8,128,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 128, 145].  Tensor sizes: [5, 1, 128, 0]
2025-03-05 15:23:03.973097 test begin: paddle.broadcast_to(Tensor([5, 1, 129, 0],"bool"), list[5,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 129, 0],"bool"), list[5,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 129, 129].  Tensor sizes: [5, 1, 129, 0]
2025-03-05 15:23:03.973771 test begin: paddle.broadcast_to(Tensor([5, 1, 129, 0],"bool"), list[5,8,129,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 129, 0],"bool"), list[5,8,129,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 129, 145].  Tensor sizes: [5, 1, 129, 0]
2025-03-05 15:23:03.974422 test begin: paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 13, 13].  Tensor sizes: [5, 1, 13, 0]
2025-03-05 15:23:03.974981 test begin: paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 13, 145].  Tensor sizes: [5, 1, 13, 0]
2025-03-05 15:23:03.975765 test begin: paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 13, 33].  Tensor sizes: [5, 1, 13, 0]
2025-03-05 15:23:03.976503 test begin: paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 13, 0],"bool"), list[5,8,13,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 13, 65].  Tensor sizes: [5, 1, 13, 0]
2025-03-05 15:23:03.977229 test begin: paddle.broadcast_to(Tensor([5, 1, 130, 0],"bool"), list[5,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 130, 0],"bool"), list[5,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 130, 130].  Tensor sizes: [5, 1, 130, 0]
2025-03-05 15:23:03.977925 test begin: paddle.broadcast_to(Tensor([5, 1, 130, 0],"bool"), list[5,8,130,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 130, 0],"bool"), list[5,8,130,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 130, 145].  Tensor sizes: [5, 1, 130, 0]
2025-03-05 15:23:03.978717 test begin: paddle.broadcast_to(Tensor([5, 1, 131, 0],"bool"), list[5,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 131, 0],"bool"), list[5,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 131, 131].  Tensor sizes: [5, 1, 131, 0]
2025-03-05 15:23:03.979303 test begin: paddle.broadcast_to(Tensor([5, 1, 131, 0],"bool"), list[5,8,131,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 131, 0],"bool"), list[5,8,131,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 131, 145].  Tensor sizes: [5, 1, 131, 0]
2025-03-05 15:23:03.980210 test begin: paddle.broadcast_to(Tensor([5, 1, 132, 0],"bool"), list[5,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 132, 0],"bool"), list[5,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 132, 132].  Tensor sizes: [5, 1, 132, 0]
2025-03-05 15:23:03.981088 test begin: paddle.broadcast_to(Tensor([5, 1, 132, 0],"bool"), list[5,8,132,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 132, 0],"bool"), list[5,8,132,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 132, 145].  Tensor sizes: [5, 1, 132, 0]
2025-03-05 15:23:03.981773 test begin: paddle.broadcast_to(Tensor([5, 1, 133, 0],"bool"), list[5,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 133, 0],"bool"), list[5,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 133, 133].  Tensor sizes: [5, 1, 133, 0]
2025-03-05 15:23:03.982416 test begin: paddle.broadcast_to(Tensor([5, 1, 133, 0],"bool"), list[5,8,133,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 133, 0],"bool"), list[5,8,133,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 133, 145].  Tensor sizes: [5, 1, 133, 0]
2025-03-05 15:23:03.983026 test begin: paddle.broadcast_to(Tensor([5, 1, 134, 0],"bool"), list[5,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 134, 0],"bool"), list[5,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 134, 134].  Tensor sizes: [5, 1, 134, 0]
2025-03-05 15:23:03.983627 test begin: paddle.broadcast_to(Tensor([5, 1, 134, 0],"bool"), list[5,8,134,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 134, 0],"bool"), list[5,8,134,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 134, 145].  Tensor sizes: [5, 1, 134, 0]
2025-03-05 15:23:03.984299 test begin: paddle.broadcast_to(Tensor([5, 1, 135, 0],"bool"), list[5,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 135, 0],"bool"), list[5,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 135, 135].  Tensor sizes: [5, 1, 135, 0]
2025-03-05 15:23:03.985045 test begin: paddle.broadcast_to(Tensor([5, 1, 135, 0],"bool"), list[5,8,135,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 135, 0],"bool"), list[5,8,135,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 135, 145].  Tensor sizes: [5, 1, 135, 0]
2025-03-05 15:23:03.986255 test begin: paddle.broadcast_to(Tensor([5, 1, 136, 0],"bool"), list[5,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 136, 0],"bool"), list[5,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 136, 136].  Tensor sizes: [5, 1, 136, 0]
2025-03-05 15:23:03.986959 test begin: paddle.broadcast_to(Tensor([5, 1, 136, 0],"bool"), list[5,8,136,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 136, 0],"bool"), list[5,8,136,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 136, 145].  Tensor sizes: [5, 1, 136, 0]
2025-03-05 15:23:03.987637 test begin: paddle.broadcast_to(Tensor([5, 1, 137, 0],"bool"), list[5,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 137, 0],"bool"), list[5,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 137, 137].  Tensor sizes: [5, 1, 137, 0]
2025-03-05 15:23:03.988433 test begin: paddle.broadcast_to(Tensor([5, 1, 137, 0],"bool"), list[5,8,137,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 137, 0],"bool"), list[5,8,137,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 137, 145].  Tensor sizes: [5, 1, 137, 0]
2025-03-05 15:23:03.989232 test begin: paddle.broadcast_to(Tensor([5, 1, 138, 0],"bool"), list[5,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 138, 0],"bool"), list[5,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 138, 138].  Tensor sizes: [5, 1, 138, 0]
2025-03-05 15:23:03.989829 test begin: paddle.broadcast_to(Tensor([5, 1, 138, 0],"bool"), list[5,8,138,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 138, 0],"bool"), list[5,8,138,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 138, 145].  Tensor sizes: [5, 1, 138, 0]
2025-03-05 15:23:03.990524 test begin: paddle.broadcast_to(Tensor([5, 1, 139, 0],"bool"), list[5,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 139, 0],"bool"), list[5,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 139, 139].  Tensor sizes: [5, 1, 139, 0]
2025-03-05 15:23:03.991285 test begin: paddle.broadcast_to(Tensor([5, 1, 139, 0],"bool"), list[5,8,139,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 139, 0],"bool"), list[5,8,139,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 139, 145].  Tensor sizes: [5, 1, 139, 0]
2025-03-05 15:23:03.992031 test begin: paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 14, 14].  Tensor sizes: [5, 1, 14, 0]
2025-03-05 15:23:03.992698 test begin: paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 14, 145].  Tensor sizes: [5, 1, 14, 0]
2025-03-05 15:23:03.993476 test begin: paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 14, 33].  Tensor sizes: [5, 1, 14, 0]
2025-03-05 15:23:03.994379 test begin: paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 14, 0],"bool"), list[5,8,14,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 14, 65].  Tensor sizes: [5, 1, 14, 0]
2025-03-05 15:23:03.995086 test begin: paddle.broadcast_to(Tensor([5, 1, 140, 0],"bool"), list[5,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 140, 0],"bool"), list[5,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 140, 140].  Tensor sizes: [5, 1, 140, 0]
2025-03-05 15:23:03.995670 test begin: paddle.broadcast_to(Tensor([5, 1, 140, 0],"bool"), list[5,8,140,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 140, 0],"bool"), list[5,8,140,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 140, 145].  Tensor sizes: [5, 1, 140, 0]
2025-03-05 15:23:03.996374 test begin: paddle.broadcast_to(Tensor([5, 1, 141, 0],"bool"), list[5,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 141, 0],"bool"), list[5,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 141, 141].  Tensor sizes: [5, 1, 141, 0]
2025-03-05 15:23:03.997299 test begin: paddle.broadcast_to(Tensor([5, 1, 141, 0],"bool"), list[5,8,141,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 141, 0],"bool"), list[5,8,141,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 141, 145].  Tensor sizes: [5, 1, 141, 0]
2025-03-05 15:23:03.998476 test begin: paddle.broadcast_to(Tensor([5, 1, 142, 0],"bool"), list[5,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 142, 0],"bool"), list[5,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 142, 142].  Tensor sizes: [5, 1, 142, 0]
2025-03-05 15:23:03.999180 test begin: paddle.broadcast_to(Tensor([5, 1, 142, 0],"bool"), list[5,8,142,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 142, 0],"bool"), list[5,8,142,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 142, 145].  Tensor sizes: [5, 1, 142, 0]
2025-03-05 15:23:03.999993 test begin: paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 15, 145].  Tensor sizes: [5, 1, 15, 0]
2025-03-05 15:23:04.000666 test begin: paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 15, 15].  Tensor sizes: [5, 1, 15, 0]
2025-03-05 15:23:04.001435 test begin: paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 15, 33].  Tensor sizes: [5, 1, 15, 0]
2025-03-05 15:23:04.002673 test begin: paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 15, 0],"bool"), list[5,8,15,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 15, 65].  Tensor sizes: [5, 1, 15, 0]
2025-03-05 15:23:04.003279 test begin: paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 16, 145].  Tensor sizes: [5, 1, 16, 0]
2025-03-05 15:23:04.003883 test begin: paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 16, 16].  Tensor sizes: [5, 1, 16, 0]
2025-03-05 15:23:04.004613 test begin: paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 16, 33].  Tensor sizes: [5, 1, 16, 0]
2025-03-05 15:23:04.005284 test begin: paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 16, 0],"bool"), list[5,8,16,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 16, 65].  Tensor sizes: [5, 1, 16, 0]
2025-03-05 15:23:04.005976 test begin: paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 17, 145].  Tensor sizes: [5, 1, 17, 0]
2025-03-05 15:23:04.006577 test begin: paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 17, 17].  Tensor sizes: [5, 1, 17, 0]
2025-03-05 15:23:04.007236 test begin: paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 17, 33].  Tensor sizes: [5, 1, 17, 0]
2025-03-05 15:23:04.007847 test begin: paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 17, 0],"bool"), list[5,8,17,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 17, 65].  Tensor sizes: [5, 1, 17, 0]
2025-03-05 15:23:04.008521 test begin: paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 18, 145].  Tensor sizes: [5, 1, 18, 0]
2025-03-05 15:23:04.009159 test begin: paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 18, 18].  Tensor sizes: [5, 1, 18, 0]
2025-03-05 15:23:04.010353 test begin: paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 18, 33].  Tensor sizes: [5, 1, 18, 0]
2025-03-05 15:23:04.011068 test begin: paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 18, 0],"bool"), list[5,8,18,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 18, 65].  Tensor sizes: [5, 1, 18, 0]
2025-03-05 15:23:04.011809 test begin: paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 19, 145].  Tensor sizes: [5, 1, 19, 0]
2025-03-05 15:23:04.012549 test begin: paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 19, 19].  Tensor sizes: [5, 1, 19, 0]
2025-03-05 15:23:04.013201 test begin: paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 19, 33].  Tensor sizes: [5, 1, 19, 0]
2025-03-05 15:23:04.013854 test begin: paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 19, 0],"bool"), list[5,8,19,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 19, 65].  Tensor sizes: [5, 1, 19, 0]
2025-03-05 15:23:04.014490 test begin: paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 2, 145].  Tensor sizes: [5, 1, 2, 0]
2025-03-05 15:23:04.015166 test begin: paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 2, 2].  Tensor sizes: [5, 1, 2, 0]
2025-03-05 15:23:04.015905 test begin: paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 2, 33].  Tensor sizes: [5, 1, 2, 0]
2025-03-05 15:23:04.016649 test begin: paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 2, 0],"bool"), list[5,8,2,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 2, 65].  Tensor sizes: [5, 1, 2, 0]
2025-03-05 15:23:04.017347 test begin: paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 20, 145].  Tensor sizes: [5, 1, 20, 0]
2025-03-05 15:23:04.018318 test begin: paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 20, 20].  Tensor sizes: [5, 1, 20, 0]
2025-03-05 15:23:04.019348 test begin: paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 20, 33].  Tensor sizes: [5, 1, 20, 0]
2025-03-05 15:23:04.020072 test begin: paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 20, 0],"bool"), list[5,8,20,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 20, 65].  Tensor sizes: [5, 1, 20, 0]
2025-03-05 15:23:04.020728 test begin: paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 21, 145].  Tensor sizes: [5, 1, 21, 0]
2025-03-05 15:23:04.021392 test begin: paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 21, 21].  Tensor sizes: [5, 1, 21, 0]
2025-03-05 15:23:04.022052 test begin: paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 21, 33].  Tensor sizes: [5, 1, 21, 0]
2025-03-05 15:23:04.022609 test begin: paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 21, 0],"bool"), list[5,8,21,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 21, 65].  Tensor sizes: [5, 1, 21, 0]
2025-03-05 15:23:04.023214 test begin: paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 22, 145].  Tensor sizes: [5, 1, 22, 0]
2025-03-05 15:23:04.024017 test begin: paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 22, 22].  Tensor sizes: [5, 1, 22, 0]
2025-03-05 15:23:04.025113 test begin: paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 22, 33].  Tensor sizes: [5, 1, 22, 0]
2025-03-05 15:23:04.025872 test begin: paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 22, 0],"bool"), list[5,8,22,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 22, 65].  Tensor sizes: [5, 1, 22, 0]
2025-03-05 15:23:04.026567 test begin: paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 23, 145].  Tensor sizes: [5, 1, 23, 0]
2025-03-05 15:23:04.027279 test begin: paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 23, 23].  Tensor sizes: [5, 1, 23, 0]
2025-03-05 15:23:04.028007 test begin: paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 23, 33].  Tensor sizes: [5, 1, 23, 0]
2025-03-05 15:23:04.028709 test begin: paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 23, 0],"bool"), list[5,8,23,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 23, 65].  Tensor sizes: [5, 1, 23, 0]
2025-03-05 15:23:04.029405 test begin: paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 24, 145].  Tensor sizes: [5, 1, 24, 0]
2025-03-05 15:23:04.030079 test begin: paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 24, 24].  Tensor sizes: [5, 1, 24, 0]
2025-03-05 15:23:04.030641 test begin: paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 24, 33].  Tensor sizes: [5, 1, 24, 0]
2025-03-05 15:23:04.031672 test begin: paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 24, 0],"bool"), list[5,8,24,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 24, 65].  Tensor sizes: [5, 1, 24, 0]
2025-03-05 15:23:04.032312 test begin: paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 25, 145].  Tensor sizes: [5, 1, 25, 0]
2025-03-05 15:23:04.032888 test begin: paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 25, 25].  Tensor sizes: [5, 1, 25, 0]
2025-03-05 15:23:04.033424 test begin: paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 25, 33].  Tensor sizes: [5, 1, 25, 0]
2025-03-05 15:23:04.034207 test begin: paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 25, 0],"bool"), list[5,8,25,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 25, 65].  Tensor sizes: [5, 1, 25, 0]
2025-03-05 15:23:04.034869 test begin: paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 26, 145].  Tensor sizes: [5, 1, 26, 0]
2025-03-05 15:23:04.036080 test begin: paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 26, 26].  Tensor sizes: [5, 1, 26, 0]
2025-03-05 15:23:04.043446 test begin: paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 26, 33].  Tensor sizes: [5, 1, 26, 0]
2025-03-05 15:23:04.044618 test begin: paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 26, 0],"bool"), list[5,8,26,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 26, 65].  Tensor sizes: [5, 1, 26, 0]
2025-03-05 15:23:04.045291 test begin: paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 27, 145].  Tensor sizes: [5, 1, 27, 0]
2025-03-05 15:23:04.045868 test begin: paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 27, 27].  Tensor sizes: [5, 1, 27, 0]
2025-03-05 15:23:04.046805 test begin: paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 27, 33].  Tensor sizes: [5, 1, 27, 0]
2025-03-05 15:23:04.047718 test begin: paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 27, 0],"bool"), list[5,8,27,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 27, 65].  Tensor sizes: [5, 1, 27, 0]
2025-03-05 15:23:04.048371 test begin: paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 28, 145].  Tensor sizes: [5, 1, 28, 0]
2025-03-05 15:23:04.048983 test begin: paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 28, 28].  Tensor sizes: [5, 1, 28, 0]
2025-03-05 15:23:04.049558 test begin: paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 28, 33].  Tensor sizes: [5, 1, 28, 0]
2025-03-05 15:23:04.050275 test begin: paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 28, 0],"bool"), list[5,8,28,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 28, 65].  Tensor sizes: [5, 1, 28, 0]
2025-03-05 15:23:04.051053 test begin: paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 29, 145].  Tensor sizes: [5, 1, 29, 0]
2025-03-05 15:23:04.051819 test begin: paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 29, 29].  Tensor sizes: [5, 1, 29, 0]
2025-03-05 15:23:04.052416 test begin: paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 29, 33].  Tensor sizes: [5, 1, 29, 0]
2025-03-05 15:23:04.053068 test begin: paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 29, 0],"bool"), list[5,8,29,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 29, 65].  Tensor sizes: [5, 1, 29, 0]
2025-03-05 15:23:04.053777 test begin: paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 3, 145].  Tensor sizes: [5, 1, 3, 0]
2025-03-05 15:23:04.054459 test begin: paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 3, 3].  Tensor sizes: [5, 1, 3, 0]
2025-03-05 15:23:04.058885 test begin: paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 3, 33].  Tensor sizes: [5, 1, 3, 0]
2025-03-05 15:23:04.059734 test begin: paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 3, 0],"bool"), list[5,8,3,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 3, 65].  Tensor sizes: [5, 1, 3, 0]
2025-03-05 15:23:04.060931 test begin: paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 30, 145].  Tensor sizes: [5, 1, 30, 0]
2025-03-05 15:23:04.061636 test begin: paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 30, 30].  Tensor sizes: [5, 1, 30, 0]
2025-03-05 15:23:04.062675 test begin: paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 30, 33].  Tensor sizes: [5, 1, 30, 0]
2025-03-05 15:23:04.063455 test begin: paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 30, 0],"bool"), list[5,8,30,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 30, 65].  Tensor sizes: [5, 1, 30, 0]
2025-03-05 15:23:04.064301 test begin: paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 31, 145].  Tensor sizes: [5, 1, 31, 0]
2025-03-05 15:23:04.064967 test begin: paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 31, 31].  Tensor sizes: [5, 1, 31, 0]
2025-03-05 15:23:04.065717 test begin: paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 31, 33].  Tensor sizes: [5, 1, 31, 0]
2025-03-05 15:23:04.066375 test begin: paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 31, 0],"bool"), list[5,8,31,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 31, 65].  Tensor sizes: [5, 1, 31, 0]
2025-03-05 15:23:04.066981 test begin: paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 32, 145].  Tensor sizes: [5, 1, 32, 0]
2025-03-05 15:23:04.068184 test begin: paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 32, 32].  Tensor sizes: [5, 1, 32, 0]
2025-03-05 15:23:04.068767 test begin: paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 32, 33].  Tensor sizes: [5, 1, 32, 0]
2025-03-05 15:23:04.069427 test begin: paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 32, 0],"bool"), list[5,8,32,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 32, 65].  Tensor sizes: [5, 1, 32, 0]
2025-03-05 15:23:04.070016 test begin: paddle.broadcast_to(Tensor([5, 1, 33, 0],"bool"), list[5,8,33,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 33, 0],"bool"), list[5,8,33,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 33, 145].  Tensor sizes: [5, 1, 33, 0]
2025-03-05 15:23:04.070825 test begin: paddle.broadcast_to(Tensor([5, 1, 33, 0],"bool"), list[5,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 33, 0],"bool"), list[5,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 33, 33].  Tensor sizes: [5, 1, 33, 0]
2025-03-05 15:23:04.071560 test begin: paddle.broadcast_to(Tensor([5, 1, 33, 0],"bool"), list[5,8,33,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 33, 0],"bool"), list[5,8,33,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 33, 65].  Tensor sizes: [5, 1, 33, 0]
2025-03-05 15:23:04.072644 test begin: paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 34, 145].  Tensor sizes: [5, 1, 34, 0]
2025-03-05 15:23:04.073390 test begin: paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 34, 33].  Tensor sizes: [5, 1, 34, 0]
2025-03-05 15:23:04.074010 test begin: paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 34, 34].  Tensor sizes: [5, 1, 34, 0]
2025-03-05 15:23:04.074572 test begin: paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 34, 0],"bool"), list[5,8,34,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 34, 65].  Tensor sizes: [5, 1, 34, 0]
2025-03-05 15:23:04.075170 test begin: paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 35, 145].  Tensor sizes: [5, 1, 35, 0]
2025-03-05 15:23:04.076105 test begin: paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 35, 33].  Tensor sizes: [5, 1, 35, 0]
2025-03-05 15:23:04.077035 test begin: paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 35, 35].  Tensor sizes: [5, 1, 35, 0]
2025-03-05 15:23:04.078380 test begin: paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 35, 0],"bool"), list[5,8,35,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 35, 65].  Tensor sizes: [5, 1, 35, 0]
2025-03-05 15:23:04.079044 test begin: paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 36, 145].  Tensor sizes: [5, 1, 36, 0]
2025-03-05 15:23:04.079803 test begin: paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 36, 33].  Tensor sizes: [5, 1, 36, 0]
2025-03-05 15:23:04.080717 test begin: paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 36, 36].  Tensor sizes: [5, 1, 36, 0]
2025-03-05 15:23:04.081621 test begin: paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 36, 0],"bool"), list[5,8,36,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 36, 65].  Tensor sizes: [5, 1, 36, 0]
2025-03-05 15:23:04.082303 test begin: paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 37, 145].  Tensor sizes: [5, 1, 37, 0]
2025-03-05 15:23:04.082945 test begin: paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 37, 33].  Tensor sizes: [5, 1, 37, 0]
2025-03-05 15:23:04.083579 test begin: paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 37, 37].  Tensor sizes: [5, 1, 37, 0]
2025-03-05 15:23:04.084192 test begin: paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 37, 0],"bool"), list[5,8,37,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 37, 65].  Tensor sizes: [5, 1, 37, 0]
2025-03-05 15:23:04.084918 test begin: paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 38, 145].  Tensor sizes: [5, 1, 38, 0]
2025-03-05 15:23:04.085540 test begin: paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 38, 33].  Tensor sizes: [5, 1, 38, 0]
2025-03-05 15:23:04.086157 test begin: paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 38, 38].  Tensor sizes: [5, 1, 38, 0]
2025-03-05 15:23:04.086761 test begin: paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 38, 0],"bool"), list[5,8,38,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 38, 65].  Tensor sizes: [5, 1, 38, 0]
2025-03-05 15:23:04.087369 test begin: paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 39, 145].  Tensor sizes: [5, 1, 39, 0]
2025-03-05 15:23:04.087971 test begin: paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 39, 33].  Tensor sizes: [5, 1, 39, 0]
2025-03-05 15:23:04.088552 test begin: paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 39, 39].  Tensor sizes: [5, 1, 39, 0]
2025-03-05 15:23:04.089208 test begin: paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 39, 0],"bool"), list[5,8,39,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 39, 65].  Tensor sizes: [5, 1, 39, 0]
2025-03-05 15:23:04.090359 test begin: paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 4, 145].  Tensor sizes: [5, 1, 4, 0]
2025-03-05 15:23:04.091003 test begin: paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 4, 33].  Tensor sizes: [5, 1, 4, 0]
2025-03-05 15:23:04.091904 test begin: paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 4, 4].  Tensor sizes: [5, 1, 4, 0]
2025-03-05 15:23:04.092551 test begin: paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 4, 0],"bool"), list[5,8,4,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 4, 65].  Tensor sizes: [5, 1, 4, 0]
2025-03-05 15:23:04.093213 test begin: paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 40, 145].  Tensor sizes: [5, 1, 40, 0]
2025-03-05 15:23:04.093973 test begin: paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 40, 33].  Tensor sizes: [5, 1, 40, 0]
2025-03-05 15:23:04.094674 test begin: paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 40, 40].  Tensor sizes: [5, 1, 40, 0]
2025-03-05 15:23:04.095320 test begin: paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 40, 0],"bool"), list[5,8,40,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 40, 65].  Tensor sizes: [5, 1, 40, 0]
2025-03-05 15:23:04.095936 test begin: paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 41, 145].  Tensor sizes: [5, 1, 41, 0]
2025-03-05 15:23:04.096612 test begin: paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 41, 33].  Tensor sizes: [5, 1, 41, 0]
2025-03-05 15:23:04.097448 test begin: paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 41, 41].  Tensor sizes: [5, 1, 41, 0]
2025-03-05 15:23:04.098337 test begin: paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 41, 0],"bool"), list[5,8,41,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 41, 65].  Tensor sizes: [5, 1, 41, 0]
2025-03-05 15:23:04.099148 test begin: paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 42, 145].  Tensor sizes: [5, 1, 42, 0]
2025-03-05 15:23:04.099825 test begin: paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 42, 33].  Tensor sizes: [5, 1, 42, 0]
2025-03-05 15:23:04.100505 test begin: paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 42, 42].  Tensor sizes: [5, 1, 42, 0]
2025-03-05 15:23:04.101369 test begin: paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 42, 0],"bool"), list[5,8,42,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 42, 65].  Tensor sizes: [5, 1, 42, 0]
2025-03-05 15:23:04.102184 test begin: paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 43, 145].  Tensor sizes: [5, 1, 43, 0]
2025-03-05 15:23:04.103192 test begin: paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 43, 33].  Tensor sizes: [5, 1, 43, 0]
2025-03-05 15:23:04.103923 test begin: paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 43, 43].  Tensor sizes: [5, 1, 43, 0]
2025-03-05 15:23:04.104557 test begin: paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 43, 0],"bool"), list[5,8,43,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 43, 65].  Tensor sizes: [5, 1, 43, 0]
2025-03-05 15:23:04.105204 test begin: paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 44, 145].  Tensor sizes: [5, 1, 44, 0]
2025-03-05 15:23:04.105864 test begin: paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 44, 33].  Tensor sizes: [5, 1, 44, 0]
2025-03-05 15:23:04.107022 test begin: paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 44, 44].  Tensor sizes: [5, 1, 44, 0]
2025-03-05 15:23:04.107650 test begin: paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 44, 0],"bool"), list[5,8,44,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 44, 65].  Tensor sizes: [5, 1, 44, 0]
2025-03-05 15:23:04.108268 test begin: paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 45, 145].  Tensor sizes: [5, 1, 45, 0]
2025-03-05 15:23:04.108956 test begin: paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 45, 33].  Tensor sizes: [5, 1, 45, 0]
2025-03-05 15:23:04.110514 test begin: paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 45, 45].  Tensor sizes: [5, 1, 45, 0]
2025-03-05 15:23:04.111519 test begin: paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 45, 0],"bool"), list[5,8,45,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 45, 65].  Tensor sizes: [5, 1, 45, 0]
2025-03-05 15:23:04.112283 test begin: paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 46, 145].  Tensor sizes: [5, 1, 46, 0]
2025-03-05 15:23:04.112903 test begin: paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 46, 33].  Tensor sizes: [5, 1, 46, 0]
2025-03-05 15:23:04.113638 test begin: paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 46, 46].  Tensor sizes: [5, 1, 46, 0]
2025-03-05 15:23:04.114426 test begin: paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 46, 0],"bool"), list[5,8,46,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 46, 65].  Tensor sizes: [5, 1, 46, 0]
2025-03-05 15:23:04.115012 test begin: paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 47, 145].  Tensor sizes: [5, 1, 47, 0]
2025-03-05 15:23:04.115751 test begin: paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 47, 33].  Tensor sizes: [5, 1, 47, 0]
2025-03-05 15:23:04.117300 test begin: paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 47, 47].  Tensor sizes: [5, 1, 47, 0]
2025-03-05 15:23:04.118082 test begin: paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 47, 0],"bool"), list[5,8,47,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 47, 65].  Tensor sizes: [5, 1, 47, 0]
2025-03-05 15:23:04.118680 test begin: paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 48, 145].  Tensor sizes: [5, 1, 48, 0]
2025-03-05 15:23:04.119211 test begin: paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 48, 33].  Tensor sizes: [5, 1, 48, 0]
2025-03-05 15:23:04.119805 test begin: paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 48, 48].  Tensor sizes: [5, 1, 48, 0]
2025-03-05 15:23:04.120356 test begin: paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 48, 0],"bool"), list[5,8,48,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 48, 65].  Tensor sizes: [5, 1, 48, 0]
2025-03-05 15:23:04.120888 test begin: paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 49, 145].  Tensor sizes: [5, 1, 49, 0]
2025-03-05 15:23:04.121644 test begin: paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 49, 33].  Tensor sizes: [5, 1, 49, 0]
2025-03-05 15:23:04.122440 test begin: paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 49, 49].  Tensor sizes: [5, 1, 49, 0]
2025-03-05 15:23:04.123554 test begin: paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 49, 0],"bool"), list[5,8,49,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 49, 65].  Tensor sizes: [5, 1, 49, 0]
2025-03-05 15:23:04.124243 test begin: paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 5, 145].  Tensor sizes: [5, 1, 5, 0]
2025-03-05 15:23:04.124937 test begin: paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 5, 33].  Tensor sizes: [5, 1, 5, 0]
2025-03-05 15:23:04.125598 test begin: paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 5, 5].  Tensor sizes: [5, 1, 5, 0]
2025-03-05 15:23:04.126383 test begin: paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 5, 0],"bool"), list[5,8,5,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 5, 65].  Tensor sizes: [5, 1, 5, 0]
2025-03-05 15:23:04.127205 test begin: paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 50, 145].  Tensor sizes: [5, 1, 50, 0]
2025-03-05 15:23:04.127909 test begin: paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 50, 33].  Tensor sizes: [5, 1, 50, 0]
2025-03-05 15:23:04.128668 test begin: paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 50, 50].  Tensor sizes: [5, 1, 50, 0]
2025-03-05 15:23:04.129348 test begin: paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 50, 0],"bool"), list[5,8,50,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 50, 65].  Tensor sizes: [5, 1, 50, 0]
2025-03-05 15:23:04.129987 test begin: paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 51, 145].  Tensor sizes: [5, 1, 51, 0]
2025-03-05 15:23:04.130534 test begin: paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 51, 33].  Tensor sizes: [5, 1, 51, 0]
2025-03-05 15:23:04.131115 test begin: paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 51, 51].  Tensor sizes: [5, 1, 51, 0]
2025-03-05 15:23:04.131681 test begin: paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 51, 0],"bool"), list[5,8,51,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 51, 65].  Tensor sizes: [5, 1, 51, 0]
2025-03-05 15:23:04.132360 test begin: paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 52, 145].  Tensor sizes: [5, 1, 52, 0]
2025-03-05 15:23:04.133114 test begin: paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 52, 33].  Tensor sizes: [5, 1, 52, 0]
2025-03-05 15:23:04.133827 test begin: paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 52, 52].  Tensor sizes: [5, 1, 52, 0]
2025-03-05 15:23:04.134476 test begin: paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 52, 0],"bool"), list[5,8,52,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 52, 65].  Tensor sizes: [5, 1, 52, 0]
2025-03-05 15:23:04.135069 test begin: paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 53, 145].  Tensor sizes: [5, 1, 53, 0]
2025-03-05 15:23:04.135645 test begin: paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 53, 33].  Tensor sizes: [5, 1, 53, 0]
2025-03-05 15:23:04.136319 test begin: paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 53, 53].  Tensor sizes: [5, 1, 53, 0]
2025-03-05 15:23:04.137247 test begin: paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 53, 0],"bool"), list[5,8,53,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 53, 65].  Tensor sizes: [5, 1, 53, 0]
2025-03-05 15:23:04.137913 test begin: paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 54, 145].  Tensor sizes: [5, 1, 54, 0]
2025-03-05 15:23:04.138546 test begin: paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 54, 33].  Tensor sizes: [5, 1, 54, 0]
2025-03-05 15:23:04.139327 test begin: paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 54, 54].  Tensor sizes: [5, 1, 54, 0]
2025-03-05 15:23:04.140218 test begin: paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 54, 0],"bool"), list[5,8,54,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 54, 65].  Tensor sizes: [5, 1, 54, 0]
2025-03-05 15:23:04.141008 test begin: paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 55, 145].  Tensor sizes: [5, 1, 55, 0]
2025-03-05 15:23:04.142041 test begin: paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 55, 33].  Tensor sizes: [5, 1, 55, 0]
2025-03-05 15:23:04.142784 test begin: paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 55, 55].  Tensor sizes: [5, 1, 55, 0]
2025-03-05 15:23:04.143548 test begin: paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 55, 0],"bool"), list[5,8,55,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 55, 65].  Tensor sizes: [5, 1, 55, 0]
2025-03-05 15:23:04.144136 test begin: paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 56, 145].  Tensor sizes: [5, 1, 56, 0]
2025-03-05 15:23:04.144711 test begin: paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 56, 33].  Tensor sizes: [5, 1, 56, 0]
2025-03-05 15:23:04.145318 test begin: paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 56, 56].  Tensor sizes: [5, 1, 56, 0]
2025-03-05 15:23:04.146054 test begin: paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 56, 0],"bool"), list[5,8,56,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 56, 65].  Tensor sizes: [5, 1, 56, 0]
2025-03-05 15:23:04.146669 test begin: paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 57, 145].  Tensor sizes: [5, 1, 57, 0]
2025-03-05 15:23:04.147408 test begin: paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 57, 33].  Tensor sizes: [5, 1, 57, 0]
2025-03-05 15:23:04.148198 test begin: paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 57, 57].  Tensor sizes: [5, 1, 57, 0]
2025-03-05 15:23:04.148981 test begin: paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 57, 0],"bool"), list[5,8,57,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 57, 65].  Tensor sizes: [5, 1, 57, 0]
2025-03-05 15:23:04.150137 test begin: paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 58, 145].  Tensor sizes: [5, 1, 58, 0]
2025-03-05 15:23:04.150755 test begin: paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 58, 33].  Tensor sizes: [5, 1, 58, 0]
2025-03-05 15:23:04.151485 test begin: paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 58, 58].  Tensor sizes: [5, 1, 58, 0]
2025-03-05 15:23:04.152403 test begin: paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 58, 0],"bool"), list[5,8,58,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 58, 65].  Tensor sizes: [5, 1, 58, 0]
2025-03-05 15:23:04.153228 test begin: paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 59, 145].  Tensor sizes: [5, 1, 59, 0]
2025-03-05 15:23:04.153884 test begin: paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 59, 33].  Tensor sizes: [5, 1, 59, 0]
2025-03-05 15:23:04.154551 test begin: paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 59, 59].  Tensor sizes: [5, 1, 59, 0]
2025-03-05 15:23:04.155205 test begin: paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 59, 0],"bool"), list[5,8,59,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 59, 65].  Tensor sizes: [5, 1, 59, 0]
2025-03-05 15:23:04.155910 test begin: paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 6, 145].  Tensor sizes: [5, 1, 6, 0]
2025-03-05 15:23:04.156760 test begin: paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 6, 33].  Tensor sizes: [5, 1, 6, 0]
2025-03-05 15:23:04.157467 test begin: paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 6, 6].  Tensor sizes: [5, 1, 6, 0]
2025-03-05 15:23:04.158207 test begin: paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 6, 0],"bool"), list[5,8,6,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 6, 65].  Tensor sizes: [5, 1, 6, 0]
2025-03-05 15:23:04.158887 test begin: paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 60, 145].  Tensor sizes: [5, 1, 60, 0]
2025-03-05 15:23:04.159517 test begin: paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 60, 33].  Tensor sizes: [5, 1, 60, 0]
2025-03-05 15:23:04.160292 test begin: paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 60, 60].  Tensor sizes: [5, 1, 60, 0]
2025-03-05 15:23:04.161346 test begin: paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 60, 0],"bool"), list[5,8,60,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 60, 65].  Tensor sizes: [5, 1, 60, 0]
2025-03-05 15:23:04.162061 test begin: paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 61, 145].  Tensor sizes: [5, 1, 61, 0]
2025-03-05 15:23:04.162810 test begin: paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 61, 33].  Tensor sizes: [5, 1, 61, 0]
2025-03-05 15:23:04.164068 test begin: paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 61, 61].  Tensor sizes: [5, 1, 61, 0]
2025-03-05 15:23:04.164675 test begin: paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 61, 0],"bool"), list[5,8,61,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 61, 65].  Tensor sizes: [5, 1, 61, 0]
2025-03-05 15:23:04.165256 test begin: paddle.broadcast_to(Tensor([5, 1, 62, 0],"bool"), list[5,8,62,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 62, 0],"bool"), list[5,8,62,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 62, 145].  Tensor sizes: [5, 1, 62, 0]
2025-03-05 15:23:04.166033 test begin: paddle.broadcast_to(Tensor([5, 1, 62, 0],"bool"), list[5,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 62, 0],"bool"), list[5,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 62, 62].  Tensor sizes: [5, 1, 62, 0]
2025-03-05 15:23:04.167284 test begin: paddle.broadcast_to(Tensor([5, 1, 62, 0],"bool"), list[5,8,62,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 62, 0],"bool"), list[5,8,62,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 62, 65].  Tensor sizes: [5, 1, 62, 0]
2025-03-05 15:23:04.168062 test begin: paddle.broadcast_to(Tensor([5, 1, 63, 0],"bool"), list[5,8,63,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 63, 0],"bool"), list[5,8,63,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 63, 145].  Tensor sizes: [5, 1, 63, 0]
2025-03-05 15:23:04.168699 test begin: paddle.broadcast_to(Tensor([5, 1, 63, 0],"bool"), list[5,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 63, 0],"bool"), list[5,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 63, 63].  Tensor sizes: [5, 1, 63, 0]
2025-03-05 15:23:04.169367 test begin: paddle.broadcast_to(Tensor([5, 1, 63, 0],"bool"), list[5,8,63,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 63, 0],"bool"), list[5,8,63,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 63, 65].  Tensor sizes: [5, 1, 63, 0]
2025-03-05 15:23:04.170195 test begin: paddle.broadcast_to(Tensor([5, 1, 64, 0],"bool"), list[5,8,64,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 64, 0],"bool"), list[5,8,64,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 64, 145].  Tensor sizes: [5, 1, 64, 0]
2025-03-05 15:23:04.171077 test begin: paddle.broadcast_to(Tensor([5, 1, 64, 0],"bool"), list[5,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 64, 0],"bool"), list[5,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 64, 64].  Tensor sizes: [5, 1, 64, 0]
2025-03-05 15:23:04.171734 test begin: paddle.broadcast_to(Tensor([5, 1, 64, 0],"bool"), list[5,8,64,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 64, 0],"bool"), list[5,8,64,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 64, 65].  Tensor sizes: [5, 1, 64, 0]
2025-03-05 15:23:04.172461 test begin: paddle.broadcast_to(Tensor([5, 1, 65, 0],"bool"), list[5,8,65,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 65, 0],"bool"), list[5,8,65,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 65, 145].  Tensor sizes: [5, 1, 65, 0]
2025-03-05 15:23:04.173237 test begin: paddle.broadcast_to(Tensor([5, 1, 65, 0],"bool"), list[5,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 65, 0],"bool"), list[5,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 65, 65].  Tensor sizes: [5, 1, 65, 0]
2025-03-05 15:23:04.173915 test begin: paddle.broadcast_to(Tensor([5, 1, 66, 0],"bool"), list[5,8,66,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 66, 0],"bool"), list[5,8,66,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 66, 145].  Tensor sizes: [5, 1, 66, 0]
2025-03-05 15:23:04.174595 test begin: paddle.broadcast_to(Tensor([5, 1, 66, 0],"bool"), list[5,8,66,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 66, 0],"bool"), list[5,8,66,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 66, 65].  Tensor sizes: [5, 1, 66, 0]
2025-03-05 15:23:04.175167 test begin: paddle.broadcast_to(Tensor([5, 1, 66, 0],"bool"), list[5,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 66, 0],"bool"), list[5,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 66, 66].  Tensor sizes: [5, 1, 66, 0]
2025-03-05 15:23:04.175692 test begin: paddle.broadcast_to(Tensor([5, 1, 67, 0],"bool"), list[5,8,67,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 67, 0],"bool"), list[5,8,67,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 67, 145].  Tensor sizes: [5, 1, 67, 0]
2025-03-05 15:23:04.176208 test begin: paddle.broadcast_to(Tensor([5, 1, 67, 0],"bool"), list[5,8,67,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 67, 0],"bool"), list[5,8,67,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 67, 65].  Tensor sizes: [5, 1, 67, 0]
2025-03-05 15:23:04.176796 test begin: paddle.broadcast_to(Tensor([5, 1, 67, 0],"bool"), list[5,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 67, 0],"bool"), list[5,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 67, 67].  Tensor sizes: [5, 1, 67, 0]
2025-03-05 15:23:04.177315 test begin: paddle.broadcast_to(Tensor([5, 1, 68, 0],"bool"), list[5,8,68,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 68, 0],"bool"), list[5,8,68,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 68, 145].  Tensor sizes: [5, 1, 68, 0]
2025-03-05 15:23:04.178017 test begin: paddle.broadcast_to(Tensor([5, 1, 68, 0],"bool"), list[5,8,68,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 68, 0],"bool"), list[5,8,68,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 68, 65].  Tensor sizes: [5, 1, 68, 0]
2025-03-05 15:23:04.179034 test begin: paddle.broadcast_to(Tensor([5, 1, 68, 0],"bool"), list[5,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 68, 0],"bool"), list[5,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 68, 68].  Tensor sizes: [5, 1, 68, 0]
2025-03-05 15:23:04.179667 test begin: paddle.broadcast_to(Tensor([5, 1, 69, 0],"bool"), list[5,8,69,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 69, 0],"bool"), list[5,8,69,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 69, 145].  Tensor sizes: [5, 1, 69, 0]
2025-03-05 15:23:04.180687 test begin: paddle.broadcast_to(Tensor([5, 1, 69, 0],"bool"), list[5,8,69,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 69, 0],"bool"), list[5,8,69,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 69, 65].  Tensor sizes: [5, 1, 69, 0]
2025-03-05 15:23:04.181323 test begin: paddle.broadcast_to(Tensor([5, 1, 69, 0],"bool"), list[5,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 69, 0],"bool"), list[5,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 69, 69].  Tensor sizes: [5, 1, 69, 0]
2025-03-05 15:23:04.181956 test begin: paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 7, 145].  Tensor sizes: [5, 1, 7, 0]
2025-03-05 15:23:04.182572 test begin: paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 7, 33].  Tensor sizes: [5, 1, 7, 0]
2025-03-05 15:23:04.183124 test begin: paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 7, 65].  Tensor sizes: [5, 1, 7, 0]
2025-03-05 15:23:04.183709 test begin: paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 7, 0],"bool"), list[5,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 7, 7].  Tensor sizes: [5, 1, 7, 0]
2025-03-05 15:23:04.184651 test begin: paddle.broadcast_to(Tensor([5, 1, 70, 0],"bool"), list[5,8,70,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 70, 0],"bool"), list[5,8,70,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 70, 145].  Tensor sizes: [5, 1, 70, 0]
2025-03-05 15:23:04.185302 test begin: paddle.broadcast_to(Tensor([5, 1, 70, 0],"bool"), list[5,8,70,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 70, 0],"bool"), list[5,8,70,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 70, 65].  Tensor sizes: [5, 1, 70, 0]
2025-03-05 15:23:04.186406 test begin: paddle.broadcast_to(Tensor([5, 1, 70, 0],"bool"), list[5,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 70, 0],"bool"), list[5,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 70, 70].  Tensor sizes: [5, 1, 70, 0]
2025-03-05 15:23:04.187292 test begin: paddle.broadcast_to(Tensor([5, 1, 71, 0],"bool"), list[5,8,71,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 71, 0],"bool"), list[5,8,71,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 71, 145].  Tensor sizes: [5, 1, 71, 0]
2025-03-05 15:23:04.188168 test begin: paddle.broadcast_to(Tensor([5, 1, 71, 0],"bool"), list[5,8,71,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 71, 0],"bool"), list[5,8,71,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 71, 65].  Tensor sizes: [5, 1, 71, 0]
2025-03-05 15:23:04.188951 test begin: paddle.broadcast_to(Tensor([5, 1, 71, 0],"bool"), list[5,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 71, 0],"bool"), list[5,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 71, 71].  Tensor sizes: [5, 1, 71, 0]
2025-03-05 15:23:04.189785 test begin: paddle.broadcast_to(Tensor([5, 1, 72, 0],"bool"), list[5,8,72,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 72, 0],"bool"), list[5,8,72,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 72, 145].  Tensor sizes: [5, 1, 72, 0]
2025-03-05 15:23:04.190364 test begin: paddle.broadcast_to(Tensor([5, 1, 72, 0],"bool"), list[5,8,72,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 72, 0],"bool"), list[5,8,72,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 72, 65].  Tensor sizes: [5, 1, 72, 0]
2025-03-05 15:23:04.191149 test begin: paddle.broadcast_to(Tensor([5, 1, 72, 0],"bool"), list[5,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 72, 0],"bool"), list[5,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 72, 72].  Tensor sizes: [5, 1, 72, 0]
2025-03-05 15:23:04.191817 test begin: paddle.broadcast_to(Tensor([5, 1, 73, 0],"bool"), list[5,8,73,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 73, 0],"bool"), list[5,8,73,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 73, 145].  Tensor sizes: [5, 1, 73, 0]
2025-03-05 15:23:04.192438 test begin: paddle.broadcast_to(Tensor([5, 1, 73, 0],"bool"), list[5,8,73,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 73, 0],"bool"), list[5,8,73,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 73, 65].  Tensor sizes: [5, 1, 73, 0]
2025-03-05 15:23:04.193602 test begin: paddle.broadcast_to(Tensor([5, 1, 73, 0],"bool"), list[5,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 73, 0],"bool"), list[5,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 73, 73].  Tensor sizes: [5, 1, 73, 0]
2025-03-05 15:23:04.194393 test begin: paddle.broadcast_to(Tensor([5, 1, 74, 0],"bool"), list[5,8,74,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 74, 0],"bool"), list[5,8,74,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 74, 145].  Tensor sizes: [5, 1, 74, 0]
2025-03-05 15:23:04.195315 test begin: paddle.broadcast_to(Tensor([5, 1, 74, 0],"bool"), list[5,8,74,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 74, 0],"bool"), list[5,8,74,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 74, 65].  Tensor sizes: [5, 1, 74, 0]
2025-03-05 15:23:04.196202 test begin: paddle.broadcast_to(Tensor([5, 1, 74, 0],"bool"), list[5,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 74, 0],"bool"), list[5,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 74, 74].  Tensor sizes: [5, 1, 74, 0]
2025-03-05 15:23:04.196867 test begin: paddle.broadcast_to(Tensor([5, 1, 75, 0],"bool"), list[5,8,75,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 75, 0],"bool"), list[5,8,75,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 75, 145].  Tensor sizes: [5, 1, 75, 0]
2025-03-05 15:23:04.197507 test begin: paddle.broadcast_to(Tensor([5, 1, 75, 0],"bool"), list[5,8,75,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 75, 0],"bool"), list[5,8,75,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 75, 65].  Tensor sizes: [5, 1, 75, 0]
2025-03-05 15:23:04.198164 test begin: paddle.broadcast_to(Tensor([5, 1, 75, 0],"bool"), list[5,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 75, 0],"bool"), list[5,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 75, 75].  Tensor sizes: [5, 1, 75, 0]
2025-03-05 15:23:04.198995 test begin: paddle.broadcast_to(Tensor([5, 1, 76, 0],"bool"), list[5,8,76,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 76, 0],"bool"), list[5,8,76,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 76, 145].  Tensor sizes: [5, 1, 76, 0]
2025-03-05 15:23:04.199727 test begin: paddle.broadcast_to(Tensor([5, 1, 76, 0],"bool"), list[5,8,76,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 76, 0],"bool"), list[5,8,76,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 76, 65].  Tensor sizes: [5, 1, 76, 0]
2025-03-05 15:23:04.200354 test begin: paddle.broadcast_to(Tensor([5, 1, 76, 0],"bool"), list[5,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 76, 0],"bool"), list[5,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 76, 76].  Tensor sizes: [5, 1, 76, 0]
2025-03-05 15:23:04.200939 test begin: paddle.broadcast_to(Tensor([5, 1, 77, 0],"bool"), list[5,8,77,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 77, 0],"bool"), list[5,8,77,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 77, 145].  Tensor sizes: [5, 1, 77, 0]
2025-03-05 15:23:04.201591 test begin: paddle.broadcast_to(Tensor([5, 1, 77, 0],"bool"), list[5,8,77,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 77, 0],"bool"), list[5,8,77,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 77, 65].  Tensor sizes: [5, 1, 77, 0]
2025-03-05 15:23:04.202430 test begin: paddle.broadcast_to(Tensor([5, 1, 77, 0],"bool"), list[5,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 77, 0],"bool"), list[5,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 77, 77].  Tensor sizes: [5, 1, 77, 0]
2025-03-05 15:23:04.203070 test begin: paddle.broadcast_to(Tensor([5, 1, 78, 0],"bool"), list[5,8,78,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 78, 0],"bool"), list[5,8,78,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 78, 145].  Tensor sizes: [5, 1, 78, 0]
2025-03-05 15:23:04.204233 test begin: paddle.broadcast_to(Tensor([5, 1, 78, 0],"bool"), list[5,8,78,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 78, 0],"bool"), list[5,8,78,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 78, 65].  Tensor sizes: [5, 1, 78, 0]
2025-03-05 15:23:04.204865 test begin: paddle.broadcast_to(Tensor([5, 1, 78, 0],"bool"), list[5,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 78, 0],"bool"), list[5,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 78, 78].  Tensor sizes: [5, 1, 78, 0]
2025-03-05 15:23:04.205518 test begin: paddle.broadcast_to(Tensor([5, 1, 79, 0],"bool"), list[5,8,79,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 79, 0],"bool"), list[5,8,79,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 79, 145].  Tensor sizes: [5, 1, 79, 0]
2025-03-05 15:23:04.206130 test begin: paddle.broadcast_to(Tensor([5, 1, 79, 0],"bool"), list[5,8,79,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 79, 0],"bool"), list[5,8,79,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 79, 65].  Tensor sizes: [5, 1, 79, 0]
2025-03-05 15:23:04.206878 test begin: paddle.broadcast_to(Tensor([5, 1, 79, 0],"bool"), list[5,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 79, 0],"bool"), list[5,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 79, 79].  Tensor sizes: [5, 1, 79, 0]
2025-03-05 15:23:04.207668 test begin: paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 8, 145].  Tensor sizes: [5, 1, 8, 0]
2025-03-05 15:23:04.209056 test begin: paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 8, 33].  Tensor sizes: [5, 1, 8, 0]
2025-03-05 15:23:04.209805 test begin: paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 8, 65].  Tensor sizes: [5, 1, 8, 0]
2025-03-05 15:23:04.210674 test begin: paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 8, 0],"bool"), list[5,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 8, 8].  Tensor sizes: [5, 1, 8, 0]
2025-03-05 15:23:04.211336 test begin: paddle.broadcast_to(Tensor([5, 1, 80, 0],"bool"), list[5,8,80,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 80, 0],"bool"), list[5,8,80,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 80, 145].  Tensor sizes: [5, 1, 80, 0]
2025-03-05 15:23:04.211978 test begin: paddle.broadcast_to(Tensor([5, 1, 80, 0],"bool"), list[5,8,80,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 80, 0],"bool"), list[5,8,80,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 80, 65].  Tensor sizes: [5, 1, 80, 0]
2025-03-05 15:23:04.212511 test begin: paddle.broadcast_to(Tensor([5, 1, 80, 0],"bool"), list[5,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 80, 0],"bool"), list[5,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 80, 80].  Tensor sizes: [5, 1, 80, 0]
2025-03-05 15:23:04.213047 test begin: paddle.broadcast_to(Tensor([5, 1, 81, 0],"bool"), list[5,8,81,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 81, 0],"bool"), list[5,8,81,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 81, 145].  Tensor sizes: [5, 1, 81, 0]
2025-03-05 15:23:04.213567 test begin: paddle.broadcast_to(Tensor([5, 1, 81, 0],"bool"), list[5,8,81,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 81, 0],"bool"), list[5,8,81,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 81, 65].  Tensor sizes: [5, 1, 81, 0]
2025-03-05 15:23:04.214222 test begin: paddle.broadcast_to(Tensor([5, 1, 81, 0],"bool"), list[5,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 81, 0],"bool"), list[5,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 81, 81].  Tensor sizes: [5, 1, 81, 0]
2025-03-05 15:23:04.214972 test begin: paddle.broadcast_to(Tensor([5, 1, 82, 0],"bool"), list[5,8,82,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 82, 0],"bool"), list[5,8,82,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 82, 145].  Tensor sizes: [5, 1, 82, 0]
2025-03-05 15:23:04.215637 test begin: paddle.broadcast_to(Tensor([5, 1, 82, 0],"bool"), list[5,8,82,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 82, 0],"bool"), list[5,8,82,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 82, 65].  Tensor sizes: [5, 1, 82, 0]
2025-03-05 15:23:04.216239 test begin: paddle.broadcast_to(Tensor([5, 1, 82, 0],"bool"), list[5,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 82, 0],"bool"), list[5,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 82, 82].  Tensor sizes: [5, 1, 82, 0]
2025-03-05 15:23:04.216877 test begin: paddle.broadcast_to(Tensor([5, 1, 83, 0],"bool"), list[5,8,83,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 83, 0],"bool"), list[5,8,83,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 83, 145].  Tensor sizes: [5, 1, 83, 0]
2025-03-05 15:23:04.217691 test begin: paddle.broadcast_to(Tensor([5, 1, 83, 0],"bool"), list[5,8,83,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 83, 0],"bool"), list[5,8,83,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 83, 65].  Tensor sizes: [5, 1, 83, 0]
2025-03-05 15:23:04.218403 test begin: paddle.broadcast_to(Tensor([5, 1, 83, 0],"bool"), list[5,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 83, 0],"bool"), list[5,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 83, 83].  Tensor sizes: [5, 1, 83, 0]
2025-03-05 15:23:04.219306 test begin: paddle.broadcast_to(Tensor([5, 1, 84, 0],"bool"), list[5,8,84,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 84, 0],"bool"), list[5,8,84,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 84, 145].  Tensor sizes: [5, 1, 84, 0]
2025-03-05 15:23:04.220012 test begin: paddle.broadcast_to(Tensor([5, 1, 84, 0],"bool"), list[5,8,84,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 84, 0],"bool"), list[5,8,84,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 84, 65].  Tensor sizes: [5, 1, 84, 0]
2025-03-05 15:23:04.220928 test begin: paddle.broadcast_to(Tensor([5, 1, 84, 0],"bool"), list[5,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 84, 0],"bool"), list[5,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 84, 84].  Tensor sizes: [5, 1, 84, 0]
2025-03-05 15:23:04.221635 test begin: paddle.broadcast_to(Tensor([5, 1, 85, 0],"bool"), list[5,8,85,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 85, 0],"bool"), list[5,8,85,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 85, 145].  Tensor sizes: [5, 1, 85, 0]
2025-03-05 15:23:04.222333 test begin: paddle.broadcast_to(Tensor([5, 1, 85, 0],"bool"), list[5,8,85,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 85, 0],"bool"), list[5,8,85,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 85, 65].  Tensor sizes: [5, 1, 85, 0]
2025-03-05 15:23:04.223041 test begin: paddle.broadcast_to(Tensor([5, 1, 85, 0],"bool"), list[5,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 85, 0],"bool"), list[5,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 85, 85].  Tensor sizes: [5, 1, 85, 0]
2025-03-05 15:23:04.223704 test begin: paddle.broadcast_to(Tensor([5, 1, 86, 0],"bool"), list[5,8,86,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 86, 0],"bool"), list[5,8,86,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 86, 145].  Tensor sizes: [5, 1, 86, 0]
2025-03-05 15:23:04.224329 test begin: paddle.broadcast_to(Tensor([5, 1, 86, 0],"bool"), list[5,8,86,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 86, 0],"bool"), list[5,8,86,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 86, 65].  Tensor sizes: [5, 1, 86, 0]
2025-03-05 15:23:04.224976 test begin: paddle.broadcast_to(Tensor([5, 1, 86, 0],"bool"), list[5,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 86, 0],"bool"), list[5,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 86, 86].  Tensor sizes: [5, 1, 86, 0]
2025-03-05 15:23:04.225629 test begin: paddle.broadcast_to(Tensor([5, 1, 87, 0],"bool"), list[5,8,87,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 87, 0],"bool"), list[5,8,87,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 87, 145].  Tensor sizes: [5, 1, 87, 0]
2025-03-05 15:23:04.226187 test begin: paddle.broadcast_to(Tensor([5, 1, 87, 0],"bool"), list[5,8,87,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 87, 0],"bool"), list[5,8,87,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 87, 65].  Tensor sizes: [5, 1, 87, 0]
2025-03-05 15:23:04.226735 test begin: paddle.broadcast_to(Tensor([5, 1, 87, 0],"bool"), list[5,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 87, 0],"bool"), list[5,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 87, 87].  Tensor sizes: [5, 1, 87, 0]
2025-03-05 15:23:04.227504 test begin: paddle.broadcast_to(Tensor([5, 1, 88, 0],"bool"), list[5,8,88,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 88, 0],"bool"), list[5,8,88,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 88, 145].  Tensor sizes: [5, 1, 88, 0]
2025-03-05 15:23:04.228394 test begin: paddle.broadcast_to(Tensor([5, 1, 88, 0],"bool"), list[5,8,88,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 88, 0],"bool"), list[5,8,88,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 88, 65].  Tensor sizes: [5, 1, 88, 0]
2025-03-05 15:23:04.229039 test begin: paddle.broadcast_to(Tensor([5, 1, 88, 0],"bool"), list[5,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 88, 0],"bool"), list[5,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 88, 88].  Tensor sizes: [5, 1, 88, 0]
2025-03-05 15:23:04.229657 test begin: paddle.broadcast_to(Tensor([5, 1, 89, 0],"bool"), list[5,8,89,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 89, 0],"bool"), list[5,8,89,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 89, 145].  Tensor sizes: [5, 1, 89, 0]
2025-03-05 15:23:04.230575 test begin: paddle.broadcast_to(Tensor([5, 1, 89, 0],"bool"), list[5,8,89,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 89, 0],"bool"), list[5,8,89,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 89, 65].  Tensor sizes: [5, 1, 89, 0]
2025-03-05 15:23:04.231116 test begin: paddle.broadcast_to(Tensor([5, 1, 89, 0],"bool"), list[5,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 89, 0],"bool"), list[5,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 89, 89].  Tensor sizes: [5, 1, 89, 0]
2025-03-05 15:23:04.231922 test begin: paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 9, 145].  Tensor sizes: [5, 1, 9, 0]
2025-03-05 15:23:04.232634 test begin: paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,33,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 9, 33].  Tensor sizes: [5, 1, 9, 0]
2025-03-05 15:23:04.233250 test begin: paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 9, 65].  Tensor sizes: [5, 1, 9, 0]
2025-03-05 15:23:04.233841 test begin: paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 9, 0],"bool"), list[5,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 9, 9].  Tensor sizes: [5, 1, 9, 0]
2025-03-05 15:23:04.234630 test begin: paddle.broadcast_to(Tensor([5, 1, 90, 0],"bool"), list[5,8,90,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 90, 0],"bool"), list[5,8,90,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 90, 145].  Tensor sizes: [5, 1, 90, 0]
2025-03-05 15:23:04.235374 test begin: paddle.broadcast_to(Tensor([5, 1, 90, 0],"bool"), list[5,8,90,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 90, 0],"bool"), list[5,8,90,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 90, 65].  Tensor sizes: [5, 1, 90, 0]
2025-03-05 15:23:04.236234 test begin: paddle.broadcast_to(Tensor([5, 1, 90, 0],"bool"), list[5,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 90, 0],"bool"), list[5,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 90, 90].  Tensor sizes: [5, 1, 90, 0]
2025-03-05 15:23:04.237070 test begin: paddle.broadcast_to(Tensor([5, 1, 91, 0],"bool"), list[5,8,91,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 91, 0],"bool"), list[5,8,91,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 91, 145].  Tensor sizes: [5, 1, 91, 0]
2025-03-05 15:23:04.237912 test begin: paddle.broadcast_to(Tensor([5, 1, 91, 0],"bool"), list[5,8,91,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 91, 0],"bool"), list[5,8,91,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 91, 65].  Tensor sizes: [5, 1, 91, 0]
2025-03-05 15:23:04.238467 test begin: paddle.broadcast_to(Tensor([5, 1, 91, 0],"bool"), list[5,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 91, 0],"bool"), list[5,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 91, 91].  Tensor sizes: [5, 1, 91, 0]
2025-03-05 15:23:04.239506 test begin: paddle.broadcast_to(Tensor([5, 1, 92, 0],"bool"), list[5,8,92,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 92, 0],"bool"), list[5,8,92,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 92, 145].  Tensor sizes: [5, 1, 92, 0]
2025-03-05 15:23:04.240417 test begin: paddle.broadcast_to(Tensor([5, 1, 92, 0],"bool"), list[5,8,92,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 92, 0],"bool"), list[5,8,92,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 92, 65].  Tensor sizes: [5, 1, 92, 0]
2025-03-05 15:23:04.241082 test begin: paddle.broadcast_to(Tensor([5, 1, 92, 0],"bool"), list[5,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 92, 0],"bool"), list[5,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 92, 92].  Tensor sizes: [5, 1, 92, 0]
2025-03-05 15:23:04.241658 test begin: paddle.broadcast_to(Tensor([5, 1, 93, 0],"bool"), list[5,8,93,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 93, 0],"bool"), list[5,8,93,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 93, 145].  Tensor sizes: [5, 1, 93, 0]
2025-03-05 15:23:04.242326 test begin: paddle.broadcast_to(Tensor([5, 1, 93, 0],"bool"), list[5,8,93,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 93, 0],"bool"), list[5,8,93,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 93, 65].  Tensor sizes: [5, 1, 93, 0]
2025-03-05 15:23:04.243100 test begin: paddle.broadcast_to(Tensor([5, 1, 93, 0],"bool"), list[5,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 93, 0],"bool"), list[5,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 93, 93].  Tensor sizes: [5, 1, 93, 0]
2025-03-05 15:23:04.244107 test begin: paddle.broadcast_to(Tensor([5, 1, 94, 0],"bool"), list[5,8,94,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 94, 0],"bool"), list[5,8,94,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 94, 145].  Tensor sizes: [5, 1, 94, 0]
2025-03-05 15:23:04.244969 test begin: paddle.broadcast_to(Tensor([5, 1, 94, 0],"bool"), list[5,8,94,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 94, 0],"bool"), list[5,8,94,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 94, 65].  Tensor sizes: [5, 1, 94, 0]
2025-03-05 15:23:04.245623 test begin: paddle.broadcast_to(Tensor([5, 1, 94, 0],"bool"), list[5,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 94, 0],"bool"), list[5,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 94, 94].  Tensor sizes: [5, 1, 94, 0]
2025-03-05 15:23:04.246234 test begin: paddle.broadcast_to(Tensor([5, 1, 95, 0],"bool"), list[5,8,95,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 95, 0],"bool"), list[5,8,95,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 95, 145].  Tensor sizes: [5, 1, 95, 0]
2025-03-05 15:23:04.246894 test begin: paddle.broadcast_to(Tensor([5, 1, 95, 0],"bool"), list[5,8,95,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 95, 0],"bool"), list[5,8,95,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 95, 65].  Tensor sizes: [5, 1, 95, 0]
2025-03-05 15:23:04.247739 test begin: paddle.broadcast_to(Tensor([5, 1, 95, 0],"bool"), list[5,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 95, 0],"bool"), list[5,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 95, 95].  Tensor sizes: [5, 1, 95, 0]
2025-03-05 15:23:04.248467 test begin: paddle.broadcast_to(Tensor([5, 1, 96, 0],"bool"), list[5,8,96,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 96, 0],"bool"), list[5,8,96,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 96, 145].  Tensor sizes: [5, 1, 96, 0]
2025-03-05 15:23:04.249191 test begin: paddle.broadcast_to(Tensor([5, 1, 96, 0],"bool"), list[5,8,96,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 96, 0],"bool"), list[5,8,96,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 96, 65].  Tensor sizes: [5, 1, 96, 0]
2025-03-05 15:23:04.249789 test begin: paddle.broadcast_to(Tensor([5, 1, 96, 0],"bool"), list[5,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 96, 0],"bool"), list[5,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 96, 96].  Tensor sizes: [5, 1, 96, 0]
2025-03-05 15:23:04.250464 test begin: paddle.broadcast_to(Tensor([5, 1, 97, 0],"bool"), list[5,8,97,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 97, 0],"bool"), list[5,8,97,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 97, 145].  Tensor sizes: [5, 1, 97, 0]
2025-03-05 15:23:04.251156 test begin: paddle.broadcast_to(Tensor([5, 1, 97, 0],"bool"), list[5,8,97,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 97, 0],"bool"), list[5,8,97,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 97, 65].  Tensor sizes: [5, 1, 97, 0]
2025-03-05 15:23:04.251812 test begin: paddle.broadcast_to(Tensor([5, 1, 97, 0],"bool"), list[5,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 97, 0],"bool"), list[5,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 97, 97].  Tensor sizes: [5, 1, 97, 0]
2025-03-05 15:23:04.252422 test begin: paddle.broadcast_to(Tensor([5, 1, 98, 0],"bool"), list[5,8,98,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 98, 0],"bool"), list[5,8,98,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 98, 145].  Tensor sizes: [5, 1, 98, 0]
2025-03-05 15:23:04.253115 test begin: paddle.broadcast_to(Tensor([5, 1, 98, 0],"bool"), list[5,8,98,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 98, 0],"bool"), list[5,8,98,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 98, 65].  Tensor sizes: [5, 1, 98, 0]
2025-03-05 15:23:04.253766 test begin: paddle.broadcast_to(Tensor([5, 1, 98, 0],"bool"), list[5,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 98, 0],"bool"), list[5,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 98, 98].  Tensor sizes: [5, 1, 98, 0]
2025-03-05 15:23:04.254436 test begin: paddle.broadcast_to(Tensor([5, 1, 99, 0],"bool"), list[5,8,99,145,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 99, 0],"bool"), list[5,8,99,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 99, 145].  Tensor sizes: [5, 1, 99, 0]
2025-03-05 15:23:04.255168 test begin: paddle.broadcast_to(Tensor([5, 1, 99, 0],"bool"), list[5,8,99,65,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 99, 0],"bool"), list[5,8,99,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 99, 65].  Tensor sizes: [5, 1, 99, 0]
2025-03-05 15:23:04.255849 test begin: paddle.broadcast_to(Tensor([5, 1, 99, 0],"bool"), list[5,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([5, 1, 99, 0],"bool"), list[5,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 8, 99, 99].  Tensor sizes: [5, 1, 99, 0]
2025-03-05 15:23:04.257122 test begin: paddle.broadcast_to(Tensor([5, 17, 0, 6],"float64"), list[5,17,0,6,], )

[Pass] paddle.broadcast_to(Tensor([5, 17, 0, 6],"float64"), list[5,17,0,6,], )
2025-03-05 15:23:04.308477 test begin: paddle.broadcast_to(Tensor([5, 17, 0],"float64"), list[0,5,17,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 17, 0],"float64"), list[0,5,17,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [0, 5, 17, 6].  Tensor sizes: [5, 17, 0]
2025-03-05 15:23:04.309605 test begin: paddle.broadcast_to(Tensor([5, 17, 0],"float64"), list[5,17,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 17, 0],"float64"), list[5,17,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 17, 6].  Tensor sizes: [5, 17, 0]
2025-03-05 15:23:04.310410 test begin: paddle.broadcast_to(Tensor([5, 17, 1, 0],"float64"), list[5,17,0,6,], )

[torch error] paddle.broadcast_to(Tensor([5, 17, 1, 0],"float64"), list[5,17,0,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [5, 17, 0, 6].  Tensor sizes: [5, 17, 1, 0]
2025-03-05 15:23:04.311129 test begin: paddle.broadcast_to(Tensor([5, 3, 0],"float64"), tuple(5,3,4,), )

[torch error] paddle.broadcast_to(Tensor([5, 3, 0],"float64"), tuple(5,3,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 3, 4].  Tensor sizes: [5, 3, 0]
2025-03-05 15:23:04.312227 test begin: paddle.broadcast_to(Tensor([5, 5, 0],"float16"), tuple(5,5,5,), )

[torch error] paddle.broadcast_to(Tensor([5, 5, 0],"float16"), tuple(5,5,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 5, 5].  Tensor sizes: [5, 5, 0]
2025-03-05 15:23:04.312902 test begin: paddle.broadcast_to(Tensor([5, 5, 0],"float32"), tuple(5,5,5,), )

[torch error] paddle.broadcast_to(Tensor([5, 5, 0],"float32"), tuple(5,5,5,), ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 5, 5].  Tensor sizes: [5, 5, 0]
2025-03-05 15:23:04.313429 test begin: paddle.broadcast_to(Tensor([5, 5, 0],"int32"), tuple(5,5,1,), )

[torch error] paddle.broadcast_to(Tensor([5, 5, 0],"int32"), tuple(5,5,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 5, 1].  Tensor sizes: [5, 5, 0]
2025-03-05 15:23:04.314106 test begin: paddle.broadcast_to(Tensor([5, 6, 0],"float32"), tuple(5,6,7,), )

[torch error] paddle.broadcast_to(Tensor([5, 6, 0],"float32"), tuple(5,6,7,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 6, 7].  Tensor sizes: [5, 6, 0]
2025-03-05 15:23:04.314760 test begin: paddle.broadcast_to(Tensor([5, 6, 0],"int64"), tuple(5,6,1,), )

[torch error] paddle.broadcast_to(Tensor([5, 6, 0],"int64"), tuple(5,6,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [5, 6, 1].  Tensor sizes: [5, 6, 0]
2025-03-05 15:23:04.315325 test begin: paddle.broadcast_to(Tensor([52, 0, 7, 14],"float32"), tuple(52,4,7,14,), )

[torch error] paddle.broadcast_to(Tensor([52, 0, 7, 14],"float32"), tuple(52,4,7,14,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [52, 4, 7, 14].  Tensor sizes: [52, 0, 7, 14]
2025-03-05 15:23:04.316056 test begin: paddle.broadcast_to(Tensor([52, 0, 7, 7],"bool"), list[52,4,7,7,], )

[torch error] paddle.broadcast_to(Tensor([52, 0, 7, 7],"bool"), list[52,4,7,7,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [52, 4, 7, 7].  Tensor sizes: [52, 0, 7, 7]
2025-03-05 15:23:04.316862 test begin: paddle.broadcast_to(Tensor([52, 0, 7, 7],"int64"), tuple(52,4,7,7,), )

[torch error] paddle.broadcast_to(Tensor([52, 0, 7, 7],"int64"), tuple(52,4,7,7,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [52, 4, 7, 7].  Tensor sizes: [52, 0, 7, 7]
2025-03-05 15:23:04.317718 test begin: paddle.broadcast_to(Tensor([52, 1, 0, 7],"bool"), list[52,4,7,7,], )

[torch error] paddle.broadcast_to(Tensor([52, 1, 0, 7],"bool"), list[52,4,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [52, 4, 7, 7].  Tensor sizes: [52, 1, 0, 7]
2025-03-05 15:23:04.318497 test begin: paddle.broadcast_to(Tensor([52, 1, 7, 0],"bool"), list[52,4,7,7,], )

[torch error] paddle.broadcast_to(Tensor([52, 1, 7, 0],"bool"), list[52,4,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [52, 4, 7, 7].  Tensor sizes: [52, 1, 7, 0]
2025-03-05 15:23:04.319218 test begin: paddle.broadcast_to(Tensor([52, 4, 0, 14],"float32"), tuple(52,4,7,14,), )

[torch error] paddle.broadcast_to(Tensor([52, 4, 0, 14],"float32"), tuple(52,4,7,14,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [52, 4, 7, 14].  Tensor sizes: [52, 4, 0, 14]
2025-03-05 15:23:04.319881 test begin: paddle.broadcast_to(Tensor([52, 4, 0, 7],"int64"), tuple(52,4,7,7,), )

[torch error] paddle.broadcast_to(Tensor([52, 4, 0, 7],"int64"), tuple(52,4,7,7,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [52, 4, 7, 7].  Tensor sizes: [52, 4, 0, 7]
2025-03-05 15:23:04.320957 test begin: paddle.broadcast_to(Tensor([52, 4, 7, 0],"float32"), tuple(52,4,7,14,), )

[torch error] paddle.broadcast_to(Tensor([52, 4, 7, 0],"float32"), tuple(52,4,7,14,), ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [52, 4, 7, 14].  Tensor sizes: [52, 4, 7, 0]
2025-03-05 15:23:04.321779 test begin: paddle.broadcast_to(Tensor([52, 4, 7, 0],"int64"), tuple(52,4,7,7,), )

[torch error] paddle.broadcast_to(Tensor([52, 4, 7, 0],"int64"), tuple(52,4,7,7,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [52, 4, 7, 7].  Tensor sizes: [52, 4, 7, 0]
2025-03-05 15:23:04.322514 test begin: paddle.broadcast_to(Tensor([52640, 0],"bool"), list[52640,2,], )

[torch error] paddle.broadcast_to(Tensor([52640, 0],"bool"), list[52640,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [52640, 2].  Tensor sizes: [52640, 0]
2025-03-05 15:23:04.323397 test begin: paddle.broadcast_to(Tensor([6, 0, 1, 1],"bool"), list[6,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 1, 1],"bool"), list[6,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 1, 1].  Tensor sizes: [6, 0, 1, 1]
2025-03-05 15:23:04.324777 test begin: paddle.broadcast_to(Tensor([6, 0, 1, 25],"bool"), list[6,8,1,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 1, 25],"bool"), list[6,8,1,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 1, 25].  Tensor sizes: [6, 0, 1, 25]
2025-03-05 15:23:04.325550 test begin: paddle.broadcast_to(Tensor([6, 0, 1, 45],"bool"), list[6,8,1,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 1, 45],"bool"), list[6,8,1,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 1, 45].  Tensor sizes: [6, 0, 1, 45]
2025-03-05 15:23:04.326430 test begin: paddle.broadcast_to(Tensor([6, 0, 1, 57],"bool"), list[6,8,1,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 1, 57],"bool"), list[6,8,1,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 1, 57].  Tensor sizes: [6, 0, 1, 57]
2025-03-05 15:23:04.327095 test begin: paddle.broadcast_to(Tensor([6, 0, 1, 97],"bool"), list[6,8,1,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 1, 97],"bool"), list[6,8,1,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 1, 97].  Tensor sizes: [6, 0, 1, 97]
2025-03-05 15:23:04.327681 test begin: paddle.broadcast_to(Tensor([6, 0, 10, 10],"bool"), list[6,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 10, 10],"bool"), list[6,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 10, 10].  Tensor sizes: [6, 0, 10, 10]
2025-03-05 15:23:04.328226 test begin: paddle.broadcast_to(Tensor([6, 0, 10, 25],"bool"), list[6,8,10,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 10, 25],"bool"), list[6,8,10,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 10, 25].  Tensor sizes: [6, 0, 10, 25]
2025-03-05 15:23:04.328825 test begin: paddle.broadcast_to(Tensor([6, 0, 10, 45],"bool"), list[6,8,10,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 10, 45],"bool"), list[6,8,10,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 10, 45].  Tensor sizes: [6, 0, 10, 45]
2025-03-05 15:23:04.329525 test begin: paddle.broadcast_to(Tensor([6, 0, 10, 57],"bool"), list[6,8,10,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 10, 57],"bool"), list[6,8,10,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 10, 57].  Tensor sizes: [6, 0, 10, 57]
2025-03-05 15:23:04.330231 test begin: paddle.broadcast_to(Tensor([6, 0, 10, 97],"bool"), list[6,8,10,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 10, 97],"bool"), list[6,8,10,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 10, 97].  Tensor sizes: [6, 0, 10, 97]
2025-03-05 15:23:04.331694 test begin: paddle.broadcast_to(Tensor([6, 0, 100, 100],"bool"), list[6,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 100, 100],"bool"), list[6,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 100, 100].  Tensor sizes: [6, 0, 100, 100]
2025-03-05 15:23:04.332771 test begin: paddle.broadcast_to(Tensor([6, 0, 100, 45],"bool"), list[6,8,100,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 100, 45],"bool"), list[6,8,100,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 100, 45].  Tensor sizes: [6, 0, 100, 45]
2025-03-05 15:23:04.333975 test begin: paddle.broadcast_to(Tensor([6, 0, 100, 57],"bool"), list[6,8,100,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 100, 57],"bool"), list[6,8,100,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 100, 57].  Tensor sizes: [6, 0, 100, 57]
2025-03-05 15:23:04.334733 test begin: paddle.broadcast_to(Tensor([6, 0, 100, 97],"bool"), list[6,8,100,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 100, 97],"bool"), list[6,8,100,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 100, 97].  Tensor sizes: [6, 0, 100, 97]
2025-03-05 15:23:04.335354 test begin: paddle.broadcast_to(Tensor([6, 0, 101, 101],"bool"), list[6,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 101, 101],"bool"), list[6,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 101, 101].  Tensor sizes: [6, 0, 101, 101]
2025-03-05 15:23:04.335907 test begin: paddle.broadcast_to(Tensor([6, 0, 101, 45],"bool"), list[6,8,101,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 101, 45],"bool"), list[6,8,101,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 101, 45].  Tensor sizes: [6, 0, 101, 45]
2025-03-05 15:23:04.337121 test begin: paddle.broadcast_to(Tensor([6, 0, 101, 57],"bool"), list[6,8,101,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 101, 57],"bool"), list[6,8,101,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 101, 57].  Tensor sizes: [6, 0, 101, 57]
2025-03-05 15:23:04.337819 test begin: paddle.broadcast_to(Tensor([6, 0, 101, 97],"bool"), list[6,8,101,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 101, 97],"bool"), list[6,8,101,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 101, 97].  Tensor sizes: [6, 0, 101, 97]
2025-03-05 15:23:04.338535 test begin: paddle.broadcast_to(Tensor([6, 0, 102, 102],"bool"), list[6,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 102, 102],"bool"), list[6,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 102, 102].  Tensor sizes: [6, 0, 102, 102]
2025-03-05 15:23:04.339427 test begin: paddle.broadcast_to(Tensor([6, 0, 102, 45],"bool"), list[6,8,102,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 102, 45],"bool"), list[6,8,102,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 102, 45].  Tensor sizes: [6, 0, 102, 45]
2025-03-05 15:23:04.340275 test begin: paddle.broadcast_to(Tensor([6, 0, 102, 57],"bool"), list[6,8,102,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 102, 57],"bool"), list[6,8,102,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 102, 57].  Tensor sizes: [6, 0, 102, 57]
2025-03-05 15:23:04.340945 test begin: paddle.broadcast_to(Tensor([6, 0, 102, 97],"bool"), list[6,8,102,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 102, 97],"bool"), list[6,8,102,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 102, 97].  Tensor sizes: [6, 0, 102, 97]
2025-03-05 15:23:04.341624 test begin: paddle.broadcast_to(Tensor([6, 0, 103, 103],"bool"), list[6,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 103, 103],"bool"), list[6,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 103, 103].  Tensor sizes: [6, 0, 103, 103]
2025-03-05 15:23:04.342362 test begin: paddle.broadcast_to(Tensor([6, 0, 103, 45],"bool"), list[6,8,103,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 103, 45],"bool"), list[6,8,103,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 103, 45].  Tensor sizes: [6, 0, 103, 45]
2025-03-05 15:23:04.343599 test begin: paddle.broadcast_to(Tensor([6, 0, 103, 57],"bool"), list[6,8,103,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 103, 57],"bool"), list[6,8,103,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 103, 57].  Tensor sizes: [6, 0, 103, 57]
2025-03-05 15:23:04.344356 test begin: paddle.broadcast_to(Tensor([6, 0, 103, 97],"bool"), list[6,8,103,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 103, 97],"bool"), list[6,8,103,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 103, 97].  Tensor sizes: [6, 0, 103, 97]
2025-03-05 15:23:04.345026 test begin: paddle.broadcast_to(Tensor([6, 0, 104, 104],"bool"), list[6,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 104, 104],"bool"), list[6,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 104, 104].  Tensor sizes: [6, 0, 104, 104]
2025-03-05 15:23:04.345743 test begin: paddle.broadcast_to(Tensor([6, 0, 104, 45],"bool"), list[6,8,104,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 104, 45],"bool"), list[6,8,104,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 104, 45].  Tensor sizes: [6, 0, 104, 45]
2025-03-05 15:23:04.346479 test begin: paddle.broadcast_to(Tensor([6, 0, 104, 57],"bool"), list[6,8,104,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 104, 57],"bool"), list[6,8,104,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 104, 57].  Tensor sizes: [6, 0, 104, 57]
2025-03-05 15:23:04.347268 test begin: paddle.broadcast_to(Tensor([6, 0, 104, 97],"bool"), list[6,8,104,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 104, 97],"bool"), list[6,8,104,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 104, 97].  Tensor sizes: [6, 0, 104, 97]
2025-03-05 15:23:04.348033 test begin: paddle.broadcast_to(Tensor([6, 0, 105, 105],"bool"), list[6,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 105, 105],"bool"), list[6,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 105, 105].  Tensor sizes: [6, 0, 105, 105]
2025-03-05 15:23:04.348839 test begin: paddle.broadcast_to(Tensor([6, 0, 105, 45],"bool"), list[6,8,105,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 105, 45],"bool"), list[6,8,105,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 105, 45].  Tensor sizes: [6, 0, 105, 45]
2025-03-05 15:23:04.349490 test begin: paddle.broadcast_to(Tensor([6, 0, 105, 57],"bool"), list[6,8,105,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 105, 57],"bool"), list[6,8,105,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 105, 57].  Tensor sizes: [6, 0, 105, 57]
2025-03-05 15:23:04.350152 test begin: paddle.broadcast_to(Tensor([6, 0, 105, 97],"bool"), list[6,8,105,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 105, 97],"bool"), list[6,8,105,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 105, 97].  Tensor sizes: [6, 0, 105, 97]
2025-03-05 15:23:04.350855 test begin: paddle.broadcast_to(Tensor([6, 0, 106, 106],"bool"), list[6,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 106, 106],"bool"), list[6,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 106, 106].  Tensor sizes: [6, 0, 106, 106]
2025-03-05 15:23:04.351693 test begin: paddle.broadcast_to(Tensor([6, 0, 106, 45],"bool"), list[6,8,106,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 106, 45],"bool"), list[6,8,106,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 106, 45].  Tensor sizes: [6, 0, 106, 45]
2025-03-05 15:23:04.352370 test begin: paddle.broadcast_to(Tensor([6, 0, 106, 57],"bool"), list[6,8,106,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 106, 57],"bool"), list[6,8,106,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 106, 57].  Tensor sizes: [6, 0, 106, 57]
2025-03-05 15:23:04.353078 test begin: paddle.broadcast_to(Tensor([6, 0, 106, 97],"bool"), list[6,8,106,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 106, 97],"bool"), list[6,8,106,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 106, 97].  Tensor sizes: [6, 0, 106, 97]
2025-03-05 15:23:04.354324 test begin: paddle.broadcast_to(Tensor([6, 0, 107, 107],"bool"), list[6,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 107, 107],"bool"), list[6,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 107, 107].  Tensor sizes: [6, 0, 107, 107]
2025-03-05 15:23:04.354930 test begin: paddle.broadcast_to(Tensor([6, 0, 107, 45],"bool"), list[6,8,107,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 107, 45],"bool"), list[6,8,107,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 107, 45].  Tensor sizes: [6, 0, 107, 45]
2025-03-05 15:23:04.355701 test begin: paddle.broadcast_to(Tensor([6, 0, 107, 57],"bool"), list[6,8,107,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 107, 57],"bool"), list[6,8,107,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 107, 57].  Tensor sizes: [6, 0, 107, 57]
2025-03-05 15:23:04.356405 test begin: paddle.broadcast_to(Tensor([6, 0, 107, 97],"bool"), list[6,8,107,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 107, 97],"bool"), list[6,8,107,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 107, 97].  Tensor sizes: [6, 0, 107, 97]
2025-03-05 15:23:04.357081 test begin: paddle.broadcast_to(Tensor([6, 0, 108, 108],"bool"), list[6,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 108, 108],"bool"), list[6,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 108, 108].  Tensor sizes: [6, 0, 108, 108]
2025-03-05 15:23:04.357709 test begin: paddle.broadcast_to(Tensor([6, 0, 108, 45],"bool"), list[6,8,108,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 108, 45],"bool"), list[6,8,108,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 108, 45].  Tensor sizes: [6, 0, 108, 45]
2025-03-05 15:23:04.359328 test begin: paddle.broadcast_to(Tensor([6, 0, 108, 57],"bool"), list[6,8,108,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 108, 57],"bool"), list[6,8,108,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 108, 57].  Tensor sizes: [6, 0, 108, 57]
2025-03-05 15:23:04.360075 test begin: paddle.broadcast_to(Tensor([6, 0, 108, 97],"bool"), list[6,8,108,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 108, 97],"bool"), list[6,8,108,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 108, 97].  Tensor sizes: [6, 0, 108, 97]
2025-03-05 15:23:04.360782 test begin: paddle.broadcast_to(Tensor([6, 0, 109, 109],"bool"), list[6,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 109, 109],"bool"), list[6,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 109, 109].  Tensor sizes: [6, 0, 109, 109]
2025-03-05 15:23:04.362000 test begin: paddle.broadcast_to(Tensor([6, 0, 109, 57],"bool"), list[6,8,109,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 109, 57],"bool"), list[6,8,109,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 109, 57].  Tensor sizes: [6, 0, 109, 57]
2025-03-05 15:23:04.362710 test begin: paddle.broadcast_to(Tensor([6, 0, 109, 97],"bool"), list[6,8,109,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 109, 97],"bool"), list[6,8,109,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 109, 97].  Tensor sizes: [6, 0, 109, 97]
2025-03-05 15:23:04.363369 test begin: paddle.broadcast_to(Tensor([6, 0, 11, 11],"bool"), list[6,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 11, 11],"bool"), list[6,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 11, 11].  Tensor sizes: [6, 0, 11, 11]
2025-03-05 15:23:04.364466 test begin: paddle.broadcast_to(Tensor([6, 0, 11, 25],"bool"), list[6,8,11,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 11, 25],"bool"), list[6,8,11,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 11, 25].  Tensor sizes: [6, 0, 11, 25]
2025-03-05 15:23:04.365116 test begin: paddle.broadcast_to(Tensor([6, 0, 11, 45],"bool"), list[6,8,11,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 11, 45],"bool"), list[6,8,11,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 11, 45].  Tensor sizes: [6, 0, 11, 45]
2025-03-05 15:23:04.365745 test begin: paddle.broadcast_to(Tensor([6, 0, 11, 57],"bool"), list[6,8,11,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 11, 57],"bool"), list[6,8,11,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 11, 57].  Tensor sizes: [6, 0, 11, 57]
2025-03-05 15:23:04.366316 test begin: paddle.broadcast_to(Tensor([6, 0, 11, 97],"bool"), list[6,8,11,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 11, 97],"bool"), list[6,8,11,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 11, 97].  Tensor sizes: [6, 0, 11, 97]
2025-03-05 15:23:04.367033 test begin: paddle.broadcast_to(Tensor([6, 0, 110, 110],"bool"), list[6,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 110, 110],"bool"), list[6,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 110, 110].  Tensor sizes: [6, 0, 110, 110]
2025-03-05 15:23:04.367709 test begin: paddle.broadcast_to(Tensor([6, 0, 110, 57],"bool"), list[6,8,110,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 110, 57],"bool"), list[6,8,110,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 110, 57].  Tensor sizes: [6, 0, 110, 57]
2025-03-05 15:23:04.368820 test begin: paddle.broadcast_to(Tensor([6, 0, 110, 97],"bool"), list[6,8,110,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 110, 97],"bool"), list[6,8,110,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 110, 97].  Tensor sizes: [6, 0, 110, 97]
2025-03-05 15:23:04.369477 test begin: paddle.broadcast_to(Tensor([6, 0, 111, 111],"bool"), list[6,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 111, 111],"bool"), list[6,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 111, 111].  Tensor sizes: [6, 0, 111, 111]
2025-03-05 15:23:04.370093 test begin: paddle.broadcast_to(Tensor([6, 0, 111, 57],"bool"), list[6,8,111,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 111, 57],"bool"), list[6,8,111,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 111, 57].  Tensor sizes: [6, 0, 111, 57]
2025-03-05 15:23:04.370797 test begin: paddle.broadcast_to(Tensor([6, 0, 111, 97],"bool"), list[6,8,111,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 111, 97],"bool"), list[6,8,111,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 111, 97].  Tensor sizes: [6, 0, 111, 97]
2025-03-05 15:23:04.371454 test begin: paddle.broadcast_to(Tensor([6, 0, 112, 112],"bool"), list[6,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 112, 112],"bool"), list[6,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 112, 112].  Tensor sizes: [6, 0, 112, 112]
2025-03-05 15:23:04.372181 test begin: paddle.broadcast_to(Tensor([6, 0, 112, 57],"bool"), list[6,8,112,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 112, 57],"bool"), list[6,8,112,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 112, 57].  Tensor sizes: [6, 0, 112, 57]
2025-03-05 15:23:04.372829 test begin: paddle.broadcast_to(Tensor([6, 0, 112, 97],"bool"), list[6,8,112,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 112, 97],"bool"), list[6,8,112,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 112, 97].  Tensor sizes: [6, 0, 112, 97]
2025-03-05 15:23:04.373504 test begin: paddle.broadcast_to(Tensor([6, 0, 113, 113],"bool"), list[6,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 113, 113],"bool"), list[6,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 113, 113].  Tensor sizes: [6, 0, 113, 113]
2025-03-05 15:23:04.374177 test begin: paddle.broadcast_to(Tensor([6, 0, 113, 57],"bool"), list[6,8,113,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 113, 57],"bool"), list[6,8,113,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 113, 57].  Tensor sizes: [6, 0, 113, 57]
2025-03-05 15:23:04.374896 test begin: paddle.broadcast_to(Tensor([6, 0, 113, 97],"bool"), list[6,8,113,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 113, 97],"bool"), list[6,8,113,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 113, 97].  Tensor sizes: [6, 0, 113, 97]
2025-03-05 15:23:04.375653 test begin: paddle.broadcast_to(Tensor([6, 0, 114, 114],"bool"), list[6,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 114, 114],"bool"), list[6,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 114, 114].  Tensor sizes: [6, 0, 114, 114]
2025-03-05 15:23:04.376372 test begin: paddle.broadcast_to(Tensor([6, 0, 114, 57],"bool"), list[6,8,114,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 114, 57],"bool"), list[6,8,114,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 114, 57].  Tensor sizes: [6, 0, 114, 57]
2025-03-05 15:23:04.377140 test begin: paddle.broadcast_to(Tensor([6, 0, 114, 97],"bool"), list[6,8,114,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 114, 97],"bool"), list[6,8,114,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 114, 97].  Tensor sizes: [6, 0, 114, 97]
2025-03-05 15:23:04.378088 test begin: paddle.broadcast_to(Tensor([6, 0, 115, 115],"bool"), list[6,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 115, 115],"bool"), list[6,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 115, 115].  Tensor sizes: [6, 0, 115, 115]
2025-03-05 15:23:04.378825 test begin: paddle.broadcast_to(Tensor([6, 0, 115, 57],"bool"), list[6,8,115,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 115, 57],"bool"), list[6,8,115,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 115, 57].  Tensor sizes: [6, 0, 115, 57]
2025-03-05 15:23:04.379473 test begin: paddle.broadcast_to(Tensor([6, 0, 115, 97],"bool"), list[6,8,115,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 115, 97],"bool"), list[6,8,115,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 115, 97].  Tensor sizes: [6, 0, 115, 97]
2025-03-05 15:23:04.380176 test begin: paddle.broadcast_to(Tensor([6, 0, 116, 116],"bool"), list[6,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 116, 116],"bool"), list[6,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 116, 116].  Tensor sizes: [6, 0, 116, 116]
2025-03-05 15:23:04.380847 test begin: paddle.broadcast_to(Tensor([6, 0, 116, 57],"bool"), list[6,8,116,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 116, 57],"bool"), list[6,8,116,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 116, 57].  Tensor sizes: [6, 0, 116, 57]
2025-03-05 15:23:04.381709 test begin: paddle.broadcast_to(Tensor([6, 0, 116, 97],"bool"), list[6,8,116,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 116, 97],"bool"), list[6,8,116,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 116, 97].  Tensor sizes: [6, 0, 116, 97]
2025-03-05 15:23:04.382403 test begin: paddle.broadcast_to(Tensor([6, 0, 117, 117],"bool"), list[6,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 117, 117],"bool"), list[6,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 117, 117].  Tensor sizes: [6, 0, 117, 117]
2025-03-05 15:23:04.383150 test begin: paddle.broadcast_to(Tensor([6, 0, 117, 57],"bool"), list[6,8,117,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 117, 57],"bool"), list[6,8,117,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 117, 57].  Tensor sizes: [6, 0, 117, 57]
2025-03-05 15:23:04.383981 test begin: paddle.broadcast_to(Tensor([6, 0, 117, 97],"bool"), list[6,8,117,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 117, 97],"bool"), list[6,8,117,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 117, 97].  Tensor sizes: [6, 0, 117, 97]
2025-03-05 15:23:04.385204 test begin: paddle.broadcast_to(Tensor([6, 0, 118, 118],"bool"), list[6,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 118, 118],"bool"), list[6,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 118, 118].  Tensor sizes: [6, 0, 118, 118]
2025-03-05 15:23:04.385849 test begin: paddle.broadcast_to(Tensor([6, 0, 118, 57],"bool"), list[6,8,118,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 118, 57],"bool"), list[6,8,118,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 118, 57].  Tensor sizes: [6, 0, 118, 57]
2025-03-05 15:23:04.386467 test begin: paddle.broadcast_to(Tensor([6, 0, 118, 97],"bool"), list[6,8,118,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 118, 97],"bool"), list[6,8,118,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 118, 97].  Tensor sizes: [6, 0, 118, 97]
2025-03-05 15:23:04.387464 test begin: paddle.broadcast_to(Tensor([6, 0, 119, 119],"bool"), list[6,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 119, 119],"bool"), list[6,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 119, 119].  Tensor sizes: [6, 0, 119, 119]
2025-03-05 15:23:04.388380 test begin: paddle.broadcast_to(Tensor([6, 0, 119, 57],"bool"), list[6,8,119,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 119, 57],"bool"), list[6,8,119,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 119, 57].  Tensor sizes: [6, 0, 119, 57]
2025-03-05 15:23:04.389077 test begin: paddle.broadcast_to(Tensor([6, 0, 119, 97],"bool"), list[6,8,119,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 119, 97],"bool"), list[6,8,119,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 119, 97].  Tensor sizes: [6, 0, 119, 97]
2025-03-05 15:23:04.389719 test begin: paddle.broadcast_to(Tensor([6, 0, 12, 12],"bool"), list[6,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 12, 12],"bool"), list[6,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 12, 12].  Tensor sizes: [6, 0, 12, 12]
2025-03-05 15:23:04.390939 test begin: paddle.broadcast_to(Tensor([6, 0, 12, 25],"bool"), list[6,8,12,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 12, 25],"bool"), list[6,8,12,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 12, 25].  Tensor sizes: [6, 0, 12, 25]
2025-03-05 15:23:04.391487 test begin: paddle.broadcast_to(Tensor([6, 0, 12, 45],"bool"), list[6,8,12,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 12, 45],"bool"), list[6,8,12,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 12, 45].  Tensor sizes: [6, 0, 12, 45]
2025-03-05 15:23:04.392100 test begin: paddle.broadcast_to(Tensor([6, 0, 12, 57],"bool"), list[6,8,12,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 12, 57],"bool"), list[6,8,12,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 12, 57].  Tensor sizes: [6, 0, 12, 57]
2025-03-05 15:23:04.392880 test begin: paddle.broadcast_to(Tensor([6, 0, 12, 97],"bool"), list[6,8,12,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 12, 97],"bool"), list[6,8,12,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 12, 97].  Tensor sizes: [6, 0, 12, 97]
2025-03-05 15:23:04.393612 test begin: paddle.broadcast_to(Tensor([6, 0, 120, 120],"bool"), list[6,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 120, 120],"bool"), list[6,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 120, 120].  Tensor sizes: [6, 0, 120, 120]
2025-03-05 15:23:04.394287 test begin: paddle.broadcast_to(Tensor([6, 0, 120, 57],"bool"), list[6,8,120,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 120, 57],"bool"), list[6,8,120,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 120, 57].  Tensor sizes: [6, 0, 120, 57]
2025-03-05 15:23:04.394925 test begin: paddle.broadcast_to(Tensor([6, 0, 120, 97],"bool"), list[6,8,120,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 120, 97],"bool"), list[6,8,120,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 120, 97].  Tensor sizes: [6, 0, 120, 97]
2025-03-05 15:23:04.395726 test begin: paddle.broadcast_to(Tensor([6, 0, 121, 121],"bool"), list[6,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 121, 121],"bool"), list[6,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 121, 121].  Tensor sizes: [6, 0, 121, 121]
2025-03-05 15:23:04.396359 test begin: paddle.broadcast_to(Tensor([6, 0, 121, 57],"bool"), list[6,8,121,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 121, 57],"bool"), list[6,8,121,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 121, 57].  Tensor sizes: [6, 0, 121, 57]
2025-03-05 15:23:04.400552 test begin: paddle.broadcast_to(Tensor([6, 0, 121, 97],"bool"), list[6,8,121,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 121, 97],"bool"), list[6,8,121,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 121, 97].  Tensor sizes: [6, 0, 121, 97]
2025-03-05 15:23:04.403686 test begin: paddle.broadcast_to(Tensor([6, 0, 122, 122],"bool"), list[6,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 122, 122],"bool"), list[6,8,122,122,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 122, 122].  Tensor sizes: [6, 0, 122, 122]
2025-03-05 15:23:04.404413 test begin: paddle.broadcast_to(Tensor([6, 0, 122, 57],"bool"), list[6,8,122,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 122, 57],"bool"), list[6,8,122,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 122, 57].  Tensor sizes: [6, 0, 122, 57]
2025-03-05 15:23:04.405141 test begin: paddle.broadcast_to(Tensor([6, 0, 122, 97],"bool"), list[6,8,122,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 122, 97],"bool"), list[6,8,122,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 122, 97].  Tensor sizes: [6, 0, 122, 97]
2025-03-05 15:23:04.405881 test begin: paddle.broadcast_to(Tensor([6, 0, 123, 123],"bool"), list[6,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 123, 123],"bool"), list[6,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 123, 123].  Tensor sizes: [6, 0, 123, 123]
2025-03-05 15:23:04.406912 test begin: paddle.broadcast_to(Tensor([6, 0, 123, 57],"bool"), list[6,8,123,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 123, 57],"bool"), list[6,8,123,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 123, 57].  Tensor sizes: [6, 0, 123, 57]
2025-03-05 15:23:04.407615 test begin: paddle.broadcast_to(Tensor([6, 0, 123, 97],"bool"), list[6,8,123,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 123, 97],"bool"), list[6,8,123,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 123, 97].  Tensor sizes: [6, 0, 123, 97]
2025-03-05 15:23:04.408216 test begin: paddle.broadcast_to(Tensor([6, 0, 124, 124],"bool"), list[6,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 124, 124],"bool"), list[6,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 124, 124].  Tensor sizes: [6, 0, 124, 124]
2025-03-05 15:23:04.408872 test begin: paddle.broadcast_to(Tensor([6, 0, 124, 57],"bool"), list[6,8,124,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 124, 57],"bool"), list[6,8,124,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 124, 57].  Tensor sizes: [6, 0, 124, 57]
2025-03-05 15:23:04.410281 test begin: paddle.broadcast_to(Tensor([6, 0, 124, 97],"bool"), list[6,8,124,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 124, 97],"bool"), list[6,8,124,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 124, 97].  Tensor sizes: [6, 0, 124, 97]
2025-03-05 15:23:04.410980 test begin: paddle.broadcast_to(Tensor([6, 0, 125, 125],"bool"), list[6,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 125, 125],"bool"), list[6,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 125, 125].  Tensor sizes: [6, 0, 125, 125]
2025-03-05 15:23:04.411563 test begin: paddle.broadcast_to(Tensor([6, 0, 125, 57],"bool"), list[6,8,125,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 125, 57],"bool"), list[6,8,125,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 125, 57].  Tensor sizes: [6, 0, 125, 57]
2025-03-05 15:23:04.412289 test begin: paddle.broadcast_to(Tensor([6, 0, 125, 97],"bool"), list[6,8,125,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 125, 97],"bool"), list[6,8,125,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 125, 97].  Tensor sizes: [6, 0, 125, 97]
2025-03-05 15:23:04.413038 test begin: paddle.broadcast_to(Tensor([6, 0, 126, 126],"bool"), list[6,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 126, 126],"bool"), list[6,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 126, 126].  Tensor sizes: [6, 0, 126, 126]
2025-03-05 15:23:04.413724 test begin: paddle.broadcast_to(Tensor([6, 0, 126, 57],"bool"), list[6,8,126,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 126, 57],"bool"), list[6,8,126,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 126, 57].  Tensor sizes: [6, 0, 126, 57]
2025-03-05 15:23:04.414464 test begin: paddle.broadcast_to(Tensor([6, 0, 126, 97],"bool"), list[6,8,126,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 126, 97],"bool"), list[6,8,126,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 126, 97].  Tensor sizes: [6, 0, 126, 97]
2025-03-05 15:23:04.415112 test begin: paddle.broadcast_to(Tensor([6, 0, 127, 127],"bool"), list[6,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 127, 127],"bool"), list[6,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 127, 127].  Tensor sizes: [6, 0, 127, 127]
2025-03-05 15:23:04.415722 test begin: paddle.broadcast_to(Tensor([6, 0, 127, 57],"bool"), list[6,8,127,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 127, 57],"bool"), list[6,8,127,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 127, 57].  Tensor sizes: [6, 0, 127, 57]
2025-03-05 15:23:04.416343 test begin: paddle.broadcast_to(Tensor([6, 0, 127, 97],"bool"), list[6,8,127,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 127, 97],"bool"), list[6,8,127,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 127, 97].  Tensor sizes: [6, 0, 127, 97]
2025-03-05 15:23:04.417141 test begin: paddle.broadcast_to(Tensor([6, 0, 128, 128],"bool"), list[6,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 128, 128],"bool"), list[6,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 128, 128].  Tensor sizes: [6, 0, 128, 128]
2025-03-05 15:23:04.417814 test begin: paddle.broadcast_to(Tensor([6, 0, 128, 57],"bool"), list[6,8,128,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 128, 57],"bool"), list[6,8,128,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 128, 57].  Tensor sizes: [6, 0, 128, 57]
2025-03-05 15:23:04.418659 test begin: paddle.broadcast_to(Tensor([6, 0, 128, 97],"bool"), list[6,8,128,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 128, 97],"bool"), list[6,8,128,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 128, 97].  Tensor sizes: [6, 0, 128, 97]
2025-03-05 15:23:04.419414 test begin: paddle.broadcast_to(Tensor([6, 0, 129, 129],"bool"), list[6,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 129, 129],"bool"), list[6,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 129, 129].  Tensor sizes: [6, 0, 129, 129]
2025-03-05 15:23:04.420146 test begin: paddle.broadcast_to(Tensor([6, 0, 129, 57],"bool"), list[6,8,129,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 129, 57],"bool"), list[6,8,129,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 129, 57].  Tensor sizes: [6, 0, 129, 57]
2025-03-05 15:23:04.420830 test begin: paddle.broadcast_to(Tensor([6, 0, 129, 97],"bool"), list[6,8,129,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 129, 97],"bool"), list[6,8,129,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 129, 97].  Tensor sizes: [6, 0, 129, 97]
2025-03-05 15:23:04.421654 test begin: paddle.broadcast_to(Tensor([6, 0, 13, 13],"bool"), list[6,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 13, 13],"bool"), list[6,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 13, 13].  Tensor sizes: [6, 0, 13, 13]
2025-03-05 15:23:04.422378 test begin: paddle.broadcast_to(Tensor([6, 0, 13, 25],"bool"), list[6,8,13,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 13, 25],"bool"), list[6,8,13,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 13, 25].  Tensor sizes: [6, 0, 13, 25]
2025-03-05 15:23:04.423088 test begin: paddle.broadcast_to(Tensor([6, 0, 13, 45],"bool"), list[6,8,13,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 13, 45],"bool"), list[6,8,13,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 13, 45].  Tensor sizes: [6, 0, 13, 45]
2025-03-05 15:23:04.423761 test begin: paddle.broadcast_to(Tensor([6, 0, 13, 57],"bool"), list[6,8,13,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 13, 57],"bool"), list[6,8,13,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 13, 57].  Tensor sizes: [6, 0, 13, 57]
2025-03-05 15:23:04.424424 test begin: paddle.broadcast_to(Tensor([6, 0, 13, 97],"bool"), list[6,8,13,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 13, 97],"bool"), list[6,8,13,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 13, 97].  Tensor sizes: [6, 0, 13, 97]
2025-03-05 15:23:04.425082 test begin: paddle.broadcast_to(Tensor([6, 0, 130, 130],"bool"), list[6,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 130, 130],"bool"), list[6,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 130, 130].  Tensor sizes: [6, 0, 130, 130]
2025-03-05 15:23:04.425714 test begin: paddle.broadcast_to(Tensor([6, 0, 130, 57],"bool"), list[6,8,130,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 130, 57],"bool"), list[6,8,130,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 130, 57].  Tensor sizes: [6, 0, 130, 57]
2025-03-05 15:23:04.426339 test begin: paddle.broadcast_to(Tensor([6, 0, 130, 97],"bool"), list[6,8,130,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 130, 97],"bool"), list[6,8,130,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 130, 97].  Tensor sizes: [6, 0, 130, 97]
2025-03-05 15:23:04.427109 test begin: paddle.broadcast_to(Tensor([6, 0, 131, 131],"bool"), list[6,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 131, 131],"bool"), list[6,8,131,131,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 131, 131].  Tensor sizes: [6, 0, 131, 131]
2025-03-05 15:23:04.427867 test begin: paddle.broadcast_to(Tensor([6, 0, 131, 57],"bool"), list[6,8,131,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 131, 57],"bool"), list[6,8,131,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 131, 57].  Tensor sizes: [6, 0, 131, 57]
2025-03-05 15:23:04.428593 test begin: paddle.broadcast_to(Tensor([6, 0, 131, 97],"bool"), list[6,8,131,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 131, 97],"bool"), list[6,8,131,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 131, 97].  Tensor sizes: [6, 0, 131, 97]
2025-03-05 15:23:04.429375 test begin: paddle.broadcast_to(Tensor([6, 0, 132, 132],"bool"), list[6,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 132, 132],"bool"), list[6,8,132,132,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 132, 132].  Tensor sizes: [6, 0, 132, 132]
2025-03-05 15:23:04.430044 test begin: paddle.broadcast_to(Tensor([6, 0, 132, 57],"bool"), list[6,8,132,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 132, 57],"bool"), list[6,8,132,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 132, 57].  Tensor sizes: [6, 0, 132, 57]
2025-03-05 15:23:04.430748 test begin: paddle.broadcast_to(Tensor([6, 0, 132, 97],"bool"), list[6,8,132,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 132, 97],"bool"), list[6,8,132,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 132, 97].  Tensor sizes: [6, 0, 132, 97]
2025-03-05 15:23:04.431721 test begin: paddle.broadcast_to(Tensor([6, 0, 133, 133],"bool"), list[6,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 133, 133],"bool"), list[6,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 133, 133].  Tensor sizes: [6, 0, 133, 133]
2025-03-05 15:23:04.432851 test begin: paddle.broadcast_to(Tensor([6, 0, 133, 57],"bool"), list[6,8,133,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 133, 57],"bool"), list[6,8,133,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 133, 57].  Tensor sizes: [6, 0, 133, 57]
2025-03-05 15:23:04.433628 test begin: paddle.broadcast_to(Tensor([6, 0, 133, 97],"bool"), list[6,8,133,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 133, 97],"bool"), list[6,8,133,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 133, 97].  Tensor sizes: [6, 0, 133, 97]
2025-03-05 15:23:04.434222 test begin: paddle.broadcast_to(Tensor([6, 0, 134, 134],"bool"), list[6,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 134, 134],"bool"), list[6,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 134, 134].  Tensor sizes: [6, 0, 134, 134]
2025-03-05 15:23:04.434796 test begin: paddle.broadcast_to(Tensor([6, 0, 134, 57],"bool"), list[6,8,134,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 134, 57],"bool"), list[6,8,134,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 134, 57].  Tensor sizes: [6, 0, 134, 57]
2025-03-05 15:23:04.435346 test begin: paddle.broadcast_to(Tensor([6, 0, 134, 97],"bool"), list[6,8,134,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 134, 97],"bool"), list[6,8,134,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 134, 97].  Tensor sizes: [6, 0, 134, 97]
2025-03-05 15:23:04.435974 test begin: paddle.broadcast_to(Tensor([6, 0, 135, 135],"bool"), list[6,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 135, 135],"bool"), list[6,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 135, 135].  Tensor sizes: [6, 0, 135, 135]
2025-03-05 15:23:04.436558 test begin: paddle.broadcast_to(Tensor([6, 0, 135, 57],"bool"), list[6,8,135,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 135, 57],"bool"), list[6,8,135,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 135, 57].  Tensor sizes: [6, 0, 135, 57]
2025-03-05 15:23:04.437374 test begin: paddle.broadcast_to(Tensor([6, 0, 135, 97],"bool"), list[6,8,135,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 135, 97],"bool"), list[6,8,135,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 135, 97].  Tensor sizes: [6, 0, 135, 97]
2025-03-05 15:23:04.438253 test begin: paddle.broadcast_to(Tensor([6, 0, 136, 136],"bool"), list[6,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 136, 136],"bool"), list[6,8,136,136,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 136, 136].  Tensor sizes: [6, 0, 136, 136]
2025-03-05 15:23:04.438960 test begin: paddle.broadcast_to(Tensor([6, 0, 136, 57],"bool"), list[6,8,136,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 136, 57],"bool"), list[6,8,136,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 136, 57].  Tensor sizes: [6, 0, 136, 57]
2025-03-05 15:23:04.439764 test begin: paddle.broadcast_to(Tensor([6, 0, 136, 97],"bool"), list[6,8,136,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 136, 97],"bool"), list[6,8,136,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 136, 97].  Tensor sizes: [6, 0, 136, 97]
2025-03-05 15:23:04.440568 test begin: paddle.broadcast_to(Tensor([6, 0, 137, 137],"bool"), list[6,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 137, 137],"bool"), list[6,8,137,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 137, 137].  Tensor sizes: [6, 0, 137, 137]
2025-03-05 15:23:04.441313 test begin: paddle.broadcast_to(Tensor([6, 0, 137, 57],"bool"), list[6,8,137,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 137, 57],"bool"), list[6,8,137,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 137, 57].  Tensor sizes: [6, 0, 137, 57]
2025-03-05 15:23:04.441881 test begin: paddle.broadcast_to(Tensor([6, 0, 137, 97],"bool"), list[6,8,137,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 137, 97],"bool"), list[6,8,137,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 137, 97].  Tensor sizes: [6, 0, 137, 97]
2025-03-05 15:23:04.442538 test begin: paddle.broadcast_to(Tensor([6, 0, 138, 138],"bool"), list[6,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 138, 138],"bool"), list[6,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 138, 138].  Tensor sizes: [6, 0, 138, 138]
2025-03-05 15:23:04.443157 test begin: paddle.broadcast_to(Tensor([6, 0, 138, 57],"bool"), list[6,8,138,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 138, 57],"bool"), list[6,8,138,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 138, 57].  Tensor sizes: [6, 0, 138, 57]
2025-03-05 15:23:04.444096 test begin: paddle.broadcast_to(Tensor([6, 0, 138, 97],"bool"), list[6,8,138,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 138, 97],"bool"), list[6,8,138,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 138, 97].  Tensor sizes: [6, 0, 138, 97]
2025-03-05 15:23:04.444850 test begin: paddle.broadcast_to(Tensor([6, 0, 139, 139],"bool"), list[6,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 139, 139],"bool"), list[6,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 139, 139].  Tensor sizes: [6, 0, 139, 139]
2025-03-05 15:23:04.445903 test begin: paddle.broadcast_to(Tensor([6, 0, 139, 57],"bool"), list[6,8,139,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 139, 57],"bool"), list[6,8,139,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 139, 57].  Tensor sizes: [6, 0, 139, 57]
2025-03-05 15:23:04.446644 test begin: paddle.broadcast_to(Tensor([6, 0, 139, 97],"bool"), list[6,8,139,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 139, 97],"bool"), list[6,8,139,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 139, 97].  Tensor sizes: [6, 0, 139, 97]
2025-03-05 15:23:04.447296 test begin: paddle.broadcast_to(Tensor([6, 0, 14, 14],"bool"), list[6,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 14, 14],"bool"), list[6,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 14, 14].  Tensor sizes: [6, 0, 14, 14]
2025-03-05 15:23:04.447962 test begin: paddle.broadcast_to(Tensor([6, 0, 14, 25],"bool"), list[6,8,14,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 14, 25],"bool"), list[6,8,14,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 14, 25].  Tensor sizes: [6, 0, 14, 25]
2025-03-05 15:23:04.448680 test begin: paddle.broadcast_to(Tensor([6, 0, 14, 45],"bool"), list[6,8,14,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 14, 45],"bool"), list[6,8,14,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 14, 45].  Tensor sizes: [6, 0, 14, 45]
2025-03-05 15:23:04.449368 test begin: paddle.broadcast_to(Tensor([6, 0, 14, 57],"bool"), list[6,8,14,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 14, 57],"bool"), list[6,8,14,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 14, 57].  Tensor sizes: [6, 0, 14, 57]
2025-03-05 15:23:04.450210 test begin: paddle.broadcast_to(Tensor([6, 0, 14, 97],"bool"), list[6,8,14,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 14, 97],"bool"), list[6,8,14,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 14, 97].  Tensor sizes: [6, 0, 14, 97]
2025-03-05 15:23:04.450958 test begin: paddle.broadcast_to(Tensor([6, 0, 140, 140],"bool"), list[6,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 140, 140],"bool"), list[6,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 140, 140].  Tensor sizes: [6, 0, 140, 140]
2025-03-05 15:23:04.451725 test begin: paddle.broadcast_to(Tensor([6, 0, 140, 57],"bool"), list[6,8,140,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 140, 57],"bool"), list[6,8,140,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 140, 57].  Tensor sizes: [6, 0, 140, 57]
2025-03-05 15:23:04.452367 test begin: paddle.broadcast_to(Tensor([6, 0, 140, 97],"bool"), list[6,8,140,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 140, 97],"bool"), list[6,8,140,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 140, 97].  Tensor sizes: [6, 0, 140, 97]
2025-03-05 15:23:04.453076 test begin: paddle.broadcast_to(Tensor([6, 0, 141, 141],"bool"), list[6,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 141, 141],"bool"), list[6,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 141, 141].  Tensor sizes: [6, 0, 141, 141]
2025-03-05 15:23:04.453812 test begin: paddle.broadcast_to(Tensor([6, 0, 141, 57],"bool"), list[6,8,141,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 141, 57],"bool"), list[6,8,141,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 141, 57].  Tensor sizes: [6, 0, 141, 57]
2025-03-05 15:23:04.454950 test begin: paddle.broadcast_to(Tensor([6, 0, 141, 97],"bool"), list[6,8,141,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 141, 97],"bool"), list[6,8,141,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 141, 97].  Tensor sizes: [6, 0, 141, 97]
2025-03-05 15:23:04.455520 test begin: paddle.broadcast_to(Tensor([6, 0, 142, 142],"bool"), list[6,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 142, 142],"bool"), list[6,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 142, 142].  Tensor sizes: [6, 0, 142, 142]
2025-03-05 15:23:04.456070 test begin: paddle.broadcast_to(Tensor([6, 0, 142, 57],"bool"), list[6,8,142,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 142, 57],"bool"), list[6,8,142,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 142, 57].  Tensor sizes: [6, 0, 142, 57]
2025-03-05 15:23:04.456732 test begin: paddle.broadcast_to(Tensor([6, 0, 142, 97],"bool"), list[6,8,142,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 142, 97],"bool"), list[6,8,142,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 142, 97].  Tensor sizes: [6, 0, 142, 97]
2025-03-05 15:23:04.457319 test begin: paddle.broadcast_to(Tensor([6, 0, 143, 143],"bool"), list[6,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 143, 143],"bool"), list[6,8,143,143,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 143, 143].  Tensor sizes: [6, 0, 143, 143]
2025-03-05 15:23:04.458244 test begin: paddle.broadcast_to(Tensor([6, 0, 143, 57],"bool"), list[6,8,143,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 143, 57],"bool"), list[6,8,143,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 143, 57].  Tensor sizes: [6, 0, 143, 57]
2025-03-05 15:23:04.459052 test begin: paddle.broadcast_to(Tensor([6, 0, 143, 97],"bool"), list[6,8,143,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 143, 97],"bool"), list[6,8,143,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 143, 97].  Tensor sizes: [6, 0, 143, 97]
2025-03-05 15:23:04.459772 test begin: paddle.broadcast_to(Tensor([6, 0, 144, 144],"bool"), list[6,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 144, 144],"bool"), list[6,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 144, 144].  Tensor sizes: [6, 0, 144, 144]
2025-03-05 15:23:04.460423 test begin: paddle.broadcast_to(Tensor([6, 0, 144, 57],"bool"), list[6,8,144,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 144, 57],"bool"), list[6,8,144,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 144, 57].  Tensor sizes: [6, 0, 144, 57]
2025-03-05 15:23:04.461066 test begin: paddle.broadcast_to(Tensor([6, 0, 144, 97],"bool"), list[6,8,144,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 144, 97],"bool"), list[6,8,144,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 144, 97].  Tensor sizes: [6, 0, 144, 97]
2025-03-05 15:23:04.461876 test begin: paddle.broadcast_to(Tensor([6, 0, 145, 145],"bool"), list[6,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 145, 145],"bool"), list[6,8,145,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 145, 145].  Tensor sizes: [6, 0, 145, 145]
2025-03-05 15:23:04.462606 test begin: paddle.broadcast_to(Tensor([6, 0, 145, 57],"bool"), list[6,8,145,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 145, 57],"bool"), list[6,8,145,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 145, 57].  Tensor sizes: [6, 0, 145, 57]
2025-03-05 15:23:04.463355 test begin: paddle.broadcast_to(Tensor([6, 0, 145, 97],"bool"), list[6,8,145,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 145, 97],"bool"), list[6,8,145,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 145, 97].  Tensor sizes: [6, 0, 145, 97]
2025-03-05 15:23:04.464166 test begin: paddle.broadcast_to(Tensor([6, 0, 146, 146],"bool"), list[6,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 146, 146],"bool"), list[6,8,146,146,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 146, 146].  Tensor sizes: [6, 0, 146, 146]
2025-03-05 15:23:04.464881 test begin: paddle.broadcast_to(Tensor([6, 0, 146, 57],"bool"), list[6,8,146,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 146, 57],"bool"), list[6,8,146,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 146, 57].  Tensor sizes: [6, 0, 146, 57]
2025-03-05 15:23:04.465564 test begin: paddle.broadcast_to(Tensor([6, 0, 146, 97],"bool"), list[6,8,146,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 146, 97],"bool"), list[6,8,146,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 146, 97].  Tensor sizes: [6, 0, 146, 97]
2025-03-05 15:23:04.466323 test begin: paddle.broadcast_to(Tensor([6, 0, 147, 147],"bool"), list[6,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 147, 147],"bool"), list[6,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 147, 147].  Tensor sizes: [6, 0, 147, 147]
2025-03-05 15:23:04.467140 test begin: paddle.broadcast_to(Tensor([6, 0, 147, 57],"bool"), list[6,8,147,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 147, 57],"bool"), list[6,8,147,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 147, 57].  Tensor sizes: [6, 0, 147, 57]
2025-03-05 15:23:04.467785 test begin: paddle.broadcast_to(Tensor([6, 0, 147, 97],"bool"), list[6,8,147,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 147, 97],"bool"), list[6,8,147,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 147, 97].  Tensor sizes: [6, 0, 147, 97]
2025-03-05 15:23:04.468443 test begin: paddle.broadcast_to(Tensor([6, 0, 148, 148],"bool"), list[6,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 148, 148],"bool"), list[6,8,148,148,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 148, 148].  Tensor sizes: [6, 0, 148, 148]
2025-03-05 15:23:04.469028 test begin: paddle.broadcast_to(Tensor([6, 0, 148, 57],"bool"), list[6,8,148,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 148, 57],"bool"), list[6,8,148,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 148, 57].  Tensor sizes: [6, 0, 148, 57]
2025-03-05 15:23:04.469567 test begin: paddle.broadcast_to(Tensor([6, 0, 148, 97],"bool"), list[6,8,148,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 148, 97],"bool"), list[6,8,148,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 148, 97].  Tensor sizes: [6, 0, 148, 97]
2025-03-05 15:23:04.470443 test begin: paddle.broadcast_to(Tensor([6, 0, 149, 149],"bool"), list[6,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 149, 149],"bool"), list[6,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 149, 149].  Tensor sizes: [6, 0, 149, 149]
2025-03-05 15:23:04.471068 test begin: paddle.broadcast_to(Tensor([6, 0, 149, 57],"bool"), list[6,8,149,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 149, 57],"bool"), list[6,8,149,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 149, 57].  Tensor sizes: [6, 0, 149, 57]
2025-03-05 15:23:04.471598 test begin: paddle.broadcast_to(Tensor([6, 0, 149, 97],"bool"), list[6,8,149,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 149, 97],"bool"), list[6,8,149,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 149, 97].  Tensor sizes: [6, 0, 149, 97]
2025-03-05 15:23:04.472173 test begin: paddle.broadcast_to(Tensor([6, 0, 15, 15],"bool"), list[6,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 15, 15],"bool"), list[6,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 15, 15].  Tensor sizes: [6, 0, 15, 15]
2025-03-05 15:23:04.473497 test begin: paddle.broadcast_to(Tensor([6, 0, 15, 25],"bool"), list[6,8,15,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 15, 25],"bool"), list[6,8,15,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 15, 25].  Tensor sizes: [6, 0, 15, 25]
2025-03-05 15:23:04.474119 test begin: paddle.broadcast_to(Tensor([6, 0, 15, 45],"bool"), list[6,8,15,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 15, 45],"bool"), list[6,8,15,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 15, 45].  Tensor sizes: [6, 0, 15, 45]
2025-03-05 15:23:04.475246 test begin: paddle.broadcast_to(Tensor([6, 0, 15, 57],"bool"), list[6,8,15,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 15, 57],"bool"), list[6,8,15,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 15, 57].  Tensor sizes: [6, 0, 15, 57]
2025-03-05 15:23:04.475962 test begin: paddle.broadcast_to(Tensor([6, 0, 15, 97],"bool"), list[6,8,15,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 15, 97],"bool"), list[6,8,15,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 15, 97].  Tensor sizes: [6, 0, 15, 97]
2025-03-05 15:23:04.476630 test begin: paddle.broadcast_to(Tensor([6, 0, 150, 150],"bool"), list[6,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 150, 150],"bool"), list[6,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 150, 150].  Tensor sizes: [6, 0, 150, 150]
2025-03-05 15:23:04.477164 test begin: paddle.broadcast_to(Tensor([6, 0, 150, 57],"bool"), list[6,8,150,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 150, 57],"bool"), list[6,8,150,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 150, 57].  Tensor sizes: [6, 0, 150, 57]
2025-03-05 15:23:04.477940 test begin: paddle.broadcast_to(Tensor([6, 0, 150, 97],"bool"), list[6,8,150,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 150, 97],"bool"), list[6,8,150,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 150, 97].  Tensor sizes: [6, 0, 150, 97]
2025-03-05 15:23:04.478589 test begin: paddle.broadcast_to(Tensor([6, 0, 151, 151],"bool"), list[6,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 151, 151],"bool"), list[6,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 151, 151].  Tensor sizes: [6, 0, 151, 151]
2025-03-05 15:23:04.479612 test begin: paddle.broadcast_to(Tensor([6, 0, 151, 57],"bool"), list[6,8,151,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 151, 57],"bool"), list[6,8,151,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 151, 57].  Tensor sizes: [6, 0, 151, 57]
2025-03-05 15:23:04.480405 test begin: paddle.broadcast_to(Tensor([6, 0, 151, 97],"bool"), list[6,8,151,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 151, 97],"bool"), list[6,8,151,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 151, 97].  Tensor sizes: [6, 0, 151, 97]
2025-03-05 15:23:04.481096 test begin: paddle.broadcast_to(Tensor([6, 0, 152, 152],"bool"), list[6,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 152, 152],"bool"), list[6,8,152,152,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 152, 152].  Tensor sizes: [6, 0, 152, 152]
2025-03-05 15:23:04.481867 test begin: paddle.broadcast_to(Tensor([6, 0, 152, 57],"bool"), list[6,8,152,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 152, 57],"bool"), list[6,8,152,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 152, 57].  Tensor sizes: [6, 0, 152, 57]
2025-03-05 15:23:04.482517 test begin: paddle.broadcast_to(Tensor([6, 0, 152, 97],"bool"), list[6,8,152,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 152, 97],"bool"), list[6,8,152,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 152, 97].  Tensor sizes: [6, 0, 152, 97]
2025-03-05 15:23:04.483059 test begin: paddle.broadcast_to(Tensor([6, 0, 153, 153],"bool"), list[6,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 153, 153],"bool"), list[6,8,153,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 153, 153].  Tensor sizes: [6, 0, 153, 153]
2025-03-05 15:23:04.483577 test begin: paddle.broadcast_to(Tensor([6, 0, 153, 57],"bool"), list[6,8,153,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 153, 57],"bool"), list[6,8,153,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 153, 57].  Tensor sizes: [6, 0, 153, 57]
2025-03-05 15:23:04.484165 test begin: paddle.broadcast_to(Tensor([6, 0, 153, 97],"bool"), list[6,8,153,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 153, 97],"bool"), list[6,8,153,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 153, 97].  Tensor sizes: [6, 0, 153, 97]
2025-03-05 15:23:04.485019 test begin: paddle.broadcast_to(Tensor([6, 0, 154, 154],"bool"), list[6,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 154, 154],"bool"), list[6,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 154, 154].  Tensor sizes: [6, 0, 154, 154]
2025-03-05 15:23:04.485827 test begin: paddle.broadcast_to(Tensor([6, 0, 154, 57],"bool"), list[6,8,154,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 154, 57],"bool"), list[6,8,154,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 154, 57].  Tensor sizes: [6, 0, 154, 57]
2025-03-05 15:23:04.486555 test begin: paddle.broadcast_to(Tensor([6, 0, 155, 155],"bool"), list[6,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 155, 155],"bool"), list[6,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 155, 155].  Tensor sizes: [6, 0, 155, 155]
2025-03-05 15:23:04.487237 test begin: paddle.broadcast_to(Tensor([6, 0, 155, 57],"bool"), list[6,8,155,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 155, 57],"bool"), list[6,8,155,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 155, 57].  Tensor sizes: [6, 0, 155, 57]
2025-03-05 15:23:04.487835 test begin: paddle.broadcast_to(Tensor([6, 0, 156, 156],"bool"), list[6,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 156, 156],"bool"), list[6,8,156,156,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 156, 156].  Tensor sizes: [6, 0, 156, 156]
2025-03-05 15:23:04.488525 test begin: paddle.broadcast_to(Tensor([6, 0, 156, 57],"bool"), list[6,8,156,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 156, 57],"bool"), list[6,8,156,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 156, 57].  Tensor sizes: [6, 0, 156, 57]
2025-03-05 15:23:04.489182 test begin: paddle.broadcast_to(Tensor([6, 0, 157, 157],"bool"), list[6,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 157, 157],"bool"), list[6,8,157,157,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 157, 157].  Tensor sizes: [6, 0, 157, 157]
2025-03-05 15:23:04.489837 test begin: paddle.broadcast_to(Tensor([6, 0, 157, 57],"bool"), list[6,8,157,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 157, 57],"bool"), list[6,8,157,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 157, 57].  Tensor sizes: [6, 0, 157, 57]
2025-03-05 15:23:04.490546 test begin: paddle.broadcast_to(Tensor([6, 0, 158, 158],"bool"), list[6,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 158, 158],"bool"), list[6,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 158, 158].  Tensor sizes: [6, 0, 158, 158]
2025-03-05 15:23:04.491235 test begin: paddle.broadcast_to(Tensor([6, 0, 158, 57],"bool"), list[6,8,158,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 158, 57],"bool"), list[6,8,158,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 158, 57].  Tensor sizes: [6, 0, 158, 57]
2025-03-05 15:23:04.491890 test begin: paddle.broadcast_to(Tensor([6, 0, 159, 159],"bool"), list[6,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 159, 159],"bool"), list[6,8,159,159,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 159, 159].  Tensor sizes: [6, 0, 159, 159]
2025-03-05 15:23:04.492531 test begin: paddle.broadcast_to(Tensor([6, 0, 159, 57],"bool"), list[6,8,159,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 159, 57],"bool"), list[6,8,159,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 159, 57].  Tensor sizes: [6, 0, 159, 57]
2025-03-05 15:23:04.493246 test begin: paddle.broadcast_to(Tensor([6, 0, 16, 16],"bool"), list[6,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 16, 16],"bool"), list[6,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 16, 16].  Tensor sizes: [6, 0, 16, 16]
2025-03-05 15:23:04.493975 test begin: paddle.broadcast_to(Tensor([6, 0, 16, 25],"bool"), list[6,8,16,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 16, 25],"bool"), list[6,8,16,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 16, 25].  Tensor sizes: [6, 0, 16, 25]
2025-03-05 15:23:04.494817 test begin: paddle.broadcast_to(Tensor([6, 0, 16, 45],"bool"), list[6,8,16,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 16, 45],"bool"), list[6,8,16,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 16, 45].  Tensor sizes: [6, 0, 16, 45]
2025-03-05 15:23:04.495473 test begin: paddle.broadcast_to(Tensor([6, 0, 16, 57],"bool"), list[6,8,16,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 16, 57],"bool"), list[6,8,16,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 16, 57].  Tensor sizes: [6, 0, 16, 57]
2025-03-05 15:23:04.496170 test begin: paddle.broadcast_to(Tensor([6, 0, 16, 97],"bool"), list[6,8,16,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 16, 97],"bool"), list[6,8,16,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 16, 97].  Tensor sizes: [6, 0, 16, 97]
2025-03-05 15:23:04.496822 test begin: paddle.broadcast_to(Tensor([6, 0, 160, 160],"bool"), list[6,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 160, 160],"bool"), list[6,8,160,160,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 160, 160].  Tensor sizes: [6, 0, 160, 160]
2025-03-05 15:23:04.497463 test begin: paddle.broadcast_to(Tensor([6, 0, 160, 57],"bool"), list[6,8,160,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 160, 57],"bool"), list[6,8,160,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 160, 57].  Tensor sizes: [6, 0, 160, 57]
2025-03-05 15:23:04.498126 test begin: paddle.broadcast_to(Tensor([6, 0, 161, 161],"bool"), list[6,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 161, 161],"bool"), list[6,8,161,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 161, 161].  Tensor sizes: [6, 0, 161, 161]
2025-03-05 15:23:04.499084 test begin: paddle.broadcast_to(Tensor([6, 0, 161, 57],"bool"), list[6,8,161,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 161, 57],"bool"), list[6,8,161,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 161, 57].  Tensor sizes: [6, 0, 161, 57]
2025-03-05 15:23:04.499902 test begin: paddle.broadcast_to(Tensor([6, 0, 162, 162],"bool"), list[6,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 162, 162],"bool"), list[6,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 162, 162].  Tensor sizes: [6, 0, 162, 162]
2025-03-05 15:23:04.500580 test begin: paddle.broadcast_to(Tensor([6, 0, 162, 57],"bool"), list[6,8,162,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 162, 57],"bool"), list[6,8,162,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 162, 57].  Tensor sizes: [6, 0, 162, 57]
2025-03-05 15:23:04.501293 test begin: paddle.broadcast_to(Tensor([6, 0, 163, 163],"bool"), list[6,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 163, 163],"bool"), list[6,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 163, 163].  Tensor sizes: [6, 0, 163, 163]
2025-03-05 15:23:04.502012 test begin: paddle.broadcast_to(Tensor([6, 0, 163, 57],"bool"), list[6,8,163,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 163, 57],"bool"), list[6,8,163,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 163, 57].  Tensor sizes: [6, 0, 163, 57]
2025-03-05 15:23:04.502650 test begin: paddle.broadcast_to(Tensor([6, 0, 164, 164],"bool"), list[6,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 164, 164],"bool"), list[6,8,164,164,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 164, 164].  Tensor sizes: [6, 0, 164, 164]
2025-03-05 15:23:04.503357 test begin: paddle.broadcast_to(Tensor([6, 0, 164, 57],"bool"), list[6,8,164,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 164, 57],"bool"), list[6,8,164,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 164, 57].  Tensor sizes: [6, 0, 164, 57]
2025-03-05 15:23:04.504042 test begin: paddle.broadcast_to(Tensor([6, 0, 165, 165],"bool"), list[6,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 165, 165],"bool"), list[6,8,165,165,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 165, 165].  Tensor sizes: [6, 0, 165, 165]
2025-03-05 15:23:04.505398 test begin: paddle.broadcast_to(Tensor([6, 0, 165, 57],"bool"), list[6,8,165,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 165, 57],"bool"), list[6,8,165,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 165, 57].  Tensor sizes: [6, 0, 165, 57]
2025-03-05 15:23:04.506075 test begin: paddle.broadcast_to(Tensor([6, 0, 166, 166],"bool"), list[6,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 166, 166],"bool"), list[6,8,166,166,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 166, 166].  Tensor sizes: [6, 0, 166, 166]
2025-03-05 15:23:04.506923 test begin: paddle.broadcast_to(Tensor([6, 0, 166, 57],"bool"), list[6,8,166,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 166, 57],"bool"), list[6,8,166,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 166, 57].  Tensor sizes: [6, 0, 166, 57]
2025-03-05 15:23:04.507763 test begin: paddle.broadcast_to(Tensor([6, 0, 167, 167],"bool"), list[6,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 167, 167],"bool"), list[6,8,167,167,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 167, 167].  Tensor sizes: [6, 0, 167, 167]
2025-03-05 15:23:04.508770 test begin: paddle.broadcast_to(Tensor([6, 0, 167, 57],"bool"), list[6,8,167,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 167, 57],"bool"), list[6,8,167,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 167, 57].  Tensor sizes: [6, 0, 167, 57]
2025-03-05 15:23:04.509467 test begin: paddle.broadcast_to(Tensor([6, 0, 168, 168],"bool"), list[6,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 168, 168],"bool"), list[6,8,168,168,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 168, 168].  Tensor sizes: [6, 0, 168, 168]
2025-03-05 15:23:04.510182 test begin: paddle.broadcast_to(Tensor([6, 0, 168, 57],"bool"), list[6,8,168,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 168, 57],"bool"), list[6,8,168,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 168, 57].  Tensor sizes: [6, 0, 168, 57]
2025-03-05 15:23:04.510851 test begin: paddle.broadcast_to(Tensor([6, 0, 169, 169],"bool"), list[6,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 169, 169],"bool"), list[6,8,169,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 169, 169].  Tensor sizes: [6, 0, 169, 169]
2025-03-05 15:23:04.511526 test begin: paddle.broadcast_to(Tensor([6, 0, 169, 57],"bool"), list[6,8,169,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 169, 57],"bool"), list[6,8,169,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 169, 57].  Tensor sizes: [6, 0, 169, 57]
2025-03-05 15:23:04.512231 test begin: paddle.broadcast_to(Tensor([6, 0, 17, 17],"bool"), list[6,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 17, 17],"bool"), list[6,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 17, 17].  Tensor sizes: [6, 0, 17, 17]
2025-03-05 15:23:04.512886 test begin: paddle.broadcast_to(Tensor([6, 0, 17, 25],"bool"), list[6,8,17,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 17, 25],"bool"), list[6,8,17,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 17, 25].  Tensor sizes: [6, 0, 17, 25]
2025-03-05 15:23:04.513544 test begin: paddle.broadcast_to(Tensor([6, 0, 17, 45],"bool"), list[6,8,17,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 17, 45],"bool"), list[6,8,17,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 17, 45].  Tensor sizes: [6, 0, 17, 45]
2025-03-05 15:23:04.514192 test begin: paddle.broadcast_to(Tensor([6, 0, 17, 57],"bool"), list[6,8,17,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 17, 57],"bool"), list[6,8,17,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 17, 57].  Tensor sizes: [6, 0, 17, 57]
2025-03-05 15:23:04.514901 test begin: paddle.broadcast_to(Tensor([6, 0, 17, 97],"bool"), list[6,8,17,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 17, 97],"bool"), list[6,8,17,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 17, 97].  Tensor sizes: [6, 0, 17, 97]
2025-03-05 15:23:04.521284 test begin: paddle.broadcast_to(Tensor([6, 0, 170, 170],"bool"), list[6,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 170, 170],"bool"), list[6,8,170,170,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 170, 170].  Tensor sizes: [6, 0, 170, 170]
2025-03-05 15:23:04.523357 test begin: paddle.broadcast_to(Tensor([6, 0, 170, 57],"bool"), list[6,8,170,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 170, 57],"bool"), list[6,8,170,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 170, 57].  Tensor sizes: [6, 0, 170, 57]
2025-03-05 15:23:04.523983 test begin: paddle.broadcast_to(Tensor([6, 0, 171, 171],"bool"), list[6,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 171, 171],"bool"), list[6,8,171,171,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 171, 171].  Tensor sizes: [6, 0, 171, 171]
2025-03-05 15:23:04.524777 test begin: paddle.broadcast_to(Tensor([6, 0, 171, 57],"bool"), list[6,8,171,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 171, 57],"bool"), list[6,8,171,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 171, 57].  Tensor sizes: [6, 0, 171, 57]
2025-03-05 15:23:04.525545 test begin: paddle.broadcast_to(Tensor([6, 0, 172, 172],"bool"), list[6,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 172, 172],"bool"), list[6,8,172,172,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 172, 172].  Tensor sizes: [6, 0, 172, 172]
2025-03-05 15:23:04.526706 test begin: paddle.broadcast_to(Tensor([6, 0, 172, 57],"bool"), list[6,8,172,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 172, 57],"bool"), list[6,8,172,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 172, 57].  Tensor sizes: [6, 0, 172, 57]
2025-03-05 15:23:04.527774 test begin: paddle.broadcast_to(Tensor([6, 0, 173, 173],"bool"), list[6,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 173, 173],"bool"), list[6,8,173,173,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 173, 173].  Tensor sizes: [6, 0, 173, 173]
2025-03-05 15:23:04.528424 test begin: paddle.broadcast_to(Tensor([6, 0, 173, 57],"bool"), list[6,8,173,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 173, 57],"bool"), list[6,8,173,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 173, 57].  Tensor sizes: [6, 0, 173, 57]
2025-03-05 15:23:04.529274 test begin: paddle.broadcast_to(Tensor([6, 0, 174, 174],"bool"), list[6,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 174, 174],"bool"), list[6,8,174,174,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 174, 174].  Tensor sizes: [6, 0, 174, 174]
2025-03-05 15:23:04.529929 test begin: paddle.broadcast_to(Tensor([6, 0, 174, 57],"bool"), list[6,8,174,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 174, 57],"bool"), list[6,8,174,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 174, 57].  Tensor sizes: [6, 0, 174, 57]
2025-03-05 15:23:04.531247 test begin: paddle.broadcast_to(Tensor([6, 0, 175, 175],"bool"), list[6,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 175, 175],"bool"), list[6,8,175,175,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 175, 175].  Tensor sizes: [6, 0, 175, 175]
2025-03-05 15:23:04.532015 test begin: paddle.broadcast_to(Tensor([6, 0, 175, 57],"bool"), list[6,8,175,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 175, 57],"bool"), list[6,8,175,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 175, 57].  Tensor sizes: [6, 0, 175, 57]
2025-03-05 15:23:04.532861 test begin: paddle.broadcast_to(Tensor([6, 0, 176, 176],"bool"), list[6,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 176, 176],"bool"), list[6,8,176,176,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 176, 176].  Tensor sizes: [6, 0, 176, 176]
2025-03-05 15:23:04.533476 test begin: paddle.broadcast_to(Tensor([6, 0, 176, 57],"bool"), list[6,8,176,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 176, 57],"bool"), list[6,8,176,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 176, 57].  Tensor sizes: [6, 0, 176, 57]
2025-03-05 15:23:04.534060 test begin: paddle.broadcast_to(Tensor([6, 0, 177, 177],"bool"), list[6,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 177, 177],"bool"), list[6,8,177,177,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 177, 177].  Tensor sizes: [6, 0, 177, 177]
2025-03-05 15:23:04.534634 test begin: paddle.broadcast_to(Tensor([6, 0, 177, 57],"bool"), list[6,8,177,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 177, 57],"bool"), list[6,8,177,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 177, 57].  Tensor sizes: [6, 0, 177, 57]
2025-03-05 15:23:04.535160 test begin: paddle.broadcast_to(Tensor([6, 0, 178, 178],"bool"), list[6,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 178, 178],"bool"), list[6,8,178,178,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 178, 178].  Tensor sizes: [6, 0, 178, 178]
2025-03-05 15:23:04.536001 test begin: paddle.broadcast_to(Tensor([6, 0, 178, 57],"bool"), list[6,8,178,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 178, 57],"bool"), list[6,8,178,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 178, 57].  Tensor sizes: [6, 0, 178, 57]
2025-03-05 15:23:04.536664 test begin: paddle.broadcast_to(Tensor([6, 0, 179, 179],"bool"), list[6,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 179, 179],"bool"), list[6,8,179,179,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 179, 179].  Tensor sizes: [6, 0, 179, 179]
2025-03-05 15:23:04.537440 test begin: paddle.broadcast_to(Tensor([6, 0, 179, 57],"bool"), list[6,8,179,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 179, 57],"bool"), list[6,8,179,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 179, 57].  Tensor sizes: [6, 0, 179, 57]
2025-03-05 15:23:04.538400 test begin: paddle.broadcast_to(Tensor([6, 0, 18, 18],"bool"), list[6,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 18, 18],"bool"), list[6,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 18, 18].  Tensor sizes: [6, 0, 18, 18]
2025-03-05 15:23:04.539009 test begin: paddle.broadcast_to(Tensor([6, 0, 18, 25],"bool"), list[6,8,18,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 18, 25],"bool"), list[6,8,18,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 18, 25].  Tensor sizes: [6, 0, 18, 25]
2025-03-05 15:23:04.539603 test begin: paddle.broadcast_to(Tensor([6, 0, 18, 45],"bool"), list[6,8,18,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 18, 45],"bool"), list[6,8,18,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 18, 45].  Tensor sizes: [6, 0, 18, 45]
2025-03-05 15:23:04.540377 test begin: paddle.broadcast_to(Tensor([6, 0, 18, 57],"bool"), list[6,8,18,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 18, 57],"bool"), list[6,8,18,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 18, 57].  Tensor sizes: [6, 0, 18, 57]
2025-03-05 15:23:04.541156 test begin: paddle.broadcast_to(Tensor([6, 0, 18, 97],"bool"), list[6,8,18,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 18, 97],"bool"), list[6,8,18,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 18, 97].  Tensor sizes: [6, 0, 18, 97]
2025-03-05 15:23:04.541987 test begin: paddle.broadcast_to(Tensor([6, 0, 180, 180],"bool"), list[6,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 180, 180],"bool"), list[6,8,180,180,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 180, 180].  Tensor sizes: [6, 0, 180, 180]
2025-03-05 15:23:04.542648 test begin: paddle.broadcast_to(Tensor([6, 0, 180, 57],"bool"), list[6,8,180,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 180, 57],"bool"), list[6,8,180,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 180, 57].  Tensor sizes: [6, 0, 180, 57]
2025-03-05 15:23:04.543391 test begin: paddle.broadcast_to(Tensor([6, 0, 181, 181],"bool"), list[6,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 181, 181],"bool"), list[6,8,181,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 181, 181].  Tensor sizes: [6, 0, 181, 181]
2025-03-05 15:23:04.544359 test begin: paddle.broadcast_to(Tensor([6, 0, 181, 57],"bool"), list[6,8,181,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 181, 57],"bool"), list[6,8,181,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 181, 57].  Tensor sizes: [6, 0, 181, 57]
2025-03-05 15:23:04.545052 test begin: paddle.broadcast_to(Tensor([6, 0, 182, 182],"bool"), list[6,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 182, 182],"bool"), list[6,8,182,182,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 182, 182].  Tensor sizes: [6, 0, 182, 182]
2025-03-05 15:23:04.545916 test begin: paddle.broadcast_to(Tensor([6, 0, 182, 57],"bool"), list[6,8,182,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 182, 57],"bool"), list[6,8,182,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 182, 57].  Tensor sizes: [6, 0, 182, 57]
2025-03-05 15:23:04.546617 test begin: paddle.broadcast_to(Tensor([6, 0, 183, 183],"bool"), list[6,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 183, 183],"bool"), list[6,8,183,183,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 183, 183].  Tensor sizes: [6, 0, 183, 183]
2025-03-05 15:23:04.547276 test begin: paddle.broadcast_to(Tensor([6, 0, 183, 57],"bool"), list[6,8,183,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 183, 57],"bool"), list[6,8,183,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 183, 57].  Tensor sizes: [6, 0, 183, 57]
2025-03-05 15:23:04.548120 test begin: paddle.broadcast_to(Tensor([6, 0, 184, 184],"bool"), list[6,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 184, 184],"bool"), list[6,8,184,184,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 184, 184].  Tensor sizes: [6, 0, 184, 184]
2025-03-05 15:23:04.548942 test begin: paddle.broadcast_to(Tensor([6, 0, 184, 57],"bool"), list[6,8,184,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 184, 57],"bool"), list[6,8,184,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 184, 57].  Tensor sizes: [6, 0, 184, 57]
2025-03-05 15:23:04.549837 test begin: paddle.broadcast_to(Tensor([6, 0, 185, 185],"bool"), list[6,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 185, 185],"bool"), list[6,8,185,185,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 185, 185].  Tensor sizes: [6, 0, 185, 185]
2025-03-05 15:23:04.550489 test begin: paddle.broadcast_to(Tensor([6, 0, 185, 57],"bool"), list[6,8,185,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 185, 57],"bool"), list[6,8,185,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 185, 57].  Tensor sizes: [6, 0, 185, 57]
2025-03-05 15:23:04.551213 test begin: paddle.broadcast_to(Tensor([6, 0, 19, 19],"bool"), list[6,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 19, 19],"bool"), list[6,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 19, 19].  Tensor sizes: [6, 0, 19, 19]
2025-03-05 15:23:04.552004 test begin: paddle.broadcast_to(Tensor([6, 0, 19, 25],"bool"), list[6,8,19,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 19, 25],"bool"), list[6,8,19,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 19, 25].  Tensor sizes: [6, 0, 19, 25]
2025-03-05 15:23:04.552739 test begin: paddle.broadcast_to(Tensor([6, 0, 19, 45],"bool"), list[6,8,19,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 19, 45],"bool"), list[6,8,19,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 19, 45].  Tensor sizes: [6, 0, 19, 45]
2025-03-05 15:23:04.553438 test begin: paddle.broadcast_to(Tensor([6, 0, 19, 57],"bool"), list[6,8,19,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 19, 57],"bool"), list[6,8,19,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 19, 57].  Tensor sizes: [6, 0, 19, 57]
2025-03-05 15:23:04.554148 test begin: paddle.broadcast_to(Tensor([6, 0, 19, 97],"bool"), list[6,8,19,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 19, 97],"bool"), list[6,8,19,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 19, 97].  Tensor sizes: [6, 0, 19, 97]
2025-03-05 15:23:04.554832 test begin: paddle.broadcast_to(Tensor([6, 0, 2, 25],"bool"), list[6,8,2,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 2, 25],"bool"), list[6,8,2,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 2, 25].  Tensor sizes: [6, 0, 2, 25]
2025-03-05 15:23:04.555498 test begin: paddle.broadcast_to(Tensor([6, 0, 2, 2],"bool"), list[6,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 2, 2],"bool"), list[6,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 2, 2].  Tensor sizes: [6, 0, 2, 2]
2025-03-05 15:23:04.556087 test begin: paddle.broadcast_to(Tensor([6, 0, 2, 45],"bool"), list[6,8,2,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 2, 45],"bool"), list[6,8,2,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 2, 45].  Tensor sizes: [6, 0, 2, 45]
2025-03-05 15:23:04.556938 test begin: paddle.broadcast_to(Tensor([6, 0, 2, 57],"bool"), list[6,8,2,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 2, 57],"bool"), list[6,8,2,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 2, 57].  Tensor sizes: [6, 0, 2, 57]
2025-03-05 15:23:04.557723 test begin: paddle.broadcast_to(Tensor([6, 0, 2, 97],"bool"), list[6,8,2,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 2, 97],"bool"), list[6,8,2,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 2, 97].  Tensor sizes: [6, 0, 2, 97]
2025-03-05 15:23:04.558394 test begin: paddle.broadcast_to(Tensor([6, 0, 20, 20],"bool"), list[6,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 20, 20],"bool"), list[6,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 20, 20].  Tensor sizes: [6, 0, 20, 20]
2025-03-05 15:23:04.559246 test begin: paddle.broadcast_to(Tensor([6, 0, 20, 25],"bool"), list[6,8,20,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 20, 25],"bool"), list[6,8,20,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 20, 25].  Tensor sizes: [6, 0, 20, 25]
2025-03-05 15:23:04.560091 test begin: paddle.broadcast_to(Tensor([6, 0, 20, 45],"bool"), list[6,8,20,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 20, 45],"bool"), list[6,8,20,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 20, 45].  Tensor sizes: [6, 0, 20, 45]
2025-03-05 15:23:04.561212 test begin: paddle.broadcast_to(Tensor([6, 0, 20, 57],"bool"), list[6,8,20,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 20, 57],"bool"), list[6,8,20,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 20, 57].  Tensor sizes: [6, 0, 20, 57]
2025-03-05 15:23:04.562195 test begin: paddle.broadcast_to(Tensor([6, 0, 20, 97],"bool"), list[6,8,20,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 20, 97],"bool"), list[6,8,20,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 20, 97].  Tensor sizes: [6, 0, 20, 97]
2025-03-05 15:23:04.562961 test begin: paddle.broadcast_to(Tensor([6, 0, 21, 21],"bool"), list[6,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 21, 21],"bool"), list[6,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 21, 21].  Tensor sizes: [6, 0, 21, 21]
2025-03-05 15:23:04.563897 test begin: paddle.broadcast_to(Tensor([6, 0, 21, 25],"bool"), list[6,8,21,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 21, 25],"bool"), list[6,8,21,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 21, 25].  Tensor sizes: [6, 0, 21, 25]
2025-03-05 15:23:04.564756 test begin: paddle.broadcast_to(Tensor([6, 0, 21, 45],"bool"), list[6,8,21,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 21, 45],"bool"), list[6,8,21,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 21, 45].  Tensor sizes: [6, 0, 21, 45]
2025-03-05 15:23:04.565418 test begin: paddle.broadcast_to(Tensor([6, 0, 21, 57],"bool"), list[6,8,21,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 21, 57],"bool"), list[6,8,21,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 21, 57].  Tensor sizes: [6, 0, 21, 57]
2025-03-05 15:23:04.566186 test begin: paddle.broadcast_to(Tensor([6, 0, 21, 97],"bool"), list[6,8,21,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 21, 97],"bool"), list[6,8,21,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 21, 97].  Tensor sizes: [6, 0, 21, 97]
2025-03-05 15:23:04.567069 test begin: paddle.broadcast_to(Tensor([6, 0, 22, 22],"bool"), list[6,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 22, 22],"bool"), list[6,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 22, 22].  Tensor sizes: [6, 0, 22, 22]
2025-03-05 15:23:04.567835 test begin: paddle.broadcast_to(Tensor([6, 0, 22, 25],"bool"), list[6,8,22,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 22, 25],"bool"), list[6,8,22,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 22, 25].  Tensor sizes: [6, 0, 22, 25]
2025-03-05 15:23:04.568603 test begin: paddle.broadcast_to(Tensor([6, 0, 22, 45],"bool"), list[6,8,22,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 22, 45],"bool"), list[6,8,22,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 22, 45].  Tensor sizes: [6, 0, 22, 45]
2025-03-05 15:23:04.569256 test begin: paddle.broadcast_to(Tensor([6, 0, 22, 57],"bool"), list[6,8,22,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 22, 57],"bool"), list[6,8,22,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 22, 57].  Tensor sizes: [6, 0, 22, 57]
2025-03-05 15:23:04.570406 test begin: paddle.broadcast_to(Tensor([6, 0, 22, 97],"bool"), list[6,8,22,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 22, 97],"bool"), list[6,8,22,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 22, 97].  Tensor sizes: [6, 0, 22, 97]
2025-03-05 15:23:04.571449 test begin: paddle.broadcast_to(Tensor([6, 0, 23, 23],"bool"), list[6,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 23, 23],"bool"), list[6,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 23, 23].  Tensor sizes: [6, 0, 23, 23]
2025-03-05 15:23:04.572385 test begin: paddle.broadcast_to(Tensor([6, 0, 23, 25],"bool"), list[6,8,23,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 23, 25],"bool"), list[6,8,23,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 23, 25].  Tensor sizes: [6, 0, 23, 25]
2025-03-05 15:23:04.573282 test begin: paddle.broadcast_to(Tensor([6, 0, 23, 45],"bool"), list[6,8,23,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 23, 45],"bool"), list[6,8,23,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 23, 45].  Tensor sizes: [6, 0, 23, 45]
2025-03-05 15:23:04.574109 test begin: paddle.broadcast_to(Tensor([6, 0, 23, 57],"bool"), list[6,8,23,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 23, 57],"bool"), list[6,8,23,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 23, 57].  Tensor sizes: [6, 0, 23, 57]
2025-03-05 15:23:04.574800 test begin: paddle.broadcast_to(Tensor([6, 0, 23, 97],"bool"), list[6,8,23,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 23, 97],"bool"), list[6,8,23,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 23, 97].  Tensor sizes: [6, 0, 23, 97]
2025-03-05 15:23:04.575937 test begin: paddle.broadcast_to(Tensor([6, 0, 24, 24],"bool"), list[6,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 24, 24],"bool"), list[6,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 24, 24].  Tensor sizes: [6, 0, 24, 24]
2025-03-05 15:23:04.576599 test begin: paddle.broadcast_to(Tensor([6, 0, 24, 25],"bool"), list[6,8,24,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 24, 25],"bool"), list[6,8,24,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 24, 25].  Tensor sizes: [6, 0, 24, 25]
2025-03-05 15:23:04.577348 test begin: paddle.broadcast_to(Tensor([6, 0, 24, 45],"bool"), list[6,8,24,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 24, 45],"bool"), list[6,8,24,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 24, 45].  Tensor sizes: [6, 0, 24, 45]
2025-03-05 15:23:04.578017 test begin: paddle.broadcast_to(Tensor([6, 0, 24, 57],"bool"), list[6,8,24,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 24, 57],"bool"), list[6,8,24,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 24, 57].  Tensor sizes: [6, 0, 24, 57]
2025-03-05 15:23:04.578717 test begin: paddle.broadcast_to(Tensor([6, 0, 24, 97],"bool"), list[6,8,24,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 24, 97],"bool"), list[6,8,24,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 24, 97].  Tensor sizes: [6, 0, 24, 97]
2025-03-05 15:23:04.579395 test begin: paddle.broadcast_to(Tensor([6, 0, 25, 25],"bool"), list[6,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 25, 25],"bool"), list[6,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 25, 25].  Tensor sizes: [6, 0, 25, 25]
2025-03-05 15:23:04.580056 test begin: paddle.broadcast_to(Tensor([6, 0, 25, 45],"bool"), list[6,8,25,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 25, 45],"bool"), list[6,8,25,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 25, 45].  Tensor sizes: [6, 0, 25, 45]
2025-03-05 15:23:04.580825 test begin: paddle.broadcast_to(Tensor([6, 0, 25, 57],"bool"), list[6,8,25,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 25, 57],"bool"), list[6,8,25,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 25, 57].  Tensor sizes: [6, 0, 25, 57]
2025-03-05 15:23:04.581704 test begin: paddle.broadcast_to(Tensor([6, 0, 25, 97],"bool"), list[6,8,25,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 25, 97],"bool"), list[6,8,25,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 25, 97].  Tensor sizes: [6, 0, 25, 97]
2025-03-05 15:23:04.582339 test begin: paddle.broadcast_to(Tensor([6, 0, 26, 25],"bool"), list[6,8,26,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 26, 25],"bool"), list[6,8,26,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 26, 25].  Tensor sizes: [6, 0, 26, 25]
2025-03-05 15:23:04.582894 test begin: paddle.broadcast_to(Tensor([6, 0, 26, 26],"bool"), list[6,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 26, 26],"bool"), list[6,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 26, 26].  Tensor sizes: [6, 0, 26, 26]
2025-03-05 15:23:04.583413 test begin: paddle.broadcast_to(Tensor([6, 0, 26, 45],"bool"), list[6,8,26,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 26, 45],"bool"), list[6,8,26,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 26, 45].  Tensor sizes: [6, 0, 26, 45]
2025-03-05 15:23:04.584140 test begin: paddle.broadcast_to(Tensor([6, 0, 26, 57],"bool"), list[6,8,26,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 26, 57],"bool"), list[6,8,26,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 26, 57].  Tensor sizes: [6, 0, 26, 57]
2025-03-05 15:23:04.585271 test begin: paddle.broadcast_to(Tensor([6, 0, 26, 97],"bool"), list[6,8,26,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 26, 97],"bool"), list[6,8,26,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 26, 97].  Tensor sizes: [6, 0, 26, 97]
2025-03-05 15:23:04.585936 test begin: paddle.broadcast_to(Tensor([6, 0, 27, 25],"bool"), list[6,8,27,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 27, 25],"bool"), list[6,8,27,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 27, 25].  Tensor sizes: [6, 0, 27, 25]
2025-03-05 15:23:04.586713 test begin: paddle.broadcast_to(Tensor([6, 0, 27, 27],"bool"), list[6,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 27, 27],"bool"), list[6,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 27, 27].  Tensor sizes: [6, 0, 27, 27]
2025-03-05 15:23:04.587419 test begin: paddle.broadcast_to(Tensor([6, 0, 27, 45],"bool"), list[6,8,27,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 27, 45],"bool"), list[6,8,27,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 27, 45].  Tensor sizes: [6, 0, 27, 45]
2025-03-05 15:23:04.588573 test begin: paddle.broadcast_to(Tensor([6, 0, 27, 57],"bool"), list[6,8,27,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 27, 57],"bool"), list[6,8,27,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 27, 57].  Tensor sizes: [6, 0, 27, 57]
2025-03-05 15:23:04.589342 test begin: paddle.broadcast_to(Tensor([6, 0, 27, 97],"bool"), list[6,8,27,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 27, 97],"bool"), list[6,8,27,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 27, 97].  Tensor sizes: [6, 0, 27, 97]
2025-03-05 15:23:04.589959 test begin: paddle.broadcast_to(Tensor([6, 0, 28, 25],"bool"), list[6,8,28,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 28, 25],"bool"), list[6,8,28,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 28, 25].  Tensor sizes: [6, 0, 28, 25]
2025-03-05 15:23:04.594973 test begin: paddle.broadcast_to(Tensor([6, 0, 28, 28],"bool"), list[6,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 28, 28],"bool"), list[6,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 28, 28].  Tensor sizes: [6, 0, 28, 28]
2025-03-05 15:23:04.595821 test begin: paddle.broadcast_to(Tensor([6, 0, 28, 45],"bool"), list[6,8,28,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 28, 45],"bool"), list[6,8,28,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 28, 45].  Tensor sizes: [6, 0, 28, 45]
2025-03-05 15:23:04.596523 test begin: paddle.broadcast_to(Tensor([6, 0, 28, 57],"bool"), list[6,8,28,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 28, 57],"bool"), list[6,8,28,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 28, 57].  Tensor sizes: [6, 0, 28, 57]
2025-03-05 15:23:04.597103 test begin: paddle.broadcast_to(Tensor([6, 0, 28, 97],"bool"), list[6,8,28,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 28, 97],"bool"), list[6,8,28,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 28, 97].  Tensor sizes: [6, 0, 28, 97]
2025-03-05 15:23:04.597843 test begin: paddle.broadcast_to(Tensor([6, 0, 29, 25],"bool"), list[6,8,29,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 29, 25],"bool"), list[6,8,29,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 29, 25].  Tensor sizes: [6, 0, 29, 25]
2025-03-05 15:23:04.598514 test begin: paddle.broadcast_to(Tensor([6, 0, 29, 29],"bool"), list[6,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 29, 29],"bool"), list[6,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 29, 29].  Tensor sizes: [6, 0, 29, 29]
2025-03-05 15:23:04.599184 test begin: paddle.broadcast_to(Tensor([6, 0, 29, 45],"bool"), list[6,8,29,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 29, 45],"bool"), list[6,8,29,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 29, 45].  Tensor sizes: [6, 0, 29, 45]
2025-03-05 15:23:04.599879 test begin: paddle.broadcast_to(Tensor([6, 0, 29, 57],"bool"), list[6,8,29,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 29, 57],"bool"), list[6,8,29,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 29, 57].  Tensor sizes: [6, 0, 29, 57]
2025-03-05 15:23:04.600595 test begin: paddle.broadcast_to(Tensor([6, 0, 29, 97],"bool"), list[6,8,29,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 29, 97],"bool"), list[6,8,29,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 29, 97].  Tensor sizes: [6, 0, 29, 97]
2025-03-05 15:23:04.601346 test begin: paddle.broadcast_to(Tensor([6, 0, 3, 25],"bool"), list[6,8,3,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 3, 25],"bool"), list[6,8,3,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 3, 25].  Tensor sizes: [6, 0, 3, 25]
2025-03-05 15:23:04.601946 test begin: paddle.broadcast_to(Tensor([6, 0, 3, 3],"bool"), list[6,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 3, 3],"bool"), list[6,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 3, 3].  Tensor sizes: [6, 0, 3, 3]
2025-03-05 15:23:04.602595 test begin: paddle.broadcast_to(Tensor([6, 0, 3, 45],"bool"), list[6,8,3,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 3, 45],"bool"), list[6,8,3,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 3, 45].  Tensor sizes: [6, 0, 3, 45]
2025-03-05 15:23:04.603191 test begin: paddle.broadcast_to(Tensor([6, 0, 3, 57],"bool"), list[6,8,3,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 3, 57],"bool"), list[6,8,3,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 3, 57].  Tensor sizes: [6, 0, 3, 57]
2025-03-05 15:23:04.603898 test begin: paddle.broadcast_to(Tensor([6, 0, 3, 97],"bool"), list[6,8,3,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 3, 97],"bool"), list[6,8,3,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 3, 97].  Tensor sizes: [6, 0, 3, 97]
2025-03-05 15:23:04.604631 test begin: paddle.broadcast_to(Tensor([6, 0, 30, 25],"bool"), list[6,8,30,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 30, 25],"bool"), list[6,8,30,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 30, 25].  Tensor sizes: [6, 0, 30, 25]
2025-03-05 15:23:04.605458 test begin: paddle.broadcast_to(Tensor([6, 0, 30, 30],"bool"), list[6,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 30, 30],"bool"), list[6,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 30, 30].  Tensor sizes: [6, 0, 30, 30]
2025-03-05 15:23:04.606098 test begin: paddle.broadcast_to(Tensor([6, 0, 30, 45],"bool"), list[6,8,30,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 30, 45],"bool"), list[6,8,30,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 30, 45].  Tensor sizes: [6, 0, 30, 45]
2025-03-05 15:23:04.606649 test begin: paddle.broadcast_to(Tensor([6, 0, 30, 57],"bool"), list[6,8,30,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 30, 57],"bool"), list[6,8,30,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 30, 57].  Tensor sizes: [6, 0, 30, 57]
2025-03-05 15:23:04.607254 test begin: paddle.broadcast_to(Tensor([6, 0, 30, 97],"bool"), list[6,8,30,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 30, 97],"bool"), list[6,8,30,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 30, 97].  Tensor sizes: [6, 0, 30, 97]
2025-03-05 15:23:04.607801 test begin: paddle.broadcast_to(Tensor([6, 0, 31, 25],"bool"), list[6,8,31,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 31, 25],"bool"), list[6,8,31,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 31, 25].  Tensor sizes: [6, 0, 31, 25]
2025-03-05 15:23:04.608318 test begin: paddle.broadcast_to(Tensor([6, 0, 31, 31],"bool"), list[6,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 31, 31],"bool"), list[6,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 31, 31].  Tensor sizes: [6, 0, 31, 31]
2025-03-05 15:23:04.608923 test begin: paddle.broadcast_to(Tensor([6, 0, 31, 45],"bool"), list[6,8,31,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 31, 45],"bool"), list[6,8,31,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 31, 45].  Tensor sizes: [6, 0, 31, 45]
2025-03-05 15:23:04.609619 test begin: paddle.broadcast_to(Tensor([6, 0, 31, 57],"bool"), list[6,8,31,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 31, 57],"bool"), list[6,8,31,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 31, 57].  Tensor sizes: [6, 0, 31, 57]
2025-03-05 15:23:04.610348 test begin: paddle.broadcast_to(Tensor([6, 0, 31, 97],"bool"), list[6,8,31,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 31, 97],"bool"), list[6,8,31,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 31, 97].  Tensor sizes: [6, 0, 31, 97]
2025-03-05 15:23:04.611545 test begin: paddle.broadcast_to(Tensor([6, 0, 32, 25],"bool"), list[6,8,32,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 32, 25],"bool"), list[6,8,32,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 32, 25].  Tensor sizes: [6, 0, 32, 25]
2025-03-05 15:23:04.612269 test begin: paddle.broadcast_to(Tensor([6, 0, 32, 32],"bool"), list[6,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 32, 32],"bool"), list[6,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 32, 32].  Tensor sizes: [6, 0, 32, 32]
2025-03-05 15:23:04.612973 test begin: paddle.broadcast_to(Tensor([6, 0, 32, 45],"bool"), list[6,8,32,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 32, 45],"bool"), list[6,8,32,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 32, 45].  Tensor sizes: [6, 0, 32, 45]
2025-03-05 15:23:04.613632 test begin: paddle.broadcast_to(Tensor([6, 0, 32, 57],"bool"), list[6,8,32,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 32, 57],"bool"), list[6,8,32,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 32, 57].  Tensor sizes: [6, 0, 32, 57]
2025-03-05 15:23:04.614244 test begin: paddle.broadcast_to(Tensor([6, 0, 32, 97],"bool"), list[6,8,32,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 32, 97],"bool"), list[6,8,32,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 32, 97].  Tensor sizes: [6, 0, 32, 97]
2025-03-05 15:23:04.614880 test begin: paddle.broadcast_to(Tensor([6, 0, 33, 25],"bool"), list[6,8,33,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 33, 25],"bool"), list[6,8,33,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 33, 25].  Tensor sizes: [6, 0, 33, 25]
2025-03-05 15:23:04.615654 test begin: paddle.broadcast_to(Tensor([6, 0, 33, 33],"bool"), list[6,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 33, 33],"bool"), list[6,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 33, 33].  Tensor sizes: [6, 0, 33, 33]
2025-03-05 15:23:04.616347 test begin: paddle.broadcast_to(Tensor([6, 0, 33, 45],"bool"), list[6,8,33,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 33, 45],"bool"), list[6,8,33,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 33, 45].  Tensor sizes: [6, 0, 33, 45]
2025-03-05 15:23:04.616980 test begin: paddle.broadcast_to(Tensor([6, 0, 33, 57],"bool"), list[6,8,33,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 33, 57],"bool"), list[6,8,33,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 33, 57].  Tensor sizes: [6, 0, 33, 57]
2025-03-05 15:23:04.617869 test begin: paddle.broadcast_to(Tensor([6, 0, 33, 97],"bool"), list[6,8,33,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 33, 97],"bool"), list[6,8,33,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 33, 97].  Tensor sizes: [6, 0, 33, 97]
2025-03-05 15:23:04.618472 test begin: paddle.broadcast_to(Tensor([6, 0, 34, 25],"bool"), list[6,8,34,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 34, 25],"bool"), list[6,8,34,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 34, 25].  Tensor sizes: [6, 0, 34, 25]
2025-03-05 15:23:04.619396 test begin: paddle.broadcast_to(Tensor([6, 0, 34, 34],"bool"), list[6,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 34, 34],"bool"), list[6,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 34, 34].  Tensor sizes: [6, 0, 34, 34]
2025-03-05 15:23:04.620103 test begin: paddle.broadcast_to(Tensor([6, 0, 34, 45],"bool"), list[6,8,34,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 34, 45],"bool"), list[6,8,34,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 34, 45].  Tensor sizes: [6, 0, 34, 45]
2025-03-05 15:23:04.620708 test begin: paddle.broadcast_to(Tensor([6, 0, 34, 57],"bool"), list[6,8,34,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 34, 57],"bool"), list[6,8,34,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 34, 57].  Tensor sizes: [6, 0, 34, 57]
2025-03-05 15:23:04.621247 test begin: paddle.broadcast_to(Tensor([6, 0, 34, 97],"bool"), list[6,8,34,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 34, 97],"bool"), list[6,8,34,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 34, 97].  Tensor sizes: [6, 0, 34, 97]
2025-03-05 15:23:04.621810 test begin: paddle.broadcast_to(Tensor([6, 0, 35, 25],"bool"), list[6,8,35,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 35, 25],"bool"), list[6,8,35,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 35, 25].  Tensor sizes: [6, 0, 35, 25]
2025-03-05 15:23:04.622522 test begin: paddle.broadcast_to(Tensor([6, 0, 35, 35],"bool"), list[6,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 35, 35],"bool"), list[6,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 35, 35].  Tensor sizes: [6, 0, 35, 35]
2025-03-05 15:23:04.623137 test begin: paddle.broadcast_to(Tensor([6, 0, 35, 45],"bool"), list[6,8,35,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 35, 45],"bool"), list[6,8,35,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 35, 45].  Tensor sizes: [6, 0, 35, 45]
2025-03-05 15:23:04.624109 test begin: paddle.broadcast_to(Tensor([6, 0, 35, 57],"bool"), list[6,8,35,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 35, 57],"bool"), list[6,8,35,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 35, 57].  Tensor sizes: [6, 0, 35, 57]
2025-03-05 15:23:04.625335 test begin: paddle.broadcast_to(Tensor([6, 0, 35, 97],"bool"), list[6,8,35,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 35, 97],"bool"), list[6,8,35,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 35, 97].  Tensor sizes: [6, 0, 35, 97]
2025-03-05 15:23:04.625866 test begin: paddle.broadcast_to(Tensor([6, 0, 36, 25],"bool"), list[6,8,36,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 36, 25],"bool"), list[6,8,36,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 36, 25].  Tensor sizes: [6, 0, 36, 25]
2025-03-05 15:23:04.626379 test begin: paddle.broadcast_to(Tensor([6, 0, 36, 36],"bool"), list[6,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 36, 36],"bool"), list[6,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 36, 36].  Tensor sizes: [6, 0, 36, 36]
2025-03-05 15:23:04.626892 test begin: paddle.broadcast_to(Tensor([6, 0, 36, 45],"bool"), list[6,8,36,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 36, 45],"bool"), list[6,8,36,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 36, 45].  Tensor sizes: [6, 0, 36, 45]
2025-03-05 15:23:04.627427 test begin: paddle.broadcast_to(Tensor([6, 0, 36, 57],"bool"), list[6,8,36,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 36, 57],"bool"), list[6,8,36,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 36, 57].  Tensor sizes: [6, 0, 36, 57]
2025-03-05 15:23:04.628312 test begin: paddle.broadcast_to(Tensor([6, 0, 36, 97],"bool"), list[6,8,36,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 36, 97],"bool"), list[6,8,36,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 36, 97].  Tensor sizes: [6, 0, 36, 97]
2025-03-05 15:23:04.628973 test begin: paddle.broadcast_to(Tensor([6, 0, 37, 25],"bool"), list[6,8,37,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 37, 25],"bool"), list[6,8,37,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 37, 25].  Tensor sizes: [6, 0, 37, 25]
2025-03-05 15:23:04.629754 test begin: paddle.broadcast_to(Tensor([6, 0, 37, 37],"bool"), list[6,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 37, 37],"bool"), list[6,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 37, 37].  Tensor sizes: [6, 0, 37, 37]
2025-03-05 15:23:04.630359 test begin: paddle.broadcast_to(Tensor([6, 0, 37, 45],"bool"), list[6,8,37,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 37, 45],"bool"), list[6,8,37,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 37, 45].  Tensor sizes: [6, 0, 37, 45]
2025-03-05 15:23:04.630901 test begin: paddle.broadcast_to(Tensor([6, 0, 37, 57],"bool"), list[6,8,37,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 37, 57],"bool"), list[6,8,37,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 37, 57].  Tensor sizes: [6, 0, 37, 57]
2025-03-05 15:23:04.631411 test begin: paddle.broadcast_to(Tensor([6, 0, 37, 97],"bool"), list[6,8,37,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 37, 97],"bool"), list[6,8,37,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 37, 97].  Tensor sizes: [6, 0, 37, 97]
2025-03-05 15:23:04.631950 test begin: paddle.broadcast_to(Tensor([6, 0, 38, 25],"bool"), list[6,8,38,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 38, 25],"bool"), list[6,8,38,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 38, 25].  Tensor sizes: [6, 0, 38, 25]
2025-03-05 15:23:04.633078 test begin: paddle.broadcast_to(Tensor([6, 0, 38, 38],"bool"), list[6,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 38, 38],"bool"), list[6,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 38, 38].  Tensor sizes: [6, 0, 38, 38]
2025-03-05 15:23:04.633672 test begin: paddle.broadcast_to(Tensor([6, 0, 38, 45],"bool"), list[6,8,38,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 38, 45],"bool"), list[6,8,38,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 38, 45].  Tensor sizes: [6, 0, 38, 45]
2025-03-05 15:23:04.634566 test begin: paddle.broadcast_to(Tensor([6, 0, 38, 57],"bool"), list[6,8,38,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 38, 57],"bool"), list[6,8,38,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 38, 57].  Tensor sizes: [6, 0, 38, 57]
2025-03-05 15:23:04.635198 test begin: paddle.broadcast_to(Tensor([6, 0, 38, 97],"bool"), list[6,8,38,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 38, 97],"bool"), list[6,8,38,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 38, 97].  Tensor sizes: [6, 0, 38, 97]
2025-03-05 15:23:04.636181 test begin: paddle.broadcast_to(Tensor([6, 0, 39, 25],"bool"), list[6,8,39,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 39, 25],"bool"), list[6,8,39,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 39, 25].  Tensor sizes: [6, 0, 39, 25]
2025-03-05 15:23:04.637018 test begin: paddle.broadcast_to(Tensor([6, 0, 39, 39],"bool"), list[6,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 39, 39],"bool"), list[6,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 39, 39].  Tensor sizes: [6, 0, 39, 39]
2025-03-05 15:23:04.637734 test begin: paddle.broadcast_to(Tensor([6, 0, 39, 45],"bool"), list[6,8,39,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 39, 45],"bool"), list[6,8,39,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 39, 45].  Tensor sizes: [6, 0, 39, 45]
2025-03-05 15:23:04.638416 test begin: paddle.broadcast_to(Tensor([6, 0, 39, 57],"bool"), list[6,8,39,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 39, 57],"bool"), list[6,8,39,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 39, 57].  Tensor sizes: [6, 0, 39, 57]
2025-03-05 15:23:04.639085 test begin: paddle.broadcast_to(Tensor([6, 0, 39, 97],"bool"), list[6,8,39,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 39, 97],"bool"), list[6,8,39,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 39, 97].  Tensor sizes: [6, 0, 39, 97]
2025-03-05 15:23:04.639928 test begin: paddle.broadcast_to(Tensor([6, 0, 4, 25],"bool"), list[6,8,4,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 4, 25],"bool"), list[6,8,4,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 4, 25].  Tensor sizes: [6, 0, 4, 25]
2025-03-05 15:23:04.640785 test begin: paddle.broadcast_to(Tensor([6, 0, 4, 45],"bool"), list[6,8,4,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 4, 45],"bool"), list[6,8,4,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 4, 45].  Tensor sizes: [6, 0, 4, 45]
2025-03-05 15:23:04.641465 test begin: paddle.broadcast_to(Tensor([6, 0, 4, 4],"bool"), list[6,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 4, 4],"bool"), list[6,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 4, 4].  Tensor sizes: [6, 0, 4, 4]
2025-03-05 15:23:04.642108 test begin: paddle.broadcast_to(Tensor([6, 0, 4, 57],"bool"), list[6,8,4,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 4, 57],"bool"), list[6,8,4,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 4, 57].  Tensor sizes: [6, 0, 4, 57]
2025-03-05 15:23:04.642772 test begin: paddle.broadcast_to(Tensor([6, 0, 4, 5],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 4, 5],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [6, 0, 4, 5]
2025-03-05 15:23:04.643675 test begin: paddle.broadcast_to(Tensor([6, 0, 4, 97],"bool"), list[6,8,4,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 4, 97],"bool"), list[6,8,4,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 4, 97].  Tensor sizes: [6, 0, 4, 97]
2025-03-05 15:23:04.644928 test begin: paddle.broadcast_to(Tensor([6, 0, 40, 25],"bool"), list[6,8,40,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 40, 25],"bool"), list[6,8,40,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 40, 25].  Tensor sizes: [6, 0, 40, 25]
2025-03-05 15:23:04.645806 test begin: paddle.broadcast_to(Tensor([6, 0, 40, 40],"bool"), list[6,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 40, 40],"bool"), list[6,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 40, 40].  Tensor sizes: [6, 0, 40, 40]
2025-03-05 15:23:04.646987 test begin: paddle.broadcast_to(Tensor([6, 0, 40, 45],"bool"), list[6,8,40,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 40, 45],"bool"), list[6,8,40,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 40, 45].  Tensor sizes: [6, 0, 40, 45]
2025-03-05 15:23:04.647556 test begin: paddle.broadcast_to(Tensor([6, 0, 40, 57],"bool"), list[6,8,40,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 40, 57],"bool"), list[6,8,40,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 40, 57].  Tensor sizes: [6, 0, 40, 57]
2025-03-05 15:23:04.648462 test begin: paddle.broadcast_to(Tensor([6, 0, 40, 97],"bool"), list[6,8,40,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 40, 97],"bool"), list[6,8,40,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 40, 97].  Tensor sizes: [6, 0, 40, 97]
2025-03-05 15:23:04.649177 test begin: paddle.broadcast_to(Tensor([6, 0, 41, 25],"bool"), list[6,8,41,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 41, 25],"bool"), list[6,8,41,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 41, 25].  Tensor sizes: [6, 0, 41, 25]
2025-03-05 15:23:04.650463 test begin: paddle.broadcast_to(Tensor([6, 0, 41, 41],"bool"), list[6,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 41, 41],"bool"), list[6,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 41, 41].  Tensor sizes: [6, 0, 41, 41]
2025-03-05 15:23:04.651134 test begin: paddle.broadcast_to(Tensor([6, 0, 41, 45],"bool"), list[6,8,41,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 41, 45],"bool"), list[6,8,41,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 41, 45].  Tensor sizes: [6, 0, 41, 45]
2025-03-05 15:23:04.651837 test begin: paddle.broadcast_to(Tensor([6, 0, 41, 57],"bool"), list[6,8,41,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 41, 57],"bool"), list[6,8,41,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 41, 57].  Tensor sizes: [6, 0, 41, 57]
2025-03-05 15:23:04.652653 test begin: paddle.broadcast_to(Tensor([6, 0, 41, 97],"bool"), list[6,8,41,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 41, 97],"bool"), list[6,8,41,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 41, 97].  Tensor sizes: [6, 0, 41, 97]
2025-03-05 15:23:04.653301 test begin: paddle.broadcast_to(Tensor([6, 0, 42, 42],"bool"), list[6,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 42, 42],"bool"), list[6,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 42, 42].  Tensor sizes: [6, 0, 42, 42]
2025-03-05 15:23:04.653925 test begin: paddle.broadcast_to(Tensor([6, 0, 42, 45],"bool"), list[6,8,42,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 42, 45],"bool"), list[6,8,42,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 42, 45].  Tensor sizes: [6, 0, 42, 45]
2025-03-05 15:23:04.654979 test begin: paddle.broadcast_to(Tensor([6, 0, 42, 57],"bool"), list[6,8,42,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 42, 57],"bool"), list[6,8,42,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 42, 57].  Tensor sizes: [6, 0, 42, 57]
2025-03-05 15:23:04.655568 test begin: paddle.broadcast_to(Tensor([6, 0, 42, 97],"bool"), list[6,8,42,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 42, 97],"bool"), list[6,8,42,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 42, 97].  Tensor sizes: [6, 0, 42, 97]
2025-03-05 15:23:04.656140 test begin: paddle.broadcast_to(Tensor([6, 0, 43, 43],"bool"), list[6,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 43, 43],"bool"), list[6,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 43, 43].  Tensor sizes: [6, 0, 43, 43]
2025-03-05 15:23:04.657031 test begin: paddle.broadcast_to(Tensor([6, 0, 43, 45],"bool"), list[6,8,43,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 43, 45],"bool"), list[6,8,43,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 43, 45].  Tensor sizes: [6, 0, 43, 45]
2025-03-05 15:23:04.657733 test begin: paddle.broadcast_to(Tensor([6, 0, 43, 57],"bool"), list[6,8,43,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 43, 57],"bool"), list[6,8,43,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 43, 57].  Tensor sizes: [6, 0, 43, 57]
2025-03-05 15:23:04.658553 test begin: paddle.broadcast_to(Tensor([6, 0, 43, 97],"bool"), list[6,8,43,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 43, 97],"bool"), list[6,8,43,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 43, 97].  Tensor sizes: [6, 0, 43, 97]
2025-03-05 15:23:04.659245 test begin: paddle.broadcast_to(Tensor([6, 0, 44, 44],"bool"), list[6,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 44, 44],"bool"), list[6,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 44, 44].  Tensor sizes: [6, 0, 44, 44]
2025-03-05 15:23:04.659947 test begin: paddle.broadcast_to(Tensor([6, 0, 44, 45],"bool"), list[6,8,44,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 44, 45],"bool"), list[6,8,44,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 44, 45].  Tensor sizes: [6, 0, 44, 45]
2025-03-05 15:23:04.660572 test begin: paddle.broadcast_to(Tensor([6, 0, 44, 57],"bool"), list[6,8,44,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 44, 57],"bool"), list[6,8,44,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 44, 57].  Tensor sizes: [6, 0, 44, 57]
2025-03-05 15:23:04.661133 test begin: paddle.broadcast_to(Tensor([6, 0, 44, 97],"bool"), list[6,8,44,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 44, 97],"bool"), list[6,8,44,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 44, 97].  Tensor sizes: [6, 0, 44, 97]
2025-03-05 15:23:04.662769 test begin: paddle.broadcast_to(Tensor([6, 0, 45, 45],"bool"), list[6,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 45, 45],"bool"), list[6,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 45, 45].  Tensor sizes: [6, 0, 45, 45]
2025-03-05 15:23:04.663436 test begin: paddle.broadcast_to(Tensor([6, 0, 45, 57],"bool"), list[6,8,45,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 45, 57],"bool"), list[6,8,45,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 45, 57].  Tensor sizes: [6, 0, 45, 57]
2025-03-05 15:23:04.664258 test begin: paddle.broadcast_to(Tensor([6, 0, 45, 97],"bool"), list[6,8,45,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 45, 97],"bool"), list[6,8,45,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 45, 97].  Tensor sizes: [6, 0, 45, 97]
2025-03-05 15:23:04.664961 test begin: paddle.broadcast_to(Tensor([6, 0, 46, 45],"bool"), list[6,8,46,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 46, 45],"bool"), list[6,8,46,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 46, 45].  Tensor sizes: [6, 0, 46, 45]
2025-03-05 15:23:04.665651 test begin: paddle.broadcast_to(Tensor([6, 0, 46, 46],"bool"), list[6,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 46, 46],"bool"), list[6,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 46, 46].  Tensor sizes: [6, 0, 46, 46]
2025-03-05 15:23:04.666256 test begin: paddle.broadcast_to(Tensor([6, 0, 46, 57],"bool"), list[6,8,46,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 46, 57],"bool"), list[6,8,46,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 46, 57].  Tensor sizes: [6, 0, 46, 57]
2025-03-05 15:23:04.666802 test begin: paddle.broadcast_to(Tensor([6, 0, 46, 97],"bool"), list[6,8,46,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 46, 97],"bool"), list[6,8,46,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 46, 97].  Tensor sizes: [6, 0, 46, 97]
2025-03-05 15:23:04.667442 test begin: paddle.broadcast_to(Tensor([6, 0, 47, 45],"bool"), list[6,8,47,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 47, 45],"bool"), list[6,8,47,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 47, 45].  Tensor sizes: [6, 0, 47, 45]
2025-03-05 15:23:04.668093 test begin: paddle.broadcast_to(Tensor([6, 0, 47, 47],"bool"), list[6,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 47, 47],"bool"), list[6,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 47, 47].  Tensor sizes: [6, 0, 47, 47]
2025-03-05 15:23:04.668722 test begin: paddle.broadcast_to(Tensor([6, 0, 47, 57],"bool"), list[6,8,47,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 47, 57],"bool"), list[6,8,47,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 47, 57].  Tensor sizes: [6, 0, 47, 57]
2025-03-05 15:23:04.669395 test begin: paddle.broadcast_to(Tensor([6, 0, 47, 97],"bool"), list[6,8,47,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 47, 97],"bool"), list[6,8,47,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 47, 97].  Tensor sizes: [6, 0, 47, 97]
2025-03-05 15:23:04.670026 test begin: paddle.broadcast_to(Tensor([6, 0, 48, 45],"bool"), list[6,8,48,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 48, 45],"bool"), list[6,8,48,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 48, 45].  Tensor sizes: [6, 0, 48, 45]
2025-03-05 15:23:04.670729 test begin: paddle.broadcast_to(Tensor([6, 0, 48, 48],"bool"), list[6,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 48, 48],"bool"), list[6,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 48, 48].  Tensor sizes: [6, 0, 48, 48]
2025-03-05 15:23:04.671275 test begin: paddle.broadcast_to(Tensor([6, 0, 48, 57],"bool"), list[6,8,48,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 48, 57],"bool"), list[6,8,48,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 48, 57].  Tensor sizes: [6, 0, 48, 57]
2025-03-05 15:23:04.671945 test begin: paddle.broadcast_to(Tensor([6, 0, 48, 97],"bool"), list[6,8,48,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 48, 97],"bool"), list[6,8,48,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 48, 97].  Tensor sizes: [6, 0, 48, 97]
2025-03-05 15:23:04.673034 test begin: paddle.broadcast_to(Tensor([6, 0, 49, 45],"bool"), list[6,8,49,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 49, 45],"bool"), list[6,8,49,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 49, 45].  Tensor sizes: [6, 0, 49, 45]
2025-03-05 15:23:04.673709 test begin: paddle.broadcast_to(Tensor([6, 0, 49, 49],"bool"), list[6,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 49, 49],"bool"), list[6,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 49, 49].  Tensor sizes: [6, 0, 49, 49]
2025-03-05 15:23:04.674754 test begin: paddle.broadcast_to(Tensor([6, 0, 49, 57],"bool"), list[6,8,49,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 49, 57],"bool"), list[6,8,49,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 49, 57].  Tensor sizes: [6, 0, 49, 57]
2025-03-05 15:23:04.675299 test begin: paddle.broadcast_to(Tensor([6, 0, 49, 97],"bool"), list[6,8,49,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 49, 97],"bool"), list[6,8,49,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 49, 97].  Tensor sizes: [6, 0, 49, 97]
2025-03-05 15:23:04.675868 test begin: paddle.broadcast_to(Tensor([6, 0, 5, 25],"bool"), list[6,8,5,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 5, 25],"bool"), list[6,8,5,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 5, 25].  Tensor sizes: [6, 0, 5, 25]
2025-03-05 15:23:04.676571 test begin: paddle.broadcast_to(Tensor([6, 0, 5, 45],"bool"), list[6,8,5,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 5, 45],"bool"), list[6,8,5,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 5, 45].  Tensor sizes: [6, 0, 5, 45]
2025-03-05 15:23:04.677984 test begin: paddle.broadcast_to(Tensor([6, 0, 5, 57],"bool"), list[6,8,5,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 5, 57],"bool"), list[6,8,5,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 5, 57].  Tensor sizes: [6, 0, 5, 57]
2025-03-05 15:23:04.678754 test begin: paddle.broadcast_to(Tensor([6, 0, 5, 5],"bool"), list[6,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 5, 5],"bool"), list[6,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 5, 5].  Tensor sizes: [6, 0, 5, 5]
2025-03-05 15:23:04.679433 test begin: paddle.broadcast_to(Tensor([6, 0, 5, 97],"bool"), list[6,8,5,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 5, 97],"bool"), list[6,8,5,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 5, 97].  Tensor sizes: [6, 0, 5, 97]
2025-03-05 15:23:04.680068 test begin: paddle.broadcast_to(Tensor([6, 0, 50, 45],"bool"), list[6,8,50,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 50, 45],"bool"), list[6,8,50,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 50, 45].  Tensor sizes: [6, 0, 50, 45]
2025-03-05 15:23:04.680677 test begin: paddle.broadcast_to(Tensor([6, 0, 50, 50],"bool"), list[6,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 50, 50],"bool"), list[6,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 50, 50].  Tensor sizes: [6, 0, 50, 50]
2025-03-05 15:23:04.681406 test begin: paddle.broadcast_to(Tensor([6, 0, 50, 57],"bool"), list[6,8,50,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 50, 57],"bool"), list[6,8,50,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 50, 57].  Tensor sizes: [6, 0, 50, 57]
2025-03-05 15:23:04.682097 test begin: paddle.broadcast_to(Tensor([6, 0, 50, 97],"bool"), list[6,8,50,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 50, 97],"bool"), list[6,8,50,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 50, 97].  Tensor sizes: [6, 0, 50, 97]
2025-03-05 15:23:04.682894 test begin: paddle.broadcast_to(Tensor([6, 0, 51, 45],"bool"), list[6,8,51,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 51, 45],"bool"), list[6,8,51,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 51, 45].  Tensor sizes: [6, 0, 51, 45]
2025-03-05 15:23:04.683541 test begin: paddle.broadcast_to(Tensor([6, 0, 51, 51],"bool"), list[6,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 51, 51],"bool"), list[6,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 51, 51].  Tensor sizes: [6, 0, 51, 51]
2025-03-05 15:23:04.684727 test begin: paddle.broadcast_to(Tensor([6, 0, 51, 57],"bool"), list[6,8,51,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 51, 57],"bool"), list[6,8,51,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 51, 57].  Tensor sizes: [6, 0, 51, 57]
2025-03-05 15:23:04.685418 test begin: paddle.broadcast_to(Tensor([6, 0, 51, 97],"bool"), list[6,8,51,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 51, 97],"bool"), list[6,8,51,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 51, 97].  Tensor sizes: [6, 0, 51, 97]
2025-03-05 15:23:04.686210 test begin: paddle.broadcast_to(Tensor([6, 0, 52, 45],"bool"), list[6,8,52,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 52, 45],"bool"), list[6,8,52,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 52, 45].  Tensor sizes: [6, 0, 52, 45]
2025-03-05 15:23:04.686890 test begin: paddle.broadcast_to(Tensor([6, 0, 52, 52],"bool"), list[6,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 52, 52],"bool"), list[6,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 52, 52].  Tensor sizes: [6, 0, 52, 52]
2025-03-05 15:23:04.687499 test begin: paddle.broadcast_to(Tensor([6, 0, 52, 57],"bool"), list[6,8,52,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 52, 57],"bool"), list[6,8,52,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 52, 57].  Tensor sizes: [6, 0, 52, 57]
2025-03-05 15:23:04.688084 test begin: paddle.broadcast_to(Tensor([6, 0, 52, 97],"bool"), list[6,8,52,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 52, 97],"bool"), list[6,8,52,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 52, 97].  Tensor sizes: [6, 0, 52, 97]
2025-03-05 15:23:04.688604 test begin: paddle.broadcast_to(Tensor([6, 0, 53, 45],"bool"), list[6,8,53,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 53, 45],"bool"), list[6,8,53,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 53, 45].  Tensor sizes: [6, 0, 53, 45]
2025-03-05 15:23:04.695060 test begin: paddle.broadcast_to(Tensor([6, 0, 53, 53],"bool"), list[6,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 53, 53],"bool"), list[6,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 53, 53].  Tensor sizes: [6, 0, 53, 53]
2025-03-05 15:23:04.695738 test begin: paddle.broadcast_to(Tensor([6, 0, 53, 57],"bool"), list[6,8,53,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 53, 57],"bool"), list[6,8,53,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 53, 57].  Tensor sizes: [6, 0, 53, 57]
2025-03-05 15:23:04.696386 test begin: paddle.broadcast_to(Tensor([6, 0, 53, 97],"bool"), list[6,8,53,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 53, 97],"bool"), list[6,8,53,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 53, 97].  Tensor sizes: [6, 0, 53, 97]
2025-03-05 15:23:04.697021 test begin: paddle.broadcast_to(Tensor([6, 0, 54, 45],"bool"), list[6,8,54,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 54, 45],"bool"), list[6,8,54,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 54, 45].  Tensor sizes: [6, 0, 54, 45]
2025-03-05 15:23:04.697661 test begin: paddle.broadcast_to(Tensor([6, 0, 54, 54],"bool"), list[6,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 54, 54],"bool"), list[6,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 54, 54].  Tensor sizes: [6, 0, 54, 54]
2025-03-05 15:23:04.698815 test begin: paddle.broadcast_to(Tensor([6, 0, 54, 57],"bool"), list[6,8,54,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 54, 57],"bool"), list[6,8,54,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 54, 57].  Tensor sizes: [6, 0, 54, 57]
2025-03-05 15:23:04.699530 test begin: paddle.broadcast_to(Tensor([6, 0, 54, 97],"bool"), list[6,8,54,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 54, 97],"bool"), list[6,8,54,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 54, 97].  Tensor sizes: [6, 0, 54, 97]
2025-03-05 15:23:04.700155 test begin: paddle.broadcast_to(Tensor([6, 0, 55, 45],"bool"), list[6,8,55,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 55, 45],"bool"), list[6,8,55,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 55, 45].  Tensor sizes: [6, 0, 55, 45]
2025-03-05 15:23:04.700697 test begin: paddle.broadcast_to(Tensor([6, 0, 55, 55],"bool"), list[6,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 55, 55],"bool"), list[6,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 55, 55].  Tensor sizes: [6, 0, 55, 55]
2025-03-05 15:23:04.701338 test begin: paddle.broadcast_to(Tensor([6, 0, 55, 57],"bool"), list[6,8,55,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 55, 57],"bool"), list[6,8,55,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 55, 57].  Tensor sizes: [6, 0, 55, 57]
2025-03-05 15:23:04.702055 test begin: paddle.broadcast_to(Tensor([6, 0, 55, 97],"bool"), list[6,8,55,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 55, 97],"bool"), list[6,8,55,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 55, 97].  Tensor sizes: [6, 0, 55, 97]
2025-03-05 15:23:04.703071 test begin: paddle.broadcast_to(Tensor([6, 0, 56, 45],"bool"), list[6,8,56,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 56, 45],"bool"), list[6,8,56,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 56, 45].  Tensor sizes: [6, 0, 56, 45]
2025-03-05 15:23:04.703812 test begin: paddle.broadcast_to(Tensor([6, 0, 56, 56],"bool"), list[6,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 56, 56],"bool"), list[6,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 56, 56].  Tensor sizes: [6, 0, 56, 56]
2025-03-05 15:23:04.705157 test begin: paddle.broadcast_to(Tensor([6, 0, 56, 57],"bool"), list[6,8,56,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 56, 57],"bool"), list[6,8,56,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 56, 57].  Tensor sizes: [6, 0, 56, 57]
2025-03-05 15:23:04.706337 test begin: paddle.broadcast_to(Tensor([6, 0, 56, 97],"bool"), list[6,8,56,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 56, 97],"bool"), list[6,8,56,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 56, 97].  Tensor sizes: [6, 0, 56, 97]
2025-03-05 15:23:04.707122 test begin: paddle.broadcast_to(Tensor([6, 0, 57, 45],"bool"), list[6,8,57,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 57, 45],"bool"), list[6,8,57,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 57, 45].  Tensor sizes: [6, 0, 57, 45]
2025-03-05 15:23:04.707933 test begin: paddle.broadcast_to(Tensor([6, 0, 57, 57],"bool"), list[6,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 57, 57],"bool"), list[6,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 57, 57].  Tensor sizes: [6, 0, 57, 57]
2025-03-05 15:23:04.708605 test begin: paddle.broadcast_to(Tensor([6, 0, 57, 97],"bool"), list[6,8,57,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 57, 97],"bool"), list[6,8,57,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 57, 97].  Tensor sizes: [6, 0, 57, 97]
2025-03-05 15:23:04.709239 test begin: paddle.broadcast_to(Tensor([6, 0, 58, 45],"bool"), list[6,8,58,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 58, 45],"bool"), list[6,8,58,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 58, 45].  Tensor sizes: [6, 0, 58, 45]
2025-03-05 15:23:04.710137 test begin: paddle.broadcast_to(Tensor([6, 0, 58, 57],"bool"), list[6,8,58,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 58, 57],"bool"), list[6,8,58,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 58, 57].  Tensor sizes: [6, 0, 58, 57]
2025-03-05 15:23:04.711309 test begin: paddle.broadcast_to(Tensor([6, 0, 58, 58],"bool"), list[6,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 58, 58],"bool"), list[6,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 58, 58].  Tensor sizes: [6, 0, 58, 58]
2025-03-05 15:23:04.712080 test begin: paddle.broadcast_to(Tensor([6, 0, 58, 97],"bool"), list[6,8,58,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 58, 97],"bool"), list[6,8,58,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 58, 97].  Tensor sizes: [6, 0, 58, 97]
2025-03-05 15:23:04.712875 test begin: paddle.broadcast_to(Tensor([6, 0, 59, 45],"bool"), list[6,8,59,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 59, 45],"bool"), list[6,8,59,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 59, 45].  Tensor sizes: [6, 0, 59, 45]
2025-03-05 15:23:04.713532 test begin: paddle.broadcast_to(Tensor([6, 0, 59, 57],"bool"), list[6,8,59,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 59, 57],"bool"), list[6,8,59,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 59, 57].  Tensor sizes: [6, 0, 59, 57]
2025-03-05 15:23:04.714268 test begin: paddle.broadcast_to(Tensor([6, 0, 59, 59],"bool"), list[6,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 59, 59],"bool"), list[6,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 59, 59].  Tensor sizes: [6, 0, 59, 59]
2025-03-05 15:23:04.714915 test begin: paddle.broadcast_to(Tensor([6, 0, 59, 97],"bool"), list[6,8,59,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 59, 97],"bool"), list[6,8,59,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 59, 97].  Tensor sizes: [6, 0, 59, 97]
2025-03-05 15:23:04.715494 test begin: paddle.broadcast_to(Tensor([6, 0, 6, 25],"bool"), list[6,8,6,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 6, 25],"bool"), list[6,8,6,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 6, 25].  Tensor sizes: [6, 0, 6, 25]
2025-03-05 15:23:04.716086 test begin: paddle.broadcast_to(Tensor([6, 0, 6, 45],"bool"), list[6,8,6,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 6, 45],"bool"), list[6,8,6,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 6, 45].  Tensor sizes: [6, 0, 6, 45]
2025-03-05 15:23:04.716638 test begin: paddle.broadcast_to(Tensor([6, 0, 6, 57],"bool"), list[6,8,6,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 6, 57],"bool"), list[6,8,6,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 6, 57].  Tensor sizes: [6, 0, 6, 57]
2025-03-05 15:23:04.717203 test begin: paddle.broadcast_to(Tensor([6, 0, 6, 6],"bool"), list[6,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 6, 6],"bool"), list[6,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 6, 6].  Tensor sizes: [6, 0, 6, 6]
2025-03-05 15:23:04.717870 test begin: paddle.broadcast_to(Tensor([6, 0, 6, 97],"bool"), list[6,8,6,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 6, 97],"bool"), list[6,8,6,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 6, 97].  Tensor sizes: [6, 0, 6, 97]
2025-03-05 15:23:04.718595 test begin: paddle.broadcast_to(Tensor([6, 0, 60, 45],"bool"), list[6,8,60,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 60, 45],"bool"), list[6,8,60,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 60, 45].  Tensor sizes: [6, 0, 60, 45]
2025-03-05 15:23:04.719227 test begin: paddle.broadcast_to(Tensor([6, 0, 60, 57],"bool"), list[6,8,60,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 60, 57],"bool"), list[6,8,60,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 60, 57].  Tensor sizes: [6, 0, 60, 57]
2025-03-05 15:23:04.719813 test begin: paddle.broadcast_to(Tensor([6, 0, 60, 60],"bool"), list[6,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 60, 60],"bool"), list[6,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 60, 60].  Tensor sizes: [6, 0, 60, 60]
2025-03-05 15:23:04.720413 test begin: paddle.broadcast_to(Tensor([6, 0, 60, 97],"bool"), list[6,8,60,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 60, 97],"bool"), list[6,8,60,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 60, 97].  Tensor sizes: [6, 0, 60, 97]
2025-03-05 15:23:04.721270 test begin: paddle.broadcast_to(Tensor([6, 0, 61, 45],"bool"), list[6,8,61,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 61, 45],"bool"), list[6,8,61,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 61, 45].  Tensor sizes: [6, 0, 61, 45]
2025-03-05 15:23:04.722004 test begin: paddle.broadcast_to(Tensor([6, 0, 61, 57],"bool"), list[6,8,61,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 61, 57],"bool"), list[6,8,61,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 61, 57].  Tensor sizes: [6, 0, 61, 57]
2025-03-05 15:23:04.722691 test begin: paddle.broadcast_to(Tensor([6, 0, 61, 61],"bool"), list[6,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 61, 61],"bool"), list[6,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 61, 61].  Tensor sizes: [6, 0, 61, 61]
2025-03-05 15:23:04.723527 test begin: paddle.broadcast_to(Tensor([6, 0, 61, 97],"bool"), list[6,8,61,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 61, 97],"bool"), list[6,8,61,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 61, 97].  Tensor sizes: [6, 0, 61, 97]
2025-03-05 15:23:04.724258 test begin: paddle.broadcast_to(Tensor([6, 0, 62, 45],"bool"), list[6,8,62,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 62, 45],"bool"), list[6,8,62,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 62, 45].  Tensor sizes: [6, 0, 62, 45]
2025-03-05 15:23:04.725200 test begin: paddle.broadcast_to(Tensor([6, 0, 62, 57],"bool"), list[6,8,62,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 62, 57],"bool"), list[6,8,62,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 62, 57].  Tensor sizes: [6, 0, 62, 57]
2025-03-05 15:23:04.725925 test begin: paddle.broadcast_to(Tensor([6, 0, 62, 62],"bool"), list[6,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 62, 62],"bool"), list[6,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 62, 62].  Tensor sizes: [6, 0, 62, 62]
2025-03-05 15:23:04.726614 test begin: paddle.broadcast_to(Tensor([6, 0, 62, 97],"bool"), list[6,8,62,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 62, 97],"bool"), list[6,8,62,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 62, 97].  Tensor sizes: [6, 0, 62, 97]
2025-03-05 15:23:04.727277 test begin: paddle.broadcast_to(Tensor([6, 0, 63, 45],"bool"), list[6,8,63,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 63, 45],"bool"), list[6,8,63,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 63, 45].  Tensor sizes: [6, 0, 63, 45]
2025-03-05 15:23:04.727957 test begin: paddle.broadcast_to(Tensor([6, 0, 63, 57],"bool"), list[6,8,63,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 63, 57],"bool"), list[6,8,63,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 63, 57].  Tensor sizes: [6, 0, 63, 57]
2025-03-05 15:23:04.728625 test begin: paddle.broadcast_to(Tensor([6, 0, 63, 63],"bool"), list[6,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 63, 63],"bool"), list[6,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 63, 63].  Tensor sizes: [6, 0, 63, 63]
2025-03-05 15:23:04.729240 test begin: paddle.broadcast_to(Tensor([6, 0, 63, 97],"bool"), list[6,8,63,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 63, 97],"bool"), list[6,8,63,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 63, 97].  Tensor sizes: [6, 0, 63, 97]
2025-03-05 15:23:04.729950 test begin: paddle.broadcast_to(Tensor([6, 0, 64, 45],"bool"), list[6,8,64,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 64, 45],"bool"), list[6,8,64,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 64, 45].  Tensor sizes: [6, 0, 64, 45]
2025-03-05 15:23:04.731565 test begin: paddle.broadcast_to(Tensor([6, 0, 64, 57],"bool"), list[6,8,64,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 64, 57],"bool"), list[6,8,64,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 64, 57].  Tensor sizes: [6, 0, 64, 57]
2025-03-05 15:23:04.732267 test begin: paddle.broadcast_to(Tensor([6, 0, 64, 64],"bool"), list[6,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 64, 64],"bool"), list[6,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 64, 64].  Tensor sizes: [6, 0, 64, 64]
2025-03-05 15:23:04.732927 test begin: paddle.broadcast_to(Tensor([6, 0, 64, 97],"bool"), list[6,8,64,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 64, 97],"bool"), list[6,8,64,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 64, 97].  Tensor sizes: [6, 0, 64, 97]
2025-03-05 15:23:04.733496 test begin: paddle.broadcast_to(Tensor([6, 0, 65, 45],"bool"), list[6,8,65,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 65, 45],"bool"), list[6,8,65,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 65, 45].  Tensor sizes: [6, 0, 65, 45]
2025-03-05 15:23:04.734181 test begin: paddle.broadcast_to(Tensor([6, 0, 65, 57],"bool"), list[6,8,65,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 65, 57],"bool"), list[6,8,65,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 65, 57].  Tensor sizes: [6, 0, 65, 57]
2025-03-05 15:23:04.734787 test begin: paddle.broadcast_to(Tensor([6, 0, 65, 65],"bool"), list[6,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 65, 65],"bool"), list[6,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 65, 65].  Tensor sizes: [6, 0, 65, 65]
2025-03-05 15:23:04.735341 test begin: paddle.broadcast_to(Tensor([6, 0, 65, 97],"bool"), list[6,8,65,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 65, 97],"bool"), list[6,8,65,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 65, 97].  Tensor sizes: [6, 0, 65, 97]
2025-03-05 15:23:04.735980 test begin: paddle.broadcast_to(Tensor([6, 0, 66, 45],"bool"), list[6,8,66,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 66, 45],"bool"), list[6,8,66,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 66, 45].  Tensor sizes: [6, 0, 66, 45]
2025-03-05 15:23:04.736994 test begin: paddle.broadcast_to(Tensor([6, 0, 66, 57],"bool"), list[6,8,66,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 66, 57],"bool"), list[6,8,66,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 66, 57].  Tensor sizes: [6, 0, 66, 57]
2025-03-05 15:23:04.737723 test begin: paddle.broadcast_to(Tensor([6, 0, 66, 66],"bool"), list[6,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 66, 66],"bool"), list[6,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 66, 66].  Tensor sizes: [6, 0, 66, 66]
2025-03-05 15:23:04.738375 test begin: paddle.broadcast_to(Tensor([6, 0, 66, 97],"bool"), list[6,8,66,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 66, 97],"bool"), list[6,8,66,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 66, 97].  Tensor sizes: [6, 0, 66, 97]
2025-03-05 15:23:04.739083 test begin: paddle.broadcast_to(Tensor([6, 0, 67, 45],"bool"), list[6,8,67,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 67, 45],"bool"), list[6,8,67,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 67, 45].  Tensor sizes: [6, 0, 67, 45]
2025-03-05 15:23:04.739755 test begin: paddle.broadcast_to(Tensor([6, 0, 67, 57],"bool"), list[6,8,67,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 67, 57],"bool"), list[6,8,67,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 67, 57].  Tensor sizes: [6, 0, 67, 57]
2025-03-05 15:23:04.740439 test begin: paddle.broadcast_to(Tensor([6, 0, 67, 67],"bool"), list[6,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 67, 67],"bool"), list[6,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 67, 67].  Tensor sizes: [6, 0, 67, 67]
2025-03-05 15:23:04.741113 test begin: paddle.broadcast_to(Tensor([6, 0, 67, 97],"bool"), list[6,8,67,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 67, 97],"bool"), list[6,8,67,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 67, 97].  Tensor sizes: [6, 0, 67, 97]
2025-03-05 15:23:04.741783 test begin: paddle.broadcast_to(Tensor([6, 0, 68, 45],"bool"), list[6,8,68,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 68, 45],"bool"), list[6,8,68,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 68, 45].  Tensor sizes: [6, 0, 68, 45]
2025-03-05 15:23:04.742404 test begin: paddle.broadcast_to(Tensor([6, 0, 68, 57],"bool"), list[6,8,68,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 68, 57],"bool"), list[6,8,68,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 68, 57].  Tensor sizes: [6, 0, 68, 57]
2025-03-05 15:23:04.743209 test begin: paddle.broadcast_to(Tensor([6, 0, 68, 68],"bool"), list[6,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 68, 68],"bool"), list[6,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 68, 68].  Tensor sizes: [6, 0, 68, 68]
2025-03-05 15:23:04.744495 test begin: paddle.broadcast_to(Tensor([6, 0, 68, 97],"bool"), list[6,8,68,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 68, 97],"bool"), list[6,8,68,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 68, 97].  Tensor sizes: [6, 0, 68, 97]
2025-03-05 15:23:04.745184 test begin: paddle.broadcast_to(Tensor([6, 0, 69, 45],"bool"), list[6,8,69,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 69, 45],"bool"), list[6,8,69,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 69, 45].  Tensor sizes: [6, 0, 69, 45]
2025-03-05 15:23:04.745830 test begin: paddle.broadcast_to(Tensor([6, 0, 69, 57],"bool"), list[6,8,69,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 69, 57],"bool"), list[6,8,69,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 69, 57].  Tensor sizes: [6, 0, 69, 57]
2025-03-05 15:23:04.746510 test begin: paddle.broadcast_to(Tensor([6, 0, 69, 69],"bool"), list[6,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 69, 69],"bool"), list[6,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 69, 69].  Tensor sizes: [6, 0, 69, 69]
2025-03-05 15:23:04.747368 test begin: paddle.broadcast_to(Tensor([6, 0, 69, 97],"bool"), list[6,8,69,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 69, 97],"bool"), list[6,8,69,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 69, 97].  Tensor sizes: [6, 0, 69, 97]
2025-03-05 15:23:04.747948 test begin: paddle.broadcast_to(Tensor([6, 0, 7, 25],"bool"), list[6,8,7,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 7, 25],"bool"), list[6,8,7,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 7, 25].  Tensor sizes: [6, 0, 7, 25]
2025-03-05 15:23:04.748955 test begin: paddle.broadcast_to(Tensor([6, 0, 7, 45],"bool"), list[6,8,7,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 7, 45],"bool"), list[6,8,7,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 7, 45].  Tensor sizes: [6, 0, 7, 45]
2025-03-05 15:23:04.749650 test begin: paddle.broadcast_to(Tensor([6, 0, 7, 57],"bool"), list[6,8,7,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 7, 57],"bool"), list[6,8,7,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 7, 57].  Tensor sizes: [6, 0, 7, 57]
2025-03-05 15:23:04.750353 test begin: paddle.broadcast_to(Tensor([6, 0, 7, 7],"bool"), list[6,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 7, 7],"bool"), list[6,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 7, 7].  Tensor sizes: [6, 0, 7, 7]
2025-03-05 15:23:04.751180 test begin: paddle.broadcast_to(Tensor([6, 0, 7, 97],"bool"), list[6,8,7,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 7, 97],"bool"), list[6,8,7,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 7, 97].  Tensor sizes: [6, 0, 7, 97]
2025-03-05 15:23:04.751925 test begin: paddle.broadcast_to(Tensor([6, 0, 70, 45],"bool"), list[6,8,70,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 70, 45],"bool"), list[6,8,70,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 70, 45].  Tensor sizes: [6, 0, 70, 45]
2025-03-05 15:23:04.752608 test begin: paddle.broadcast_to(Tensor([6, 0, 70, 57],"bool"), list[6,8,70,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 70, 57],"bool"), list[6,8,70,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 70, 57].  Tensor sizes: [6, 0, 70, 57]
2025-03-05 15:23:04.753422 test begin: paddle.broadcast_to(Tensor([6, 0, 70, 70],"bool"), list[6,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 70, 70],"bool"), list[6,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 70, 70].  Tensor sizes: [6, 0, 70, 70]
2025-03-05 15:23:04.754206 test begin: paddle.broadcast_to(Tensor([6, 0, 70, 97],"bool"), list[6,8,70,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 70, 97],"bool"), list[6,8,70,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 70, 97].  Tensor sizes: [6, 0, 70, 97]
2025-03-05 15:23:04.754910 test begin: paddle.broadcast_to(Tensor([6, 0, 71, 45],"bool"), list[6,8,71,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 71, 45],"bool"), list[6,8,71,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 71, 45].  Tensor sizes: [6, 0, 71, 45]
2025-03-05 15:23:04.755566 test begin: paddle.broadcast_to(Tensor([6, 0, 71, 57],"bool"), list[6,8,71,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 71, 57],"bool"), list[6,8,71,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 71, 57].  Tensor sizes: [6, 0, 71, 57]
2025-03-05 15:23:04.756566 test begin: paddle.broadcast_to(Tensor([6, 0, 71, 71],"bool"), list[6,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 71, 71],"bool"), list[6,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 71, 71].  Tensor sizes: [6, 0, 71, 71]
2025-03-05 15:23:04.757170 test begin: paddle.broadcast_to(Tensor([6, 0, 71, 97],"bool"), list[6,8,71,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 71, 97],"bool"), list[6,8,71,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 71, 97].  Tensor sizes: [6, 0, 71, 97]
2025-03-05 15:23:04.757744 test begin: paddle.broadcast_to(Tensor([6, 0, 72, 45],"bool"), list[6,8,72,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 72, 45],"bool"), list[6,8,72,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 72, 45].  Tensor sizes: [6, 0, 72, 45]
2025-03-05 15:23:04.758479 test begin: paddle.broadcast_to(Tensor([6, 0, 72, 57],"bool"), list[6,8,72,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 72, 57],"bool"), list[6,8,72,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 72, 57].  Tensor sizes: [6, 0, 72, 57]
2025-03-05 15:23:04.759149 test begin: paddle.broadcast_to(Tensor([6, 0, 72, 72],"bool"), list[6,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 72, 72],"bool"), list[6,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 72, 72].  Tensor sizes: [6, 0, 72, 72]
2025-03-05 15:23:04.759726 test begin: paddle.broadcast_to(Tensor([6, 0, 72, 97],"bool"), list[6,8,72,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 72, 97],"bool"), list[6,8,72,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 72, 97].  Tensor sizes: [6, 0, 72, 97]
2025-03-05 15:23:04.760420 test begin: paddle.broadcast_to(Tensor([6, 0, 73, 45],"bool"), list[6,8,73,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 73, 45],"bool"), list[6,8,73,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 73, 45].  Tensor sizes: [6, 0, 73, 45]
2025-03-05 15:23:04.761117 test begin: paddle.broadcast_to(Tensor([6, 0, 73, 57],"bool"), list[6,8,73,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 73, 57],"bool"), list[6,8,73,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 73, 57].  Tensor sizes: [6, 0, 73, 57]
2025-03-05 15:23:04.761827 test begin: paddle.broadcast_to(Tensor([6, 0, 73, 73],"bool"), list[6,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 73, 73],"bool"), list[6,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 73, 73].  Tensor sizes: [6, 0, 73, 73]
2025-03-05 15:23:04.762480 test begin: paddle.broadcast_to(Tensor([6, 0, 73, 97],"bool"), list[6,8,73,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 73, 97],"bool"), list[6,8,73,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 73, 97].  Tensor sizes: [6, 0, 73, 97]
2025-03-05 15:23:04.763182 test begin: paddle.broadcast_to(Tensor([6, 0, 74, 45],"bool"), list[6,8,74,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 74, 45],"bool"), list[6,8,74,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 74, 45].  Tensor sizes: [6, 0, 74, 45]
2025-03-05 15:23:04.763949 test begin: paddle.broadcast_to(Tensor([6, 0, 74, 57],"bool"), list[6,8,74,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 74, 57],"bool"), list[6,8,74,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 74, 57].  Tensor sizes: [6, 0, 74, 57]
2025-03-05 15:23:04.764722 test begin: paddle.broadcast_to(Tensor([6, 0, 74, 74],"bool"), list[6,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 74, 74],"bool"), list[6,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 74, 74].  Tensor sizes: [6, 0, 74, 74]
2025-03-05 15:23:04.765734 test begin: paddle.broadcast_to(Tensor([6, 0, 74, 97],"bool"), list[6,8,74,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 74, 97],"bool"), list[6,8,74,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 74, 97].  Tensor sizes: [6, 0, 74, 97]
2025-03-05 15:23:04.766379 test begin: paddle.broadcast_to(Tensor([6, 0, 75, 45],"bool"), list[6,8,75,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 75, 45],"bool"), list[6,8,75,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 75, 45].  Tensor sizes: [6, 0, 75, 45]
2025-03-05 15:23:04.767147 test begin: paddle.broadcast_to(Tensor([6, 0, 75, 57],"bool"), list[6,8,75,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 75, 57],"bool"), list[6,8,75,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 75, 57].  Tensor sizes: [6, 0, 75, 57]
2025-03-05 15:23:04.767819 test begin: paddle.broadcast_to(Tensor([6, 0, 75, 75],"bool"), list[6,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 75, 75],"bool"), list[6,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 75, 75].  Tensor sizes: [6, 0, 75, 75]
2025-03-05 15:23:04.768376 test begin: paddle.broadcast_to(Tensor([6, 0, 75, 97],"bool"), list[6,8,75,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 75, 97],"bool"), list[6,8,75,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 75, 97].  Tensor sizes: [6, 0, 75, 97]
2025-03-05 15:23:04.769004 test begin: paddle.broadcast_to(Tensor([6, 0, 76, 45],"bool"), list[6,8,76,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 76, 45],"bool"), list[6,8,76,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 76, 45].  Tensor sizes: [6, 0, 76, 45]
2025-03-05 15:23:04.769674 test begin: paddle.broadcast_to(Tensor([6, 0, 76, 57],"bool"), list[6,8,76,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 76, 57],"bool"), list[6,8,76,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 76, 57].  Tensor sizes: [6, 0, 76, 57]
2025-03-05 15:23:04.770501 test begin: paddle.broadcast_to(Tensor([6, 0, 76, 76],"bool"), list[6,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 76, 76],"bool"), list[6,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 76, 76].  Tensor sizes: [6, 0, 76, 76]
2025-03-05 15:23:04.771181 test begin: paddle.broadcast_to(Tensor([6, 0, 76, 97],"bool"), list[6,8,76,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 76, 97],"bool"), list[6,8,76,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 76, 97].  Tensor sizes: [6, 0, 76, 97]
2025-03-05 15:23:04.771832 test begin: paddle.broadcast_to(Tensor([6, 0, 77, 45],"bool"), list[6,8,77,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 77, 45],"bool"), list[6,8,77,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 77, 45].  Tensor sizes: [6, 0, 77, 45]
2025-03-05 15:23:04.772462 test begin: paddle.broadcast_to(Tensor([6, 0, 77, 57],"bool"), list[6,8,77,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 77, 57],"bool"), list[6,8,77,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 77, 57].  Tensor sizes: [6, 0, 77, 57]
2025-03-05 15:23:04.773171 test begin: paddle.broadcast_to(Tensor([6, 0, 77, 77],"bool"), list[6,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 77, 77],"bool"), list[6,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 77, 77].  Tensor sizes: [6, 0, 77, 77]
2025-03-05 15:23:04.773779 test begin: paddle.broadcast_to(Tensor([6, 0, 77, 97],"bool"), list[6,8,77,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 77, 97],"bool"), list[6,8,77,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 77, 97].  Tensor sizes: [6, 0, 77, 97]
2025-03-05 15:23:04.774448 test begin: paddle.broadcast_to(Tensor([6, 0, 78, 45],"bool"), list[6,8,78,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 78, 45],"bool"), list[6,8,78,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 78, 45].  Tensor sizes: [6, 0, 78, 45]
2025-03-05 15:23:04.775183 test begin: paddle.broadcast_to(Tensor([6, 0, 78, 57],"bool"), list[6,8,78,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 78, 57],"bool"), list[6,8,78,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 78, 57].  Tensor sizes: [6, 0, 78, 57]
2025-03-05 15:23:04.775883 test begin: paddle.broadcast_to(Tensor([6, 0, 78, 78],"bool"), list[6,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 78, 78],"bool"), list[6,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 78, 78].  Tensor sizes: [6, 0, 78, 78]
2025-03-05 15:23:04.776613 test begin: paddle.broadcast_to(Tensor([6, 0, 78, 97],"bool"), list[6,8,78,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 78, 97],"bool"), list[6,8,78,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 78, 97].  Tensor sizes: [6, 0, 78, 97]
2025-03-05 15:23:04.777257 test begin: paddle.broadcast_to(Tensor([6, 0, 79, 45],"bool"), list[6,8,79,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 79, 45],"bool"), list[6,8,79,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 79, 45].  Tensor sizes: [6, 0, 79, 45]
2025-03-05 15:23:04.777978 test begin: paddle.broadcast_to(Tensor([6, 0, 79, 57],"bool"), list[6,8,79,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 79, 57],"bool"), list[6,8,79,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 79, 57].  Tensor sizes: [6, 0, 79, 57]
2025-03-05 15:23:04.778955 test begin: paddle.broadcast_to(Tensor([6, 0, 79, 79],"bool"), list[6,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 79, 79],"bool"), list[6,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 79, 79].  Tensor sizes: [6, 0, 79, 79]
2025-03-05 15:23:04.780114 test begin: paddle.broadcast_to(Tensor([6, 0, 79, 97],"bool"), list[6,8,79,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 79, 97],"bool"), list[6,8,79,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 79, 97].  Tensor sizes: [6, 0, 79, 97]
2025-03-05 15:23:04.780806 test begin: paddle.broadcast_to(Tensor([6, 0, 8, 25],"bool"), list[6,8,8,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 8, 25],"bool"), list[6,8,8,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 8, 25].  Tensor sizes: [6, 0, 8, 25]
2025-03-05 15:23:04.781927 test begin: paddle.broadcast_to(Tensor([6, 0, 8, 45],"bool"), list[6,8,8,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 8, 45],"bool"), list[6,8,8,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 8, 45].  Tensor sizes: [6, 0, 8, 45]
2025-03-05 15:23:04.782609 test begin: paddle.broadcast_to(Tensor([6, 0, 8, 57],"bool"), list[6,8,8,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 8, 57],"bool"), list[6,8,8,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 8, 57].  Tensor sizes: [6, 0, 8, 57]
2025-03-05 15:23:04.783283 test begin: paddle.broadcast_to(Tensor([6, 0, 8, 8],"bool"), list[6,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 8, 8],"bool"), list[6,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 8, 8].  Tensor sizes: [6, 0, 8, 8]
2025-03-05 15:23:04.784268 test begin: paddle.broadcast_to(Tensor([6, 0, 8, 97],"bool"), list[6,8,8,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 8, 97],"bool"), list[6,8,8,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 8, 97].  Tensor sizes: [6, 0, 8, 97]
2025-03-05 15:23:04.785198 test begin: paddle.broadcast_to(Tensor([6, 0, 80, 45],"bool"), list[6,8,80,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 80, 45],"bool"), list[6,8,80,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 80, 45].  Tensor sizes: [6, 0, 80, 45]
2025-03-05 15:23:04.785913 test begin: paddle.broadcast_to(Tensor([6, 0, 80, 57],"bool"), list[6,8,80,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 80, 57],"bool"), list[6,8,80,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 80, 57].  Tensor sizes: [6, 0, 80, 57]
2025-03-05 15:23:04.787043 test begin: paddle.broadcast_to(Tensor([6, 0, 80, 80],"bool"), list[6,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 80, 80],"bool"), list[6,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 80, 80].  Tensor sizes: [6, 0, 80, 80]
2025-03-05 15:23:04.787673 test begin: paddle.broadcast_to(Tensor([6, 0, 80, 97],"bool"), list[6,8,80,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 80, 97],"bool"), list[6,8,80,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 80, 97].  Tensor sizes: [6, 0, 80, 97]
2025-03-05 15:23:04.788675 test begin: paddle.broadcast_to(Tensor([6, 0, 81, 45],"bool"), list[6,8,81,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 81, 45],"bool"), list[6,8,81,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 81, 45].  Tensor sizes: [6, 0, 81, 45]
2025-03-05 15:23:04.789377 test begin: paddle.broadcast_to(Tensor([6, 0, 81, 57],"bool"), list[6,8,81,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 81, 57],"bool"), list[6,8,81,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 81, 57].  Tensor sizes: [6, 0, 81, 57]
2025-03-05 15:23:04.790193 test begin: paddle.broadcast_to(Tensor([6, 0, 81, 81],"bool"), list[6,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 81, 81],"bool"), list[6,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 81, 81].  Tensor sizes: [6, 0, 81, 81]
2025-03-05 15:23:04.791096 test begin: paddle.broadcast_to(Tensor([6, 0, 81, 97],"bool"), list[6,8,81,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 81, 97],"bool"), list[6,8,81,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 81, 97].  Tensor sizes: [6, 0, 81, 97]
2025-03-05 15:23:04.791848 test begin: paddle.broadcast_to(Tensor([6, 0, 82, 45],"bool"), list[6,8,82,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 82, 45],"bool"), list[6,8,82,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 82, 45].  Tensor sizes: [6, 0, 82, 45]
2025-03-05 15:23:04.792519 test begin: paddle.broadcast_to(Tensor([6, 0, 82, 57],"bool"), list[6,8,82,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 82, 57],"bool"), list[6,8,82,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 82, 57].  Tensor sizes: [6, 0, 82, 57]
2025-03-05 15:23:04.793217 test begin: paddle.broadcast_to(Tensor([6, 0, 82, 82],"bool"), list[6,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 82, 82],"bool"), list[6,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 82, 82].  Tensor sizes: [6, 0, 82, 82]
2025-03-05 15:23:04.793813 test begin: paddle.broadcast_to(Tensor([6, 0, 82, 97],"bool"), list[6,8,82,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 82, 97],"bool"), list[6,8,82,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 82, 97].  Tensor sizes: [6, 0, 82, 97]
2025-03-05 15:23:04.794385 test begin: paddle.broadcast_to(Tensor([6, 0, 83, 45],"bool"), list[6,8,83,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 83, 45],"bool"), list[6,8,83,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 83, 45].  Tensor sizes: [6, 0, 83, 45]
2025-03-05 15:23:04.795312 test begin: paddle.broadcast_to(Tensor([6, 0, 83, 57],"bool"), list[6,8,83,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 83, 57],"bool"), list[6,8,83,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 83, 57].  Tensor sizes: [6, 0, 83, 57]
2025-03-05 15:23:04.796618 test begin: paddle.broadcast_to(Tensor([6, 0, 83, 83],"bool"), list[6,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 83, 83],"bool"), list[6,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 83, 83].  Tensor sizes: [6, 0, 83, 83]
2025-03-05 15:23:04.797346 test begin: paddle.broadcast_to(Tensor([6, 0, 83, 97],"bool"), list[6,8,83,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 83, 97],"bool"), list[6,8,83,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 83, 97].  Tensor sizes: [6, 0, 83, 97]
2025-03-05 15:23:04.798258 test begin: paddle.broadcast_to(Tensor([6, 0, 84, 45],"bool"), list[6,8,84,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 84, 45],"bool"), list[6,8,84,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 84, 45].  Tensor sizes: [6, 0, 84, 45]
2025-03-05 15:23:04.799082 test begin: paddle.broadcast_to(Tensor([6, 0, 84, 57],"bool"), list[6,8,84,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 84, 57],"bool"), list[6,8,84,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 84, 57].  Tensor sizes: [6, 0, 84, 57]
2025-03-05 15:23:04.800068 test begin: paddle.broadcast_to(Tensor([6, 0, 84, 84],"bool"), list[6,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 84, 84],"bool"), list[6,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 84, 84].  Tensor sizes: [6, 0, 84, 84]
2025-03-05 15:23:04.800814 test begin: paddle.broadcast_to(Tensor([6, 0, 84, 97],"bool"), list[6,8,84,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 84, 97],"bool"), list[6,8,84,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 84, 97].  Tensor sizes: [6, 0, 84, 97]
2025-03-05 15:23:04.801574 test begin: paddle.broadcast_to(Tensor([6, 0, 85, 45],"bool"), list[6,8,85,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 85, 45],"bool"), list[6,8,85,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 85, 45].  Tensor sizes: [6, 0, 85, 45]
2025-03-05 15:23:04.802263 test begin: paddle.broadcast_to(Tensor([6, 0, 85, 57],"bool"), list[6,8,85,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 85, 57],"bool"), list[6,8,85,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 85, 57].  Tensor sizes: [6, 0, 85, 57]
2025-03-05 15:23:04.803016 test begin: paddle.broadcast_to(Tensor([6, 0, 85, 85],"bool"), list[6,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 85, 85],"bool"), list[6,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 85, 85].  Tensor sizes: [6, 0, 85, 85]
2025-03-05 15:23:04.803720 test begin: paddle.broadcast_to(Tensor([6, 0, 85, 97],"bool"), list[6,8,85,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 85, 97],"bool"), list[6,8,85,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 85, 97].  Tensor sizes: [6, 0, 85, 97]
2025-03-05 15:23:04.804490 test begin: paddle.broadcast_to(Tensor([6, 0, 86, 45],"bool"), list[6,8,86,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 86, 45],"bool"), list[6,8,86,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 86, 45].  Tensor sizes: [6, 0, 86, 45]
2025-03-05 15:23:04.805422 test begin: paddle.broadcast_to(Tensor([6, 0, 86, 57],"bool"), list[6,8,86,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 86, 57],"bool"), list[6,8,86,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 86, 57].  Tensor sizes: [6, 0, 86, 57]
2025-03-05 15:23:04.806124 test begin: paddle.broadcast_to(Tensor([6, 0, 86, 86],"bool"), list[6,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 86, 86],"bool"), list[6,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 86, 86].  Tensor sizes: [6, 0, 86, 86]
2025-03-05 15:23:04.806943 test begin: paddle.broadcast_to(Tensor([6, 0, 86, 97],"bool"), list[6,8,86,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 86, 97],"bool"), list[6,8,86,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 86, 97].  Tensor sizes: [6, 0, 86, 97]
2025-03-05 15:23:04.807813 test begin: paddle.broadcast_to(Tensor([6, 0, 87, 45],"bool"), list[6,8,87,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 87, 45],"bool"), list[6,8,87,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 87, 45].  Tensor sizes: [6, 0, 87, 45]
2025-03-05 15:23:04.808507 test begin: paddle.broadcast_to(Tensor([6, 0, 87, 57],"bool"), list[6,8,87,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 87, 57],"bool"), list[6,8,87,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 87, 57].  Tensor sizes: [6, 0, 87, 57]
2025-03-05 15:23:04.809226 test begin: paddle.broadcast_to(Tensor([6, 0, 87, 87],"bool"), list[6,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 87, 87],"bool"), list[6,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 87, 87].  Tensor sizes: [6, 0, 87, 87]
2025-03-05 15:23:04.810654 test begin: paddle.broadcast_to(Tensor([6, 0, 87, 97],"bool"), list[6,8,87,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 87, 97],"bool"), list[6,8,87,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 87, 97].  Tensor sizes: [6, 0, 87, 97]
2025-03-05 15:23:04.811380 test begin: paddle.broadcast_to(Tensor([6, 0, 88, 45],"bool"), list[6,8,88,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 88, 45],"bool"), list[6,8,88,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 88, 45].  Tensor sizes: [6, 0, 88, 45]
2025-03-05 15:23:04.812225 test begin: paddle.broadcast_to(Tensor([6, 0, 88, 57],"bool"), list[6,8,88,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 88, 57],"bool"), list[6,8,88,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 88, 57].  Tensor sizes: [6, 0, 88, 57]
2025-03-05 15:23:04.812973 test begin: paddle.broadcast_to(Tensor([6, 0, 88, 88],"bool"), list[6,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 88, 88],"bool"), list[6,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 88, 88].  Tensor sizes: [6, 0, 88, 88]
2025-03-05 15:23:04.813893 test begin: paddle.broadcast_to(Tensor([6, 0, 88, 97],"bool"), list[6,8,88,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 88, 97],"bool"), list[6,8,88,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 88, 97].  Tensor sizes: [6, 0, 88, 97]
2025-03-05 15:23:04.814549 test begin: paddle.broadcast_to(Tensor([6, 0, 89, 45],"bool"), list[6,8,89,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 89, 45],"bool"), list[6,8,89,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 89, 45].  Tensor sizes: [6, 0, 89, 45]
2025-03-05 15:23:04.815350 test begin: paddle.broadcast_to(Tensor([6, 0, 89, 57],"bool"), list[6,8,89,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 89, 57],"bool"), list[6,8,89,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 89, 57].  Tensor sizes: [6, 0, 89, 57]
2025-03-05 15:23:04.816171 test begin: paddle.broadcast_to(Tensor([6, 0, 89, 89],"bool"), list[6,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 89, 89],"bool"), list[6,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 89, 89].  Tensor sizes: [6, 0, 89, 89]
2025-03-05 15:23:04.817118 test begin: paddle.broadcast_to(Tensor([6, 0, 89, 97],"bool"), list[6,8,89,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 89, 97],"bool"), list[6,8,89,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 89, 97].  Tensor sizes: [6, 0, 89, 97]
2025-03-05 15:23:04.817887 test begin: paddle.broadcast_to(Tensor([6, 0, 9, 25],"bool"), list[6,8,9,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 9, 25],"bool"), list[6,8,9,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 9, 25].  Tensor sizes: [6, 0, 9, 25]
2025-03-05 15:23:04.818748 test begin: paddle.broadcast_to(Tensor([6, 0, 9, 45],"bool"), list[6,8,9,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 9, 45],"bool"), list[6,8,9,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 9, 45].  Tensor sizes: [6, 0, 9, 45]
2025-03-05 15:23:04.819506 test begin: paddle.broadcast_to(Tensor([6, 0, 9, 57],"bool"), list[6,8,9,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 9, 57],"bool"), list[6,8,9,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 9, 57].  Tensor sizes: [6, 0, 9, 57]
2025-03-05 15:23:04.820259 test begin: paddle.broadcast_to(Tensor([6, 0, 9, 97],"bool"), list[6,8,9,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 9, 97],"bool"), list[6,8,9,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 9, 97].  Tensor sizes: [6, 0, 9, 97]
2025-03-05 15:23:04.820997 test begin: paddle.broadcast_to(Tensor([6, 0, 9, 9],"bool"), list[6,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 9, 9],"bool"), list[6,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 9, 9].  Tensor sizes: [6, 0, 9, 9]
2025-03-05 15:23:04.821685 test begin: paddle.broadcast_to(Tensor([6, 0, 90, 45],"bool"), list[6,8,90,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 90, 45],"bool"), list[6,8,90,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 90, 45].  Tensor sizes: [6, 0, 90, 45]
2025-03-05 15:23:04.822308 test begin: paddle.broadcast_to(Tensor([6, 0, 90, 57],"bool"), list[6,8,90,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 90, 57],"bool"), list[6,8,90,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 90, 57].  Tensor sizes: [6, 0, 90, 57]
2025-03-05 15:23:04.822861 test begin: paddle.broadcast_to(Tensor([6, 0, 90, 90],"bool"), list[6,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 90, 90],"bool"), list[6,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 90, 90].  Tensor sizes: [6, 0, 90, 90]
2025-03-05 15:23:04.823391 test begin: paddle.broadcast_to(Tensor([6, 0, 90, 97],"bool"), list[6,8,90,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 90, 97],"bool"), list[6,8,90,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 90, 97].  Tensor sizes: [6, 0, 90, 97]
2025-03-05 15:23:04.823947 test begin: paddle.broadcast_to(Tensor([6, 0, 91, 45],"bool"), list[6,8,91,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 91, 45],"bool"), list[6,8,91,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 91, 45].  Tensor sizes: [6, 0, 91, 45]
2025-03-05 15:23:04.824736 test begin: paddle.broadcast_to(Tensor([6, 0, 91, 57],"bool"), list[6,8,91,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 91, 57],"bool"), list[6,8,91,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 91, 57].  Tensor sizes: [6, 0, 91, 57]
2025-03-05 15:23:04.825478 test begin: paddle.broadcast_to(Tensor([6, 0, 91, 91],"bool"), list[6,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 91, 91],"bool"), list[6,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 91, 91].  Tensor sizes: [6, 0, 91, 91]
2025-03-05 15:23:04.826052 test begin: paddle.broadcast_to(Tensor([6, 0, 91, 97],"bool"), list[6,8,91,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 91, 97],"bool"), list[6,8,91,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 91, 97].  Tensor sizes: [6, 0, 91, 97]
2025-03-05 15:23:04.826649 test begin: paddle.broadcast_to(Tensor([6, 0, 92, 45],"bool"), list[6,8,92,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 92, 45],"bool"), list[6,8,92,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 92, 45].  Tensor sizes: [6, 0, 92, 45]
2025-03-05 15:23:04.827408 test begin: paddle.broadcast_to(Tensor([6, 0, 92, 57],"bool"), list[6,8,92,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 92, 57],"bool"), list[6,8,92,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 92, 57].  Tensor sizes: [6, 0, 92, 57]
2025-03-05 15:23:04.828114 test begin: paddle.broadcast_to(Tensor([6, 0, 92, 92],"bool"), list[6,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 92, 92],"bool"), list[6,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 92, 92].  Tensor sizes: [6, 0, 92, 92]
2025-03-05 15:23:04.828801 test begin: paddle.broadcast_to(Tensor([6, 0, 92, 97],"bool"), list[6,8,92,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 92, 97],"bool"), list[6,8,92,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 92, 97].  Tensor sizes: [6, 0, 92, 97]
2025-03-05 15:23:04.829468 test begin: paddle.broadcast_to(Tensor([6, 0, 93, 45],"bool"), list[6,8,93,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 93, 45],"bool"), list[6,8,93,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 93, 45].  Tensor sizes: [6, 0, 93, 45]
2025-03-05 15:23:04.830086 test begin: paddle.broadcast_to(Tensor([6, 0, 93, 57],"bool"), list[6,8,93,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 93, 57],"bool"), list[6,8,93,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 93, 57].  Tensor sizes: [6, 0, 93, 57]
2025-03-05 15:23:04.831118 test begin: paddle.broadcast_to(Tensor([6, 0, 93, 93],"bool"), list[6,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 93, 93],"bool"), list[6,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 93, 93].  Tensor sizes: [6, 0, 93, 93]
2025-03-05 15:23:04.831828 test begin: paddle.broadcast_to(Tensor([6, 0, 93, 97],"bool"), list[6,8,93,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 93, 97],"bool"), list[6,8,93,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 93, 97].  Tensor sizes: [6, 0, 93, 97]
2025-03-05 15:23:04.832503 test begin: paddle.broadcast_to(Tensor([6, 0, 94, 45],"bool"), list[6,8,94,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 94, 45],"bool"), list[6,8,94,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 94, 45].  Tensor sizes: [6, 0, 94, 45]
2025-03-05 15:23:04.833144 test begin: paddle.broadcast_to(Tensor([6, 0, 94, 57],"bool"), list[6,8,94,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 94, 57],"bool"), list[6,8,94,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 94, 57].  Tensor sizes: [6, 0, 94, 57]
2025-03-05 15:23:04.833856 test begin: paddle.broadcast_to(Tensor([6, 0, 94, 94],"bool"), list[6,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 94, 94],"bool"), list[6,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 94, 94].  Tensor sizes: [6, 0, 94, 94]
2025-03-05 15:23:04.834506 test begin: paddle.broadcast_to(Tensor([6, 0, 94, 97],"bool"), list[6,8,94,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 94, 97],"bool"), list[6,8,94,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 94, 97].  Tensor sizes: [6, 0, 94, 97]
2025-03-05 15:23:04.835188 test begin: paddle.broadcast_to(Tensor([6, 0, 95, 45],"bool"), list[6,8,95,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 95, 45],"bool"), list[6,8,95,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 95, 45].  Tensor sizes: [6, 0, 95, 45]
2025-03-05 15:23:04.836432 test begin: paddle.broadcast_to(Tensor([6, 0, 95, 57],"bool"), list[6,8,95,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 95, 57],"bool"), list[6,8,95,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 95, 57].  Tensor sizes: [6, 0, 95, 57]
2025-03-05 15:23:04.837079 test begin: paddle.broadcast_to(Tensor([6, 0, 95, 95],"bool"), list[6,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 95, 95],"bool"), list[6,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 95, 95].  Tensor sizes: [6, 0, 95, 95]
2025-03-05 15:23:04.837762 test begin: paddle.broadcast_to(Tensor([6, 0, 95, 97],"bool"), list[6,8,95,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 95, 97],"bool"), list[6,8,95,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 95, 97].  Tensor sizes: [6, 0, 95, 97]
2025-03-05 15:23:04.838374 test begin: paddle.broadcast_to(Tensor([6, 0, 96, 45],"bool"), list[6,8,96,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 96, 45],"bool"), list[6,8,96,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 96, 45].  Tensor sizes: [6, 0, 96, 45]
2025-03-05 15:23:04.838919 test begin: paddle.broadcast_to(Tensor([6, 0, 96, 57],"bool"), list[6,8,96,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 96, 57],"bool"), list[6,8,96,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 96, 57].  Tensor sizes: [6, 0, 96, 57]
2025-03-05 15:23:04.839528 test begin: paddle.broadcast_to(Tensor([6, 0, 96, 96],"bool"), list[6,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 96, 96],"bool"), list[6,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 96, 96].  Tensor sizes: [6, 0, 96, 96]
2025-03-05 15:23:04.840243 test begin: paddle.broadcast_to(Tensor([6, 0, 96, 97],"bool"), list[6,8,96,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 96, 97],"bool"), list[6,8,96,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 96, 97].  Tensor sizes: [6, 0, 96, 97]
2025-03-05 15:23:04.840853 test begin: paddle.broadcast_to(Tensor([6, 0, 97, 45],"bool"), list[6,8,97,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 97, 45],"bool"), list[6,8,97,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 97, 45].  Tensor sizes: [6, 0, 97, 45]
2025-03-05 15:23:04.841398 test begin: paddle.broadcast_to(Tensor([6, 0, 97, 57],"bool"), list[6,8,97,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 97, 57],"bool"), list[6,8,97,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 97, 57].  Tensor sizes: [6, 0, 97, 57]
2025-03-05 15:23:04.841937 test begin: paddle.broadcast_to(Tensor([6, 0, 97, 97],"bool"), list[6,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 97, 97],"bool"), list[6,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 97, 97].  Tensor sizes: [6, 0, 97, 97]
2025-03-05 15:23:04.842494 test begin: paddle.broadcast_to(Tensor([6, 0, 98, 45],"bool"), list[6,8,98,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 98, 45],"bool"), list[6,8,98,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 98, 45].  Tensor sizes: [6, 0, 98, 45]
2025-03-05 15:23:04.843170 test begin: paddle.broadcast_to(Tensor([6, 0, 98, 57],"bool"), list[6,8,98,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 98, 57],"bool"), list[6,8,98,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 98, 57].  Tensor sizes: [6, 0, 98, 57]
2025-03-05 15:23:04.844000 test begin: paddle.broadcast_to(Tensor([6, 0, 98, 97],"bool"), list[6,8,98,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 98, 97],"bool"), list[6,8,98,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 98, 97].  Tensor sizes: [6, 0, 98, 97]
2025-03-05 15:23:04.844857 test begin: paddle.broadcast_to(Tensor([6, 0, 98, 98],"bool"), list[6,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 98, 98],"bool"), list[6,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 98, 98].  Tensor sizes: [6, 0, 98, 98]
2025-03-05 15:23:04.845510 test begin: paddle.broadcast_to(Tensor([6, 0, 99, 45],"bool"), list[6,8,99,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 99, 45],"bool"), list[6,8,99,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 99, 45].  Tensor sizes: [6, 0, 99, 45]
2025-03-05 15:23:04.846083 test begin: paddle.broadcast_to(Tensor([6, 0, 99, 57],"bool"), list[6,8,99,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 99, 57],"bool"), list[6,8,99,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 99, 57].  Tensor sizes: [6, 0, 99, 57]
2025-03-05 15:23:04.846620 test begin: paddle.broadcast_to(Tensor([6, 0, 99, 97],"bool"), list[6,8,99,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 99, 97],"bool"), list[6,8,99,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 99, 97].  Tensor sizes: [6, 0, 99, 97]
2025-03-05 15:23:04.847184 test begin: paddle.broadcast_to(Tensor([6, 0, 99, 99],"bool"), list[6,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([6, 0, 99, 99],"bool"), list[6,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 8, 99, 99].  Tensor sizes: [6, 0, 99, 99]
2025-03-05 15:23:04.847797 test begin: paddle.broadcast_to(Tensor([6, 0],"bool"), list[6,2,], )

[torch error] paddle.broadcast_to(Tensor([6, 0],"bool"), list[6,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 2].  Tensor sizes: [6, 0]
2025-03-05 15:23:04.848454 test begin: paddle.broadcast_to(Tensor([6, 0],"float32"), tuple(6,4,), )

[torch error] paddle.broadcast_to(Tensor([6, 0],"float32"), tuple(6,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 4].  Tensor sizes: [6, 0]
2025-03-05 15:23:04.849094 test begin: paddle.broadcast_to(Tensor([6, 0],"float32"), tuple(6,799,), )

[torch error] paddle.broadcast_to(Tensor([6, 0],"float32"), tuple(6,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 799].  Tensor sizes: [6, 0]
2025-03-05 15:23:04.849749 test begin: paddle.broadcast_to(Tensor([6, 0],"int64"), tuple(6,4,), )

[torch error] paddle.broadcast_to(Tensor([6, 0],"int64"), tuple(6,4,), ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 4].  Tensor sizes: [6, 0]
2025-03-05 15:23:04.850389 test begin: paddle.broadcast_to(Tensor([6, 0],"int64"), tuple(6,799,), )

[torch error] paddle.broadcast_to(Tensor([6, 0],"int64"), tuple(6,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 799].  Tensor sizes: [6, 0]
2025-03-05 15:23:04.851056 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 100],"bool"), list[6,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 100],"bool"), list[6,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 100, 100].  Tensor sizes: [6, 1, 0, 100]
2025-03-05 15:23:04.851868 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 101],"bool"), list[6,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 101],"bool"), list[6,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 101, 101].  Tensor sizes: [6, 1, 0, 101]
2025-03-05 15:23:04.852540 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 102],"bool"), list[6,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 102],"bool"), list[6,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 102, 102].  Tensor sizes: [6, 1, 0, 102]
2025-03-05 15:23:04.853212 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 103],"bool"), list[6,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 103],"bool"), list[6,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 103, 103].  Tensor sizes: [6, 1, 0, 103]
2025-03-05 15:23:04.853842 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 104],"bool"), list[6,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 104],"bool"), list[6,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 104, 104].  Tensor sizes: [6, 1, 0, 104]
2025-03-05 15:23:04.854395 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 105],"bool"), list[6,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 105],"bool"), list[6,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 105, 105].  Tensor sizes: [6, 1, 0, 105]
2025-03-05 15:23:04.854920 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 106],"bool"), list[6,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 106],"bool"), list[6,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 106, 106].  Tensor sizes: [6, 1, 0, 106]
2025-03-05 15:23:04.855445 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 107],"bool"), list[6,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 107],"bool"), list[6,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 107, 107].  Tensor sizes: [6, 1, 0, 107]
2025-03-05 15:23:04.856049 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 108],"bool"), list[6,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 108],"bool"), list[6,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 108, 108].  Tensor sizes: [6, 1, 0, 108]
2025-03-05 15:23:04.856874 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 109],"bool"), list[6,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 109],"bool"), list[6,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 109, 109].  Tensor sizes: [6, 1, 0, 109]
2025-03-05 15:23:04.857740 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 10],"bool"), list[6,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 10],"bool"), list[6,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 10, 10].  Tensor sizes: [6, 1, 0, 10]
2025-03-05 15:23:04.858771 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 110],"bool"), list[6,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 110],"bool"), list[6,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 110, 110].  Tensor sizes: [6, 1, 0, 110]
2025-03-05 15:23:04.859560 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 111],"bool"), list[6,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 111],"bool"), list[6,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 111, 111].  Tensor sizes: [6, 1, 0, 111]
2025-03-05 15:23:04.860262 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 112],"bool"), list[6,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 112],"bool"), list[6,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 112, 112].  Tensor sizes: [6, 1, 0, 112]
2025-03-05 15:23:04.860979 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 113],"bool"), list[6,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 113],"bool"), list[6,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 113, 113].  Tensor sizes: [6, 1, 0, 113]
2025-03-05 15:23:04.861738 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 114],"bool"), list[6,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 114],"bool"), list[6,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 114, 114].  Tensor sizes: [6, 1, 0, 114]
2025-03-05 15:23:04.862364 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 115],"bool"), list[6,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 115],"bool"), list[6,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 115, 115].  Tensor sizes: [6, 1, 0, 115]
2025-03-05 15:23:04.863014 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 116],"bool"), list[6,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 116],"bool"), list[6,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 116, 116].  Tensor sizes: [6, 1, 0, 116]
2025-03-05 15:23:04.863686 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 117],"bool"), list[6,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 117],"bool"), list[6,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 117, 117].  Tensor sizes: [6, 1, 0, 117]
2025-03-05 15:23:04.864364 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 118],"bool"), list[6,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 118],"bool"), list[6,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 118, 118].  Tensor sizes: [6, 1, 0, 118]
2025-03-05 15:23:04.864999 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 119],"bool"), list[6,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 119],"bool"), list[6,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 119, 119].  Tensor sizes: [6, 1, 0, 119]
2025-03-05 15:23:04.866388 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 11],"bool"), list[6,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 11],"bool"), list[6,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 11, 11].  Tensor sizes: [6, 1, 0, 11]
2025-03-05 15:23:04.867054 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 120],"bool"), list[6,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 120],"bool"), list[6,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 120, 120].  Tensor sizes: [6, 1, 0, 120]
2025-03-05 15:23:04.867755 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 121],"bool"), list[6,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 121],"bool"), list[6,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 121, 121].  Tensor sizes: [6, 1, 0, 121]
2025-03-05 15:23:04.868455 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 122],"bool"), list[6,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 122],"bool"), list[6,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 122, 122].  Tensor sizes: [6, 1, 0, 122]
2025-03-05 15:23:04.869387 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 123],"bool"), list[6,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 123],"bool"), list[6,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 123, 123].  Tensor sizes: [6, 1, 0, 123]
2025-03-05 15:23:04.869964 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 124],"bool"), list[6,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 124],"bool"), list[6,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 124, 124].  Tensor sizes: [6, 1, 0, 124]
2025-03-05 15:23:04.870601 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 125],"bool"), list[6,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 125],"bool"), list[6,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 125, 125].  Tensor sizes: [6, 1, 0, 125]
2025-03-05 15:23:04.871157 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 126],"bool"), list[6,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 126],"bool"), list[6,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 126, 126].  Tensor sizes: [6, 1, 0, 126]
2025-03-05 15:23:04.871850 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 127],"bool"), list[6,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 127],"bool"), list[6,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 127, 127].  Tensor sizes: [6, 1, 0, 127]
2025-03-05 15:23:04.872606 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 128],"bool"), list[6,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 128],"bool"), list[6,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 128, 128].  Tensor sizes: [6, 1, 0, 128]
2025-03-05 15:23:04.873401 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 129],"bool"), list[6,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 129],"bool"), list[6,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 129, 129].  Tensor sizes: [6, 1, 0, 129]
2025-03-05 15:23:04.874208 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 12],"bool"), list[6,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 12],"bool"), list[6,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 12, 12].  Tensor sizes: [6, 1, 0, 12]
2025-03-05 15:23:04.874928 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 130],"bool"), list[6,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 130],"bool"), list[6,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 130, 130].  Tensor sizes: [6, 1, 0, 130]
2025-03-05 15:23:04.875591 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 131],"bool"), list[6,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 131],"bool"), list[6,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 131, 131].  Tensor sizes: [6, 1, 0, 131]
2025-03-05 15:23:04.876260 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 132],"bool"), list[6,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 132],"bool"), list[6,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 132, 132].  Tensor sizes: [6, 1, 0, 132]
2025-03-05 15:23:04.876873 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 133],"bool"), list[6,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 133],"bool"), list[6,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 133, 133].  Tensor sizes: [6, 1, 0, 133]
2025-03-05 15:23:04.877561 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 134],"bool"), list[6,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 134],"bool"), list[6,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 134, 134].  Tensor sizes: [6, 1, 0, 134]
2025-03-05 15:23:04.878314 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 135],"bool"), list[6,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 135],"bool"), list[6,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 135, 135].  Tensor sizes: [6, 1, 0, 135]
2025-03-05 15:23:04.879035 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 136],"bool"), list[6,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 136],"bool"), list[6,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 136, 136].  Tensor sizes: [6, 1, 0, 136]
2025-03-05 15:23:04.879763 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 137],"bool"), list[6,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 137],"bool"), list[6,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 137, 137].  Tensor sizes: [6, 1, 0, 137]
2025-03-05 15:23:04.880996 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 138],"bool"), list[6,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 138],"bool"), list[6,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 138, 138].  Tensor sizes: [6, 1, 0, 138]
2025-03-05 15:23:04.881779 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 139],"bool"), list[6,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 139],"bool"), list[6,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 139, 139].  Tensor sizes: [6, 1, 0, 139]
2025-03-05 15:23:04.882553 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 13],"bool"), list[6,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 13],"bool"), list[6,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 13, 13].  Tensor sizes: [6, 1, 0, 13]
2025-03-05 15:23:04.883174 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 140],"bool"), list[6,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 140],"bool"), list[6,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 140, 140].  Tensor sizes: [6, 1, 0, 140]
2025-03-05 15:23:04.884424 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 141],"bool"), list[6,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 141],"bool"), list[6,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 141, 141].  Tensor sizes: [6, 1, 0, 141]
2025-03-05 15:23:04.885281 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 142],"bool"), list[6,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 142],"bool"), list[6,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 142, 142].  Tensor sizes: [6, 1, 0, 142]
2025-03-05 15:23:04.886036 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 143],"bool"), list[6,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 143],"bool"), list[6,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 143, 143].  Tensor sizes: [6, 1, 0, 143]
2025-03-05 15:23:04.886737 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 144],"bool"), list[6,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 144],"bool"), list[6,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 144, 144].  Tensor sizes: [6, 1, 0, 144]
2025-03-05 15:23:04.887721 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 145],"bool"), list[6,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 145],"bool"), list[6,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 145, 145].  Tensor sizes: [6, 1, 0, 145]
2025-03-05 15:23:04.888382 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 146],"bool"), list[6,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 146],"bool"), list[6,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 146, 146].  Tensor sizes: [6, 1, 0, 146]
2025-03-05 15:23:04.889165 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 147],"bool"), list[6,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 147],"bool"), list[6,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 147, 147].  Tensor sizes: [6, 1, 0, 147]
2025-03-05 15:23:04.890123 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 148],"bool"), list[6,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 148],"bool"), list[6,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 148, 148].  Tensor sizes: [6, 1, 0, 148]
2025-03-05 15:23:04.891273 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 149],"bool"), list[6,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 149],"bool"), list[6,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 149, 149].  Tensor sizes: [6, 1, 0, 149]
2025-03-05 15:23:04.892009 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 14],"bool"), list[6,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 14],"bool"), list[6,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 14, 14].  Tensor sizes: [6, 1, 0, 14]
2025-03-05 15:23:04.893260 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 150],"bool"), list[6,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 150],"bool"), list[6,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 150, 150].  Tensor sizes: [6, 1, 0, 150]
2025-03-05 15:23:04.893917 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 151],"bool"), list[6,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 151],"bool"), list[6,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 151, 151].  Tensor sizes: [6, 1, 0, 151]
2025-03-05 15:23:04.894521 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 152],"bool"), list[6,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 152],"bool"), list[6,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 152, 152].  Tensor sizes: [6, 1, 0, 152]
2025-03-05 15:23:04.895092 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 153],"bool"), list[6,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 153],"bool"), list[6,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 153, 153].  Tensor sizes: [6, 1, 0, 153]
2025-03-05 15:23:04.895888 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 154],"bool"), list[6,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 154],"bool"), list[6,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 154, 154].  Tensor sizes: [6, 1, 0, 154]
2025-03-05 15:23:04.896637 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 155],"bool"), list[6,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 155],"bool"), list[6,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 155, 155].  Tensor sizes: [6, 1, 0, 155]
2025-03-05 15:23:04.897377 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 156],"bool"), list[6,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 156],"bool"), list[6,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 156, 156].  Tensor sizes: [6, 1, 0, 156]
2025-03-05 15:23:04.898123 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 157],"bool"), list[6,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 157],"bool"), list[6,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 157, 157].  Tensor sizes: [6, 1, 0, 157]
2025-03-05 15:23:04.898799 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 158],"bool"), list[6,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 158],"bool"), list[6,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 158, 158].  Tensor sizes: [6, 1, 0, 158]
2025-03-05 15:23:04.899449 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 159],"bool"), list[6,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 159],"bool"), list[6,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 159, 159].  Tensor sizes: [6, 1, 0, 159]
2025-03-05 15:23:04.900452 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 15],"bool"), list[6,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 15],"bool"), list[6,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 15, 15].  Tensor sizes: [6, 1, 0, 15]
2025-03-05 15:23:04.901071 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 160],"bool"), list[6,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 160],"bool"), list[6,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 160, 160].  Tensor sizes: [6, 1, 0, 160]
2025-03-05 15:23:04.901638 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 161],"bool"), list[6,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 161],"bool"), list[6,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 161, 161].  Tensor sizes: [6, 1, 0, 161]
2025-03-05 15:23:04.902265 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 162],"bool"), list[6,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 162],"bool"), list[6,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 162, 162].  Tensor sizes: [6, 1, 0, 162]
2025-03-05 15:23:04.902878 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 163],"bool"), list[6,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 163],"bool"), list[6,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 163, 163].  Tensor sizes: [6, 1, 0, 163]
2025-03-05 15:23:04.903497 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 164],"bool"), list[6,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 164],"bool"), list[6,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 164, 164].  Tensor sizes: [6, 1, 0, 164]
2025-03-05 15:23:04.904164 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 165],"bool"), list[6,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 165],"bool"), list[6,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 165, 165].  Tensor sizes: [6, 1, 0, 165]
2025-03-05 15:23:04.905352 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 166],"bool"), list[6,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 166],"bool"), list[6,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 166, 166].  Tensor sizes: [6, 1, 0, 166]
2025-03-05 15:23:04.905968 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 167],"bool"), list[6,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 167],"bool"), list[6,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 167, 167].  Tensor sizes: [6, 1, 0, 167]
2025-03-05 15:23:04.907039 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 168],"bool"), list[6,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 168],"bool"), list[6,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 168, 168].  Tensor sizes: [6, 1, 0, 168]
2025-03-05 15:23:04.907788 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 169],"bool"), list[6,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 169],"bool"), list[6,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 169, 169].  Tensor sizes: [6, 1, 0, 169]
2025-03-05 15:23:04.908611 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 16],"bool"), list[6,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 16],"bool"), list[6,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 16, 16].  Tensor sizes: [6, 1, 0, 16]
2025-03-05 15:23:04.909311 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 170],"bool"), list[6,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 170],"bool"), list[6,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 170, 170].  Tensor sizes: [6, 1, 0, 170]
2025-03-05 15:23:04.910312 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 171],"bool"), list[6,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 171],"bool"), list[6,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 171, 171].  Tensor sizes: [6, 1, 0, 171]
2025-03-05 15:23:04.911225 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 172],"bool"), list[6,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 172],"bool"), list[6,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 172, 172].  Tensor sizes: [6, 1, 0, 172]
2025-03-05 15:23:04.911948 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 173],"bool"), list[6,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 173],"bool"), list[6,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 173, 173].  Tensor sizes: [6, 1, 0, 173]
2025-03-05 15:23:04.912839 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 174],"bool"), list[6,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 174],"bool"), list[6,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 174, 174].  Tensor sizes: [6, 1, 0, 174]
2025-03-05 15:23:04.913576 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 175],"bool"), list[6,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 175],"bool"), list[6,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 175, 175].  Tensor sizes: [6, 1, 0, 175]
2025-03-05 15:23:04.914337 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 176],"bool"), list[6,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 176],"bool"), list[6,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 176, 176].  Tensor sizes: [6, 1, 0, 176]
2025-03-05 15:23:04.915086 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 177],"bool"), list[6,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 177],"bool"), list[6,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 177, 177].  Tensor sizes: [6, 1, 0, 177]
2025-03-05 15:23:04.916012 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 178],"bool"), list[6,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 178],"bool"), list[6,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 178, 178].  Tensor sizes: [6, 1, 0, 178]
2025-03-05 15:23:04.916679 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 179],"bool"), list[6,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 179],"bool"), list[6,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 179, 179].  Tensor sizes: [6, 1, 0, 179]
2025-03-05 15:23:04.917281 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 17],"bool"), list[6,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 17],"bool"), list[6,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 17, 17].  Tensor sizes: [6, 1, 0, 17]
2025-03-05 15:23:04.918004 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 180],"bool"), list[6,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 180],"bool"), list[6,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 180, 180].  Tensor sizes: [6, 1, 0, 180]
2025-03-05 15:23:04.918605 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 181],"bool"), list[6,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 181],"bool"), list[6,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 181, 181].  Tensor sizes: [6, 1, 0, 181]
2025-03-05 15:23:04.919318 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 182],"bool"), list[6,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 182],"bool"), list[6,8,182,182,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 182, 182].  Tensor sizes: [6, 1, 0, 182]
2025-03-05 15:23:04.920012 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 183],"bool"), list[6,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 183],"bool"), list[6,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 183, 183].  Tensor sizes: [6, 1, 0, 183]
2025-03-05 15:23:04.920746 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 184],"bool"), list[6,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 184],"bool"), list[6,8,184,184,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 184, 184].  Tensor sizes: [6, 1, 0, 184]
2025-03-05 15:23:04.921524 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 185],"bool"), list[6,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 185],"bool"), list[6,8,185,185,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 185, 185].  Tensor sizes: [6, 1, 0, 185]
2025-03-05 15:23:04.922273 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 18],"bool"), list[6,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 18],"bool"), list[6,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 18, 18].  Tensor sizes: [6, 1, 0, 18]
2025-03-05 15:23:04.922939 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 19],"bool"), list[6,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 19],"bool"), list[6,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 19, 19].  Tensor sizes: [6, 1, 0, 19]
2025-03-05 15:23:04.923657 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 1],"bool"), list[6,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 1],"bool"), list[6,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 1, 1].  Tensor sizes: [6, 1, 0, 1]
2025-03-05 15:23:04.924358 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 20],"bool"), list[6,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 20],"bool"), list[6,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 20, 20].  Tensor sizes: [6, 1, 0, 20]
2025-03-05 15:23:04.925082 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 21],"bool"), list[6,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 21],"bool"), list[6,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 21, 21].  Tensor sizes: [6, 1, 0, 21]
2025-03-05 15:23:04.925735 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 22],"bool"), list[6,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 22],"bool"), list[6,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 22, 22].  Tensor sizes: [6, 1, 0, 22]
2025-03-05 15:23:04.926412 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 23],"bool"), list[6,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 23],"bool"), list[6,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 23, 23].  Tensor sizes: [6, 1, 0, 23]
2025-03-05 15:23:04.927115 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 24],"bool"), list[6,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 24],"bool"), list[6,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 24, 24].  Tensor sizes: [6, 1, 0, 24]
2025-03-05 15:23:04.927758 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,1,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,1,25,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 1, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.928521 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,10,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,10,25,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 10, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.929207 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,11,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,11,25,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 11, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.929873 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,12,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,12,25,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 12, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.930521 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,13,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,13,25,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 13, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.931301 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,14,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,14,25,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 14, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.932054 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,15,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,15,25,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 15, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.932929 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,16,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,16,25,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 16, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.933891 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,17,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,17,25,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 17, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.934597 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,18,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,18,25,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 18, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.935205 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,19,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,19,25,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 19, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.935904 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,2,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,2,25,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 2, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.936545 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,20,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,20,25,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 20, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.937354 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,21,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,21,25,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 21, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.937954 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,22,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,22,25,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 22, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.938493 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,23,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,23,25,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 23, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.939153 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,24,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,24,25,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 24, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.939846 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 25, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.940540 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,26,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,26,25,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 26, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.941186 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,27,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,27,25,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 27, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.941863 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,28,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,28,25,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 28, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.943367 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,29,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,29,25,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 29, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.944052 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,3,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,3,25,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 3, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.944885 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,30,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,30,25,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 30, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.945541 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,31,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,31,25,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 31, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.946188 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,32,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,32,25,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 32, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.946918 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,33,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,33,25,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 33, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.947528 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,34,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,34,25,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 34, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.948176 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,35,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,35,25,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 35, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.948901 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,36,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,36,25,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 36, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.949862 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,37,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,37,25,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 37, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.950797 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,38,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,38,25,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 38, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.951477 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,39,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,39,25,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 39, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.952065 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,4,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,4,25,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 4, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.952627 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,40,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,40,25,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 40, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.953175 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,41,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,41,25,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 41, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.953726 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,5,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,5,25,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 5, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.954478 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,6,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,6,25,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 6, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.955256 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,7,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,7,25,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 7, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.955931 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,8,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,8,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 8, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.957564 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,9,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 25],"bool"), list[6,8,9,25,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 9, 25].  Tensor sizes: [6, 1, 0, 25]
2025-03-05 15:23:04.958565 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 26],"bool"), list[6,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 26],"bool"), list[6,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 26, 26].  Tensor sizes: [6, 1, 0, 26]
2025-03-05 15:23:04.959310 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 27],"bool"), list[6,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 27],"bool"), list[6,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 27, 27].  Tensor sizes: [6, 1, 0, 27]
2025-03-05 15:23:04.959962 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 28],"bool"), list[6,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 28],"bool"), list[6,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 28, 28].  Tensor sizes: [6, 1, 0, 28]
2025-03-05 15:23:04.960594 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 29],"bool"), list[6,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 29],"bool"), list[6,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 29, 29].  Tensor sizes: [6, 1, 0, 29]
2025-03-05 15:23:04.961300 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 2],"bool"), list[6,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 2],"bool"), list[6,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 2, 2].  Tensor sizes: [6, 1, 0, 2]
2025-03-05 15:23:04.962048 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 30],"bool"), list[6,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 30],"bool"), list[6,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 30, 30].  Tensor sizes: [6, 1, 0, 30]
2025-03-05 15:23:04.962756 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 31],"bool"), list[6,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 31],"bool"), list[6,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 31, 31].  Tensor sizes: [6, 1, 0, 31]
2025-03-05 15:23:04.963344 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 32],"bool"), list[6,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 32],"bool"), list[6,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 32, 32].  Tensor sizes: [6, 1, 0, 32]
2025-03-05 15:23:04.964089 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 33],"bool"), list[6,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 33],"bool"), list[6,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 33, 33].  Tensor sizes: [6, 1, 0, 33]
2025-03-05 15:23:04.964968 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 34],"bool"), list[6,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 34],"bool"), list[6,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 34, 34].  Tensor sizes: [6, 1, 0, 34]
2025-03-05 15:23:04.965696 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 35],"bool"), list[6,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 35],"bool"), list[6,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 35, 35].  Tensor sizes: [6, 1, 0, 35]
2025-03-05 15:23:04.966420 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 36],"bool"), list[6,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 36],"bool"), list[6,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 36, 36].  Tensor sizes: [6, 1, 0, 36]
2025-03-05 15:23:04.967147 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 37],"bool"), list[6,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 37],"bool"), list[6,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 37, 37].  Tensor sizes: [6, 1, 0, 37]
2025-03-05 15:23:04.967899 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 38],"bool"), list[6,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 38],"bool"), list[6,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 38, 38].  Tensor sizes: [6, 1, 0, 38]
2025-03-05 15:23:04.968630 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 39],"bool"), list[6,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 39],"bool"), list[6,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 39, 39].  Tensor sizes: [6, 1, 0, 39]
2025-03-05 15:23:04.969299 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 3],"bool"), list[6,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 3],"bool"), list[6,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 3, 3].  Tensor sizes: [6, 1, 0, 3]
2025-03-05 15:23:04.969921 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 40],"bool"), list[6,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 40],"bool"), list[6,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 40, 40].  Tensor sizes: [6, 1, 0, 40]
2025-03-05 15:23:04.970479 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 41],"bool"), list[6,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 41],"bool"), list[6,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 41, 41].  Tensor sizes: [6, 1, 0, 41]
2025-03-05 15:23:04.971068 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 42],"bool"), list[6,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 42],"bool"), list[6,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 42, 42].  Tensor sizes: [6, 1, 0, 42]
2025-03-05 15:23:04.971884 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 43],"bool"), list[6,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 43],"bool"), list[6,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 43, 43].  Tensor sizes: [6, 1, 0, 43]
2025-03-05 15:23:04.972673 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 44],"bool"), list[6,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 44],"bool"), list[6,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 44, 44].  Tensor sizes: [6, 1, 0, 44]
2025-03-05 15:23:04.973377 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,1,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,1,45,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 1, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.974065 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,10,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,10,45,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 10, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.974750 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,100,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,100,45,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 100, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.975446 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,101,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,101,45,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 101, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.976234 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,102,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,102,45,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 102, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.977614 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,103,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,103,45,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 103, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.978357 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,104,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,104,45,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 104, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.979009 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,105,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,105,45,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 105, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.979604 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,106,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,106,45,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 106, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.980939 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,107,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,107,45,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 107, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.981740 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,108,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,108,45,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 108, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.982412 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,11,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,11,45,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 11, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.983677 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,12,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,12,45,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 12, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.984443 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,13,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,13,45,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 13, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.985292 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,14,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,14,45,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 14, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.986021 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,15,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,15,45,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 15, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.986944 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,16,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,16,45,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 16, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.987603 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,17,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,17,45,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 17, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.988158 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,18,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,18,45,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 18, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.988722 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,19,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,19,45,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 19, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.989248 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,2,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,2,45,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 2, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.989931 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,20,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,20,45,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 20, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.990651 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,21,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,21,45,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 21, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.991455 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,22,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,22,45,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 22, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.992651 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,23,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,23,45,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 23, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.993229 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,24,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,24,45,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 24, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.993916 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,25,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,25,45,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 25, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.994554 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,26,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,26,45,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 26, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.995466 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,27,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,27,45,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 27, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.996192 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,28,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,28,45,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 28, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.997248 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,29,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,29,45,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 29, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.997908 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,3,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,3,45,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 3, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.998664 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,30,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,30,45,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 30, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:04.999572 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,31,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,31,45,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 31, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.000348 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,32,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,32,45,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 32, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.001057 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,33,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,33,45,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 33, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.001752 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,34,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,34,45,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 34, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.002427 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,35,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,35,45,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 35, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.003249 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,36,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,36,45,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 36, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.003824 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,37,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,37,45,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 37, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.004446 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,38,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,38,45,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 38, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.005066 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,39,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,39,45,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 39, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.005716 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,4,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,4,45,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 4, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.006388 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,40,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,40,45,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 40, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.006946 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,41,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,41,45,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 41, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.007522 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,42,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,42,45,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 42, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.008650 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,43,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,43,45,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 43, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.009255 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,44,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,44,45,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 44, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.009952 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 45, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.010598 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,46,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,46,45,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 46, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.011329 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,47,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,47,45,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 47, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.011938 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,48,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,48,45,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 48, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.012653 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,49,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,49,45,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 49, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.013248 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,5,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,5,45,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 5, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.013839 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,50,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,50,45,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 50, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.014567 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,51,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,51,45,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 51, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.015275 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,52,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,52,45,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 52, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.015890 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,53,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,53,45,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 53, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.016434 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,54,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,54,45,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 54, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.017224 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,55,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,55,45,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 55, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.018190 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,56,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,56,45,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 56, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.018893 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,57,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,57,45,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 57, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.019535 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,58,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,58,45,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 58, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.020159 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,59,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,59,45,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 59, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.020749 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,6,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,6,45,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 6, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.021360 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,60,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,60,45,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 60, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.022424 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,61,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,61,45,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 61, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.023331 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,62,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,62,45,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 62, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.024019 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,63,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,63,45,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 63, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.024637 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,64,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,64,45,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 64, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.025278 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,65,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,65,45,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 65, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.025977 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,66,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,66,45,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 66, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.026706 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,67,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,67,45,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 67, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.027386 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,68,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,68,45,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 68, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.028602 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,69,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,69,45,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 69, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.029326 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,7,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,7,45,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 7, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.030024 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,70,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,70,45,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 70, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.030930 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,71,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,71,45,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 71, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.031769 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,72,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,72,45,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 72, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.032414 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,73,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,73,45,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 73, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.033056 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,74,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,74,45,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 74, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.033771 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,75,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,75,45,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 75, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.034484 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,76,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,76,45,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 76, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.035173 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,77,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,77,45,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 77, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.035817 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,78,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,78,45,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 78, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.036345 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,79,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,79,45,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 79, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.037034 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,8,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,8,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 8, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.037637 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,80,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,80,45,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 80, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.038291 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,81,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,81,45,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 81, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.038917 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,82,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,82,45,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 82, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.039882 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,83,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,83,45,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 83, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.040839 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,84,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,84,45,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 84, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.041562 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,85,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,85,45,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 85, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.042138 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,86,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,86,45,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 86, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.042684 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,87,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,87,45,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 87, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.043214 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,88,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,88,45,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 88, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.043731 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,89,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,89,45,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 89, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.044504 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,9,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,9,45,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 9, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.045224 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,90,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,90,45,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 90, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.045820 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,91,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,91,45,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 91, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.046363 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,92,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,92,45,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 92, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.046883 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,93,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,93,45,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 93, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.047718 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,94,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,94,45,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 94, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.048768 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,95,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,95,45,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 95, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.049437 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,96,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,96,45,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 96, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.050309 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,97,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,97,45,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 97, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.051045 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,98,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,98,45,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 98, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.051847 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,99,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 45],"bool"), list[6,8,99,45,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 99, 45].  Tensor sizes: [6, 1, 0, 45]
2025-03-05 15:23:05.052459 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 46],"bool"), list[6,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 46],"bool"), list[6,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 46, 46].  Tensor sizes: [6, 1, 0, 46]
2025-03-05 15:23:05.053028 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 47],"bool"), list[6,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 47],"bool"), list[6,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 47, 47].  Tensor sizes: [6, 1, 0, 47]
2025-03-05 15:23:05.053616 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 48],"bool"), list[6,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 48],"bool"), list[6,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 48, 48].  Tensor sizes: [6, 1, 0, 48]
2025-03-05 15:23:05.054193 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 49],"bool"), list[6,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 49],"bool"), list[6,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 49, 49].  Tensor sizes: [6, 1, 0, 49]
2025-03-05 15:23:05.055012 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 4],"bool"), list[6,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 4],"bool"), list[6,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 4, 4].  Tensor sizes: [6, 1, 0, 4]
2025-03-05 15:23:05.055786 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 50],"bool"), list[6,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 50],"bool"), list[6,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 50, 50].  Tensor sizes: [6, 1, 0, 50]
2025-03-05 15:23:05.056448 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 51],"bool"), list[6,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 51],"bool"), list[6,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 51, 51].  Tensor sizes: [6, 1, 0, 51]
2025-03-05 15:23:05.057064 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 52],"bool"), list[6,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 52],"bool"), list[6,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 52, 52].  Tensor sizes: [6, 1, 0, 52]
2025-03-05 15:23:05.058226 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 53],"bool"), list[6,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 53],"bool"), list[6,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 53, 53].  Tensor sizes: [6, 1, 0, 53]
2025-03-05 15:23:05.058900 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 54],"bool"), list[6,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 54],"bool"), list[6,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 54, 54].  Tensor sizes: [6, 1, 0, 54]
2025-03-05 15:23:05.059822 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 55],"bool"), list[6,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 55],"bool"), list[6,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 55, 55].  Tensor sizes: [6, 1, 0, 55]
2025-03-05 15:23:05.061057 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 56],"bool"), list[6,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 56],"bool"), list[6,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 56, 56].  Tensor sizes: [6, 1, 0, 56]
2025-03-05 15:23:05.061742 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,1,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,1,57,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 1, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.062312 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,10,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,10,57,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 10, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.062995 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,100,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,100,57,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 100, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.063601 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,101,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,101,57,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 101, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.064288 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,102,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,102,57,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 102, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.065048 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,103,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,103,57,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 103, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.065860 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,104,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,104,57,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 104, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.067192 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,105,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,105,57,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 105, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.067892 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,106,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,106,57,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 106, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.068611 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,107,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,107,57,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 107, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.069387 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,108,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,108,57,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 108, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.070419 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,109,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,109,57,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 109, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.071128 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,11,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,11,57,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 11, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.071824 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,110,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,110,57,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 110, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.072513 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,111,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,111,57,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 111, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.073173 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,112,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,112,57,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 112, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.073808 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,113,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,113,57,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 113, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.074455 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,114,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,114,57,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 114, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.075562 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,115,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,115,57,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 115, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.076192 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,116,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,116,57,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 116, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.077560 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,117,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,117,57,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 117, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.078285 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,118,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,118,57,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 118, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.078982 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,119,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,119,57,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 119, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.079776 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,12,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,12,57,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 12, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.080445 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,120,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,120,57,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 120, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.081180 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,121,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,121,57,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 121, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.082108 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,122,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,122,57,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 122, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.082865 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,123,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,123,57,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 123, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.083767 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,124,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,124,57,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 124, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.084597 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,125,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,125,57,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 125, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.085259 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,126,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,126,57,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 126, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.085906 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,127,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,127,57,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 127, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.086573 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,128,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,128,57,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 128, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.087915 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,129,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,129,57,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 129, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.088978 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,13,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,13,57,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 13, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.089800 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,130,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,130,57,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 130, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.090516 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,131,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,131,57,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 131, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.091178 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,132,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,132,57,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 132, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.091751 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,133,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,133,57,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 133, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.092292 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,134,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,134,57,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 134, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.092824 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,135,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,135,57,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 135, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.093408 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,136,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,136,57,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 136, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.094384 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,137,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,137,57,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 137, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.095124 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,138,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,138,57,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 138, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.095786 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,139,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,139,57,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 139, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.096453 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,14,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,14,57,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 14, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.097019 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,140,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,140,57,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 140, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.097955 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,141,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,141,57,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 141, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.098676 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,142,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,142,57,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 142, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.099422 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,143,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,143,57,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 143, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.100374 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,144,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,144,57,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 144, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.101098 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,145,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,145,57,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 145, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.101782 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,146,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,146,57,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 146, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.102416 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,147,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,147,57,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 147, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.102989 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,148,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,148,57,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 148, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.103716 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,149,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,149,57,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 149, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.104388 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,15,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,15,57,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 15, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.105361 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,150,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,150,57,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 150, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.106488 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,151,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,151,57,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 151, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.107323 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,152,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,152,57,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 152, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.108163 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,153,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,153,57,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 153, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.108846 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,154,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,154,57,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 154, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.109545 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,155,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,155,57,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 155, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.110202 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,156,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,156,57,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 156, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.110893 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,157,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,157,57,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 157, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.111968 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,158,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,158,57,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 158, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.112638 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,159,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,159,57,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 159, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.113311 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,16,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,16,57,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 16, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.114147 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,160,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,160,57,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 160, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.114802 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,161,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,161,57,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 161, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.115445 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,162,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,162,57,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 162, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.116118 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,163,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,163,57,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 163, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.116753 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,164,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,164,57,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 164, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.117469 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,165,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,165,57,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 165, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.118166 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,166,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,166,57,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 166, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.119148 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,167,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,167,57,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 167, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.119829 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,168,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,168,57,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 168, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.120399 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,169,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,169,57,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 169, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.120926 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,17,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,17,57,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 17, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.121470 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,170,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,170,57,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 170, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.122183 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,171,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,171,57,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 171, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.123288 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,172,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,172,57,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 172, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.123983 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,173,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,173,57,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 173, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.124837 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,174,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,174,57,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 174, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.125641 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,175,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,175,57,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 175, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.126910 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,176,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,176,57,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 176, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.127612 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,177,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,177,57,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 177, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.128205 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,178,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,178,57,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 178, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.128928 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,179,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,179,57,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 179, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.129665 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,18,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,18,57,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 18, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.130468 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,180,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,180,57,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 180, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.131170 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,181,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,181,57,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 181, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.131746 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,182,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,182,57,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 182, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.132968 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,183,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,183,57,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 183, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.133536 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,184,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,184,57,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 184, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.134105 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,185,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,185,57,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 185, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.134809 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,19,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,19,57,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 19, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.135733 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,2,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,2,57,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 2, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.136428 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,20,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,20,57,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 20, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.137083 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,21,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,21,57,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 21, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.138206 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,22,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,22,57,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 22, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.138988 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,23,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,23,57,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 23, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.139733 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,24,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,24,57,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 24, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.140525 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,25,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,25,57,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 25, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.141274 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,26,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,26,57,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 26, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.141873 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,27,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,27,57,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 27, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.142596 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,28,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,28,57,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 28, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.143544 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,29,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,29,57,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 29, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.144499 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,3,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,3,57,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 3, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.145189 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,30,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,30,57,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 30, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.145887 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,31,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,31,57,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 31, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.146652 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,32,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,32,57,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 32, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.147322 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,33,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,33,57,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 33, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.147952 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,34,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,34,57,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 34, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.148509 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,35,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,35,57,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 35, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.149304 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,36,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,36,57,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 36, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.150332 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,37,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,37,57,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 37, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.151303 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,38,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,38,57,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 38, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.152034 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,39,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,39,57,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 39, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.152790 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,4,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,4,57,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 4, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.153537 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,40,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,40,57,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 40, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.154637 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,41,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,41,57,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 41, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.155243 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,42,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,42,57,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 42, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.155885 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,43,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,43,57,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 43, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.156418 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,44,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,44,57,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 44, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.157155 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,45,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,45,57,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 45, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.157832 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,46,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,46,57,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 46, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.158606 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,47,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,47,57,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 47, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.159380 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,48,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,48,57,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 48, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.160078 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,49,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,49,57,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 49, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.160759 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,5,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,5,57,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 5, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.161372 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,50,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,50,57,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 50, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.161976 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,51,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,51,57,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 51, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.162754 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,52,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,52,57,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 52, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.163496 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,53,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,53,57,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 53, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.164172 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,54,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,54,57,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 54, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.164768 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,55,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,55,57,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 55, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.165514 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,56,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,56,57,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 56, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.166851 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 57, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.167501 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,58,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,58,57,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 58, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.168104 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,59,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,59,57,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 59, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.168664 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,6,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,6,57,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 6, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.169189 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,60,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,60,57,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 60, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.169721 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,61,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,61,57,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 61, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.170338 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,62,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,62,57,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 62, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.170970 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,63,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,63,57,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 63, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.171514 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,64,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,64,57,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 64, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.175993 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,65,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,65,57,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 65, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.177109 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,66,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,66,57,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 66, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.177840 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,67,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,67,57,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 67, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.178427 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,68,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,68,57,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 68, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.179185 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,69,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,69,57,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 69, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.179850 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,7,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,7,57,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 7, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.181009 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,70,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,70,57,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 70, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.181989 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,71,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,71,57,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 71, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.182697 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,72,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,72,57,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 72, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.183415 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,73,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,73,57,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 73, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.184089 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,74,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,74,57,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 74, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.184680 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,75,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,75,57,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 75, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.185393 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,76,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,76,57,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 76, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.186062 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,77,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,77,57,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 77, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.186776 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,78,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,78,57,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 78, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.187465 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,79,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,79,57,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 79, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.188244 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,8,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,8,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 8, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.188946 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,80,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,80,57,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 80, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.190057 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,81,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,81,57,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 81, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.190653 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,82,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,82,57,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 82, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.191496 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,83,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,83,57,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 83, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.192287 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,84,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,84,57,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 84, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.192921 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,85,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,85,57,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 85, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.193962 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,86,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,86,57,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 86, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.194563 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,87,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,87,57,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 87, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.195161 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,88,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,88,57,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 88, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.195896 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,89,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,89,57,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 89, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.196571 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,9,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,9,57,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 9, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.197205 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,90,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,90,57,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 90, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.197825 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,91,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,91,57,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 91, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.198429 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,92,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,92,57,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 92, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.199170 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,93,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,93,57,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 93, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.199833 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,94,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,94,57,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 94, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.200679 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,95,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,95,57,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 95, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.201468 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,96,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,96,57,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 96, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.202407 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,97,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,97,57,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 97, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.203508 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,98,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,98,57,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 98, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.204296 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,99,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 57],"bool"), list[6,8,99,57,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 99, 57].  Tensor sizes: [6, 1, 0, 57]
2025-03-05 15:23:05.205092 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 58],"bool"), list[6,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 58],"bool"), list[6,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 58, 58].  Tensor sizes: [6, 1, 0, 58]
2025-03-05 15:23:05.205754 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 59],"bool"), list[6,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 59],"bool"), list[6,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 59, 59].  Tensor sizes: [6, 1, 0, 59]
2025-03-05 15:23:05.206556 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 5],"bool"), list[6,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 5],"bool"), list[6,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 5, 5].  Tensor sizes: [6, 1, 0, 5]
2025-03-05 15:23:05.207209 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 5],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 5],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [6, 1, 0, 5]
2025-03-05 15:23:05.208724 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 60],"bool"), list[6,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 60],"bool"), list[6,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 60, 60].  Tensor sizes: [6, 1, 0, 60]
2025-03-05 15:23:05.209472 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 61],"bool"), list[6,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 61],"bool"), list[6,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 61, 61].  Tensor sizes: [6, 1, 0, 61]
2025-03-05 15:23:05.210189 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 62],"bool"), list[6,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 62],"bool"), list[6,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 62, 62].  Tensor sizes: [6, 1, 0, 62]
2025-03-05 15:23:05.210908 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 63],"bool"), list[6,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 63],"bool"), list[6,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 63, 63].  Tensor sizes: [6, 1, 0, 63]
2025-03-05 15:23:05.211561 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 64],"bool"), list[6,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 64],"bool"), list[6,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 64, 64].  Tensor sizes: [6, 1, 0, 64]
2025-03-05 15:23:05.212215 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 65],"bool"), list[6,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 65],"bool"), list[6,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 65, 65].  Tensor sizes: [6, 1, 0, 65]
2025-03-05 15:23:05.212824 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 66],"bool"), list[6,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 66],"bool"), list[6,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 66, 66].  Tensor sizes: [6, 1, 0, 66]
2025-03-05 15:23:05.213440 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 67],"bool"), list[6,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 67],"bool"), list[6,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 67, 67].  Tensor sizes: [6, 1, 0, 67]
2025-03-05 15:23:05.214016 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 68],"bool"), list[6,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 68],"bool"), list[6,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 68, 68].  Tensor sizes: [6, 1, 0, 68]
2025-03-05 15:23:05.214548 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 69],"bool"), list[6,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 69],"bool"), list[6,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 69, 69].  Tensor sizes: [6, 1, 0, 69]
2025-03-05 15:23:05.215258 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 6],"bool"), list[6,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 6],"bool"), list[6,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 6, 6].  Tensor sizes: [6, 1, 0, 6]
2025-03-05 15:23:05.215921 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 70],"bool"), list[6,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 70],"bool"), list[6,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 70, 70].  Tensor sizes: [6, 1, 0, 70]
2025-03-05 15:23:05.217213 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 71],"bool"), list[6,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 71],"bool"), list[6,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 71, 71].  Tensor sizes: [6, 1, 0, 71]
2025-03-05 15:23:05.217850 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 72],"bool"), list[6,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 72],"bool"), list[6,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 72, 72].  Tensor sizes: [6, 1, 0, 72]
2025-03-05 15:23:05.218701 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 73],"bool"), list[6,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 73],"bool"), list[6,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 73, 73].  Tensor sizes: [6, 1, 0, 73]
2025-03-05 15:23:05.219366 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 74],"bool"), list[6,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 74],"bool"), list[6,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 74, 74].  Tensor sizes: [6, 1, 0, 74]
2025-03-05 15:23:05.220176 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 75],"bool"), list[6,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 75],"bool"), list[6,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 75, 75].  Tensor sizes: [6, 1, 0, 75]
2025-03-05 15:23:05.220968 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 76],"bool"), list[6,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 76],"bool"), list[6,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 76, 76].  Tensor sizes: [6, 1, 0, 76]
2025-03-05 15:23:05.221995 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 77],"bool"), list[6,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 77],"bool"), list[6,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 77, 77].  Tensor sizes: [6, 1, 0, 77]
2025-03-05 15:23:05.222757 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 78],"bool"), list[6,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 78],"bool"), list[6,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 78, 78].  Tensor sizes: [6, 1, 0, 78]
2025-03-05 15:23:05.223415 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 79],"bool"), list[6,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 79],"bool"), list[6,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 79, 79].  Tensor sizes: [6, 1, 0, 79]
2025-03-05 15:23:05.224097 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 7],"bool"), list[6,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 7],"bool"), list[6,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 7, 7].  Tensor sizes: [6, 1, 0, 7]
2025-03-05 15:23:05.224878 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 80],"bool"), list[6,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 80],"bool"), list[6,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 80, 80].  Tensor sizes: [6, 1, 0, 80]
2025-03-05 15:23:05.225573 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 81],"bool"), list[6,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 81],"bool"), list[6,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 81, 81].  Tensor sizes: [6, 1, 0, 81]
2025-03-05 15:23:05.226941 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 82],"bool"), list[6,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 82],"bool"), list[6,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 82, 82].  Tensor sizes: [6, 1, 0, 82]
2025-03-05 15:23:05.227707 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 83],"bool"), list[6,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 83],"bool"), list[6,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 83, 83].  Tensor sizes: [6, 1, 0, 83]
2025-03-05 15:23:05.228389 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 84],"bool"), list[6,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 84],"bool"), list[6,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 84, 84].  Tensor sizes: [6, 1, 0, 84]
2025-03-05 15:23:05.229066 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 85],"bool"), list[6,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 85],"bool"), list[6,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 85, 85].  Tensor sizes: [6, 1, 0, 85]
2025-03-05 15:23:05.229846 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 86],"bool"), list[6,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 86],"bool"), list[6,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 86, 86].  Tensor sizes: [6, 1, 0, 86]
2025-03-05 15:23:05.231005 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 87],"bool"), list[6,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 87],"bool"), list[6,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 87, 87].  Tensor sizes: [6, 1, 0, 87]
2025-03-05 15:23:05.231759 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 88],"bool"), list[6,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 88],"bool"), list[6,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 88, 88].  Tensor sizes: [6, 1, 0, 88]
2025-03-05 15:23:05.232390 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 89],"bool"), list[6,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 89],"bool"), list[6,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 89, 89].  Tensor sizes: [6, 1, 0, 89]
2025-03-05 15:23:05.233122 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 8],"bool"), list[6,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 8],"bool"), list[6,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 8, 8].  Tensor sizes: [6, 1, 0, 8]
2025-03-05 15:23:05.233797 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 90],"bool"), list[6,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 90],"bool"), list[6,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 90, 90].  Tensor sizes: [6, 1, 0, 90]
2025-03-05 15:23:05.234688 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 91],"bool"), list[6,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 91],"bool"), list[6,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 91, 91].  Tensor sizes: [6, 1, 0, 91]
2025-03-05 15:23:05.236043 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 92],"bool"), list[6,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 92],"bool"), list[6,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 92, 92].  Tensor sizes: [6, 1, 0, 92]
2025-03-05 15:23:05.236712 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 93],"bool"), list[6,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 93],"bool"), list[6,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 93, 93].  Tensor sizes: [6, 1, 0, 93]
2025-03-05 15:23:05.237338 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 94],"bool"), list[6,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 94],"bool"), list[6,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 94, 94].  Tensor sizes: [6, 1, 0, 94]
2025-03-05 15:23:05.237923 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 95],"bool"), list[6,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 95],"bool"), list[6,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 95, 95].  Tensor sizes: [6, 1, 0, 95]
2025-03-05 15:23:05.238669 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 96],"bool"), list[6,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 96],"bool"), list[6,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 96, 96].  Tensor sizes: [6, 1, 0, 96]
2025-03-05 15:23:05.239388 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,1,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,1,97,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 1, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.239986 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,10,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,10,97,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 10, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.240739 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,100,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,100,97,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 100, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.241753 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,101,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,101,97,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 101, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.242429 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,102,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,102,97,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 102, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.243009 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,103,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,103,97,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 103, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.243642 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,104,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,104,97,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 104, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.244189 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,105,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,105,97,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 105, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.244850 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,106,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,106,97,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 106, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.245469 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,107,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,107,97,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 107, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.246403 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,108,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,108,97,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 108, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.247274 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,109,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,109,97,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 109, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.247979 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,11,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,11,97,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 11, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.249381 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,110,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,110,97,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 110, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.250467 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,111,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,111,97,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 111, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.251047 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,112,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,112,97,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 112, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.251615 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,113,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,113,97,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 113, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.252333 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,114,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,114,97,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 114, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.253007 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,115,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,115,97,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 115, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.253793 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,116,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,116,97,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 116, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.254511 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,117,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,117,97,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 117, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.255476 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,118,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,118,97,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 118, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.256232 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,119,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,119,97,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 119, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.257859 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,12,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,12,97,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 12, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.258567 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,120,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,120,97,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 120, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.259247 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,121,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,121,97,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 121, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.259832 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,122,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,122,97,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 122, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.261745 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,123,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,123,97,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 123, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.262484 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,124,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,124,97,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 124, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.263114 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,125,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,125,97,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 125, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.263711 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,126,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,126,97,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 126, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.264390 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,127,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,127,97,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 127, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.264976 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,128,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,128,97,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 128, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.265502 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,129,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,129,97,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 129, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.266165 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,13,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,13,97,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 13, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.266728 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,130,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,130,97,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 130, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.267677 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,131,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,131,97,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 131, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.268465 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,132,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,132,97,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 132, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.269279 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,133,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,133,97,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 133, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.270014 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,134,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,134,97,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 134, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.270698 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,135,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,135,97,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 135, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.272136 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,136,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,136,97,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 136, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.272989 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,137,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,137,97,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 137, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.273779 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,138,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,138,97,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 138, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.274508 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,139,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,139,97,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 139, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.275373 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,14,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,14,97,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 14, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.276104 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,140,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,140,97,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 140, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.276717 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,141,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,141,97,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 141, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.277457 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,142,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,142,97,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 142, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.278287 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,143,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,143,97,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 143, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.279489 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,144,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,144,97,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 144, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.280335 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,145,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,145,97,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 145, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.281028 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,146,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,146,97,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 146, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.281798 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,147,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,147,97,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 147, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.282472 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,148,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,148,97,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 148, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.283370 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,149,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,149,97,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 149, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.284074 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,15,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,15,97,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 15, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.284713 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,150,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,150,97,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 150, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.285709 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,151,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,151,97,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 151, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.286417 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,152,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,152,97,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 152, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.287119 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,153,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,153,97,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 153, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.287809 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,16,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,16,97,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 16, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.288527 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,17,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,17,97,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 17, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.289411 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,18,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,18,97,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 18, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.290048 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,19,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,19,97,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 19, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.290992 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,2,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,2,97,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 2, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.291738 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,20,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,20,97,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 20, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.292579 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,21,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,21,97,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 21, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.293458 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,22,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,22,97,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 22, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.294231 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,23,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,23,97,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 23, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.295732 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,24,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,24,97,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 24, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.296405 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,25,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,25,97,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 25, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.297031 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,26,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,26,97,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 26, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.298370 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,27,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,27,97,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 27, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.299147 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,28,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,28,97,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 28, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.299803 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,29,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,29,97,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 29, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.300570 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,3,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,3,97,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 3, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.301337 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,30,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,30,97,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 30, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.302155 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,31,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,31,97,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 31, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.302941 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,32,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,32,97,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 32, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.303751 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,33,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,33,97,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 33, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.304461 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,34,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,34,97,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 34, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.305158 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,35,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,35,97,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 35, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.306033 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,36,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,36,97,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 36, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.307016 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,37,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,37,97,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 37, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.307762 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,38,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,38,97,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 38, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.308422 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,39,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,39,97,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 39, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.309095 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,4,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,4,97,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 4, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.309776 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,40,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,40,97,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 40, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.310354 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,41,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,41,97,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 41, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.310921 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,42,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,42,97,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 42, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.311932 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,43,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,43,97,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 43, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.312498 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,44,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,44,97,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 44, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.313443 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,45,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,45,97,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 45, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.314030 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,46,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,46,97,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 46, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.314600 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,47,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,47,97,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 47, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.315187 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,48,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,48,97,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 48, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.315822 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,49,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,49,97,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 49, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.316687 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,5,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,5,97,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 5, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.317644 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,50,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,50,97,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 50, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.318488 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,51,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,51,97,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 51, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.319168 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,52,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,52,97,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 52, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.319720 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,53,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,53,97,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 53, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.320281 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,54,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,54,97,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 54, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.320961 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,55,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,55,97,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 55, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.321708 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,56,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,56,97,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 56, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.322603 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,57,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,57,97,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 57, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.323401 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,58,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,58,97,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 58, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.324165 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,59,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,59,97,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 59, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.325477 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,6,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,6,97,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 6, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.326353 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,60,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,60,97,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 60, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.327075 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,61,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,61,97,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 61, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.327731 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,62,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,62,97,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 62, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.328481 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,63,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,63,97,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 63, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.329230 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,64,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,64,97,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 64, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.330344 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,65,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,65,97,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 65, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.331412 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,66,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,66,97,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 66, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.332293 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,67,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,67,97,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 67, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.333021 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,68,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,68,97,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 68, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.334057 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,69,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,69,97,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 69, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.335049 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,7,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,7,97,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 7, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.336179 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,70,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,70,97,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 70, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.337209 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,71,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,71,97,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 71, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.338014 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,72,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,72,97,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 72, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.338687 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,73,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,73,97,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 73, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.339560 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,74,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,74,97,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 74, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.340336 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,75,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,75,97,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 75, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.341076 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,76,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,76,97,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 76, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.342081 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,77,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,77,97,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 77, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.342837 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,78,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,78,97,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 78, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.343473 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,79,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,79,97,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 79, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.344072 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,8,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,8,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 8, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.344701 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,80,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,80,97,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 80, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.345279 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,81,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,81,97,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 81, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.346164 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,82,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,82,97,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 82, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.346931 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,83,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,83,97,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 83, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.347548 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,84,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,84,97,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 84, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.348261 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,85,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,85,97,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 85, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.349066 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,86,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,86,97,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 86, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.349906 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,87,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,87,97,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 87, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.350507 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,88,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,88,97,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 88, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.351785 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,89,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,89,97,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 89, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.352480 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,9,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,9,97,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 9, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.353096 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,90,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,90,97,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 90, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.354009 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,91,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,91,97,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 91, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.354671 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,92,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,92,97,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 92, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.355268 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,93,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,93,97,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 93, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.356081 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,94,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,94,97,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 94, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.356957 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,95,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,95,97,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 95, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.357634 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,96,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,96,97,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 96, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.358207 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 97, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.358914 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,98,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,98,97,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 98, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.359894 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,99,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 97],"bool"), list[6,8,99,97,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 99, 97].  Tensor sizes: [6, 1, 0, 97]
2025-03-05 15:23:05.360526 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 98],"bool"), list[6,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 98],"bool"), list[6,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 98, 98].  Tensor sizes: [6, 1, 0, 98]
2025-03-05 15:23:05.361414 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 99],"bool"), list[6,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 99],"bool"), list[6,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 99, 99].  Tensor sizes: [6, 1, 0, 99]
2025-03-05 15:23:05.362994 test begin: paddle.broadcast_to(Tensor([6, 1, 0, 9],"bool"), list[6,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 0, 9],"bool"), list[6,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 8, 9, 9].  Tensor sizes: [6, 1, 0, 9]
2025-03-05 15:23:05.363750 test begin: paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 1, 1].  Tensor sizes: [6, 1, 1, 0]
2025-03-05 15:23:05.364653 test begin: paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 1, 25].  Tensor sizes: [6, 1, 1, 0]
2025-03-05 15:23:05.365359 test begin: paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 1, 45].  Tensor sizes: [6, 1, 1, 0]
2025-03-05 15:23:05.366077 test begin: paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 1, 57].  Tensor sizes: [6, 1, 1, 0]
2025-03-05 15:23:05.366782 test begin: paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 1, 0],"bool"), list[6,8,1,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 1, 97].  Tensor sizes: [6, 1, 1, 0]
2025-03-05 15:23:05.367372 test begin: paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 10, 10].  Tensor sizes: [6, 1, 10, 0]
2025-03-05 15:23:05.368064 test begin: paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 10, 25].  Tensor sizes: [6, 1, 10, 0]
2025-03-05 15:23:05.368947 test begin: paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 10, 45].  Tensor sizes: [6, 1, 10, 0]
2025-03-05 15:23:05.369805 test begin: paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 10, 57].  Tensor sizes: [6, 1, 10, 0]
2025-03-05 15:23:05.370523 test begin: paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 10, 0],"bool"), list[6,8,10,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 10, 97].  Tensor sizes: [6, 1, 10, 0]
2025-03-05 15:23:05.371214 test begin: paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 100, 100].  Tensor sizes: [6, 1, 100, 0]
2025-03-05 15:23:05.372076 test begin: paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 100, 45].  Tensor sizes: [6, 1, 100, 0]
2025-03-05 15:23:05.372859 test begin: paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 100, 57].  Tensor sizes: [6, 1, 100, 0]
2025-03-05 15:23:05.373784 test begin: paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 100, 0],"bool"), list[6,8,100,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 100, 97].  Tensor sizes: [6, 1, 100, 0]
2025-03-05 15:23:05.374680 test begin: paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 101, 101].  Tensor sizes: [6, 1, 101, 0]
2025-03-05 15:23:05.376272 test begin: paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 101, 45].  Tensor sizes: [6, 1, 101, 0]
2025-03-05 15:23:05.376981 test begin: paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 101, 57].  Tensor sizes: [6, 1, 101, 0]
2025-03-05 15:23:05.377863 test begin: paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 101, 0],"bool"), list[6,8,101,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 101, 97].  Tensor sizes: [6, 1, 101, 0]
2025-03-05 15:23:05.379239 test begin: paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 102, 102].  Tensor sizes: [6, 1, 102, 0]
2025-03-05 15:23:05.379889 test begin: paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 102, 45].  Tensor sizes: [6, 1, 102, 0]
2025-03-05 15:23:05.380530 test begin: paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 102, 57].  Tensor sizes: [6, 1, 102, 0]
2025-03-05 15:23:05.381496 test begin: paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 102, 0],"bool"), list[6,8,102,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 102, 97].  Tensor sizes: [6, 1, 102, 0]
2025-03-05 15:23:05.382165 test begin: paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 103, 103].  Tensor sizes: [6, 1, 103, 0]
2025-03-05 15:23:05.382847 test begin: paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 103, 45].  Tensor sizes: [6, 1, 103, 0]
2025-03-05 15:23:05.383550 test begin: paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 103, 57].  Tensor sizes: [6, 1, 103, 0]
2025-03-05 15:23:05.384866 test begin: paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 103, 0],"bool"), list[6,8,103,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 103, 97].  Tensor sizes: [6, 1, 103, 0]
2025-03-05 15:23:05.385632 test begin: paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 104, 104].  Tensor sizes: [6, 1, 104, 0]
2025-03-05 15:23:05.386594 test begin: paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 104, 45].  Tensor sizes: [6, 1, 104, 0]
2025-03-05 15:23:05.387189 test begin: paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 104, 57].  Tensor sizes: [6, 1, 104, 0]
2025-03-05 15:23:05.387873 test begin: paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 104, 0],"bool"), list[6,8,104,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 104, 97].  Tensor sizes: [6, 1, 104, 0]
2025-03-05 15:23:05.388777 test begin: paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 105, 105].  Tensor sizes: [6, 1, 105, 0]
2025-03-05 15:23:05.389414 test begin: paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 105, 45].  Tensor sizes: [6, 1, 105, 0]
2025-03-05 15:23:05.390098 test begin: paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 105, 57].  Tensor sizes: [6, 1, 105, 0]
2025-03-05 15:23:05.390790 test begin: paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 105, 0],"bool"), list[6,8,105,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 105, 97].  Tensor sizes: [6, 1, 105, 0]
2025-03-05 15:23:05.391402 test begin: paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 106, 106].  Tensor sizes: [6, 1, 106, 0]
2025-03-05 15:23:05.391947 test begin: paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 106, 45].  Tensor sizes: [6, 1, 106, 0]
2025-03-05 15:23:05.392517 test begin: paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 106, 57].  Tensor sizes: [6, 1, 106, 0]
2025-03-05 15:23:05.393187 test begin: paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 106, 0],"bool"), list[6,8,106,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 106, 97].  Tensor sizes: [6, 1, 106, 0]
2025-03-05 15:23:05.393904 test begin: paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 107, 107].  Tensor sizes: [6, 1, 107, 0]
2025-03-05 15:23:05.394885 test begin: paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 107, 45].  Tensor sizes: [6, 1, 107, 0]
2025-03-05 15:23:05.395618 test begin: paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 107, 57].  Tensor sizes: [6, 1, 107, 0]
2025-03-05 15:23:05.396299 test begin: paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 107, 0],"bool"), list[6,8,107,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 107, 97].  Tensor sizes: [6, 1, 107, 0]
2025-03-05 15:23:05.396856 test begin: paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 108, 108].  Tensor sizes: [6, 1, 108, 0]
2025-03-05 15:23:05.397429 test begin: paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 108, 45].  Tensor sizes: [6, 1, 108, 0]
2025-03-05 15:23:05.397971 test begin: paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 108, 57].  Tensor sizes: [6, 1, 108, 0]
2025-03-05 15:23:05.398576 test begin: paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 108, 0],"bool"), list[6,8,108,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 108, 97].  Tensor sizes: [6, 1, 108, 0]
2025-03-05 15:23:05.399428 test begin: paddle.broadcast_to(Tensor([6, 1, 109, 0],"bool"), list[6,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 109, 0],"bool"), list[6,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 109, 109].  Tensor sizes: [6, 1, 109, 0]
2025-03-05 15:23:05.400103 test begin: paddle.broadcast_to(Tensor([6, 1, 109, 0],"bool"), list[6,8,109,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 109, 0],"bool"), list[6,8,109,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 109, 57].  Tensor sizes: [6, 1, 109, 0]
2025-03-05 15:23:05.400777 test begin: paddle.broadcast_to(Tensor([6, 1, 109, 0],"bool"), list[6,8,109,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 109, 0],"bool"), list[6,8,109,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 109, 97].  Tensor sizes: [6, 1, 109, 0]
2025-03-05 15:23:05.401678 test begin: paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 11, 11].  Tensor sizes: [6, 1, 11, 0]
2025-03-05 15:23:05.402474 test begin: paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 11, 25].  Tensor sizes: [6, 1, 11, 0]
2025-03-05 15:23:05.403101 test begin: paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 11, 45].  Tensor sizes: [6, 1, 11, 0]
2025-03-05 15:23:05.403882 test begin: paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 11, 57].  Tensor sizes: [6, 1, 11, 0]
2025-03-05 15:23:05.404500 test begin: paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 11, 0],"bool"), list[6,8,11,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 11, 97].  Tensor sizes: [6, 1, 11, 0]
2025-03-05 15:23:05.405614 test begin: paddle.broadcast_to(Tensor([6, 1, 110, 0],"bool"), list[6,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 110, 0],"bool"), list[6,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 110, 110].  Tensor sizes: [6, 1, 110, 0]
2025-03-05 15:23:05.406896 test begin: paddle.broadcast_to(Tensor([6, 1, 110, 0],"bool"), list[6,8,110,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 110, 0],"bool"), list[6,8,110,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 110, 57].  Tensor sizes: [6, 1, 110, 0]
2025-03-05 15:23:05.407567 test begin: paddle.broadcast_to(Tensor([6, 1, 110, 0],"bool"), list[6,8,110,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 110, 0],"bool"), list[6,8,110,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 110, 97].  Tensor sizes: [6, 1, 110, 0]
2025-03-05 15:23:05.408333 test begin: paddle.broadcast_to(Tensor([6, 1, 111, 0],"bool"), list[6,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 111, 0],"bool"), list[6,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 111, 111].  Tensor sizes: [6, 1, 111, 0]
2025-03-05 15:23:05.409021 test begin: paddle.broadcast_to(Tensor([6, 1, 111, 0],"bool"), list[6,8,111,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 111, 0],"bool"), list[6,8,111,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 111, 57].  Tensor sizes: [6, 1, 111, 0]
2025-03-05 15:23:05.409656 test begin: paddle.broadcast_to(Tensor([6, 1, 111, 0],"bool"), list[6,8,111,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 111, 0],"bool"), list[6,8,111,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 111, 97].  Tensor sizes: [6, 1, 111, 0]
2025-03-05 15:23:05.410336 test begin: paddle.broadcast_to(Tensor([6, 1, 112, 0],"bool"), list[6,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 112, 0],"bool"), list[6,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 112, 112].  Tensor sizes: [6, 1, 112, 0]
2025-03-05 15:23:05.410983 test begin: paddle.broadcast_to(Tensor([6, 1, 112, 0],"bool"), list[6,8,112,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 112, 0],"bool"), list[6,8,112,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 112, 57].  Tensor sizes: [6, 1, 112, 0]
2025-03-05 15:23:05.411804 test begin: paddle.broadcast_to(Tensor([6, 1, 112, 0],"bool"), list[6,8,112,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 112, 0],"bool"), list[6,8,112,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 112, 97].  Tensor sizes: [6, 1, 112, 0]
2025-03-05 15:23:05.412497 test begin: paddle.broadcast_to(Tensor([6, 1, 113, 0],"bool"), list[6,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 113, 0],"bool"), list[6,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 113, 113].  Tensor sizes: [6, 1, 113, 0]
2025-03-05 15:23:05.413176 test begin: paddle.broadcast_to(Tensor([6, 1, 113, 0],"bool"), list[6,8,113,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 113, 0],"bool"), list[6,8,113,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 113, 57].  Tensor sizes: [6, 1, 113, 0]
2025-03-05 15:23:05.413796 test begin: paddle.broadcast_to(Tensor([6, 1, 113, 0],"bool"), list[6,8,113,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 113, 0],"bool"), list[6,8,113,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 113, 97].  Tensor sizes: [6, 1, 113, 0]
2025-03-05 15:23:05.414472 test begin: paddle.broadcast_to(Tensor([6, 1, 114, 0],"bool"), list[6,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 114, 0],"bool"), list[6,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 114, 114].  Tensor sizes: [6, 1, 114, 0]
2025-03-05 15:23:05.415372 test begin: paddle.broadcast_to(Tensor([6, 1, 114, 0],"bool"), list[6,8,114,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 114, 0],"bool"), list[6,8,114,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 114, 57].  Tensor sizes: [6, 1, 114, 0]
2025-03-05 15:23:05.416282 test begin: paddle.broadcast_to(Tensor([6, 1, 114, 0],"bool"), list[6,8,114,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 114, 0],"bool"), list[6,8,114,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 114, 97].  Tensor sizes: [6, 1, 114, 0]
2025-03-05 15:23:05.416824 test begin: paddle.broadcast_to(Tensor([6, 1, 115, 0],"bool"), list[6,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 115, 0],"bool"), list[6,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 115, 115].  Tensor sizes: [6, 1, 115, 0]
2025-03-05 15:23:05.417720 test begin: paddle.broadcast_to(Tensor([6, 1, 115, 0],"bool"), list[6,8,115,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 115, 0],"bool"), list[6,8,115,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 115, 57].  Tensor sizes: [6, 1, 115, 0]
2025-03-05 15:23:05.418324 test begin: paddle.broadcast_to(Tensor([6, 1, 115, 0],"bool"), list[6,8,115,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 115, 0],"bool"), list[6,8,115,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 115, 97].  Tensor sizes: [6, 1, 115, 0]
2025-03-05 15:23:05.419018 test begin: paddle.broadcast_to(Tensor([6, 1, 116, 0],"bool"), list[6,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 116, 0],"bool"), list[6,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 116, 116].  Tensor sizes: [6, 1, 116, 0]
2025-03-05 15:23:05.419811 test begin: paddle.broadcast_to(Tensor([6, 1, 116, 0],"bool"), list[6,8,116,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 116, 0],"bool"), list[6,8,116,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 116, 57].  Tensor sizes: [6, 1, 116, 0]
2025-03-05 15:23:05.420413 test begin: paddle.broadcast_to(Tensor([6, 1, 116, 0],"bool"), list[6,8,116,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 116, 0],"bool"), list[6,8,116,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 116, 97].  Tensor sizes: [6, 1, 116, 0]
2025-03-05 15:23:05.421047 test begin: paddle.broadcast_to(Tensor([6, 1, 117, 0],"bool"), list[6,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 117, 0],"bool"), list[6,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 117, 117].  Tensor sizes: [6, 1, 117, 0]
2025-03-05 15:23:05.421715 test begin: paddle.broadcast_to(Tensor([6, 1, 117, 0],"bool"), list[6,8,117,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 117, 0],"bool"), list[6,8,117,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 117, 57].  Tensor sizes: [6, 1, 117, 0]
2025-03-05 15:23:05.422512 test begin: paddle.broadcast_to(Tensor([6, 1, 117, 0],"bool"), list[6,8,117,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 117, 0],"bool"), list[6,8,117,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 117, 97].  Tensor sizes: [6, 1, 117, 0]
2025-03-05 15:23:05.423328 test begin: paddle.broadcast_to(Tensor([6, 1, 118, 0],"bool"), list[6,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 118, 0],"bool"), list[6,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 118, 118].  Tensor sizes: [6, 1, 118, 0]
2025-03-05 15:23:05.423982 test begin: paddle.broadcast_to(Tensor([6, 1, 118, 0],"bool"), list[6,8,118,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 118, 0],"bool"), list[6,8,118,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 118, 57].  Tensor sizes: [6, 1, 118, 0]
2025-03-05 15:23:05.425047 test begin: paddle.broadcast_to(Tensor([6, 1, 118, 0],"bool"), list[6,8,118,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 118, 0],"bool"), list[6,8,118,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 118, 97].  Tensor sizes: [6, 1, 118, 0]
2025-03-05 15:23:05.425999 test begin: paddle.broadcast_to(Tensor([6, 1, 119, 0],"bool"), list[6,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 119, 0],"bool"), list[6,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 119, 119].  Tensor sizes: [6, 1, 119, 0]
2025-03-05 15:23:05.426645 test begin: paddle.broadcast_to(Tensor([6, 1, 119, 0],"bool"), list[6,8,119,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 119, 0],"bool"), list[6,8,119,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 119, 57].  Tensor sizes: [6, 1, 119, 0]
2025-03-05 15:23:05.427297 test begin: paddle.broadcast_to(Tensor([6, 1, 119, 0],"bool"), list[6,8,119,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 119, 0],"bool"), list[6,8,119,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 119, 97].  Tensor sizes: [6, 1, 119, 0]
2025-03-05 15:23:05.428049 test begin: paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 12, 12].  Tensor sizes: [6, 1, 12, 0]
2025-03-05 15:23:05.428736 test begin: paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 12, 25].  Tensor sizes: [6, 1, 12, 0]
2025-03-05 15:23:05.429440 test begin: paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 12, 45].  Tensor sizes: [6, 1, 12, 0]
2025-03-05 15:23:05.430570 test begin: paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 12, 57].  Tensor sizes: [6, 1, 12, 0]
2025-03-05 15:23:05.431286 test begin: paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 12, 0],"bool"), list[6,8,12,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 12, 97].  Tensor sizes: [6, 1, 12, 0]
2025-03-05 15:23:05.432100 test begin: paddle.broadcast_to(Tensor([6, 1, 120, 0],"bool"), list[6,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 120, 0],"bool"), list[6,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 120, 120].  Tensor sizes: [6, 1, 120, 0]
2025-03-05 15:23:05.432796 test begin: paddle.broadcast_to(Tensor([6, 1, 120, 0],"bool"), list[6,8,120,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 120, 0],"bool"), list[6,8,120,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 120, 57].  Tensor sizes: [6, 1, 120, 0]
2025-03-05 15:23:05.433438 test begin: paddle.broadcast_to(Tensor([6, 1, 120, 0],"bool"), list[6,8,120,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 120, 0],"bool"), list[6,8,120,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 120, 97].  Tensor sizes: [6, 1, 120, 0]
2025-03-05 15:23:05.434104 test begin: paddle.broadcast_to(Tensor([6, 1, 121, 0],"bool"), list[6,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 121, 0],"bool"), list[6,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 121, 121].  Tensor sizes: [6, 1, 121, 0]
2025-03-05 15:23:05.434863 test begin: paddle.broadcast_to(Tensor([6, 1, 121, 0],"bool"), list[6,8,121,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 121, 0],"bool"), list[6,8,121,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 121, 57].  Tensor sizes: [6, 1, 121, 0]
2025-03-05 15:23:05.435545 test begin: paddle.broadcast_to(Tensor([6, 1, 121, 0],"bool"), list[6,8,121,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 121, 0],"bool"), list[6,8,121,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 121, 97].  Tensor sizes: [6, 1, 121, 0]
2025-03-05 15:23:05.436357 test begin: paddle.broadcast_to(Tensor([6, 1, 122, 0],"bool"), list[6,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 122, 0],"bool"), list[6,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 122, 122].  Tensor sizes: [6, 1, 122, 0]
2025-03-05 15:23:05.437031 test begin: paddle.broadcast_to(Tensor([6, 1, 122, 0],"bool"), list[6,8,122,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 122, 0],"bool"), list[6,8,122,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 122, 57].  Tensor sizes: [6, 1, 122, 0]
2025-03-05 15:23:05.437847 test begin: paddle.broadcast_to(Tensor([6, 1, 122, 0],"bool"), list[6,8,122,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 122, 0],"bool"), list[6,8,122,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 122, 97].  Tensor sizes: [6, 1, 122, 0]
2025-03-05 15:23:05.438733 test begin: paddle.broadcast_to(Tensor([6, 1, 123, 0],"bool"), list[6,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 123, 0],"bool"), list[6,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 123, 123].  Tensor sizes: [6, 1, 123, 0]
2025-03-05 15:23:05.440487 test begin: paddle.broadcast_to(Tensor([6, 1, 123, 0],"bool"), list[6,8,123,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 123, 0],"bool"), list[6,8,123,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 123, 57].  Tensor sizes: [6, 1, 123, 0]
2025-03-05 15:23:05.441279 test begin: paddle.broadcast_to(Tensor([6, 1, 123, 0],"bool"), list[6,8,123,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 123, 0],"bool"), list[6,8,123,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 123, 97].  Tensor sizes: [6, 1, 123, 0]
2025-03-05 15:23:05.441915 test begin: paddle.broadcast_to(Tensor([6, 1, 124, 0],"bool"), list[6,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 124, 0],"bool"), list[6,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 124, 124].  Tensor sizes: [6, 1, 124, 0]
2025-03-05 15:23:05.442677 test begin: paddle.broadcast_to(Tensor([6, 1, 124, 0],"bool"), list[6,8,124,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 124, 0],"bool"), list[6,8,124,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 124, 57].  Tensor sizes: [6, 1, 124, 0]
2025-03-05 15:23:05.443862 test begin: paddle.broadcast_to(Tensor([6, 1, 124, 0],"bool"), list[6,8,124,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 124, 0],"bool"), list[6,8,124,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 124, 97].  Tensor sizes: [6, 1, 124, 0]
2025-03-05 15:23:05.444555 test begin: paddle.broadcast_to(Tensor([6, 1, 125, 0],"bool"), list[6,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 125, 0],"bool"), list[6,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 125, 125].  Tensor sizes: [6, 1, 125, 0]
2025-03-05 15:23:05.445258 test begin: paddle.broadcast_to(Tensor([6, 1, 125, 0],"bool"), list[6,8,125,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 125, 0],"bool"), list[6,8,125,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 125, 57].  Tensor sizes: [6, 1, 125, 0]
2025-03-05 15:23:05.445880 test begin: paddle.broadcast_to(Tensor([6, 1, 125, 0],"bool"), list[6,8,125,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 125, 0],"bool"), list[6,8,125,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 125, 97].  Tensor sizes: [6, 1, 125, 0]
2025-03-05 15:23:05.446611 test begin: paddle.broadcast_to(Tensor([6, 1, 126, 0],"bool"), list[6,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 126, 0],"bool"), list[6,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 126, 126].  Tensor sizes: [6, 1, 126, 0]
2025-03-05 15:23:05.447730 test begin: paddle.broadcast_to(Tensor([6, 1, 126, 0],"bool"), list[6,8,126,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 126, 0],"bool"), list[6,8,126,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 126, 57].  Tensor sizes: [6, 1, 126, 0]
2025-03-05 15:23:05.448550 test begin: paddle.broadcast_to(Tensor([6, 1, 126, 0],"bool"), list[6,8,126,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 126, 0],"bool"), list[6,8,126,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 126, 97].  Tensor sizes: [6, 1, 126, 0]
2025-03-05 15:23:05.449278 test begin: paddle.broadcast_to(Tensor([6, 1, 127, 0],"bool"), list[6,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 127, 0],"bool"), list[6,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 127, 127].  Tensor sizes: [6, 1, 127, 0]
2025-03-05 15:23:05.450329 test begin: paddle.broadcast_to(Tensor([6, 1, 127, 0],"bool"), list[6,8,127,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 127, 0],"bool"), list[6,8,127,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 127, 57].  Tensor sizes: [6, 1, 127, 0]
2025-03-05 15:23:05.451214 test begin: paddle.broadcast_to(Tensor([6, 1, 127, 0],"bool"), list[6,8,127,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 127, 0],"bool"), list[6,8,127,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 127, 97].  Tensor sizes: [6, 1, 127, 0]
2025-03-05 15:23:05.451845 test begin: paddle.broadcast_to(Tensor([6, 1, 128, 0],"bool"), list[6,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 128, 0],"bool"), list[6,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 128, 128].  Tensor sizes: [6, 1, 128, 0]
2025-03-05 15:23:05.452532 test begin: paddle.broadcast_to(Tensor([6, 1, 128, 0],"bool"), list[6,8,128,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 128, 0],"bool"), list[6,8,128,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 128, 57].  Tensor sizes: [6, 1, 128, 0]
2025-03-05 15:23:05.453246 test begin: paddle.broadcast_to(Tensor([6, 1, 128, 0],"bool"), list[6,8,128,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 128, 0],"bool"), list[6,8,128,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 128, 97].  Tensor sizes: [6, 1, 128, 0]
2025-03-05 15:23:05.454022 test begin: paddle.broadcast_to(Tensor([6, 1, 129, 0],"bool"), list[6,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 129, 0],"bool"), list[6,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 129, 129].  Tensor sizes: [6, 1, 129, 0]
2025-03-05 15:23:05.454621 test begin: paddle.broadcast_to(Tensor([6, 1, 129, 0],"bool"), list[6,8,129,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 129, 0],"bool"), list[6,8,129,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 129, 57].  Tensor sizes: [6, 1, 129, 0]
2025-03-05 15:23:05.455186 test begin: paddle.broadcast_to(Tensor([6, 1, 129, 0],"bool"), list[6,8,129,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 129, 0],"bool"), list[6,8,129,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 129, 97].  Tensor sizes: [6, 1, 129, 0]
2025-03-05 15:23:05.455772 test begin: paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 13, 13].  Tensor sizes: [6, 1, 13, 0]
2025-03-05 15:23:05.456342 test begin: paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 13, 25].  Tensor sizes: [6, 1, 13, 0]
2025-03-05 15:23:05.457140 test begin: paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 13, 45].  Tensor sizes: [6, 1, 13, 0]
2025-03-05 15:23:05.457822 test begin: paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 13, 57].  Tensor sizes: [6, 1, 13, 0]
2025-03-05 15:23:05.458606 test begin: paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 13, 0],"bool"), list[6,8,13,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 13, 97].  Tensor sizes: [6, 1, 13, 0]
2025-03-05 15:23:05.459399 test begin: paddle.broadcast_to(Tensor([6, 1, 130, 0],"bool"), list[6,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 130, 0],"bool"), list[6,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 130, 130].  Tensor sizes: [6, 1, 130, 0]
2025-03-05 15:23:05.461182 test begin: paddle.broadcast_to(Tensor([6, 1, 130, 0],"bool"), list[6,8,130,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 130, 0],"bool"), list[6,8,130,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 130, 57].  Tensor sizes: [6, 1, 130, 0]
2025-03-05 15:23:05.462079 test begin: paddle.broadcast_to(Tensor([6, 1, 130, 0],"bool"), list[6,8,130,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 130, 0],"bool"), list[6,8,130,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 130, 97].  Tensor sizes: [6, 1, 130, 0]
2025-03-05 15:23:05.462794 test begin: paddle.broadcast_to(Tensor([6, 1, 131, 0],"bool"), list[6,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 131, 0],"bool"), list[6,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 131, 131].  Tensor sizes: [6, 1, 131, 0]
2025-03-05 15:23:05.463463 test begin: paddle.broadcast_to(Tensor([6, 1, 131, 0],"bool"), list[6,8,131,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 131, 0],"bool"), list[6,8,131,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 131, 57].  Tensor sizes: [6, 1, 131, 0]
2025-03-05 15:23:05.464261 test begin: paddle.broadcast_to(Tensor([6, 1, 131, 0],"bool"), list[6,8,131,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 131, 0],"bool"), list[6,8,131,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 131, 97].  Tensor sizes: [6, 1, 131, 0]
2025-03-05 15:23:05.465019 test begin: paddle.broadcast_to(Tensor([6, 1, 132, 0],"bool"), list[6,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 132, 0],"bool"), list[6,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 132, 132].  Tensor sizes: [6, 1, 132, 0]
2025-03-05 15:23:05.465736 test begin: paddle.broadcast_to(Tensor([6, 1, 132, 0],"bool"), list[6,8,132,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 132, 0],"bool"), list[6,8,132,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 132, 57].  Tensor sizes: [6, 1, 132, 0]
2025-03-05 15:23:05.466364 test begin: paddle.broadcast_to(Tensor([6, 1, 132, 0],"bool"), list[6,8,132,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 132, 0],"bool"), list[6,8,132,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 132, 97].  Tensor sizes: [6, 1, 132, 0]
2025-03-05 15:23:05.467130 test begin: paddle.broadcast_to(Tensor([6, 1, 133, 0],"bool"), list[6,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 133, 0],"bool"), list[6,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 133, 133].  Tensor sizes: [6, 1, 133, 0]
2025-03-05 15:23:05.467952 test begin: paddle.broadcast_to(Tensor([6, 1, 133, 0],"bool"), list[6,8,133,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 133, 0],"bool"), list[6,8,133,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 133, 57].  Tensor sizes: [6, 1, 133, 0]
2025-03-05 15:23:05.468575 test begin: paddle.broadcast_to(Tensor([6, 1, 133, 0],"bool"), list[6,8,133,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 133, 0],"bool"), list[6,8,133,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 133, 97].  Tensor sizes: [6, 1, 133, 0]
2025-03-05 15:23:05.469646 test begin: paddle.broadcast_to(Tensor([6, 1, 134, 0],"bool"), list[6,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 134, 0],"bool"), list[6,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 134, 134].  Tensor sizes: [6, 1, 134, 0]
2025-03-05 15:23:05.470254 test begin: paddle.broadcast_to(Tensor([6, 1, 134, 0],"bool"), list[6,8,134,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 134, 0],"bool"), list[6,8,134,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 134, 57].  Tensor sizes: [6, 1, 134, 0]
2025-03-05 15:23:05.471004 test begin: paddle.broadcast_to(Tensor([6, 1, 134, 0],"bool"), list[6,8,134,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 134, 0],"bool"), list[6,8,134,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 134, 97].  Tensor sizes: [6, 1, 134, 0]
2025-03-05 15:23:05.471769 test begin: paddle.broadcast_to(Tensor([6, 1, 135, 0],"bool"), list[6,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 135, 0],"bool"), list[6,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 135, 135].  Tensor sizes: [6, 1, 135, 0]
2025-03-05 15:23:05.472462 test begin: paddle.broadcast_to(Tensor([6, 1, 135, 0],"bool"), list[6,8,135,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 135, 0],"bool"), list[6,8,135,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 135, 57].  Tensor sizes: [6, 1, 135, 0]
2025-03-05 15:23:05.473218 test begin: paddle.broadcast_to(Tensor([6, 1, 135, 0],"bool"), list[6,8,135,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 135, 0],"bool"), list[6,8,135,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 135, 97].  Tensor sizes: [6, 1, 135, 0]
2025-03-05 15:23:05.473939 test begin: paddle.broadcast_to(Tensor([6, 1, 136, 0],"bool"), list[6,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 136, 0],"bool"), list[6,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 136, 136].  Tensor sizes: [6, 1, 136, 0]
2025-03-05 15:23:05.474661 test begin: paddle.broadcast_to(Tensor([6, 1, 136, 0],"bool"), list[6,8,136,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 136, 0],"bool"), list[6,8,136,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 136, 57].  Tensor sizes: [6, 1, 136, 0]
2025-03-05 15:23:05.475300 test begin: paddle.broadcast_to(Tensor([6, 1, 136, 0],"bool"), list[6,8,136,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 136, 0],"bool"), list[6,8,136,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 136, 97].  Tensor sizes: [6, 1, 136, 0]
2025-03-05 15:23:05.476017 test begin: paddle.broadcast_to(Tensor([6, 1, 137, 0],"bool"), list[6,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 137, 0],"bool"), list[6,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 137, 137].  Tensor sizes: [6, 1, 137, 0]
2025-03-05 15:23:05.476630 test begin: paddle.broadcast_to(Tensor([6, 1, 137, 0],"bool"), list[6,8,137,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 137, 0],"bool"), list[6,8,137,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 137, 57].  Tensor sizes: [6, 1, 137, 0]
2025-03-05 15:23:05.477600 test begin: paddle.broadcast_to(Tensor([6, 1, 137, 0],"bool"), list[6,8,137,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 137, 0],"bool"), list[6,8,137,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 137, 97].  Tensor sizes: [6, 1, 137, 0]
2025-03-05 15:23:05.478269 test begin: paddle.broadcast_to(Tensor([6, 1, 138, 0],"bool"), list[6,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 138, 0],"bool"), list[6,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 138, 138].  Tensor sizes: [6, 1, 138, 0]
2025-03-05 15:23:05.479056 test begin: paddle.broadcast_to(Tensor([6, 1, 138, 0],"bool"), list[6,8,138,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 138, 0],"bool"), list[6,8,138,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 138, 57].  Tensor sizes: [6, 1, 138, 0]
2025-03-05 15:23:05.479861 test begin: paddle.broadcast_to(Tensor([6, 1, 138, 0],"bool"), list[6,8,138,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 138, 0],"bool"), list[6,8,138,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 138, 97].  Tensor sizes: [6, 1, 138, 0]
2025-03-05 15:23:05.480554 test begin: paddle.broadcast_to(Tensor([6, 1, 139, 0],"bool"), list[6,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 139, 0],"bool"), list[6,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 139, 139].  Tensor sizes: [6, 1, 139, 0]
2025-03-05 15:23:05.481275 test begin: paddle.broadcast_to(Tensor([6, 1, 139, 0],"bool"), list[6,8,139,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 139, 0],"bool"), list[6,8,139,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 139, 57].  Tensor sizes: [6, 1, 139, 0]
2025-03-05 15:23:05.482159 test begin: paddle.broadcast_to(Tensor([6, 1, 139, 0],"bool"), list[6,8,139,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 139, 0],"bool"), list[6,8,139,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 139, 97].  Tensor sizes: [6, 1, 139, 0]
2025-03-05 15:23:05.482794 test begin: paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 14, 14].  Tensor sizes: [6, 1, 14, 0]
2025-03-05 15:23:05.483701 test begin: paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 14, 25].  Tensor sizes: [6, 1, 14, 0]
2025-03-05 15:23:05.484645 test begin: paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 14, 45].  Tensor sizes: [6, 1, 14, 0]
2025-03-05 15:23:05.485284 test begin: paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 14, 57].  Tensor sizes: [6, 1, 14, 0]
2025-03-05 15:23:05.485835 test begin: paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 14, 0],"bool"), list[6,8,14,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 14, 97].  Tensor sizes: [6, 1, 14, 0]
2025-03-05 15:23:05.486401 test begin: paddle.broadcast_to(Tensor([6, 1, 140, 0],"bool"), list[6,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 140, 0],"bool"), list[6,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 140, 140].  Tensor sizes: [6, 1, 140, 0]
2025-03-05 15:23:05.486970 test begin: paddle.broadcast_to(Tensor([6, 1, 140, 0],"bool"), list[6,8,140,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 140, 0],"bool"), list[6,8,140,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 140, 57].  Tensor sizes: [6, 1, 140, 0]
2025-03-05 15:23:05.487529 test begin: paddle.broadcast_to(Tensor([6, 1, 140, 0],"bool"), list[6,8,140,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 140, 0],"bool"), list[6,8,140,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 140, 97].  Tensor sizes: [6, 1, 140, 0]
2025-03-05 15:23:05.488233 test begin: paddle.broadcast_to(Tensor([6, 1, 141, 0],"bool"), list[6,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 141, 0],"bool"), list[6,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 141, 141].  Tensor sizes: [6, 1, 141, 0]
2025-03-05 15:23:05.488970 test begin: paddle.broadcast_to(Tensor([6, 1, 141, 0],"bool"), list[6,8,141,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 141, 0],"bool"), list[6,8,141,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 141, 57].  Tensor sizes: [6, 1, 141, 0]
2025-03-05 15:23:05.489738 test begin: paddle.broadcast_to(Tensor([6, 1, 141, 0],"bool"), list[6,8,141,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 141, 0],"bool"), list[6,8,141,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 141, 97].  Tensor sizes: [6, 1, 141, 0]
2025-03-05 15:23:05.490434 test begin: paddle.broadcast_to(Tensor([6, 1, 142, 0],"bool"), list[6,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 142, 0],"bool"), list[6,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 142, 142].  Tensor sizes: [6, 1, 142, 0]
2025-03-05 15:23:05.491254 test begin: paddle.broadcast_to(Tensor([6, 1, 142, 0],"bool"), list[6,8,142,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 142, 0],"bool"), list[6,8,142,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 142, 57].  Tensor sizes: [6, 1, 142, 0]
2025-03-05 15:23:05.491916 test begin: paddle.broadcast_to(Tensor([6, 1, 142, 0],"bool"), list[6,8,142,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 142, 0],"bool"), list[6,8,142,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 142, 97].  Tensor sizes: [6, 1, 142, 0]
2025-03-05 15:23:05.492519 test begin: paddle.broadcast_to(Tensor([6, 1, 143, 0],"bool"), list[6,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 143, 0],"bool"), list[6,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 143, 143].  Tensor sizes: [6, 1, 143, 0]
2025-03-05 15:23:05.493571 test begin: paddle.broadcast_to(Tensor([6, 1, 143, 0],"bool"), list[6,8,143,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 143, 0],"bool"), list[6,8,143,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 143, 57].  Tensor sizes: [6, 1, 143, 0]
2025-03-05 15:23:05.494315 test begin: paddle.broadcast_to(Tensor([6, 1, 143, 0],"bool"), list[6,8,143,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 143, 0],"bool"), list[6,8,143,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 143, 97].  Tensor sizes: [6, 1, 143, 0]
2025-03-05 15:23:05.495433 test begin: paddle.broadcast_to(Tensor([6, 1, 144, 0],"bool"), list[6,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 144, 0],"bool"), list[6,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 144, 144].  Tensor sizes: [6, 1, 144, 0]
2025-03-05 15:23:05.496212 test begin: paddle.broadcast_to(Tensor([6, 1, 144, 0],"bool"), list[6,8,144,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 144, 0],"bool"), list[6,8,144,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 144, 57].  Tensor sizes: [6, 1, 144, 0]
2025-03-05 15:23:05.497316 test begin: paddle.broadcast_to(Tensor([6, 1, 144, 0],"bool"), list[6,8,144,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 144, 0],"bool"), list[6,8,144,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 144, 97].  Tensor sizes: [6, 1, 144, 0]
2025-03-05 15:23:05.498013 test begin: paddle.broadcast_to(Tensor([6, 1, 145, 0],"bool"), list[6,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 145, 0],"bool"), list[6,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 145, 145].  Tensor sizes: [6, 1, 145, 0]
2025-03-05 15:23:05.498717 test begin: paddle.broadcast_to(Tensor([6, 1, 145, 0],"bool"), list[6,8,145,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 145, 0],"bool"), list[6,8,145,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 145, 57].  Tensor sizes: [6, 1, 145, 0]
2025-03-05 15:23:05.499439 test begin: paddle.broadcast_to(Tensor([6, 1, 145, 0],"bool"), list[6,8,145,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 145, 0],"bool"), list[6,8,145,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 145, 97].  Tensor sizes: [6, 1, 145, 0]
2025-03-05 15:23:05.500146 test begin: paddle.broadcast_to(Tensor([6, 1, 146, 0],"bool"), list[6,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 146, 0],"bool"), list[6,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 146, 146].  Tensor sizes: [6, 1, 146, 0]
2025-03-05 15:23:05.501616 test begin: paddle.broadcast_to(Tensor([6, 1, 146, 0],"bool"), list[6,8,146,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 146, 0],"bool"), list[6,8,146,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 146, 57].  Tensor sizes: [6, 1, 146, 0]
2025-03-05 15:23:05.502276 test begin: paddle.broadcast_to(Tensor([6, 1, 146, 0],"bool"), list[6,8,146,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 146, 0],"bool"), list[6,8,146,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 146, 97].  Tensor sizes: [6, 1, 146, 0]
2025-03-05 15:23:05.502824 test begin: paddle.broadcast_to(Tensor([6, 1, 147, 0],"bool"), list[6,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 147, 0],"bool"), list[6,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 147, 147].  Tensor sizes: [6, 1, 147, 0]
2025-03-05 15:23:05.503359 test begin: paddle.broadcast_to(Tensor([6, 1, 147, 0],"bool"), list[6,8,147,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 147, 0],"bool"), list[6,8,147,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 147, 57].  Tensor sizes: [6, 1, 147, 0]
2025-03-05 15:23:05.504634 test begin: paddle.broadcast_to(Tensor([6, 1, 147, 0],"bool"), list[6,8,147,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 147, 0],"bool"), list[6,8,147,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 147, 97].  Tensor sizes: [6, 1, 147, 0]
2025-03-05 15:23:05.505261 test begin: paddle.broadcast_to(Tensor([6, 1, 148, 0],"bool"), list[6,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 148, 0],"bool"), list[6,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 148, 148].  Tensor sizes: [6, 1, 148, 0]
2025-03-05 15:23:05.505803 test begin: paddle.broadcast_to(Tensor([6, 1, 148, 0],"bool"), list[6,8,148,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 148, 0],"bool"), list[6,8,148,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 148, 57].  Tensor sizes: [6, 1, 148, 0]
2025-03-05 15:23:05.506572 test begin: paddle.broadcast_to(Tensor([6, 1, 148, 0],"bool"), list[6,8,148,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 148, 0],"bool"), list[6,8,148,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 148, 97].  Tensor sizes: [6, 1, 148, 0]
2025-03-05 15:23:05.507425 test begin: paddle.broadcast_to(Tensor([6, 1, 149, 0],"bool"), list[6,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 149, 0],"bool"), list[6,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 149, 149].  Tensor sizes: [6, 1, 149, 0]
2025-03-05 15:23:05.508178 test begin: paddle.broadcast_to(Tensor([6, 1, 149, 0],"bool"), list[6,8,149,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 149, 0],"bool"), list[6,8,149,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 149, 57].  Tensor sizes: [6, 1, 149, 0]
2025-03-05 15:23:05.508878 test begin: paddle.broadcast_to(Tensor([6, 1, 149, 0],"bool"), list[6,8,149,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 149, 0],"bool"), list[6,8,149,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 149, 97].  Tensor sizes: [6, 1, 149, 0]
2025-03-05 15:23:05.509527 test begin: paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 15, 15].  Tensor sizes: [6, 1, 15, 0]
2025-03-05 15:23:05.510164 test begin: paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 15, 25].  Tensor sizes: [6, 1, 15, 0]
2025-03-05 15:23:05.510731 test begin: paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 15, 45].  Tensor sizes: [6, 1, 15, 0]
2025-03-05 15:23:05.511299 test begin: paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 15, 57].  Tensor sizes: [6, 1, 15, 0]
2025-03-05 15:23:05.511938 test begin: paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 15, 0],"bool"), list[6,8,15,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 15, 97].  Tensor sizes: [6, 1, 15, 0]
2025-03-05 15:23:05.512703 test begin: paddle.broadcast_to(Tensor([6, 1, 150, 0],"bool"), list[6,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 150, 0],"bool"), list[6,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 150, 150].  Tensor sizes: [6, 1, 150, 0]
2025-03-05 15:23:05.513990 test begin: paddle.broadcast_to(Tensor([6, 1, 150, 0],"bool"), list[6,8,150,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 150, 0],"bool"), list[6,8,150,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 150, 57].  Tensor sizes: [6, 1, 150, 0]
2025-03-05 15:23:05.514622 test begin: paddle.broadcast_to(Tensor([6, 1, 150, 0],"bool"), list[6,8,150,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 150, 0],"bool"), list[6,8,150,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 150, 97].  Tensor sizes: [6, 1, 150, 0]
2025-03-05 15:23:05.515303 test begin: paddle.broadcast_to(Tensor([6, 1, 151, 0],"bool"), list[6,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 151, 0],"bool"), list[6,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 151, 151].  Tensor sizes: [6, 1, 151, 0]
2025-03-05 15:23:05.515962 test begin: paddle.broadcast_to(Tensor([6, 1, 151, 0],"bool"), list[6,8,151,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 151, 0],"bool"), list[6,8,151,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 151, 57].  Tensor sizes: [6, 1, 151, 0]
2025-03-05 15:23:05.516542 test begin: paddle.broadcast_to(Tensor([6, 1, 151, 0],"bool"), list[6,8,151,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 151, 0],"bool"), list[6,8,151,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 151, 97].  Tensor sizes: [6, 1, 151, 0]
2025-03-05 15:23:05.517436 test begin: paddle.broadcast_to(Tensor([6, 1, 152, 0],"bool"), list[6,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 152, 0],"bool"), list[6,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 152, 152].  Tensor sizes: [6, 1, 152, 0]
2025-03-05 15:23:05.518185 test begin: paddle.broadcast_to(Tensor([6, 1, 152, 0],"bool"), list[6,8,152,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 152, 0],"bool"), list[6,8,152,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 152, 57].  Tensor sizes: [6, 1, 152, 0]
2025-03-05 15:23:05.518821 test begin: paddle.broadcast_to(Tensor([6, 1, 152, 0],"bool"), list[6,8,152,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 152, 0],"bool"), list[6,8,152,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 152, 97].  Tensor sizes: [6, 1, 152, 0]
2025-03-05 15:23:05.519549 test begin: paddle.broadcast_to(Tensor([6, 1, 153, 0],"bool"), list[6,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 153, 0],"bool"), list[6,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 153, 153].  Tensor sizes: [6, 1, 153, 0]
2025-03-05 15:23:05.521096 test begin: paddle.broadcast_to(Tensor([6, 1, 153, 0],"bool"), list[6,8,153,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 153, 0],"bool"), list[6,8,153,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 153, 57].  Tensor sizes: [6, 1, 153, 0]
2025-03-05 15:23:05.522049 test begin: paddle.broadcast_to(Tensor([6, 1, 153, 0],"bool"), list[6,8,153,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 153, 0],"bool"), list[6,8,153,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 153, 97].  Tensor sizes: [6, 1, 153, 0]
2025-03-05 15:23:05.522888 test begin: paddle.broadcast_to(Tensor([6, 1, 154, 0],"bool"), list[6,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 154, 0],"bool"), list[6,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 154, 154].  Tensor sizes: [6, 1, 154, 0]
2025-03-05 15:23:05.523730 test begin: paddle.broadcast_to(Tensor([6, 1, 154, 0],"bool"), list[6,8,154,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 154, 0],"bool"), list[6,8,154,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 154, 57].  Tensor sizes: [6, 1, 154, 0]
2025-03-05 15:23:05.524322 test begin: paddle.broadcast_to(Tensor([6, 1, 155, 0],"bool"), list[6,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 155, 0],"bool"), list[6,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 155, 155].  Tensor sizes: [6, 1, 155, 0]
2025-03-05 15:23:05.525442 test begin: paddle.broadcast_to(Tensor([6, 1, 155, 0],"bool"), list[6,8,155,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 155, 0],"bool"), list[6,8,155,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 155, 57].  Tensor sizes: [6, 1, 155, 0]
2025-03-05 15:23:05.526180 test begin: paddle.broadcast_to(Tensor([6, 1, 156, 0],"bool"), list[6,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 156, 0],"bool"), list[6,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 156, 156].  Tensor sizes: [6, 1, 156, 0]
2025-03-05 15:23:05.526895 test begin: paddle.broadcast_to(Tensor([6, 1, 156, 0],"bool"), list[6,8,156,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 156, 0],"bool"), list[6,8,156,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 156, 57].  Tensor sizes: [6, 1, 156, 0]
2025-03-05 15:23:05.527612 test begin: paddle.broadcast_to(Tensor([6, 1, 157, 0],"bool"), list[6,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 157, 0],"bool"), list[6,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 157, 157].  Tensor sizes: [6, 1, 157, 0]
2025-03-05 15:23:05.528253 test begin: paddle.broadcast_to(Tensor([6, 1, 157, 0],"bool"), list[6,8,157,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 157, 0],"bool"), list[6,8,157,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 157, 57].  Tensor sizes: [6, 1, 157, 0]
2025-03-05 15:23:05.528983 test begin: paddle.broadcast_to(Tensor([6, 1, 158, 0],"bool"), list[6,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 158, 0],"bool"), list[6,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 158, 158].  Tensor sizes: [6, 1, 158, 0]
2025-03-05 15:23:05.530544 test begin: paddle.broadcast_to(Tensor([6, 1, 158, 0],"bool"), list[6,8,158,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 158, 0],"bool"), list[6,8,158,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 158, 57].  Tensor sizes: [6, 1, 158, 0]
2025-03-05 15:23:05.531177 test begin: paddle.broadcast_to(Tensor([6, 1, 159, 0],"bool"), list[6,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 159, 0],"bool"), list[6,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 159, 159].  Tensor sizes: [6, 1, 159, 0]
2025-03-05 15:23:05.531857 test begin: paddle.broadcast_to(Tensor([6, 1, 159, 0],"bool"), list[6,8,159,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 159, 0],"bool"), list[6,8,159,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 159, 57].  Tensor sizes: [6, 1, 159, 0]
2025-03-05 15:23:05.532689 test begin: paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 16, 16].  Tensor sizes: [6, 1, 16, 0]
2025-03-05 15:23:05.533301 test begin: paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 16, 25].  Tensor sizes: [6, 1, 16, 0]
2025-03-05 15:23:05.533849 test begin: paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 16, 45].  Tensor sizes: [6, 1, 16, 0]
2025-03-05 15:23:05.534395 test begin: paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 16, 57].  Tensor sizes: [6, 1, 16, 0]
2025-03-05 15:23:05.535172 test begin: paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 16, 0],"bool"), list[6,8,16,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 16, 97].  Tensor sizes: [6, 1, 16, 0]
2025-03-05 15:23:05.535759 test begin: paddle.broadcast_to(Tensor([6, 1, 160, 0],"bool"), list[6,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 160, 0],"bool"), list[6,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 160, 160].  Tensor sizes: [6, 1, 160, 0]
2025-03-05 15:23:05.536671 test begin: paddle.broadcast_to(Tensor([6, 1, 160, 0],"bool"), list[6,8,160,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 160, 0],"bool"), list[6,8,160,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 160, 57].  Tensor sizes: [6, 1, 160, 0]
2025-03-05 15:23:05.537734 test begin: paddle.broadcast_to(Tensor([6, 1, 161, 0],"bool"), list[6,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 161, 0],"bool"), list[6,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 161, 161].  Tensor sizes: [6, 1, 161, 0]
2025-03-05 15:23:05.538350 test begin: paddle.broadcast_to(Tensor([6, 1, 161, 0],"bool"), list[6,8,161,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 161, 0],"bool"), list[6,8,161,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 161, 57].  Tensor sizes: [6, 1, 161, 0]
2025-03-05 15:23:05.539070 test begin: paddle.broadcast_to(Tensor([6, 1, 162, 0],"bool"), list[6,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 162, 0],"bool"), list[6,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 162, 162].  Tensor sizes: [6, 1, 162, 0]
2025-03-05 15:23:05.539715 test begin: paddle.broadcast_to(Tensor([6, 1, 162, 0],"bool"), list[6,8,162,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 162, 0],"bool"), list[6,8,162,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 162, 57].  Tensor sizes: [6, 1, 162, 0]
2025-03-05 15:23:05.540442 test begin: paddle.broadcast_to(Tensor([6, 1, 163, 0],"bool"), list[6,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 163, 0],"bool"), list[6,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 163, 163].  Tensor sizes: [6, 1, 163, 0]
2025-03-05 15:23:05.541107 test begin: paddle.broadcast_to(Tensor([6, 1, 163, 0],"bool"), list[6,8,163,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 163, 0],"bool"), list[6,8,163,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 163, 57].  Tensor sizes: [6, 1, 163, 0]
2025-03-05 15:23:05.541942 test begin: paddle.broadcast_to(Tensor([6, 1, 164, 0],"bool"), list[6,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 164, 0],"bool"), list[6,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 164, 164].  Tensor sizes: [6, 1, 164, 0]
2025-03-05 15:23:05.542595 test begin: paddle.broadcast_to(Tensor([6, 1, 164, 0],"bool"), list[6,8,164,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 164, 0],"bool"), list[6,8,164,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 164, 57].  Tensor sizes: [6, 1, 164, 0]
2025-03-05 15:23:05.543193 test begin: paddle.broadcast_to(Tensor([6, 1, 165, 0],"bool"), list[6,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 165, 0],"bool"), list[6,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 165, 165].  Tensor sizes: [6, 1, 165, 0]
2025-03-05 15:23:05.543825 test begin: paddle.broadcast_to(Tensor([6, 1, 165, 0],"bool"), list[6,8,165,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 165, 0],"bool"), list[6,8,165,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 165, 57].  Tensor sizes: [6, 1, 165, 0]
2025-03-05 15:23:05.544528 test begin: paddle.broadcast_to(Tensor([6, 1, 166, 0],"bool"), list[6,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 166, 0],"bool"), list[6,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 166, 166].  Tensor sizes: [6, 1, 166, 0]
2025-03-05 15:23:05.545245 test begin: paddle.broadcast_to(Tensor([6, 1, 166, 0],"bool"), list[6,8,166,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 166, 0],"bool"), list[6,8,166,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 166, 57].  Tensor sizes: [6, 1, 166, 0]
2025-03-05 15:23:05.545927 test begin: paddle.broadcast_to(Tensor([6, 1, 167, 0],"bool"), list[6,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 167, 0],"bool"), list[6,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 167, 167].  Tensor sizes: [6, 1, 167, 0]
2025-03-05 15:23:05.546535 test begin: paddle.broadcast_to(Tensor([6, 1, 167, 0],"bool"), list[6,8,167,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 167, 0],"bool"), list[6,8,167,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 167, 57].  Tensor sizes: [6, 1, 167, 0]
2025-03-05 15:23:05.547082 test begin: paddle.broadcast_to(Tensor([6, 1, 168, 0],"bool"), list[6,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 168, 0],"bool"), list[6,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 168, 168].  Tensor sizes: [6, 1, 168, 0]
2025-03-05 15:23:05.547721 test begin: paddle.broadcast_to(Tensor([6, 1, 168, 0],"bool"), list[6,8,168,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 168, 0],"bool"), list[6,8,168,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 168, 57].  Tensor sizes: [6, 1, 168, 0]
2025-03-05 15:23:05.548304 test begin: paddle.broadcast_to(Tensor([6, 1, 169, 0],"bool"), list[6,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 169, 0],"bool"), list[6,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 169, 169].  Tensor sizes: [6, 1, 169, 0]
2025-03-05 15:23:05.548937 test begin: paddle.broadcast_to(Tensor([6, 1, 169, 0],"bool"), list[6,8,169,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 169, 0],"bool"), list[6,8,169,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 169, 57].  Tensor sizes: [6, 1, 169, 0]
2025-03-05 15:23:05.549488 test begin: paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 17, 17].  Tensor sizes: [6, 1, 17, 0]
2025-03-05 15:23:05.550065 test begin: paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 17, 25].  Tensor sizes: [6, 1, 17, 0]
2025-03-05 15:23:05.550618 test begin: paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 17, 45].  Tensor sizes: [6, 1, 17, 0]
2025-03-05 15:23:05.551162 test begin: paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 17, 57].  Tensor sizes: [6, 1, 17, 0]
2025-03-05 15:23:05.551712 test begin: paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 17, 0],"bool"), list[6,8,17,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 17, 97].  Tensor sizes: [6, 1, 17, 0]
2025-03-05 15:23:05.552312 test begin: paddle.broadcast_to(Tensor([6, 1, 170, 0],"bool"), list[6,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 170, 0],"bool"), list[6,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 170, 170].  Tensor sizes: [6, 1, 170, 0]
2025-03-05 15:23:05.553726 test begin: paddle.broadcast_to(Tensor([6, 1, 170, 0],"bool"), list[6,8,170,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 170, 0],"bool"), list[6,8,170,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 170, 57].  Tensor sizes: [6, 1, 170, 0]
2025-03-05 15:23:05.554356 test begin: paddle.broadcast_to(Tensor([6, 1, 171, 0],"bool"), list[6,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 171, 0],"bool"), list[6,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 171, 171].  Tensor sizes: [6, 1, 171, 0]
2025-03-05 15:23:05.555118 test begin: paddle.broadcast_to(Tensor([6, 1, 171, 0],"bool"), list[6,8,171,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 171, 0],"bool"), list[6,8,171,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 171, 57].  Tensor sizes: [6, 1, 171, 0]
2025-03-05 15:23:05.555850 test begin: paddle.broadcast_to(Tensor([6, 1, 172, 0],"bool"), list[6,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 172, 0],"bool"), list[6,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 172, 172].  Tensor sizes: [6, 1, 172, 0]
2025-03-05 15:23:05.556560 test begin: paddle.broadcast_to(Tensor([6, 1, 172, 0],"bool"), list[6,8,172,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 172, 0],"bool"), list[6,8,172,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 172, 57].  Tensor sizes: [6, 1, 172, 0]
2025-03-05 15:23:05.557369 test begin: paddle.broadcast_to(Tensor([6, 1, 173, 0],"bool"), list[6,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 173, 0],"bool"), list[6,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 173, 173].  Tensor sizes: [6, 1, 173, 0]
2025-03-05 15:23:05.558479 test begin: paddle.broadcast_to(Tensor([6, 1, 173, 0],"bool"), list[6,8,173,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 173, 0],"bool"), list[6,8,173,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 173, 57].  Tensor sizes: [6, 1, 173, 0]
2025-03-05 15:23:05.559161 test begin: paddle.broadcast_to(Tensor([6, 1, 174, 0],"bool"), list[6,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 174, 0],"bool"), list[6,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 174, 174].  Tensor sizes: [6, 1, 174, 0]
2025-03-05 15:23:05.559743 test begin: paddle.broadcast_to(Tensor([6, 1, 174, 0],"bool"), list[6,8,174,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 174, 0],"bool"), list[6,8,174,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 174, 57].  Tensor sizes: [6, 1, 174, 0]
2025-03-05 15:23:05.560407 test begin: paddle.broadcast_to(Tensor([6, 1, 175, 0],"bool"), list[6,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 175, 0],"bool"), list[6,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 175, 175].  Tensor sizes: [6, 1, 175, 0]
2025-03-05 15:23:05.561041 test begin: paddle.broadcast_to(Tensor([6, 1, 175, 0],"bool"), list[6,8,175,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 175, 0],"bool"), list[6,8,175,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 175, 57].  Tensor sizes: [6, 1, 175, 0]
2025-03-05 15:23:05.561594 test begin: paddle.broadcast_to(Tensor([6, 1, 176, 0],"bool"), list[6,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 176, 0],"bool"), list[6,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 176, 176].  Tensor sizes: [6, 1, 176, 0]
2025-03-05 15:23:05.562467 test begin: paddle.broadcast_to(Tensor([6, 1, 176, 0],"bool"), list[6,8,176,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 176, 0],"bool"), list[6,8,176,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 176, 57].  Tensor sizes: [6, 1, 176, 0]
2025-03-05 15:23:05.563167 test begin: paddle.broadcast_to(Tensor([6, 1, 177, 0],"bool"), list[6,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 177, 0],"bool"), list[6,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 177, 177].  Tensor sizes: [6, 1, 177, 0]
2025-03-05 15:23:05.563905 test begin: paddle.broadcast_to(Tensor([6, 1, 177, 0],"bool"), list[6,8,177,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 177, 0],"bool"), list[6,8,177,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 177, 57].  Tensor sizes: [6, 1, 177, 0]
2025-03-05 15:23:05.564663 test begin: paddle.broadcast_to(Tensor([6, 1, 178, 0],"bool"), list[6,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 178, 0],"bool"), list[6,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 178, 178].  Tensor sizes: [6, 1, 178, 0]
2025-03-05 15:23:05.565743 test begin: paddle.broadcast_to(Tensor([6, 1, 178, 0],"bool"), list[6,8,178,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 178, 0],"bool"), list[6,8,178,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 178, 57].  Tensor sizes: [6, 1, 178, 0]
2025-03-05 15:23:05.566509 test begin: paddle.broadcast_to(Tensor([6, 1, 179, 0],"bool"), list[6,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 179, 0],"bool"), list[6,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 179, 179].  Tensor sizes: [6, 1, 179, 0]
2025-03-05 15:23:05.567185 test begin: paddle.broadcast_to(Tensor([6, 1, 179, 0],"bool"), list[6,8,179,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 179, 0],"bool"), list[6,8,179,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 179, 57].  Tensor sizes: [6, 1, 179, 0]
2025-03-05 15:23:05.567805 test begin: paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 18, 18].  Tensor sizes: [6, 1, 18, 0]
2025-03-05 15:23:05.568469 test begin: paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 18, 25].  Tensor sizes: [6, 1, 18, 0]
2025-03-05 15:23:05.569129 test begin: paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 18, 45].  Tensor sizes: [6, 1, 18, 0]
2025-03-05 15:23:05.569793 test begin: paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 18, 57].  Tensor sizes: [6, 1, 18, 0]
2025-03-05 15:23:05.570430 test begin: paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 18, 0],"bool"), list[6,8,18,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 18, 97].  Tensor sizes: [6, 1, 18, 0]
2025-03-05 15:23:05.571109 test begin: paddle.broadcast_to(Tensor([6, 1, 180, 0],"bool"), list[6,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 180, 0],"bool"), list[6,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 180, 180].  Tensor sizes: [6, 1, 180, 0]
2025-03-05 15:23:05.571691 test begin: paddle.broadcast_to(Tensor([6, 1, 180, 0],"bool"), list[6,8,180,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 180, 0],"bool"), list[6,8,180,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 180, 57].  Tensor sizes: [6, 1, 180, 0]
2025-03-05 15:23:05.572233 test begin: paddle.broadcast_to(Tensor([6, 1, 181, 0],"bool"), list[6,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 181, 0],"bool"), list[6,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 181, 181].  Tensor sizes: [6, 1, 181, 0]
2025-03-05 15:23:05.573049 test begin: paddle.broadcast_to(Tensor([6, 1, 181, 0],"bool"), list[6,8,181,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 181, 0],"bool"), list[6,8,181,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 181, 57].  Tensor sizes: [6, 1, 181, 0]
2025-03-05 15:23:05.573787 test begin: paddle.broadcast_to(Tensor([6, 1, 182, 0],"bool"), list[6,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 182, 0],"bool"), list[6,8,182,182,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 182, 182].  Tensor sizes: [6, 1, 182, 0]
2025-03-05 15:23:05.574786 test begin: paddle.broadcast_to(Tensor([6, 1, 182, 0],"bool"), list[6,8,182,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 182, 0],"bool"), list[6,8,182,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 182, 57].  Tensor sizes: [6, 1, 182, 0]
2025-03-05 15:23:05.575499 test begin: paddle.broadcast_to(Tensor([6, 1, 183, 0],"bool"), list[6,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 183, 0],"bool"), list[6,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 183, 183].  Tensor sizes: [6, 1, 183, 0]
2025-03-05 15:23:05.576144 test begin: paddle.broadcast_to(Tensor([6, 1, 183, 0],"bool"), list[6,8,183,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 183, 0],"bool"), list[6,8,183,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 183, 57].  Tensor sizes: [6, 1, 183, 0]
2025-03-05 15:23:05.576973 test begin: paddle.broadcast_to(Tensor([6, 1, 184, 0],"bool"), list[6,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 184, 0],"bool"), list[6,8,184,184,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 184, 184].  Tensor sizes: [6, 1, 184, 0]
2025-03-05 15:23:05.577654 test begin: paddle.broadcast_to(Tensor([6, 1, 184, 0],"bool"), list[6,8,184,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 184, 0],"bool"), list[6,8,184,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 184, 57].  Tensor sizes: [6, 1, 184, 0]
2025-03-05 15:23:05.578239 test begin: paddle.broadcast_to(Tensor([6, 1, 185, 0],"bool"), list[6,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 185, 0],"bool"), list[6,8,185,185,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 185, 185].  Tensor sizes: [6, 1, 185, 0]
2025-03-05 15:23:05.579109 test begin: paddle.broadcast_to(Tensor([6, 1, 185, 0],"bool"), list[6,8,185,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 185, 0],"bool"), list[6,8,185,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 185, 57].  Tensor sizes: [6, 1, 185, 0]
2025-03-05 15:23:05.580078 test begin: paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 19, 19].  Tensor sizes: [6, 1, 19, 0]
2025-03-05 15:23:05.580767 test begin: paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 19, 25].  Tensor sizes: [6, 1, 19, 0]
2025-03-05 15:23:05.581506 test begin: paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 19, 45].  Tensor sizes: [6, 1, 19, 0]
2025-03-05 15:23:05.582366 test begin: paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 19, 57].  Tensor sizes: [6, 1, 19, 0]
2025-03-05 15:23:05.583064 test begin: paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 19, 0],"bool"), list[6,8,19,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 19, 97].  Tensor sizes: [6, 1, 19, 0]
2025-03-05 15:23:05.583981 test begin: paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 2, 2].  Tensor sizes: [6, 1, 2, 0]
2025-03-05 15:23:05.585190 test begin: paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 2, 25].  Tensor sizes: [6, 1, 2, 0]
2025-03-05 15:23:05.585826 test begin: paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 2, 45].  Tensor sizes: [6, 1, 2, 0]
2025-03-05 15:23:05.586667 test begin: paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 2, 57].  Tensor sizes: [6, 1, 2, 0]
2025-03-05 15:23:05.587655 test begin: paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 2, 0],"bool"), list[6,8,2,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 2, 97].  Tensor sizes: [6, 1, 2, 0]
2025-03-05 15:23:05.588566 test begin: paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 20, 20].  Tensor sizes: [6, 1, 20, 0]
2025-03-05 15:23:05.589337 test begin: paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 20, 25].  Tensor sizes: [6, 1, 20, 0]
2025-03-05 15:23:05.589993 test begin: paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 20, 45].  Tensor sizes: [6, 1, 20, 0]
2025-03-05 15:23:05.590627 test begin: paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 20, 57].  Tensor sizes: [6, 1, 20, 0]
2025-03-05 15:23:05.591188 test begin: paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 20, 0],"bool"), list[6,8,20,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 20, 97].  Tensor sizes: [6, 1, 20, 0]
2025-03-05 15:23:05.591820 test begin: paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 21, 21].  Tensor sizes: [6, 1, 21, 0]
2025-03-05 15:23:05.592447 test begin: paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 21, 25].  Tensor sizes: [6, 1, 21, 0]
2025-03-05 15:23:05.593464 test begin: paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 21, 45].  Tensor sizes: [6, 1, 21, 0]
2025-03-05 15:23:05.594343 test begin: paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 21, 57].  Tensor sizes: [6, 1, 21, 0]
2025-03-05 15:23:05.595220 test begin: paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 21, 0],"bool"), list[6,8,21,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 21, 97].  Tensor sizes: [6, 1, 21, 0]
2025-03-05 15:23:05.595890 test begin: paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 22, 22].  Tensor sizes: [6, 1, 22, 0]
2025-03-05 15:23:05.596525 test begin: paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 22, 25].  Tensor sizes: [6, 1, 22, 0]
2025-03-05 15:23:05.597331 test begin: paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 22, 45].  Tensor sizes: [6, 1, 22, 0]
2025-03-05 15:23:05.598181 test begin: paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 22, 57].  Tensor sizes: [6, 1, 22, 0]
2025-03-05 15:23:05.598905 test begin: paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 22, 0],"bool"), list[6,8,22,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 22, 97].  Tensor sizes: [6, 1, 22, 0]
2025-03-05 15:23:05.599480 test begin: paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 23, 23].  Tensor sizes: [6, 1, 23, 0]
2025-03-05 15:23:05.600044 test begin: paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 23, 25].  Tensor sizes: [6, 1, 23, 0]
2025-03-05 15:23:05.600868 test begin: paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 23, 45].  Tensor sizes: [6, 1, 23, 0]
2025-03-05 15:23:05.601777 test begin: paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 23, 57].  Tensor sizes: [6, 1, 23, 0]
2025-03-05 15:23:05.602504 test begin: paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 23, 0],"bool"), list[6,8,23,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 23, 97].  Tensor sizes: [6, 1, 23, 0]
2025-03-05 15:23:05.603198 test begin: paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 24, 24].  Tensor sizes: [6, 1, 24, 0]
2025-03-05 15:23:05.603851 test begin: paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 24, 25].  Tensor sizes: [6, 1, 24, 0]
2025-03-05 15:23:05.604747 test begin: paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 24, 45].  Tensor sizes: [6, 1, 24, 0]
2025-03-05 15:23:05.605510 test begin: paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 24, 57].  Tensor sizes: [6, 1, 24, 0]
2025-03-05 15:23:05.606160 test begin: paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 24, 0],"bool"), list[6,8,24,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 24, 97].  Tensor sizes: [6, 1, 24, 0]
2025-03-05 15:23:05.606751 test begin: paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 25, 25].  Tensor sizes: [6, 1, 25, 0]
2025-03-05 15:23:05.607529 test begin: paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 25, 45].  Tensor sizes: [6, 1, 25, 0]
2025-03-05 15:23:05.608452 test begin: paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 25, 57].  Tensor sizes: [6, 1, 25, 0]
2025-03-05 15:23:05.609118 test begin: paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 25, 0],"bool"), list[6,8,25,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 25, 97].  Tensor sizes: [6, 1, 25, 0]
2025-03-05 15:23:05.610566 test begin: paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 26, 25].  Tensor sizes: [6, 1, 26, 0]
2025-03-05 15:23:05.612010 test begin: paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 26, 26].  Tensor sizes: [6, 1, 26, 0]
2025-03-05 15:23:05.612907 test begin: paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 26, 45].  Tensor sizes: [6, 1, 26, 0]
2025-03-05 15:23:05.613566 test begin: paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 26, 57].  Tensor sizes: [6, 1, 26, 0]
2025-03-05 15:23:05.614249 test begin: paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 26, 0],"bool"), list[6,8,26,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 26, 97].  Tensor sizes: [6, 1, 26, 0]
2025-03-05 15:23:05.614941 test begin: paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 27, 25].  Tensor sizes: [6, 1, 27, 0]
2025-03-05 15:23:05.615558 test begin: paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 27, 27].  Tensor sizes: [6, 1, 27, 0]
2025-03-05 15:23:05.616198 test begin: paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 27, 45].  Tensor sizes: [6, 1, 27, 0]
2025-03-05 15:23:05.616908 test begin: paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 27, 57].  Tensor sizes: [6, 1, 27, 0]
2025-03-05 15:23:05.617565 test begin: paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 27, 0],"bool"), list[6,8,27,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 27, 97].  Tensor sizes: [6, 1, 27, 0]
2025-03-05 15:23:05.618481 test begin: paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 28, 25].  Tensor sizes: [6, 1, 28, 0]
2025-03-05 15:23:05.619365 test begin: paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 28, 28].  Tensor sizes: [6, 1, 28, 0]
2025-03-05 15:23:05.620147 test begin: paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 28, 45].  Tensor sizes: [6, 1, 28, 0]
2025-03-05 15:23:05.620824 test begin: paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 28, 57].  Tensor sizes: [6, 1, 28, 0]
2025-03-05 15:23:05.621742 test begin: paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 28, 0],"bool"), list[6,8,28,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 28, 97].  Tensor sizes: [6, 1, 28, 0]
2025-03-05 15:23:05.622370 test begin: paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 29, 25].  Tensor sizes: [6, 1, 29, 0]
2025-03-05 15:23:05.623388 test begin: paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 29, 29].  Tensor sizes: [6, 1, 29, 0]
2025-03-05 15:23:05.624093 test begin: paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 29, 45].  Tensor sizes: [6, 1, 29, 0]
2025-03-05 15:23:05.624822 test begin: paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 29, 57].  Tensor sizes: [6, 1, 29, 0]
2025-03-05 15:23:05.625500 test begin: paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 29, 0],"bool"), list[6,8,29,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 29, 97].  Tensor sizes: [6, 1, 29, 0]
2025-03-05 15:23:05.626174 test begin: paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 3, 25].  Tensor sizes: [6, 1, 3, 0]
2025-03-05 15:23:05.627003 test begin: paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 3, 3].  Tensor sizes: [6, 1, 3, 0]
2025-03-05 15:23:05.627910 test begin: paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 3, 45].  Tensor sizes: [6, 1, 3, 0]
2025-03-05 15:23:05.628781 test begin: paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 3, 57].  Tensor sizes: [6, 1, 3, 0]
2025-03-05 15:23:05.629425 test begin: paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 3, 0],"bool"), list[6,8,3,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 3, 97].  Tensor sizes: [6, 1, 3, 0]
2025-03-05 15:23:05.630058 test begin: paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 30, 25].  Tensor sizes: [6, 1, 30, 0]
2025-03-05 15:23:05.630626 test begin: paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 30, 30].  Tensor sizes: [6, 1, 30, 0]
2025-03-05 15:23:05.632090 test begin: paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 30, 45].  Tensor sizes: [6, 1, 30, 0]
2025-03-05 15:23:05.632939 test begin: paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 30, 57].  Tensor sizes: [6, 1, 30, 0]
2025-03-05 15:23:05.633880 test begin: paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 30, 0],"bool"), list[6,8,30,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 30, 97].  Tensor sizes: [6, 1, 30, 0]
2025-03-05 15:23:05.634643 test begin: paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 31, 25].  Tensor sizes: [6, 1, 31, 0]
2025-03-05 15:23:05.635390 test begin: paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 31, 31].  Tensor sizes: [6, 1, 31, 0]
2025-03-05 15:23:05.636229 test begin: paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 31, 45].  Tensor sizes: [6, 1, 31, 0]
2025-03-05 15:23:05.636927 test begin: paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 31, 57].  Tensor sizes: [6, 1, 31, 0]
2025-03-05 15:23:05.637885 test begin: paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 31, 0],"bool"), list[6,8,31,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 31, 97].  Tensor sizes: [6, 1, 31, 0]
2025-03-05 15:23:05.638888 test begin: paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 32, 25].  Tensor sizes: [6, 1, 32, 0]
2025-03-05 15:23:05.639614 test begin: paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 32, 32].  Tensor sizes: [6, 1, 32, 0]
2025-03-05 15:23:05.640258 test begin: paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 32, 45].  Tensor sizes: [6, 1, 32, 0]
2025-03-05 15:23:05.640957 test begin: paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 32, 57].  Tensor sizes: [6, 1, 32, 0]
2025-03-05 15:23:05.641685 test begin: paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 32, 0],"bool"), list[6,8,32,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 32, 97].  Tensor sizes: [6, 1, 32, 0]
2025-03-05 15:23:05.642348 test begin: paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 33, 25].  Tensor sizes: [6, 1, 33, 0]
2025-03-05 15:23:05.643045 test begin: paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 33, 33].  Tensor sizes: [6, 1, 33, 0]
2025-03-05 15:23:05.644735 test begin: paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 33, 45].  Tensor sizes: [6, 1, 33, 0]
2025-03-05 15:23:05.645547 test begin: paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 33, 57].  Tensor sizes: [6, 1, 33, 0]
2025-03-05 15:23:05.646297 test begin: paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 33, 0],"bool"), list[6,8,33,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 33, 97].  Tensor sizes: [6, 1, 33, 0]
2025-03-05 15:23:05.647022 test begin: paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 34, 25].  Tensor sizes: [6, 1, 34, 0]
2025-03-05 15:23:05.648170 test begin: paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 34, 34].  Tensor sizes: [6, 1, 34, 0]
2025-03-05 15:23:05.648882 test begin: paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 34, 45].  Tensor sizes: [6, 1, 34, 0]
2025-03-05 15:23:05.650202 test begin: paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 34, 57].  Tensor sizes: [6, 1, 34, 0]
2025-03-05 15:23:05.651000 test begin: paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 34, 0],"bool"), list[6,8,34,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 34, 97].  Tensor sizes: [6, 1, 34, 0]
2025-03-05 15:23:05.651692 test begin: paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 35, 25].  Tensor sizes: [6, 1, 35, 0]
2025-03-05 15:23:05.652785 test begin: paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 35, 35].  Tensor sizes: [6, 1, 35, 0]
2025-03-05 15:23:05.654060 test begin: paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 35, 45].  Tensor sizes: [6, 1, 35, 0]
2025-03-05 15:23:05.654731 test begin: paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 35, 57].  Tensor sizes: [6, 1, 35, 0]
2025-03-05 15:23:05.655362 test begin: paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 35, 0],"bool"), list[6,8,35,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 35, 97].  Tensor sizes: [6, 1, 35, 0]
2025-03-05 15:23:05.656371 test begin: paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 36, 25].  Tensor sizes: [6, 1, 36, 0]
2025-03-05 15:23:05.657462 test begin: paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 36, 36].  Tensor sizes: [6, 1, 36, 0]
2025-03-05 15:23:05.658919 test begin: paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 36, 45].  Tensor sizes: [6, 1, 36, 0]
2025-03-05 15:23:05.659548 test begin: paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 36, 57].  Tensor sizes: [6, 1, 36, 0]
2025-03-05 15:23:05.660373 test begin: paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 36, 0],"bool"), list[6,8,36,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 36, 97].  Tensor sizes: [6, 1, 36, 0]
2025-03-05 15:23:05.661073 test begin: paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 37, 25].  Tensor sizes: [6, 1, 37, 0]
2025-03-05 15:23:05.662953 test begin: paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 37, 37].  Tensor sizes: [6, 1, 37, 0]
2025-03-05 15:23:05.663743 test begin: paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 37, 45].  Tensor sizes: [6, 1, 37, 0]
2025-03-05 15:23:05.664565 test begin: paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 37, 57].  Tensor sizes: [6, 1, 37, 0]
2025-03-05 15:23:05.665231 test begin: paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 37, 0],"bool"), list[6,8,37,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 37, 97].  Tensor sizes: [6, 1, 37, 0]
2025-03-05 15:23:05.665907 test begin: paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 38, 25].  Tensor sizes: [6, 1, 38, 0]
2025-03-05 15:23:05.666617 test begin: paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 38, 38].  Tensor sizes: [6, 1, 38, 0]
2025-03-05 15:23:05.668140 test begin: paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 38, 45].  Tensor sizes: [6, 1, 38, 0]
2025-03-05 15:23:05.668988 test begin: paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 38, 57].  Tensor sizes: [6, 1, 38, 0]
2025-03-05 15:23:05.669770 test begin: paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 38, 0],"bool"), list[6,8,38,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 38, 97].  Tensor sizes: [6, 1, 38, 0]
2025-03-05 15:23:05.670433 test begin: paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 39, 25].  Tensor sizes: [6, 1, 39, 0]
2025-03-05 15:23:05.671076 test begin: paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 39, 39].  Tensor sizes: [6, 1, 39, 0]
2025-03-05 15:23:05.671740 test begin: paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 39, 45].  Tensor sizes: [6, 1, 39, 0]
2025-03-05 15:23:05.672362 test begin: paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 39, 57].  Tensor sizes: [6, 1, 39, 0]
2025-03-05 15:23:05.672965 test begin: paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 39, 0],"bool"), list[6,8,39,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 39, 97].  Tensor sizes: [6, 1, 39, 0]
2025-03-05 15:23:05.673871 test begin: paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 4, 25].  Tensor sizes: [6, 1, 4, 0]
2025-03-05 15:23:05.674562 test begin: paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 4, 4].  Tensor sizes: [6, 1, 4, 0]
2025-03-05 15:23:05.675284 test begin: paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 4, 45].  Tensor sizes: [6, 1, 4, 0]
2025-03-05 15:23:05.675890 test begin: paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 4, 57].  Tensor sizes: [6, 1, 4, 0]
2025-03-05 15:23:05.676434 test begin: paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 4, 0],"bool"), list[6,8,4,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 4, 97].  Tensor sizes: [6, 1, 4, 0]
2025-03-05 15:23:05.677826 test begin: paddle.broadcast_to(Tensor([6, 1, 4, 0],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 4, 0],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [6, 1, 4, 0]
2025-03-05 15:23:05.678497 test begin: paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 40, 25].  Tensor sizes: [6, 1, 40, 0]
2025-03-05 15:23:05.679259 test begin: paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 40, 40].  Tensor sizes: [6, 1, 40, 0]
2025-03-05 15:23:05.679869 test begin: paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 40, 45].  Tensor sizes: [6, 1, 40, 0]
2025-03-05 15:23:05.680541 test begin: paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 40, 57].  Tensor sizes: [6, 1, 40, 0]
2025-03-05 15:23:05.681146 test begin: paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 40, 0],"bool"), list[6,8,40,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 40, 97].  Tensor sizes: [6, 1, 40, 0]
2025-03-05 15:23:05.682036 test begin: paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 41, 25].  Tensor sizes: [6, 1, 41, 0]
2025-03-05 15:23:05.682678 test begin: paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 41, 41].  Tensor sizes: [6, 1, 41, 0]
2025-03-05 15:23:05.683372 test begin: paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 41, 45].  Tensor sizes: [6, 1, 41, 0]
2025-03-05 15:23:05.684395 test begin: paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 41, 57].  Tensor sizes: [6, 1, 41, 0]
2025-03-05 15:23:05.685269 test begin: paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 41, 0],"bool"), list[6,8,41,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 41, 97].  Tensor sizes: [6, 1, 41, 0]
2025-03-05 15:23:05.685981 test begin: paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 42, 42].  Tensor sizes: [6, 1, 42, 0]
2025-03-05 15:23:05.686591 test begin: paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 42, 45].  Tensor sizes: [6, 1, 42, 0]
2025-03-05 15:23:05.687878 test begin: paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 42, 57].  Tensor sizes: [6, 1, 42, 0]
2025-03-05 15:23:05.688906 test begin: paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 42, 0],"bool"), list[6,8,42,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 42, 97].  Tensor sizes: [6, 1, 42, 0]
2025-03-05 15:23:05.689544 test begin: paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 43, 43].  Tensor sizes: [6, 1, 43, 0]
2025-03-05 15:23:05.690506 test begin: paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 43, 45].  Tensor sizes: [6, 1, 43, 0]
2025-03-05 15:23:05.691236 test begin: paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 43, 57].  Tensor sizes: [6, 1, 43, 0]
2025-03-05 15:23:05.692018 test begin: paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 43, 0],"bool"), list[6,8,43,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 43, 97].  Tensor sizes: [6, 1, 43, 0]
2025-03-05 15:23:05.692732 test begin: paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 44, 44].  Tensor sizes: [6, 1, 44, 0]
2025-03-05 15:23:05.693727 test begin: paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 44, 45].  Tensor sizes: [6, 1, 44, 0]
2025-03-05 15:23:05.694398 test begin: paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 44, 57].  Tensor sizes: [6, 1, 44, 0]
2025-03-05 15:23:05.695012 test begin: paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 44, 0],"bool"), list[6,8,44,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 44, 97].  Tensor sizes: [6, 1, 44, 0]
2025-03-05 15:23:05.695874 test begin: paddle.broadcast_to(Tensor([6, 1, 45, 0],"bool"), list[6,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 45, 0],"bool"), list[6,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 45, 45].  Tensor sizes: [6, 1, 45, 0]
2025-03-05 15:23:05.696530 test begin: paddle.broadcast_to(Tensor([6, 1, 45, 0],"bool"), list[6,8,45,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 45, 0],"bool"), list[6,8,45,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 45, 57].  Tensor sizes: [6, 1, 45, 0]
2025-03-05 15:23:05.697305 test begin: paddle.broadcast_to(Tensor([6, 1, 45, 0],"bool"), list[6,8,45,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 45, 0],"bool"), list[6,8,45,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 45, 97].  Tensor sizes: [6, 1, 45, 0]
2025-03-05 15:23:05.698045 test begin: paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 46, 45].  Tensor sizes: [6, 1, 46, 0]
2025-03-05 15:23:05.698823 test begin: paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 46, 46].  Tensor sizes: [6, 1, 46, 0]
2025-03-05 15:23:05.700507 test begin: paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 46, 57].  Tensor sizes: [6, 1, 46, 0]
2025-03-05 15:23:05.701239 test begin: paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 46, 0],"bool"), list[6,8,46,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 46, 97].  Tensor sizes: [6, 1, 46, 0]
2025-03-05 15:23:05.701922 test begin: paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 47, 45].  Tensor sizes: [6, 1, 47, 0]
2025-03-05 15:23:05.702475 test begin: paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 47, 47].  Tensor sizes: [6, 1, 47, 0]
2025-03-05 15:23:05.703223 test begin: paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 47, 57].  Tensor sizes: [6, 1, 47, 0]
2025-03-05 15:23:05.703898 test begin: paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 47, 0],"bool"), list[6,8,47,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 47, 97].  Tensor sizes: [6, 1, 47, 0]
2025-03-05 15:23:05.704714 test begin: paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 48, 45].  Tensor sizes: [6, 1, 48, 0]
2025-03-05 15:23:05.705588 test begin: paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 48, 48].  Tensor sizes: [6, 1, 48, 0]
2025-03-05 15:23:05.706286 test begin: paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 48, 57].  Tensor sizes: [6, 1, 48, 0]
2025-03-05 15:23:05.707345 test begin: paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 48, 0],"bool"), list[6,8,48,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 48, 97].  Tensor sizes: [6, 1, 48, 0]
2025-03-05 15:23:05.708069 test begin: paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 49, 45].  Tensor sizes: [6, 1, 49, 0]
2025-03-05 15:23:05.708809 test begin: paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 49, 49].  Tensor sizes: [6, 1, 49, 0]
2025-03-05 15:23:05.709523 test begin: paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 49, 57].  Tensor sizes: [6, 1, 49, 0]
2025-03-05 15:23:05.710264 test begin: paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 49, 0],"bool"), list[6,8,49,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 49, 97].  Tensor sizes: [6, 1, 49, 0]
2025-03-05 15:23:05.710981 test begin: paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 5, 25].  Tensor sizes: [6, 1, 5, 0]
2025-03-05 15:23:05.711985 test begin: paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 5, 45].  Tensor sizes: [6, 1, 5, 0]
2025-03-05 15:23:05.712882 test begin: paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 5, 5].  Tensor sizes: [6, 1, 5, 0]
2025-03-05 15:23:05.713736 test begin: paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 5, 57].  Tensor sizes: [6, 1, 5, 0]
2025-03-05 15:23:05.714504 test begin: paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 5, 0],"bool"), list[6,8,5,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 5, 97].  Tensor sizes: [6, 1, 5, 0]
2025-03-05 15:23:05.715197 test begin: paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 50, 45].  Tensor sizes: [6, 1, 50, 0]
2025-03-05 15:23:05.716067 test begin: paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 50, 50].  Tensor sizes: [6, 1, 50, 0]
2025-03-05 15:23:05.716778 test begin: paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 50, 57].  Tensor sizes: [6, 1, 50, 0]
2025-03-05 15:23:05.717480 test begin: paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 50, 0],"bool"), list[6,8,50,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 50, 97].  Tensor sizes: [6, 1, 50, 0]
2025-03-05 15:23:05.718362 test begin: paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 51, 45].  Tensor sizes: [6, 1, 51, 0]
2025-03-05 15:23:05.719086 test begin: paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 51, 51].  Tensor sizes: [6, 1, 51, 0]
2025-03-05 15:23:05.719752 test begin: paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 51, 57].  Tensor sizes: [6, 1, 51, 0]
2025-03-05 15:23:05.720509 test begin: paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 51, 0],"bool"), list[6,8,51,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 51, 97].  Tensor sizes: [6, 1, 51, 0]
2025-03-05 15:23:05.721459 test begin: paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 52, 45].  Tensor sizes: [6, 1, 52, 0]
2025-03-05 15:23:05.722192 test begin: paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 52, 52].  Tensor sizes: [6, 1, 52, 0]
2025-03-05 15:23:05.723592 test begin: paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 52, 57].  Tensor sizes: [6, 1, 52, 0]
2025-03-05 15:23:05.724306 test begin: paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 52, 0],"bool"), list[6,8,52,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 52, 97].  Tensor sizes: [6, 1, 52, 0]
2025-03-05 15:23:05.725165 test begin: paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 53, 45].  Tensor sizes: [6, 1, 53, 0]
2025-03-05 15:23:05.725971 test begin: paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 53, 53].  Tensor sizes: [6, 1, 53, 0]
2025-03-05 15:23:05.726690 test begin: paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 53, 57].  Tensor sizes: [6, 1, 53, 0]
2025-03-05 15:23:05.727539 test begin: paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 53, 0],"bool"), list[6,8,53,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 53, 97].  Tensor sizes: [6, 1, 53, 0]
2025-03-05 15:23:05.728301 test begin: paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 54, 45].  Tensor sizes: [6, 1, 54, 0]
2025-03-05 15:23:05.729039 test begin: paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 54, 54].  Tensor sizes: [6, 1, 54, 0]
2025-03-05 15:23:05.729794 test begin: paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 54, 57].  Tensor sizes: [6, 1, 54, 0]
2025-03-05 15:23:05.730611 test begin: paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 54, 0],"bool"), list[6,8,54,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 54, 97].  Tensor sizes: [6, 1, 54, 0]
2025-03-05 15:23:05.731485 test begin: paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 55, 45].  Tensor sizes: [6, 1, 55, 0]
2025-03-05 15:23:05.732157 test begin: paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 55, 55].  Tensor sizes: [6, 1, 55, 0]
2025-03-05 15:23:05.733408 test begin: paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 55, 57].  Tensor sizes: [6, 1, 55, 0]
2025-03-05 15:23:05.734125 test begin: paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 55, 0],"bool"), list[6,8,55,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 55, 97].  Tensor sizes: [6, 1, 55, 0]
2025-03-05 15:23:05.734732 test begin: paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 56, 45].  Tensor sizes: [6, 1, 56, 0]
2025-03-05 15:23:05.735343 test begin: paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 56, 56].  Tensor sizes: [6, 1, 56, 0]
2025-03-05 15:23:05.735913 test begin: paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 56, 57].  Tensor sizes: [6, 1, 56, 0]
2025-03-05 15:23:05.736661 test begin: paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 56, 0],"bool"), list[6,8,56,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 56, 97].  Tensor sizes: [6, 1, 56, 0]
2025-03-05 15:23:05.737612 test begin: paddle.broadcast_to(Tensor([6, 1, 57, 0],"bool"), list[6,8,57,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 57, 0],"bool"), list[6,8,57,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 57, 45].  Tensor sizes: [6, 1, 57, 0]
2025-03-05 15:23:05.738865 test begin: paddle.broadcast_to(Tensor([6, 1, 57, 0],"bool"), list[6,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 57, 0],"bool"), list[6,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 57, 57].  Tensor sizes: [6, 1, 57, 0]
2025-03-05 15:23:05.739450 test begin: paddle.broadcast_to(Tensor([6, 1, 57, 0],"bool"), list[6,8,57,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 57, 0],"bool"), list[6,8,57,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 57, 97].  Tensor sizes: [6, 1, 57, 0]
2025-03-05 15:23:05.740032 test begin: paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 58, 45].  Tensor sizes: [6, 1, 58, 0]
2025-03-05 15:23:05.740746 test begin: paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 58, 57].  Tensor sizes: [6, 1, 58, 0]
2025-03-05 15:23:05.741628 test begin: paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 58, 58].  Tensor sizes: [6, 1, 58, 0]
2025-03-05 15:23:05.742345 test begin: paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 58, 0],"bool"), list[6,8,58,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 58, 97].  Tensor sizes: [6, 1, 58, 0]
2025-03-05 15:23:05.743392 test begin: paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 59, 45].  Tensor sizes: [6, 1, 59, 0]
2025-03-05 15:23:05.744151 test begin: paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 59, 57].  Tensor sizes: [6, 1, 59, 0]
2025-03-05 15:23:05.744975 test begin: paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 59, 59].  Tensor sizes: [6, 1, 59, 0]
2025-03-05 15:23:05.745862 test begin: paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 59, 0],"bool"), list[6,8,59,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 59, 97].  Tensor sizes: [6, 1, 59, 0]
2025-03-05 15:23:05.746827 test begin: paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 6, 25].  Tensor sizes: [6, 1, 6, 0]
2025-03-05 15:23:05.747567 test begin: paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 6, 45].  Tensor sizes: [6, 1, 6, 0]
2025-03-05 15:23:05.748275 test begin: paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 6, 57].  Tensor sizes: [6, 1, 6, 0]
2025-03-05 15:23:05.749195 test begin: paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 6, 6].  Tensor sizes: [6, 1, 6, 0]
2025-03-05 15:23:05.749989 test begin: paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 6, 0],"bool"), list[6,8,6,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 6, 97].  Tensor sizes: [6, 1, 6, 0]
2025-03-05 15:23:05.751205 test begin: paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 60, 45].  Tensor sizes: [6, 1, 60, 0]
2025-03-05 15:23:05.752115 test begin: paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 60, 57].  Tensor sizes: [6, 1, 60, 0]
2025-03-05 15:23:05.752952 test begin: paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 60, 60].  Tensor sizes: [6, 1, 60, 0]
2025-03-05 15:23:05.753650 test begin: paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 60, 0],"bool"), list[6,8,60,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 60, 97].  Tensor sizes: [6, 1, 60, 0]
2025-03-05 15:23:05.754372 test begin: paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 61, 45].  Tensor sizes: [6, 1, 61, 0]
2025-03-05 15:23:05.755172 test begin: paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 61, 57].  Tensor sizes: [6, 1, 61, 0]
2025-03-05 15:23:05.755976 test begin: paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 61, 61].  Tensor sizes: [6, 1, 61, 0]
2025-03-05 15:23:05.756767 test begin: paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 61, 0],"bool"), list[6,8,61,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 61, 97].  Tensor sizes: [6, 1, 61, 0]
2025-03-05 15:23:05.757466 test begin: paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 62, 45].  Tensor sizes: [6, 1, 62, 0]
2025-03-05 15:23:05.758119 test begin: paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 62, 57].  Tensor sizes: [6, 1, 62, 0]
2025-03-05 15:23:05.758672 test begin: paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 62, 62].  Tensor sizes: [6, 1, 62, 0]
2025-03-05 15:23:05.759186 test begin: paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 62, 0],"bool"), list[6,8,62,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 62, 97].  Tensor sizes: [6, 1, 62, 0]
2025-03-05 15:23:05.759720 test begin: paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 63, 45].  Tensor sizes: [6, 1, 63, 0]
2025-03-05 15:23:05.760655 test begin: paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 63, 57].  Tensor sizes: [6, 1, 63, 0]
2025-03-05 15:23:05.761305 test begin: paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 63, 63].  Tensor sizes: [6, 1, 63, 0]
2025-03-05 15:23:05.761982 test begin: paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 63, 0],"bool"), list[6,8,63,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 63, 97].  Tensor sizes: [6, 1, 63, 0]
2025-03-05 15:23:05.762639 test begin: paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 64, 45].  Tensor sizes: [6, 1, 64, 0]
2025-03-05 15:23:05.763344 test begin: paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 64, 57].  Tensor sizes: [6, 1, 64, 0]
2025-03-05 15:23:05.764022 test begin: paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 64, 64].  Tensor sizes: [6, 1, 64, 0]
2025-03-05 15:23:05.764724 test begin: paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 64, 0],"bool"), list[6,8,64,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 64, 97].  Tensor sizes: [6, 1, 64, 0]
2025-03-05 15:23:05.765345 test begin: paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 65, 45].  Tensor sizes: [6, 1, 65, 0]
2025-03-05 15:23:05.765898 test begin: paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 65, 57].  Tensor sizes: [6, 1, 65, 0]
2025-03-05 15:23:05.766467 test begin: paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 65, 65].  Tensor sizes: [6, 1, 65, 0]
2025-03-05 15:23:05.767668 test begin: paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 65, 0],"bool"), list[6,8,65,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 65, 97].  Tensor sizes: [6, 1, 65, 0]
2025-03-05 15:23:05.768372 test begin: paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 66, 45].  Tensor sizes: [6, 1, 66, 0]
2025-03-05 15:23:05.769153 test begin: paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 66, 57].  Tensor sizes: [6, 1, 66, 0]
2025-03-05 15:23:05.770209 test begin: paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 66, 66].  Tensor sizes: [6, 1, 66, 0]
2025-03-05 15:23:05.771203 test begin: paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 66, 0],"bool"), list[6,8,66,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 66, 97].  Tensor sizes: [6, 1, 66, 0]
2025-03-05 15:23:05.772022 test begin: paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 67, 45].  Tensor sizes: [6, 1, 67, 0]
2025-03-05 15:23:05.772719 test begin: paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 67, 57].  Tensor sizes: [6, 1, 67, 0]
2025-03-05 15:23:05.773512 test begin: paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 67, 67].  Tensor sizes: [6, 1, 67, 0]
2025-03-05 15:23:05.774228 test begin: paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 67, 0],"bool"), list[6,8,67,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 67, 97].  Tensor sizes: [6, 1, 67, 0]
2025-03-05 15:23:05.774928 test begin: paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 68, 45].  Tensor sizes: [6, 1, 68, 0]
2025-03-05 15:23:05.775509 test begin: paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 68, 57].  Tensor sizes: [6, 1, 68, 0]
2025-03-05 15:23:05.776107 test begin: paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 68, 68].  Tensor sizes: [6, 1, 68, 0]
2025-03-05 15:23:05.776644 test begin: paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 68, 0],"bool"), list[6,8,68,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 68, 97].  Tensor sizes: [6, 1, 68, 0]
2025-03-05 15:23:05.777496 test begin: paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 69, 45].  Tensor sizes: [6, 1, 69, 0]
2025-03-05 15:23:05.778335 test begin: paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 69, 57].  Tensor sizes: [6, 1, 69, 0]
2025-03-05 15:23:05.779037 test begin: paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 69, 69].  Tensor sizes: [6, 1, 69, 0]
2025-03-05 15:23:05.779862 test begin: paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 69, 0],"bool"), list[6,8,69,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 69, 97].  Tensor sizes: [6, 1, 69, 0]
2025-03-05 15:23:05.780573 test begin: paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 7, 25].  Tensor sizes: [6, 1, 7, 0]
2025-03-05 15:23:05.781222 test begin: paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 7, 45].  Tensor sizes: [6, 1, 7, 0]
2025-03-05 15:23:05.781796 test begin: paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 7, 57].  Tensor sizes: [6, 1, 7, 0]
2025-03-05 15:23:05.782359 test begin: paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 7, 7].  Tensor sizes: [6, 1, 7, 0]
2025-03-05 15:23:05.783208 test begin: paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 7, 0],"bool"), list[6,8,7,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 7, 97].  Tensor sizes: [6, 1, 7, 0]
2025-03-05 15:23:05.784027 test begin: paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 70, 45].  Tensor sizes: [6, 1, 70, 0]
2025-03-05 15:23:05.784756 test begin: paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 70, 57].  Tensor sizes: [6, 1, 70, 0]
2025-03-05 15:23:05.785528 test begin: paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 70, 70].  Tensor sizes: [6, 1, 70, 0]
2025-03-05 15:23:05.786299 test begin: paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 70, 0],"bool"), list[6,8,70,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 70, 97].  Tensor sizes: [6, 1, 70, 0]
2025-03-05 15:23:05.787136 test begin: paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 71, 45].  Tensor sizes: [6, 1, 71, 0]
2025-03-05 15:23:05.787934 test begin: paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 71, 57].  Tensor sizes: [6, 1, 71, 0]
2025-03-05 15:23:05.788739 test begin: paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 71, 71].  Tensor sizes: [6, 1, 71, 0]
2025-03-05 15:23:05.789389 test begin: paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 71, 0],"bool"), list[6,8,71,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 71, 97].  Tensor sizes: [6, 1, 71, 0]
2025-03-05 15:23:05.790059 test begin: paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 72, 45].  Tensor sizes: [6, 1, 72, 0]
2025-03-05 15:23:05.791482 test begin: paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 72, 57].  Tensor sizes: [6, 1, 72, 0]
2025-03-05 15:23:05.792413 test begin: paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 72, 72].  Tensor sizes: [6, 1, 72, 0]
2025-03-05 15:23:05.793472 test begin: paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 72, 0],"bool"), list[6,8,72,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 72, 97].  Tensor sizes: [6, 1, 72, 0]
2025-03-05 15:23:05.794140 test begin: paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 73, 45].  Tensor sizes: [6, 1, 73, 0]
2025-03-05 15:23:05.795359 test begin: paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 73, 57].  Tensor sizes: [6, 1, 73, 0]
2025-03-05 15:23:05.796160 test begin: paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 73, 73].  Tensor sizes: [6, 1, 73, 0]
2025-03-05 15:23:05.796848 test begin: paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 73, 0],"bool"), list[6,8,73,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 73, 97].  Tensor sizes: [6, 1, 73, 0]
2025-03-05 15:23:05.797633 test begin: paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 74, 45].  Tensor sizes: [6, 1, 74, 0]
2025-03-05 15:23:05.798622 test begin: paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 74, 57].  Tensor sizes: [6, 1, 74, 0]
2025-03-05 15:23:05.799475 test begin: paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 74, 74].  Tensor sizes: [6, 1, 74, 0]
2025-03-05 15:23:05.800200 test begin: paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 74, 0],"bool"), list[6,8,74,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 74, 97].  Tensor sizes: [6, 1, 74, 0]
2025-03-05 15:23:05.801066 test begin: paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 75, 45].  Tensor sizes: [6, 1, 75, 0]
2025-03-05 15:23:05.801830 test begin: paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 75, 57].  Tensor sizes: [6, 1, 75, 0]
2025-03-05 15:23:05.802520 test begin: paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 75, 75].  Tensor sizes: [6, 1, 75, 0]
2025-03-05 15:23:05.803191 test begin: paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 75, 0],"bool"), list[6,8,75,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 75, 97].  Tensor sizes: [6, 1, 75, 0]
2025-03-05 15:23:05.804217 test begin: paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 76, 45].  Tensor sizes: [6, 1, 76, 0]
2025-03-05 15:23:05.804929 test begin: paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 76, 57].  Tensor sizes: [6, 1, 76, 0]
2025-03-05 15:23:05.805635 test begin: paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 76, 76].  Tensor sizes: [6, 1, 76, 0]
2025-03-05 15:23:05.806277 test begin: paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 76, 0],"bool"), list[6,8,76,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 76, 97].  Tensor sizes: [6, 1, 76, 0]
2025-03-05 15:23:05.807049 test begin: paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 77, 45].  Tensor sizes: [6, 1, 77, 0]
2025-03-05 15:23:05.807946 test begin: paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 77, 57].  Tensor sizes: [6, 1, 77, 0]
2025-03-05 15:23:05.809305 test begin: paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 77, 77].  Tensor sizes: [6, 1, 77, 0]
2025-03-05 15:23:05.810304 test begin: paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 77, 0],"bool"), list[6,8,77,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 77, 97].  Tensor sizes: [6, 1, 77, 0]
2025-03-05 15:23:05.810915 test begin: paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 78, 45].  Tensor sizes: [6, 1, 78, 0]
2025-03-05 15:23:05.811505 test begin: paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 78, 57].  Tensor sizes: [6, 1, 78, 0]
2025-03-05 15:23:05.812313 test begin: paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 78, 78].  Tensor sizes: [6, 1, 78, 0]
2025-03-05 15:23:05.813172 test begin: paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 78, 0],"bool"), list[6,8,78,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 78, 97].  Tensor sizes: [6, 1, 78, 0]
2025-03-05 15:23:05.814293 test begin: paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 79, 45].  Tensor sizes: [6, 1, 79, 0]
2025-03-05 15:23:05.814983 test begin: paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 79, 57].  Tensor sizes: [6, 1, 79, 0]
2025-03-05 15:23:05.815859 test begin: paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 79, 79].  Tensor sizes: [6, 1, 79, 0]
2025-03-05 15:23:05.816746 test begin: paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 79, 0],"bool"), list[6,8,79,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 79, 97].  Tensor sizes: [6, 1, 79, 0]
2025-03-05 15:23:05.817958 test begin: paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 8, 25].  Tensor sizes: [6, 1, 8, 0]
2025-03-05 15:23:05.818708 test begin: paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 8, 45].  Tensor sizes: [6, 1, 8, 0]
2025-03-05 15:23:05.819500 test begin: paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 8, 57].  Tensor sizes: [6, 1, 8, 0]
2025-03-05 15:23:05.820367 test begin: paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 8, 8].  Tensor sizes: [6, 1, 8, 0]
2025-03-05 15:23:05.821115 test begin: paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 8, 0],"bool"), list[6,8,8,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 8, 97].  Tensor sizes: [6, 1, 8, 0]
2025-03-05 15:23:05.821886 test begin: paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 80, 45].  Tensor sizes: [6, 1, 80, 0]
2025-03-05 15:23:05.822658 test begin: paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 80, 57].  Tensor sizes: [6, 1, 80, 0]
2025-03-05 15:23:05.823323 test begin: paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 80, 80].  Tensor sizes: [6, 1, 80, 0]
2025-03-05 15:23:05.824002 test begin: paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 80, 0],"bool"), list[6,8,80,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 80, 97].  Tensor sizes: [6, 1, 80, 0]
2025-03-05 15:23:05.824638 test begin: paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 81, 45].  Tensor sizes: [6, 1, 81, 0]
2025-03-05 15:23:05.825188 test begin: paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 81, 57].  Tensor sizes: [6, 1, 81, 0]
2025-03-05 15:23:05.825777 test begin: paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 81, 81].  Tensor sizes: [6, 1, 81, 0]
2025-03-05 15:23:05.826533 test begin: paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 81, 0],"bool"), list[6,8,81,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 81, 97].  Tensor sizes: [6, 1, 81, 0]
2025-03-05 15:23:05.827276 test begin: paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 82, 45].  Tensor sizes: [6, 1, 82, 0]
2025-03-05 15:23:05.827949 test begin: paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 82, 57].  Tensor sizes: [6, 1, 82, 0]
2025-03-05 15:23:05.828615 test begin: paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 82, 82].  Tensor sizes: [6, 1, 82, 0]
2025-03-05 15:23:05.829256 test begin: paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 82, 0],"bool"), list[6,8,82,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 82, 97].  Tensor sizes: [6, 1, 82, 0]
2025-03-05 15:23:05.830176 test begin: paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 83, 45].  Tensor sizes: [6, 1, 83, 0]
2025-03-05 15:23:05.830780 test begin: paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 83, 57].  Tensor sizes: [6, 1, 83, 0]
2025-03-05 15:23:05.831521 test begin: paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 83, 83].  Tensor sizes: [6, 1, 83, 0]
2025-03-05 15:23:05.832186 test begin: paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 83, 0],"bool"), list[6,8,83,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 83, 97].  Tensor sizes: [6, 1, 83, 0]
2025-03-05 15:23:05.832737 test begin: paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 84, 45].  Tensor sizes: [6, 1, 84, 0]
2025-03-05 15:23:05.833255 test begin: paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 84, 57].  Tensor sizes: [6, 1, 84, 0]
2025-03-05 15:23:05.833806 test begin: paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 84, 84].  Tensor sizes: [6, 1, 84, 0]
2025-03-05 15:23:05.834500 test begin: paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 84, 0],"bool"), list[6,8,84,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 84, 97].  Tensor sizes: [6, 1, 84, 0]
2025-03-05 15:23:05.835383 test begin: paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 85, 45].  Tensor sizes: [6, 1, 85, 0]
2025-03-05 15:23:05.836059 test begin: paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 85, 57].  Tensor sizes: [6, 1, 85, 0]
2025-03-05 15:23:05.836733 test begin: paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 85, 85].  Tensor sizes: [6, 1, 85, 0]
2025-03-05 15:23:05.837389 test begin: paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 85, 0],"bool"), list[6,8,85,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 85, 97].  Tensor sizes: [6, 1, 85, 0]
2025-03-05 15:23:05.838101 test begin: paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 86, 45].  Tensor sizes: [6, 1, 86, 0]
2025-03-05 15:23:05.838694 test begin: paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 86, 57].  Tensor sizes: [6, 1, 86, 0]
2025-03-05 15:23:05.839344 test begin: paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 86, 86].  Tensor sizes: [6, 1, 86, 0]
2025-03-05 15:23:05.840297 test begin: paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 86, 0],"bool"), list[6,8,86,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 86, 97].  Tensor sizes: [6, 1, 86, 0]
2025-03-05 15:23:05.841036 test begin: paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 87, 45].  Tensor sizes: [6, 1, 87, 0]
2025-03-05 15:23:05.841672 test begin: paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 87, 57].  Tensor sizes: [6, 1, 87, 0]
2025-03-05 15:23:05.842227 test begin: paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 87, 87].  Tensor sizes: [6, 1, 87, 0]
2025-03-05 15:23:05.842814 test begin: paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 87, 0],"bool"), list[6,8,87,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 87, 97].  Tensor sizes: [6, 1, 87, 0]
2025-03-05 15:23:05.843383 test begin: paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 88, 45].  Tensor sizes: [6, 1, 88, 0]
2025-03-05 15:23:05.843966 test begin: paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 88, 57].  Tensor sizes: [6, 1, 88, 0]
2025-03-05 15:23:05.844881 test begin: paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 88, 88].  Tensor sizes: [6, 1, 88, 0]
2025-03-05 15:23:05.845671 test begin: paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 88, 0],"bool"), list[6,8,88,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 88, 97].  Tensor sizes: [6, 1, 88, 0]
2025-03-05 15:23:05.846877 test begin: paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 89, 45].  Tensor sizes: [6, 1, 89, 0]
2025-03-05 15:23:05.847571 test begin: paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 89, 57].  Tensor sizes: [6, 1, 89, 0]
2025-03-05 15:23:05.848196 test begin: paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 89, 89].  Tensor sizes: [6, 1, 89, 0]
2025-03-05 15:23:05.848879 test begin: paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 89, 0],"bool"), list[6,8,89,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 89, 97].  Tensor sizes: [6, 1, 89, 0]
2025-03-05 15:23:05.849769 test begin: paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,25,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 9, 25].  Tensor sizes: [6, 1, 9, 0]
2025-03-05 15:23:05.850417 test begin: paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 9, 45].  Tensor sizes: [6, 1, 9, 0]
2025-03-05 15:23:05.851757 test begin: paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 9, 57].  Tensor sizes: [6, 1, 9, 0]
2025-03-05 15:23:05.852498 test begin: paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 9, 9].  Tensor sizes: [6, 1, 9, 0]
2025-03-05 15:23:05.853284 test begin: paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 9, 0],"bool"), list[6,8,9,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 9, 97].  Tensor sizes: [6, 1, 9, 0]
2025-03-05 15:23:05.854109 test begin: paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 90, 45].  Tensor sizes: [6, 1, 90, 0]
2025-03-05 15:23:05.854863 test begin: paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 90, 57].  Tensor sizes: [6, 1, 90, 0]
2025-03-05 15:23:05.855711 test begin: paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 90, 90].  Tensor sizes: [6, 1, 90, 0]
2025-03-05 15:23:05.856494 test begin: paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 90, 0],"bool"), list[6,8,90,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 90, 97].  Tensor sizes: [6, 1, 90, 0]
2025-03-05 15:23:05.857325 test begin: paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 91, 45].  Tensor sizes: [6, 1, 91, 0]
2025-03-05 15:23:05.858242 test begin: paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 91, 57].  Tensor sizes: [6, 1, 91, 0]
2025-03-05 15:23:05.859027 test begin: paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 91, 91].  Tensor sizes: [6, 1, 91, 0]
2025-03-05 15:23:05.859712 test begin: paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 91, 0],"bool"), list[6,8,91,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 91, 97].  Tensor sizes: [6, 1, 91, 0]
2025-03-05 15:23:05.860372 test begin: paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 92, 45].  Tensor sizes: [6, 1, 92, 0]
2025-03-05 15:23:05.860985 test begin: paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 92, 57].  Tensor sizes: [6, 1, 92, 0]
2025-03-05 15:23:05.861552 test begin: paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 92, 92].  Tensor sizes: [6, 1, 92, 0]
2025-03-05 15:23:05.862256 test begin: paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 92, 0],"bool"), list[6,8,92,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 92, 97].  Tensor sizes: [6, 1, 92, 0]
2025-03-05 15:23:05.863062 test begin: paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 93, 45].  Tensor sizes: [6, 1, 93, 0]
2025-03-05 15:23:05.863733 test begin: paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 93, 57].  Tensor sizes: [6, 1, 93, 0]
2025-03-05 15:23:05.864553 test begin: paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 93, 93].  Tensor sizes: [6, 1, 93, 0]
2025-03-05 15:23:05.865259 test begin: paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 93, 0],"bool"), list[6,8,93,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 93, 97].  Tensor sizes: [6, 1, 93, 0]
2025-03-05 15:23:05.865920 test begin: paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 94, 45].  Tensor sizes: [6, 1, 94, 0]
2025-03-05 15:23:05.866810 test begin: paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 94, 57].  Tensor sizes: [6, 1, 94, 0]
2025-03-05 15:23:05.867504 test begin: paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 94, 94].  Tensor sizes: [6, 1, 94, 0]
2025-03-05 15:23:05.868172 test begin: paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 94, 0],"bool"), list[6,8,94,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 94, 97].  Tensor sizes: [6, 1, 94, 0]
2025-03-05 15:23:05.869000 test begin: paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 95, 45].  Tensor sizes: [6, 1, 95, 0]
2025-03-05 15:23:05.869746 test begin: paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 95, 57].  Tensor sizes: [6, 1, 95, 0]
2025-03-05 15:23:05.870477 test begin: paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 95, 95].  Tensor sizes: [6, 1, 95, 0]
2025-03-05 15:23:05.871148 test begin: paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 95, 0],"bool"), list[6,8,95,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 95, 97].  Tensor sizes: [6, 1, 95, 0]
2025-03-05 15:23:05.871734 test begin: paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 96, 45].  Tensor sizes: [6, 1, 96, 0]
2025-03-05 15:23:05.872386 test begin: paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 96, 57].  Tensor sizes: [6, 1, 96, 0]
2025-03-05 15:23:05.873029 test begin: paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 96, 96].  Tensor sizes: [6, 1, 96, 0]
2025-03-05 15:23:05.873612 test begin: paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 96, 0],"bool"), list[6,8,96,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 96, 97].  Tensor sizes: [6, 1, 96, 0]
2025-03-05 15:23:05.874242 test begin: paddle.broadcast_to(Tensor([6, 1, 97, 0],"bool"), list[6,8,97,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 97, 0],"bool"), list[6,8,97,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 97, 45].  Tensor sizes: [6, 1, 97, 0]
2025-03-05 15:23:05.874799 test begin: paddle.broadcast_to(Tensor([6, 1, 97, 0],"bool"), list[6,8,97,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 97, 0],"bool"), list[6,8,97,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 97, 57].  Tensor sizes: [6, 1, 97, 0]
2025-03-05 15:23:05.875574 test begin: paddle.broadcast_to(Tensor([6, 1, 97, 0],"bool"), list[6,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 97, 0],"bool"), list[6,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 97, 97].  Tensor sizes: [6, 1, 97, 0]
2025-03-05 15:23:05.876198 test begin: paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 98, 45].  Tensor sizes: [6, 1, 98, 0]
2025-03-05 15:23:05.876957 test begin: paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 98, 57].  Tensor sizes: [6, 1, 98, 0]
2025-03-05 15:23:05.877762 test begin: paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 98, 97].  Tensor sizes: [6, 1, 98, 0]
2025-03-05 15:23:05.878532 test begin: paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 98, 0],"bool"), list[6,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 98, 98].  Tensor sizes: [6, 1, 98, 0]
2025-03-05 15:23:05.879191 test begin: paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,45,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 99, 45].  Tensor sizes: [6, 1, 99, 0]
2025-03-05 15:23:05.879873 test begin: paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,57,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 99, 57].  Tensor sizes: [6, 1, 99, 0]
2025-03-05 15:23:05.880502 test begin: paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,97,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 99, 97].  Tensor sizes: [6, 1, 99, 0]
2025-03-05 15:23:05.881083 test begin: paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([6, 1, 99, 0],"bool"), list[6,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 8, 99, 99].  Tensor sizes: [6, 1, 99, 0]
2025-03-05 15:23:05.882347 test begin: paddle.broadcast_to(Tensor([6, 2, 0, 5],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 2, 0, 5],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [6, 2, 0, 5]
2025-03-05 15:23:05.883017 test begin: paddle.broadcast_to(Tensor([6, 2, 4, 0],"int32"), list[6,2,4,5,], )

[torch error] paddle.broadcast_to(Tensor([6, 2, 4, 0],"int32"), list[6,2,4,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [6, 2, 4, 5].  Tensor sizes: [6, 2, 4, 0]
2025-03-05 15:23:05.883981 test begin: paddle.broadcast_to(Tensor([64, 0],"float32"), tuple(64,1327104,), )

[torch error] paddle.broadcast_to(Tensor([64, 0],"float32"), tuple(64,1327104,), ) 
 The expanded size of the tensor (1327104) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [64, 1327104].  Tensor sizes: [64, 0]
2025-03-05 15:23:05.884803 test begin: paddle.broadcast_to(Tensor([64, 0],"int64"), tuple(64,1327104,), )

[torch error] paddle.broadcast_to(Tensor([64, 0],"int64"), tuple(64,1327104,), ) 
 The expanded size of the tensor (1327104) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [64, 1327104].  Tensor sizes: [64, 0]
2025-03-05 15:23:05.885551 test begin: paddle.broadcast_to(Tensor([7, 0, 1, 153],"bool"), list[7,8,1,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 1, 153],"bool"), list[7,8,1,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 1, 153].  Tensor sizes: [7, 0, 1, 153]
2025-03-05 15:23:05.886329 test begin: paddle.broadcast_to(Tensor([7, 0, 1, 1],"bool"), list[7,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 1, 1],"bool"), list[7,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 1, 1].  Tensor sizes: [7, 0, 1, 1]
2025-03-05 15:23:05.887122 test begin: paddle.broadcast_to(Tensor([7, 0, 1, 49],"bool"), list[7,8,1,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 1, 49],"bool"), list[7,8,1,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 1, 49].  Tensor sizes: [7, 0, 1, 49]
2025-03-05 15:23:05.887785 test begin: paddle.broadcast_to(Tensor([7, 0, 10, 10],"bool"), list[7,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 10, 10],"bool"), list[7,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 10, 10].  Tensor sizes: [7, 0, 10, 10]
2025-03-05 15:23:05.888428 test begin: paddle.broadcast_to(Tensor([7, 0, 10, 153],"bool"), list[7,8,10,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 10, 153],"bool"), list[7,8,10,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 10, 153].  Tensor sizes: [7, 0, 10, 153]
2025-03-05 15:23:05.889040 test begin: paddle.broadcast_to(Tensor([7, 0, 10, 49],"bool"), list[7,8,10,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 10, 49],"bool"), list[7,8,10,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 10, 49].  Tensor sizes: [7, 0, 10, 49]
2025-03-05 15:23:05.889615 test begin: paddle.broadcast_to(Tensor([7, 0, 100, 100],"bool"), list[7,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 100, 100],"bool"), list[7,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 100, 100].  Tensor sizes: [7, 0, 100, 100]
2025-03-05 15:23:05.890164 test begin: paddle.broadcast_to(Tensor([7, 0, 100, 153],"bool"), list[7,8,100,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 100, 153],"bool"), list[7,8,100,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 100, 153].  Tensor sizes: [7, 0, 100, 153]
2025-03-05 15:23:05.890689 test begin: paddle.broadcast_to(Tensor([7, 0, 101, 101],"bool"), list[7,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 101, 101],"bool"), list[7,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 101, 101].  Tensor sizes: [7, 0, 101, 101]
2025-03-05 15:23:05.891453 test begin: paddle.broadcast_to(Tensor([7, 0, 101, 153],"bool"), list[7,8,101,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 101, 153],"bool"), list[7,8,101,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 101, 153].  Tensor sizes: [7, 0, 101, 153]
2025-03-05 15:23:05.892100 test begin: paddle.broadcast_to(Tensor([7, 0, 102, 102],"bool"), list[7,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 102, 102],"bool"), list[7,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 102, 102].  Tensor sizes: [7, 0, 102, 102]
2025-03-05 15:23:05.892776 test begin: paddle.broadcast_to(Tensor([7, 0, 102, 153],"bool"), list[7,8,102,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 102, 153],"bool"), list[7,8,102,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 102, 153].  Tensor sizes: [7, 0, 102, 153]
2025-03-05 15:23:05.893410 test begin: paddle.broadcast_to(Tensor([7, 0, 103, 103],"bool"), list[7,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 103, 103],"bool"), list[7,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 103, 103].  Tensor sizes: [7, 0, 103, 103]
2025-03-05 15:23:05.894457 test begin: paddle.broadcast_to(Tensor([7, 0, 103, 153],"bool"), list[7,8,103,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 103, 153],"bool"), list[7,8,103,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 103, 153].  Tensor sizes: [7, 0, 103, 153]
2025-03-05 15:23:05.895091 test begin: paddle.broadcast_to(Tensor([7, 0, 104, 104],"bool"), list[7,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 104, 104],"bool"), list[7,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 104, 104].  Tensor sizes: [7, 0, 104, 104]
2025-03-05 15:23:05.895664 test begin: paddle.broadcast_to(Tensor([7, 0, 104, 153],"bool"), list[7,8,104,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 104, 153],"bool"), list[7,8,104,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 104, 153].  Tensor sizes: [7, 0, 104, 153]
2025-03-05 15:23:05.896850 test begin: paddle.broadcast_to(Tensor([7, 0, 105, 105],"bool"), list[7,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 105, 105],"bool"), list[7,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 105, 105].  Tensor sizes: [7, 0, 105, 105]
2025-03-05 15:23:05.897517 test begin: paddle.broadcast_to(Tensor([7, 0, 105, 153],"bool"), list[7,8,105,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 105, 153],"bool"), list[7,8,105,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 105, 153].  Tensor sizes: [7, 0, 105, 153]
2025-03-05 15:23:05.898193 test begin: paddle.broadcast_to(Tensor([7, 0, 106, 106],"bool"), list[7,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 106, 106],"bool"), list[7,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 106, 106].  Tensor sizes: [7, 0, 106, 106]
2025-03-05 15:23:05.899017 test begin: paddle.broadcast_to(Tensor([7, 0, 106, 153],"bool"), list[7,8,106,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 106, 153],"bool"), list[7,8,106,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 106, 153].  Tensor sizes: [7, 0, 106, 153]
2025-03-05 15:23:05.899676 test begin: paddle.broadcast_to(Tensor([7, 0, 107, 107],"bool"), list[7,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 107, 107],"bool"), list[7,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 107, 107].  Tensor sizes: [7, 0, 107, 107]
2025-03-05 15:23:05.900642 test begin: paddle.broadcast_to(Tensor([7, 0, 107, 153],"bool"), list[7,8,107,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 107, 153],"bool"), list[7,8,107,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 107, 153].  Tensor sizes: [7, 0, 107, 153]
2025-03-05 15:23:05.901395 test begin: paddle.broadcast_to(Tensor([7, 0, 108, 108],"bool"), list[7,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 108, 108],"bool"), list[7,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 108, 108].  Tensor sizes: [7, 0, 108, 108]
2025-03-05 15:23:05.902134 test begin: paddle.broadcast_to(Tensor([7, 0, 108, 153],"bool"), list[7,8,108,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 108, 153],"bool"), list[7,8,108,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 108, 153].  Tensor sizes: [7, 0, 108, 153]
2025-03-05 15:23:05.902892 test begin: paddle.broadcast_to(Tensor([7, 0, 109, 109],"bool"), list[7,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 109, 109],"bool"), list[7,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 109, 109].  Tensor sizes: [7, 0, 109, 109]
2025-03-05 15:23:05.904043 test begin: paddle.broadcast_to(Tensor([7, 0, 109, 153],"bool"), list[7,8,109,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 109, 153],"bool"), list[7,8,109,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 109, 153].  Tensor sizes: [7, 0, 109, 153]
2025-03-05 15:23:05.904771 test begin: paddle.broadcast_to(Tensor([7, 0, 11, 11],"bool"), list[7,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 11, 11],"bool"), list[7,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 11, 11].  Tensor sizes: [7, 0, 11, 11]
2025-03-05 15:23:05.905360 test begin: paddle.broadcast_to(Tensor([7, 0, 11, 153],"bool"), list[7,8,11,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 11, 153],"bool"), list[7,8,11,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 11, 153].  Tensor sizes: [7, 0, 11, 153]
2025-03-05 15:23:05.906323 test begin: paddle.broadcast_to(Tensor([7, 0, 11, 49],"bool"), list[7,8,11,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 11, 49],"bool"), list[7,8,11,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 11, 49].  Tensor sizes: [7, 0, 11, 49]
2025-03-05 15:23:05.907000 test begin: paddle.broadcast_to(Tensor([7, 0, 110, 110],"bool"), list[7,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 110, 110],"bool"), list[7,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 110, 110].  Tensor sizes: [7, 0, 110, 110]
2025-03-05 15:23:05.907642 test begin: paddle.broadcast_to(Tensor([7, 0, 110, 153],"bool"), list[7,8,110,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 110, 153],"bool"), list[7,8,110,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 110, 153].  Tensor sizes: [7, 0, 110, 153]
2025-03-05 15:23:05.908331 test begin: paddle.broadcast_to(Tensor([7, 0, 111, 111],"bool"), list[7,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 111, 111],"bool"), list[7,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 111, 111].  Tensor sizes: [7, 0, 111, 111]
2025-03-05 15:23:05.909155 test begin: paddle.broadcast_to(Tensor([7, 0, 111, 153],"bool"), list[7,8,111,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 111, 153],"bool"), list[7,8,111,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 111, 153].  Tensor sizes: [7, 0, 111, 153]
2025-03-05 15:23:05.909783 test begin: paddle.broadcast_to(Tensor([7, 0, 112, 112],"bool"), list[7,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 112, 112],"bool"), list[7,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 112, 112].  Tensor sizes: [7, 0, 112, 112]
2025-03-05 15:23:05.910526 test begin: paddle.broadcast_to(Tensor([7, 0, 112, 153],"bool"), list[7,8,112,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 112, 153],"bool"), list[7,8,112,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 112, 153].  Tensor sizes: [7, 0, 112, 153]
2025-03-05 15:23:05.911176 test begin: paddle.broadcast_to(Tensor([7, 0, 113, 113],"bool"), list[7,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 113, 113],"bool"), list[7,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 113, 113].  Tensor sizes: [7, 0, 113, 113]
2025-03-05 15:23:05.911930 test begin: paddle.broadcast_to(Tensor([7, 0, 113, 153],"bool"), list[7,8,113,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 113, 153],"bool"), list[7,8,113,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 113, 153].  Tensor sizes: [7, 0, 113, 153]
2025-03-05 15:23:05.912625 test begin: paddle.broadcast_to(Tensor([7, 0, 114, 114],"bool"), list[7,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 114, 114],"bool"), list[7,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 114, 114].  Tensor sizes: [7, 0, 114, 114]
2025-03-05 15:23:05.913237 test begin: paddle.broadcast_to(Tensor([7, 0, 114, 153],"bool"), list[7,8,114,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 114, 153],"bool"), list[7,8,114,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 114, 153].  Tensor sizes: [7, 0, 114, 153]
2025-03-05 15:23:05.913922 test begin: paddle.broadcast_to(Tensor([7, 0, 115, 115],"bool"), list[7,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 115, 115],"bool"), list[7,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 115, 115].  Tensor sizes: [7, 0, 115, 115]
2025-03-05 15:23:05.914889 test begin: paddle.broadcast_to(Tensor([7, 0, 115, 153],"bool"), list[7,8,115,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 115, 153],"bool"), list[7,8,115,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 115, 153].  Tensor sizes: [7, 0, 115, 153]
2025-03-05 15:23:05.915854 test begin: paddle.broadcast_to(Tensor([7, 0, 116, 116],"bool"), list[7,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 116, 116],"bool"), list[7,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 116, 116].  Tensor sizes: [7, 0, 116, 116]
2025-03-05 15:23:05.916645 test begin: paddle.broadcast_to(Tensor([7, 0, 116, 153],"bool"), list[7,8,116,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 116, 153],"bool"), list[7,8,116,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 116, 153].  Tensor sizes: [7, 0, 116, 153]
2025-03-05 15:23:05.917335 test begin: paddle.broadcast_to(Tensor([7, 0, 117, 117],"bool"), list[7,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 117, 117],"bool"), list[7,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 117, 117].  Tensor sizes: [7, 0, 117, 117]
2025-03-05 15:23:05.917985 test begin: paddle.broadcast_to(Tensor([7, 0, 117, 153],"bool"), list[7,8,117,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 117, 153],"bool"), list[7,8,117,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 117, 153].  Tensor sizes: [7, 0, 117, 153]
2025-03-05 15:23:05.918719 test begin: paddle.broadcast_to(Tensor([7, 0, 118, 118],"bool"), list[7,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 118, 118],"bool"), list[7,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 118, 118].  Tensor sizes: [7, 0, 118, 118]
2025-03-05 15:23:05.919570 test begin: paddle.broadcast_to(Tensor([7, 0, 118, 153],"bool"), list[7,8,118,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 118, 153],"bool"), list[7,8,118,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 118, 153].  Tensor sizes: [7, 0, 118, 153]
2025-03-05 15:23:05.920187 test begin: paddle.broadcast_to(Tensor([7, 0, 119, 119],"bool"), list[7,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 119, 119],"bool"), list[7,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 119, 119].  Tensor sizes: [7, 0, 119, 119]
2025-03-05 15:23:05.920964 test begin: paddle.broadcast_to(Tensor([7, 0, 119, 153],"bool"), list[7,8,119,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 119, 153],"bool"), list[7,8,119,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 119, 153].  Tensor sizes: [7, 0, 119, 153]
2025-03-05 15:23:05.921769 test begin: paddle.broadcast_to(Tensor([7, 0, 12, 12],"bool"), list[7,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 12, 12],"bool"), list[7,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 12, 12].  Tensor sizes: [7, 0, 12, 12]
2025-03-05 15:23:05.922437 test begin: paddle.broadcast_to(Tensor([7, 0, 12, 153],"bool"), list[7,8,12,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 12, 153],"bool"), list[7,8,12,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 12, 153].  Tensor sizes: [7, 0, 12, 153]
2025-03-05 15:23:05.923172 test begin: paddle.broadcast_to(Tensor([7, 0, 12, 49],"bool"), list[7,8,12,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 12, 49],"bool"), list[7,8,12,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 12, 49].  Tensor sizes: [7, 0, 12, 49]
2025-03-05 15:23:05.924121 test begin: paddle.broadcast_to(Tensor([7, 0, 120, 120],"bool"), list[7,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 120, 120],"bool"), list[7,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 120, 120].  Tensor sizes: [7, 0, 120, 120]
2025-03-05 15:23:05.925024 test begin: paddle.broadcast_to(Tensor([7, 0, 120, 153],"bool"), list[7,8,120,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 120, 153],"bool"), list[7,8,120,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 120, 153].  Tensor sizes: [7, 0, 120, 153]
2025-03-05 15:23:05.925748 test begin: paddle.broadcast_to(Tensor([7, 0, 121, 121],"bool"), list[7,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 121, 121],"bool"), list[7,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 121, 121].  Tensor sizes: [7, 0, 121, 121]
2025-03-05 15:23:05.926361 test begin: paddle.broadcast_to(Tensor([7, 0, 121, 153],"bool"), list[7,8,121,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 121, 153],"bool"), list[7,8,121,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 121, 153].  Tensor sizes: [7, 0, 121, 153]
2025-03-05 15:23:05.927147 test begin: paddle.broadcast_to(Tensor([7, 0, 122, 122],"bool"), list[7,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 122, 122],"bool"), list[7,8,122,122,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 122, 122].  Tensor sizes: [7, 0, 122, 122]
2025-03-05 15:23:05.928338 test begin: paddle.broadcast_to(Tensor([7, 0, 122, 153],"bool"), list[7,8,122,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 122, 153],"bool"), list[7,8,122,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 122, 153].  Tensor sizes: [7, 0, 122, 153]
2025-03-05 15:23:05.929057 test begin: paddle.broadcast_to(Tensor([7, 0, 123, 123],"bool"), list[7,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 123, 123],"bool"), list[7,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 123, 123].  Tensor sizes: [7, 0, 123, 123]
2025-03-05 15:23:05.929818 test begin: paddle.broadcast_to(Tensor([7, 0, 123, 153],"bool"), list[7,8,123,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 123, 153],"bool"), list[7,8,123,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 123, 153].  Tensor sizes: [7, 0, 123, 153]
2025-03-05 15:23:05.930617 test begin: paddle.broadcast_to(Tensor([7, 0, 124, 124],"bool"), list[7,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 124, 124],"bool"), list[7,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 124, 124].  Tensor sizes: [7, 0, 124, 124]
2025-03-05 15:23:05.931268 test begin: paddle.broadcast_to(Tensor([7, 0, 124, 153],"bool"), list[7,8,124,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 124, 153],"bool"), list[7,8,124,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 124, 153].  Tensor sizes: [7, 0, 124, 153]
2025-03-05 15:23:05.932353 test begin: paddle.broadcast_to(Tensor([7, 0, 125, 125],"bool"), list[7,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 125, 125],"bool"), list[7,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 125, 125].  Tensor sizes: [7, 0, 125, 125]
2025-03-05 15:23:05.933422 test begin: paddle.broadcast_to(Tensor([7, 0, 125, 153],"bool"), list[7,8,125,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 125, 153],"bool"), list[7,8,125,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 125, 153].  Tensor sizes: [7, 0, 125, 153]
2025-03-05 15:23:05.934217 test begin: paddle.broadcast_to(Tensor([7, 0, 126, 126],"bool"), list[7,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 126, 126],"bool"), list[7,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 126, 126].  Tensor sizes: [7, 0, 126, 126]
2025-03-05 15:23:05.935090 test begin: paddle.broadcast_to(Tensor([7, 0, 126, 153],"bool"), list[7,8,126,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 126, 153],"bool"), list[7,8,126,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 126, 153].  Tensor sizes: [7, 0, 126, 153]
2025-03-05 15:23:05.935832 test begin: paddle.broadcast_to(Tensor([7, 0, 127, 127],"bool"), list[7,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 127, 127],"bool"), list[7,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 127, 127].  Tensor sizes: [7, 0, 127, 127]
2025-03-05 15:23:05.936546 test begin: paddle.broadcast_to(Tensor([7, 0, 127, 153],"bool"), list[7,8,127,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 127, 153],"bool"), list[7,8,127,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 127, 153].  Tensor sizes: [7, 0, 127, 153]
2025-03-05 15:23:05.937261 test begin: paddle.broadcast_to(Tensor([7, 0, 128, 128],"bool"), list[7,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 128, 128],"bool"), list[7,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 128, 128].  Tensor sizes: [7, 0, 128, 128]
2025-03-05 15:23:05.937915 test begin: paddle.broadcast_to(Tensor([7, 0, 128, 153],"bool"), list[7,8,128,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 128, 153],"bool"), list[7,8,128,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 128, 153].  Tensor sizes: [7, 0, 128, 153]
2025-03-05 15:23:05.938849 test begin: paddle.broadcast_to(Tensor([7, 0, 129, 129],"bool"), list[7,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 129, 129],"bool"), list[7,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 129, 129].  Tensor sizes: [7, 0, 129, 129]
2025-03-05 15:23:05.940251 test begin: paddle.broadcast_to(Tensor([7, 0, 129, 153],"bool"), list[7,8,129,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 129, 153],"bool"), list[7,8,129,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 129, 153].  Tensor sizes: [7, 0, 129, 153]
2025-03-05 15:23:05.941006 test begin: paddle.broadcast_to(Tensor([7, 0, 13, 13],"bool"), list[7,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 13, 13],"bool"), list[7,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 13, 13].  Tensor sizes: [7, 0, 13, 13]
2025-03-05 15:23:05.942048 test begin: paddle.broadcast_to(Tensor([7, 0, 13, 153],"bool"), list[7,8,13,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 13, 153],"bool"), list[7,8,13,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 13, 153].  Tensor sizes: [7, 0, 13, 153]
2025-03-05 15:23:05.942950 test begin: paddle.broadcast_to(Tensor([7, 0, 13, 49],"bool"), list[7,8,13,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 13, 49],"bool"), list[7,8,13,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 13, 49].  Tensor sizes: [7, 0, 13, 49]
2025-03-05 15:23:05.943722 test begin: paddle.broadcast_to(Tensor([7, 0, 130, 130],"bool"), list[7,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 130, 130],"bool"), list[7,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 130, 130].  Tensor sizes: [7, 0, 130, 130]
2025-03-05 15:23:05.944444 test begin: paddle.broadcast_to(Tensor([7, 0, 130, 153],"bool"), list[7,8,130,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 130, 153],"bool"), list[7,8,130,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 130, 153].  Tensor sizes: [7, 0, 130, 153]
2025-03-05 15:23:05.945352 test begin: paddle.broadcast_to(Tensor([7, 0, 131, 131],"bool"), list[7,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 131, 131],"bool"), list[7,8,131,131,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 131, 131].  Tensor sizes: [7, 0, 131, 131]
2025-03-05 15:23:05.946528 test begin: paddle.broadcast_to(Tensor([7, 0, 131, 153],"bool"), list[7,8,131,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 131, 153],"bool"), list[7,8,131,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 131, 153].  Tensor sizes: [7, 0, 131, 153]
2025-03-05 15:23:05.947309 test begin: paddle.broadcast_to(Tensor([7, 0, 132, 132],"bool"), list[7,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 132, 132],"bool"), list[7,8,132,132,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 132, 132].  Tensor sizes: [7, 0, 132, 132]
2025-03-05 15:23:05.947968 test begin: paddle.broadcast_to(Tensor([7, 0, 132, 153],"bool"), list[7,8,132,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 132, 153],"bool"), list[7,8,132,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 132, 153].  Tensor sizes: [7, 0, 132, 153]
2025-03-05 15:23:05.948687 test begin: paddle.broadcast_to(Tensor([7, 0, 133, 133],"bool"), list[7,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 133, 133],"bool"), list[7,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 133, 133].  Tensor sizes: [7, 0, 133, 133]
2025-03-05 15:23:05.949309 test begin: paddle.broadcast_to(Tensor([7, 0, 133, 153],"bool"), list[7,8,133,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 133, 153],"bool"), list[7,8,133,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 133, 153].  Tensor sizes: [7, 0, 133, 153]
2025-03-05 15:23:05.949925 test begin: paddle.broadcast_to(Tensor([7, 0, 134, 134],"bool"), list[7,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 134, 134],"bool"), list[7,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 134, 134].  Tensor sizes: [7, 0, 134, 134]
2025-03-05 15:23:05.950623 test begin: paddle.broadcast_to(Tensor([7, 0, 134, 153],"bool"), list[7,8,134,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 134, 153],"bool"), list[7,8,134,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 134, 153].  Tensor sizes: [7, 0, 134, 153]
2025-03-05 15:23:05.951595 test begin: paddle.broadcast_to(Tensor([7, 0, 135, 135],"bool"), list[7,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 135, 135],"bool"), list[7,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 135, 135].  Tensor sizes: [7, 0, 135, 135]
2025-03-05 15:23:05.952281 test begin: paddle.broadcast_to(Tensor([7, 0, 135, 153],"bool"), list[7,8,135,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 135, 153],"bool"), list[7,8,135,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 135, 153].  Tensor sizes: [7, 0, 135, 153]
2025-03-05 15:23:05.953118 test begin: paddle.broadcast_to(Tensor([7, 0, 136, 136],"bool"), list[7,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 136, 136],"bool"), list[7,8,136,136,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 136, 136].  Tensor sizes: [7, 0, 136, 136]
2025-03-05 15:23:05.954055 test begin: paddle.broadcast_to(Tensor([7, 0, 136, 153],"bool"), list[7,8,136,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 136, 153],"bool"), list[7,8,136,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 136, 153].  Tensor sizes: [7, 0, 136, 153]
2025-03-05 15:23:05.955040 test begin: paddle.broadcast_to(Tensor([7, 0, 137, 137],"bool"), list[7,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 137, 137],"bool"), list[7,8,137,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 137, 137].  Tensor sizes: [7, 0, 137, 137]
2025-03-05 15:23:05.955824 test begin: paddle.broadcast_to(Tensor([7, 0, 137, 153],"bool"), list[7,8,137,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 137, 153],"bool"), list[7,8,137,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 137, 153].  Tensor sizes: [7, 0, 137, 153]
2025-03-05 15:23:05.956567 test begin: paddle.broadcast_to(Tensor([7, 0, 138, 138],"bool"), list[7,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 138, 138],"bool"), list[7,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 138, 138].  Tensor sizes: [7, 0, 138, 138]
2025-03-05 15:23:05.957451 test begin: paddle.broadcast_to(Tensor([7, 0, 138, 153],"bool"), list[7,8,138,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 138, 153],"bool"), list[7,8,138,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 138, 153].  Tensor sizes: [7, 0, 138, 153]
2025-03-05 15:23:05.958385 test begin: paddle.broadcast_to(Tensor([7, 0, 139, 139],"bool"), list[7,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 139, 139],"bool"), list[7,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 139, 139].  Tensor sizes: [7, 0, 139, 139]
2025-03-05 15:23:05.959146 test begin: paddle.broadcast_to(Tensor([7, 0, 139, 153],"bool"), list[7,8,139,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 139, 153],"bool"), list[7,8,139,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 139, 153].  Tensor sizes: [7, 0, 139, 153]
2025-03-05 15:23:05.959849 test begin: paddle.broadcast_to(Tensor([7, 0, 14, 14],"bool"), list[7,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 14, 14],"bool"), list[7,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 14, 14].  Tensor sizes: [7, 0, 14, 14]
2025-03-05 15:23:05.960422 test begin: paddle.broadcast_to(Tensor([7, 0, 14, 153],"bool"), list[7,8,14,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 14, 153],"bool"), list[7,8,14,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 14, 153].  Tensor sizes: [7, 0, 14, 153]
2025-03-05 15:23:05.960964 test begin: paddle.broadcast_to(Tensor([7, 0, 14, 49],"bool"), list[7,8,14,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 14, 49],"bool"), list[7,8,14,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 14, 49].  Tensor sizes: [7, 0, 14, 49]
2025-03-05 15:23:05.962189 test begin: paddle.broadcast_to(Tensor([7, 0, 140, 140],"bool"), list[7,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 140, 140],"bool"), list[7,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 140, 140].  Tensor sizes: [7, 0, 140, 140]
2025-03-05 15:23:05.962962 test begin: paddle.broadcast_to(Tensor([7, 0, 140, 153],"bool"), list[7,8,140,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 140, 153],"bool"), list[7,8,140,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 140, 153].  Tensor sizes: [7, 0, 140, 153]
2025-03-05 15:23:05.963617 test begin: paddle.broadcast_to(Tensor([7, 0, 141, 141],"bool"), list[7,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 141, 141],"bool"), list[7,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 141, 141].  Tensor sizes: [7, 0, 141, 141]
2025-03-05 15:23:05.964185 test begin: paddle.broadcast_to(Tensor([7, 0, 141, 153],"bool"), list[7,8,141,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 141, 153],"bool"), list[7,8,141,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 141, 153].  Tensor sizes: [7, 0, 141, 153]
2025-03-05 15:23:05.964720 test begin: paddle.broadcast_to(Tensor([7, 0, 142, 142],"bool"), list[7,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 142, 142],"bool"), list[7,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 142, 142].  Tensor sizes: [7, 0, 142, 142]
2025-03-05 15:23:05.965312 test begin: paddle.broadcast_to(Tensor([7, 0, 142, 153],"bool"), list[7,8,142,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 142, 153],"bool"), list[7,8,142,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 142, 153].  Tensor sizes: [7, 0, 142, 153]
2025-03-05 15:23:05.965900 test begin: paddle.broadcast_to(Tensor([7, 0, 143, 143],"bool"), list[7,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 143, 143],"bool"), list[7,8,143,143,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 143, 143].  Tensor sizes: [7, 0, 143, 143]
2025-03-05 15:23:05.966435 test begin: paddle.broadcast_to(Tensor([7, 0, 143, 153],"bool"), list[7,8,143,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 143, 153],"bool"), list[7,8,143,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 143, 153].  Tensor sizes: [7, 0, 143, 153]
2025-03-05 15:23:05.967329 test begin: paddle.broadcast_to(Tensor([7, 0, 144, 144],"bool"), list[7,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 144, 144],"bool"), list[7,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 144, 144].  Tensor sizes: [7, 0, 144, 144]
2025-03-05 15:23:05.968344 test begin: paddle.broadcast_to(Tensor([7, 0, 144, 153],"bool"), list[7,8,144,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 144, 153],"bool"), list[7,8,144,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 144, 153].  Tensor sizes: [7, 0, 144, 153]
2025-03-05 15:23:05.969170 test begin: paddle.broadcast_to(Tensor([7, 0, 145, 145],"bool"), list[7,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 145, 145],"bool"), list[7,8,145,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 145, 145].  Tensor sizes: [7, 0, 145, 145]
2025-03-05 15:23:05.970437 test begin: paddle.broadcast_to(Tensor([7, 0, 145, 153],"bool"), list[7,8,145,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 145, 153],"bool"), list[7,8,145,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 145, 153].  Tensor sizes: [7, 0, 145, 153]
2025-03-05 15:23:05.971241 test begin: paddle.broadcast_to(Tensor([7, 0, 146, 146],"bool"), list[7,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 146, 146],"bool"), list[7,8,146,146,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 146, 146].  Tensor sizes: [7, 0, 146, 146]
2025-03-05 15:23:05.971954 test begin: paddle.broadcast_to(Tensor([7, 0, 146, 153],"bool"), list[7,8,146,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 146, 153],"bool"), list[7,8,146,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 146, 153].  Tensor sizes: [7, 0, 146, 153]
2025-03-05 15:23:05.972719 test begin: paddle.broadcast_to(Tensor([7, 0, 147, 147],"bool"), list[7,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 147, 147],"bool"), list[7,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 147, 147].  Tensor sizes: [7, 0, 147, 147]
2025-03-05 15:23:05.973473 test begin: paddle.broadcast_to(Tensor([7, 0, 147, 153],"bool"), list[7,8,147,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 147, 153],"bool"), list[7,8,147,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 147, 153].  Tensor sizes: [7, 0, 147, 153]
2025-03-05 15:23:05.974413 test begin: paddle.broadcast_to(Tensor([7, 0, 148, 148],"bool"), list[7,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 148, 148],"bool"), list[7,8,148,148,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 148, 148].  Tensor sizes: [7, 0, 148, 148]
2025-03-05 15:23:05.975286 test begin: paddle.broadcast_to(Tensor([7, 0, 148, 153],"bool"), list[7,8,148,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 148, 153],"bool"), list[7,8,148,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 148, 153].  Tensor sizes: [7, 0, 148, 153]
2025-03-05 15:23:05.976043 test begin: paddle.broadcast_to(Tensor([7, 0, 149, 149],"bool"), list[7,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 149, 149],"bool"), list[7,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 149, 149].  Tensor sizes: [7, 0, 149, 149]
2025-03-05 15:23:05.976919 test begin: paddle.broadcast_to(Tensor([7, 0, 149, 153],"bool"), list[7,8,149,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 149, 153],"bool"), list[7,8,149,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 149, 153].  Tensor sizes: [7, 0, 149, 153]
2025-03-05 15:23:05.977689 test begin: paddle.broadcast_to(Tensor([7, 0, 15, 153],"bool"), list[7,8,15,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 15, 153],"bool"), list[7,8,15,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 15, 153].  Tensor sizes: [7, 0, 15, 153]
2025-03-05 15:23:05.978467 test begin: paddle.broadcast_to(Tensor([7, 0, 15, 15],"bool"), list[7,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 15, 15],"bool"), list[7,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 15, 15].  Tensor sizes: [7, 0, 15, 15]
2025-03-05 15:23:05.979259 test begin: paddle.broadcast_to(Tensor([7, 0, 15, 49],"bool"), list[7,8,15,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 15, 49],"bool"), list[7,8,15,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 15, 49].  Tensor sizes: [7, 0, 15, 49]
2025-03-05 15:23:05.979946 test begin: paddle.broadcast_to(Tensor([7, 0, 150, 150],"bool"), list[7,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 150, 150],"bool"), list[7,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 150, 150].  Tensor sizes: [7, 0, 150, 150]
2025-03-05 15:23:05.981090 test begin: paddle.broadcast_to(Tensor([7, 0, 150, 153],"bool"), list[7,8,150,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 150, 153],"bool"), list[7,8,150,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 150, 153].  Tensor sizes: [7, 0, 150, 153]
2025-03-05 15:23:05.981909 test begin: paddle.broadcast_to(Tensor([7, 0, 151, 151],"bool"), list[7,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 151, 151],"bool"), list[7,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 151, 151].  Tensor sizes: [7, 0, 151, 151]
2025-03-05 15:23:05.982650 test begin: paddle.broadcast_to(Tensor([7, 0, 151, 153],"bool"), list[7,8,151,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 151, 153],"bool"), list[7,8,151,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 151, 153].  Tensor sizes: [7, 0, 151, 153]
2025-03-05 15:23:05.983402 test begin: paddle.broadcast_to(Tensor([7, 0, 152, 152],"bool"), list[7,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 152, 152],"bool"), list[7,8,152,152,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 152, 152].  Tensor sizes: [7, 0, 152, 152]
2025-03-05 15:23:05.984643 test begin: paddle.broadcast_to(Tensor([7, 0, 152, 153],"bool"), list[7,8,152,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 152, 153],"bool"), list[7,8,152,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 152, 153].  Tensor sizes: [7, 0, 152, 153]
2025-03-05 15:23:05.985553 test begin: paddle.broadcast_to(Tensor([7, 0, 153, 153],"bool"), list[7,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 153, 153],"bool"), list[7,8,153,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 153, 153].  Tensor sizes: [7, 0, 153, 153]
2025-03-05 15:23:05.986406 test begin: paddle.broadcast_to(Tensor([7, 0, 154, 153],"bool"), list[7,8,154,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 154, 153],"bool"), list[7,8,154,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 154, 153].  Tensor sizes: [7, 0, 154, 153]
2025-03-05 15:23:05.987079 test begin: paddle.broadcast_to(Tensor([7, 0, 154, 154],"bool"), list[7,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 154, 154],"bool"), list[7,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 154, 154].  Tensor sizes: [7, 0, 154, 154]
2025-03-05 15:23:05.987891 test begin: paddle.broadcast_to(Tensor([7, 0, 155, 153],"bool"), list[7,8,155,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 155, 153],"bool"), list[7,8,155,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 155, 153].  Tensor sizes: [7, 0, 155, 153]
2025-03-05 15:23:05.988614 test begin: paddle.broadcast_to(Tensor([7, 0, 155, 155],"bool"), list[7,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 155, 155],"bool"), list[7,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 155, 155].  Tensor sizes: [7, 0, 155, 155]
2025-03-05 15:23:05.989380 test begin: paddle.broadcast_to(Tensor([7, 0, 156, 153],"bool"), list[7,8,156,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 156, 153],"bool"), list[7,8,156,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 156, 153].  Tensor sizes: [7, 0, 156, 153]
2025-03-05 15:23:05.990108 test begin: paddle.broadcast_to(Tensor([7, 0, 156, 156],"bool"), list[7,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 156, 156],"bool"), list[7,8,156,156,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 156, 156].  Tensor sizes: [7, 0, 156, 156]
2025-03-05 15:23:05.991616 test begin: paddle.broadcast_to(Tensor([7, 0, 157, 153],"bool"), list[7,8,157,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 157, 153],"bool"), list[7,8,157,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 157, 153].  Tensor sizes: [7, 0, 157, 153]
2025-03-05 15:23:05.992394 test begin: paddle.broadcast_to(Tensor([7, 0, 157, 157],"bool"), list[7,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 157, 157],"bool"), list[7,8,157,157,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 157, 157].  Tensor sizes: [7, 0, 157, 157]
2025-03-05 15:23:05.993350 test begin: paddle.broadcast_to(Tensor([7, 0, 158, 153],"bool"), list[7,8,158,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 158, 153],"bool"), list[7,8,158,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 158, 153].  Tensor sizes: [7, 0, 158, 153]
2025-03-05 15:23:05.994192 test begin: paddle.broadcast_to(Tensor([7, 0, 158, 158],"bool"), list[7,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 158, 158],"bool"), list[7,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 158, 158].  Tensor sizes: [7, 0, 158, 158]
2025-03-05 15:23:05.994858 test begin: paddle.broadcast_to(Tensor([7, 0, 159, 153],"bool"), list[7,8,159,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 159, 153],"bool"), list[7,8,159,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 159, 153].  Tensor sizes: [7, 0, 159, 153]
2025-03-05 15:23:05.995477 test begin: paddle.broadcast_to(Tensor([7, 0, 159, 159],"bool"), list[7,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 159, 159],"bool"), list[7,8,159,159,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 159, 159].  Tensor sizes: [7, 0, 159, 159]
2025-03-05 15:23:05.996256 test begin: paddle.broadcast_to(Tensor([7, 0, 16, 153],"bool"), list[7,8,16,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 16, 153],"bool"), list[7,8,16,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 16, 153].  Tensor sizes: [7, 0, 16, 153]
2025-03-05 15:23:05.996995 test begin: paddle.broadcast_to(Tensor([7, 0, 16, 16],"bool"), list[7,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 16, 16],"bool"), list[7,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 16, 16].  Tensor sizes: [7, 0, 16, 16]
2025-03-05 15:23:05.997653 test begin: paddle.broadcast_to(Tensor([7, 0, 16, 49],"bool"), list[7,8,16,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 16, 49],"bool"), list[7,8,16,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 16, 49].  Tensor sizes: [7, 0, 16, 49]
2025-03-05 15:23:05.998341 test begin: paddle.broadcast_to(Tensor([7, 0, 160, 153],"bool"), list[7,8,160,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 160, 153],"bool"), list[7,8,160,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 160, 153].  Tensor sizes: [7, 0, 160, 153]
2025-03-05 15:23:05.999127 test begin: paddle.broadcast_to(Tensor([7, 0, 160, 160],"bool"), list[7,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 160, 160],"bool"), list[7,8,160,160,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 160, 160].  Tensor sizes: [7, 0, 160, 160]
2025-03-05 15:23:05.999770 test begin: paddle.broadcast_to(Tensor([7, 0, 161, 153],"bool"), list[7,8,161,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 161, 153],"bool"), list[7,8,161,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 161, 153].  Tensor sizes: [7, 0, 161, 153]
2025-03-05 15:23:06.000362 test begin: paddle.broadcast_to(Tensor([7, 0, 161, 161],"bool"), list[7,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 161, 161],"bool"), list[7,8,161,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 161, 161].  Tensor sizes: [7, 0, 161, 161]
2025-03-05 15:23:06.001219 test begin: paddle.broadcast_to(Tensor([7, 0, 162, 153],"bool"), list[7,8,162,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 162, 153],"bool"), list[7,8,162,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 162, 153].  Tensor sizes: [7, 0, 162, 153]
2025-03-05 15:23:06.002270 test begin: paddle.broadcast_to(Tensor([7, 0, 162, 162],"bool"), list[7,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 162, 162],"bool"), list[7,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 162, 162].  Tensor sizes: [7, 0, 162, 162]
2025-03-05 15:23:06.002899 test begin: paddle.broadcast_to(Tensor([7, 0, 163, 153],"bool"), list[7,8,163,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 163, 153],"bool"), list[7,8,163,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 163, 153].  Tensor sizes: [7, 0, 163, 153]
2025-03-05 15:23:06.003504 test begin: paddle.broadcast_to(Tensor([7, 0, 163, 163],"bool"), list[7,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 163, 163],"bool"), list[7,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 163, 163].  Tensor sizes: [7, 0, 163, 163]
2025-03-05 15:23:06.004074 test begin: paddle.broadcast_to(Tensor([7, 0, 164, 153],"bool"), list[7,8,164,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 164, 153],"bool"), list[7,8,164,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 164, 153].  Tensor sizes: [7, 0, 164, 153]
2025-03-05 15:23:06.005347 test begin: paddle.broadcast_to(Tensor([7, 0, 164, 164],"bool"), list[7,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 164, 164],"bool"), list[7,8,164,164,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 164, 164].  Tensor sizes: [7, 0, 164, 164]
2025-03-05 15:23:06.006214 test begin: paddle.broadcast_to(Tensor([7, 0, 165, 153],"bool"), list[7,8,165,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 165, 153],"bool"), list[7,8,165,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 165, 153].  Tensor sizes: [7, 0, 165, 153]
2025-03-05 15:23:06.007289 test begin: paddle.broadcast_to(Tensor([7, 0, 165, 165],"bool"), list[7,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 165, 165],"bool"), list[7,8,165,165,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 165, 165].  Tensor sizes: [7, 0, 165, 165]
2025-03-05 15:23:06.008336 test begin: paddle.broadcast_to(Tensor([7, 0, 166, 153],"bool"), list[7,8,166,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 166, 153],"bool"), list[7,8,166,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 166, 153].  Tensor sizes: [7, 0, 166, 153]
2025-03-05 15:23:06.009198 test begin: paddle.broadcast_to(Tensor([7, 0, 166, 166],"bool"), list[7,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 166, 166],"bool"), list[7,8,166,166,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 166, 166].  Tensor sizes: [7, 0, 166, 166]
2025-03-05 15:23:06.009854 test begin: paddle.broadcast_to(Tensor([7, 0, 167, 153],"bool"), list[7,8,167,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 167, 153],"bool"), list[7,8,167,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 167, 153].  Tensor sizes: [7, 0, 167, 153]
2025-03-05 15:23:06.010665 test begin: paddle.broadcast_to(Tensor([7, 0, 167, 167],"bool"), list[7,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 167, 167],"bool"), list[7,8,167,167,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 167, 167].  Tensor sizes: [7, 0, 167, 167]
2025-03-05 15:23:06.011416 test begin: paddle.broadcast_to(Tensor([7, 0, 168, 153],"bool"), list[7,8,168,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 168, 153],"bool"), list[7,8,168,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 168, 153].  Tensor sizes: [7, 0, 168, 153]
2025-03-05 15:23:06.012346 test begin: paddle.broadcast_to(Tensor([7, 0, 168, 168],"bool"), list[7,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 168, 168],"bool"), list[7,8,168,168,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 168, 168].  Tensor sizes: [7, 0, 168, 168]
2025-03-05 15:23:06.013223 test begin: paddle.broadcast_to(Tensor([7, 0, 169, 153],"bool"), list[7,8,169,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 169, 153],"bool"), list[7,8,169,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 169, 153].  Tensor sizes: [7, 0, 169, 153]
2025-03-05 15:23:06.014066 test begin: paddle.broadcast_to(Tensor([7, 0, 169, 169],"bool"), list[7,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 169, 169],"bool"), list[7,8,169,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 169, 169].  Tensor sizes: [7, 0, 169, 169]
2025-03-05 15:23:06.014964 test begin: paddle.broadcast_to(Tensor([7, 0, 17, 153],"bool"), list[7,8,17,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 17, 153],"bool"), list[7,8,17,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 17, 153].  Tensor sizes: [7, 0, 17, 153]
2025-03-05 15:23:06.015624 test begin: paddle.broadcast_to(Tensor([7, 0, 17, 17],"bool"), list[7,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 17, 17],"bool"), list[7,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 17, 17].  Tensor sizes: [7, 0, 17, 17]
2025-03-05 15:23:06.016288 test begin: paddle.broadcast_to(Tensor([7, 0, 17, 49],"bool"), list[7,8,17,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 17, 49],"bool"), list[7,8,17,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 17, 49].  Tensor sizes: [7, 0, 17, 49]
2025-03-05 15:23:06.016919 test begin: paddle.broadcast_to(Tensor([7, 0, 170, 153],"bool"), list[7,8,170,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 170, 153],"bool"), list[7,8,170,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 170, 153].  Tensor sizes: [7, 0, 170, 153]
2025-03-05 15:23:06.017452 test begin: paddle.broadcast_to(Tensor([7, 0, 170, 170],"bool"), list[7,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 170, 170],"bool"), list[7,8,170,170,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 170, 170].  Tensor sizes: [7, 0, 170, 170]
2025-03-05 15:23:06.018144 test begin: paddle.broadcast_to(Tensor([7, 0, 171, 153],"bool"), list[7,8,171,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 171, 153],"bool"), list[7,8,171,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 171, 153].  Tensor sizes: [7, 0, 171, 153]
2025-03-05 15:23:06.018781 test begin: paddle.broadcast_to(Tensor([7, 0, 171, 171],"bool"), list[7,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 171, 171],"bool"), list[7,8,171,171,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 171, 171].  Tensor sizes: [7, 0, 171, 171]
2025-03-05 15:23:06.019564 test begin: paddle.broadcast_to(Tensor([7, 0, 172, 153],"bool"), list[7,8,172,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 172, 153],"bool"), list[7,8,172,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 172, 153].  Tensor sizes: [7, 0, 172, 153]
2025-03-05 15:23:06.020636 test begin: paddle.broadcast_to(Tensor([7, 0, 172, 172],"bool"), list[7,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 172, 172],"bool"), list[7,8,172,172,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 172, 172].  Tensor sizes: [7, 0, 172, 172]
2025-03-05 15:23:06.021334 test begin: paddle.broadcast_to(Tensor([7, 0, 173, 153],"bool"), list[7,8,173,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 173, 153],"bool"), list[7,8,173,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 173, 153].  Tensor sizes: [7, 0, 173, 153]
2025-03-05 15:23:06.022126 test begin: paddle.broadcast_to(Tensor([7, 0, 173, 173],"bool"), list[7,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 173, 173],"bool"), list[7,8,173,173,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 173, 173].  Tensor sizes: [7, 0, 173, 173]
2025-03-05 15:23:06.022929 test begin: paddle.broadcast_to(Tensor([7, 0, 174, 153],"bool"), list[7,8,174,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 174, 153],"bool"), list[7,8,174,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 174, 153].  Tensor sizes: [7, 0, 174, 153]
2025-03-05 15:23:06.023746 test begin: paddle.broadcast_to(Tensor([7, 0, 174, 174],"bool"), list[7,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 174, 174],"bool"), list[7,8,174,174,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 174, 174].  Tensor sizes: [7, 0, 174, 174]
2025-03-05 15:23:06.024420 test begin: paddle.broadcast_to(Tensor([7, 0, 175, 153],"bool"), list[7,8,175,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 175, 153],"bool"), list[7,8,175,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 175, 153].  Tensor sizes: [7, 0, 175, 153]
2025-03-05 15:23:06.025274 test begin: paddle.broadcast_to(Tensor([7, 0, 175, 175],"bool"), list[7,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 175, 175],"bool"), list[7,8,175,175,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 175, 175].  Tensor sizes: [7, 0, 175, 175]
2025-03-05 15:23:06.026306 test begin: paddle.broadcast_to(Tensor([7, 0, 176, 153],"bool"), list[7,8,176,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 176, 153],"bool"), list[7,8,176,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 176, 153].  Tensor sizes: [7, 0, 176, 153]
2025-03-05 15:23:06.027159 test begin: paddle.broadcast_to(Tensor([7, 0, 176, 176],"bool"), list[7,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 176, 176],"bool"), list[7,8,176,176,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 176, 176].  Tensor sizes: [7, 0, 176, 176]
2025-03-05 15:23:06.027896 test begin: paddle.broadcast_to(Tensor([7, 0, 177, 153],"bool"), list[7,8,177,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 177, 153],"bool"), list[7,8,177,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 177, 153].  Tensor sizes: [7, 0, 177, 153]
2025-03-05 15:23:06.028648 test begin: paddle.broadcast_to(Tensor([7, 0, 177, 177],"bool"), list[7,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 177, 177],"bool"), list[7,8,177,177,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 177, 177].  Tensor sizes: [7, 0, 177, 177]
2025-03-05 15:23:06.029382 test begin: paddle.broadcast_to(Tensor([7, 0, 178, 153],"bool"), list[7,8,178,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 178, 153],"bool"), list[7,8,178,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 178, 153].  Tensor sizes: [7, 0, 178, 153]
2025-03-05 15:23:06.030120 test begin: paddle.broadcast_to(Tensor([7, 0, 178, 178],"bool"), list[7,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 178, 178],"bool"), list[7,8,178,178,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 178, 178].  Tensor sizes: [7, 0, 178, 178]
2025-03-05 15:23:06.031082 test begin: paddle.broadcast_to(Tensor([7, 0, 179, 153],"bool"), list[7,8,179,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 179, 153],"bool"), list[7,8,179,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 179, 153].  Tensor sizes: [7, 0, 179, 153]
2025-03-05 15:23:06.032347 test begin: paddle.broadcast_to(Tensor([7, 0, 179, 179],"bool"), list[7,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 179, 179],"bool"), list[7,8,179,179,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 179, 179].  Tensor sizes: [7, 0, 179, 179]
2025-03-05 15:23:06.033009 test begin: paddle.broadcast_to(Tensor([7, 0, 18, 153],"bool"), list[7,8,18,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 18, 153],"bool"), list[7,8,18,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 18, 153].  Tensor sizes: [7, 0, 18, 153]
2025-03-05 15:23:06.033935 test begin: paddle.broadcast_to(Tensor([7, 0, 18, 18],"bool"), list[7,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 18, 18],"bool"), list[7,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 18, 18].  Tensor sizes: [7, 0, 18, 18]
2025-03-05 15:23:06.034719 test begin: paddle.broadcast_to(Tensor([7, 0, 18, 49],"bool"), list[7,8,18,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 18, 49],"bool"), list[7,8,18,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 18, 49].  Tensor sizes: [7, 0, 18, 49]
2025-03-05 15:23:06.036035 test begin: paddle.broadcast_to(Tensor([7, 0, 180, 153],"bool"), list[7,8,180,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 180, 153],"bool"), list[7,8,180,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 180, 153].  Tensor sizes: [7, 0, 180, 153]
2025-03-05 15:23:06.036873 test begin: paddle.broadcast_to(Tensor([7, 0, 180, 180],"bool"), list[7,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 180, 180],"bool"), list[7,8,180,180,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 180, 180].  Tensor sizes: [7, 0, 180, 180]
2025-03-05 15:23:06.038105 test begin: paddle.broadcast_to(Tensor([7, 0, 19, 153],"bool"), list[7,8,19,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 19, 153],"bool"), list[7,8,19,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 19, 153].  Tensor sizes: [7, 0, 19, 153]
2025-03-05 15:23:06.039062 test begin: paddle.broadcast_to(Tensor([7, 0, 19, 19],"bool"), list[7,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 19, 19],"bool"), list[7,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 19, 19].  Tensor sizes: [7, 0, 19, 19]
2025-03-05 15:23:06.041148 test begin: paddle.broadcast_to(Tensor([7, 0, 19, 49],"bool"), list[7,8,19,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 19, 49],"bool"), list[7,8,19,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 19, 49].  Tensor sizes: [7, 0, 19, 49]
2025-03-05 15:23:06.050785 test begin: paddle.broadcast_to(Tensor([7, 0, 2, 153],"bool"), list[7,8,2,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 2, 153],"bool"), list[7,8,2,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 2, 153].  Tensor sizes: [7, 0, 2, 153]
2025-03-05 15:23:06.053038 test begin: paddle.broadcast_to(Tensor([7, 0, 2, 2],"bool"), list[7,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 2, 2],"bool"), list[7,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 2, 2].  Tensor sizes: [7, 0, 2, 2]
2025-03-05 15:23:06.056182 test begin: paddle.broadcast_to(Tensor([7, 0, 2, 49],"bool"), list[7,8,2,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 2, 49],"bool"), list[7,8,2,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 2, 49].  Tensor sizes: [7, 0, 2, 49]
2025-03-05 15:23:06.057093 test begin: paddle.broadcast_to(Tensor([7, 0, 20, 153],"bool"), list[7,8,20,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 20, 153],"bool"), list[7,8,20,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 20, 153].  Tensor sizes: [7, 0, 20, 153]
2025-03-05 15:23:06.057893 test begin: paddle.broadcast_to(Tensor([7, 0, 20, 20],"bool"), list[7,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 20, 20],"bool"), list[7,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 20, 20].  Tensor sizes: [7, 0, 20, 20]
2025-03-05 15:23:06.058828 test begin: paddle.broadcast_to(Tensor([7, 0, 20, 49],"bool"), list[7,8,20,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 20, 49],"bool"), list[7,8,20,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 20, 49].  Tensor sizes: [7, 0, 20, 49]
2025-03-05 15:23:06.059655 test begin: paddle.broadcast_to(Tensor([7, 0, 21, 153],"bool"), list[7,8,21,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 21, 153],"bool"), list[7,8,21,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 21, 153].  Tensor sizes: [7, 0, 21, 153]
2025-03-05 15:23:06.060649 test begin: paddle.broadcast_to(Tensor([7, 0, 21, 21],"bool"), list[7,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 21, 21],"bool"), list[7,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 21, 21].  Tensor sizes: [7, 0, 21, 21]
2025-03-05 15:23:06.062426 test begin: paddle.broadcast_to(Tensor([7, 0, 21, 49],"bool"), list[7,8,21,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 21, 49],"bool"), list[7,8,21,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 21, 49].  Tensor sizes: [7, 0, 21, 49]
2025-03-05 15:23:06.063561 test begin: paddle.broadcast_to(Tensor([7, 0, 22, 153],"bool"), list[7,8,22,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 22, 153],"bool"), list[7,8,22,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 22, 153].  Tensor sizes: [7, 0, 22, 153]
2025-03-05 15:23:06.064620 test begin: paddle.broadcast_to(Tensor([7, 0, 22, 22],"bool"), list[7,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 22, 22],"bool"), list[7,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 22, 22].  Tensor sizes: [7, 0, 22, 22]
2025-03-05 15:23:06.065703 test begin: paddle.broadcast_to(Tensor([7, 0, 22, 49],"bool"), list[7,8,22,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 22, 49],"bool"), list[7,8,22,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 22, 49].  Tensor sizes: [7, 0, 22, 49]
2025-03-05 15:23:06.066870 test begin: paddle.broadcast_to(Tensor([7, 0, 23, 153],"bool"), list[7,8,23,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 23, 153],"bool"), list[7,8,23,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 23, 153].  Tensor sizes: [7, 0, 23, 153]
2025-03-05 15:23:06.067658 test begin: paddle.broadcast_to(Tensor([7, 0, 23, 23],"bool"), list[7,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 23, 23],"bool"), list[7,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 23, 23].  Tensor sizes: [7, 0, 23, 23]
2025-03-05 15:23:06.068485 test begin: paddle.broadcast_to(Tensor([7, 0, 23, 49],"bool"), list[7,8,23,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 23, 49],"bool"), list[7,8,23,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 23, 49].  Tensor sizes: [7, 0, 23, 49]
2025-03-05 15:23:06.069322 test begin: paddle.broadcast_to(Tensor([7, 0, 24, 153],"bool"), list[7,8,24,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 24, 153],"bool"), list[7,8,24,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 24, 153].  Tensor sizes: [7, 0, 24, 153]
2025-03-05 15:23:06.075102 test begin: paddle.broadcast_to(Tensor([7, 0, 24, 24],"bool"), list[7,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 24, 24],"bool"), list[7,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 24, 24].  Tensor sizes: [7, 0, 24, 24]
2025-03-05 15:23:06.076040 test begin: paddle.broadcast_to(Tensor([7, 0, 24, 49],"bool"), list[7,8,24,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 24, 49],"bool"), list[7,8,24,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 24, 49].  Tensor sizes: [7, 0, 24, 49]
2025-03-05 15:23:06.076959 test begin: paddle.broadcast_to(Tensor([7, 0, 25, 153],"bool"), list[7,8,25,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 25, 153],"bool"), list[7,8,25,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 25, 153].  Tensor sizes: [7, 0, 25, 153]
2025-03-05 15:23:06.078133 test begin: paddle.broadcast_to(Tensor([7, 0, 25, 25],"bool"), list[7,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 25, 25],"bool"), list[7,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 25, 25].  Tensor sizes: [7, 0, 25, 25]
2025-03-05 15:23:06.079046 test begin: paddle.broadcast_to(Tensor([7, 0, 25, 49],"bool"), list[7,8,25,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 25, 49],"bool"), list[7,8,25,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 25, 49].  Tensor sizes: [7, 0, 25, 49]
2025-03-05 15:23:06.081818 test begin: paddle.broadcast_to(Tensor([7, 0, 26, 153],"bool"), list[7,8,26,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 26, 153],"bool"), list[7,8,26,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 26, 153].  Tensor sizes: [7, 0, 26, 153]
2025-03-05 15:23:06.090895 test begin: paddle.broadcast_to(Tensor([7, 0, 26, 26],"bool"), list[7,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 26, 26],"bool"), list[7,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 26, 26].  Tensor sizes: [7, 0, 26, 26]
2025-03-05 15:23:06.091921 test begin: paddle.broadcast_to(Tensor([7, 0, 26, 49],"bool"), list[7,8,26,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 26, 49],"bool"), list[7,8,26,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 26, 49].  Tensor sizes: [7, 0, 26, 49]
2025-03-05 15:23:06.093313 test begin: paddle.broadcast_to(Tensor([7, 0, 27, 153],"bool"), list[7,8,27,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 27, 153],"bool"), list[7,8,27,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 27, 153].  Tensor sizes: [7, 0, 27, 153]
2025-03-05 15:23:06.094299 test begin: paddle.broadcast_to(Tensor([7, 0, 27, 27],"bool"), list[7,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 27, 27],"bool"), list[7,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 27, 27].  Tensor sizes: [7, 0, 27, 27]
2025-03-05 15:23:06.095327 test begin: paddle.broadcast_to(Tensor([7, 0, 27, 49],"bool"), list[7,8,27,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 27, 49],"bool"), list[7,8,27,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 27, 49].  Tensor sizes: [7, 0, 27, 49]
2025-03-05 15:23:06.096320 test begin: paddle.broadcast_to(Tensor([7, 0, 28, 153],"bool"), list[7,8,28,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 28, 153],"bool"), list[7,8,28,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 28, 153].  Tensor sizes: [7, 0, 28, 153]
2025-03-05 15:23:06.097724 test begin: paddle.broadcast_to(Tensor([7, 0, 28, 28],"bool"), list[7,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 28, 28],"bool"), list[7,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 28, 28].  Tensor sizes: [7, 0, 28, 28]
2025-03-05 15:23:06.098696 test begin: paddle.broadcast_to(Tensor([7, 0, 28, 49],"bool"), list[7,8,28,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 28, 49],"bool"), list[7,8,28,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 28, 49].  Tensor sizes: [7, 0, 28, 49]
2025-03-05 15:23:06.099519 test begin: paddle.broadcast_to(Tensor([7, 0, 29, 153],"bool"), list[7,8,29,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 29, 153],"bool"), list[7,8,29,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 29, 153].  Tensor sizes: [7, 0, 29, 153]
2025-03-05 15:23:06.100250 test begin: paddle.broadcast_to(Tensor([7, 0, 29, 29],"bool"), list[7,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 29, 29],"bool"), list[7,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 29, 29].  Tensor sizes: [7, 0, 29, 29]
2025-03-05 15:23:06.101030 test begin: paddle.broadcast_to(Tensor([7, 0, 29, 49],"bool"), list[7,8,29,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 29, 49],"bool"), list[7,8,29,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 29, 49].  Tensor sizes: [7, 0, 29, 49]
2025-03-05 15:23:06.101775 test begin: paddle.broadcast_to(Tensor([7, 0, 3, 153],"bool"), list[7,8,3,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 3, 153],"bool"), list[7,8,3,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 3, 153].  Tensor sizes: [7, 0, 3, 153]
2025-03-05 15:23:06.103447 test begin: paddle.broadcast_to(Tensor([7, 0, 3, 3],"bool"), list[7,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 3, 3],"bool"), list[7,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 3, 3].  Tensor sizes: [7, 0, 3, 3]
2025-03-05 15:23:06.104265 test begin: paddle.broadcast_to(Tensor([7, 0, 3, 49],"bool"), list[7,8,3,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 3, 49],"bool"), list[7,8,3,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 3, 49].  Tensor sizes: [7, 0, 3, 49]
2025-03-05 15:23:06.104957 test begin: paddle.broadcast_to(Tensor([7, 0, 30, 153],"bool"), list[7,8,30,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 30, 153],"bool"), list[7,8,30,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 30, 153].  Tensor sizes: [7, 0, 30, 153]
2025-03-05 15:23:06.106073 test begin: paddle.broadcast_to(Tensor([7, 0, 30, 30],"bool"), list[7,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 30, 30],"bool"), list[7,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 30, 30].  Tensor sizes: [7, 0, 30, 30]
2025-03-05 15:23:06.108610 test begin: paddle.broadcast_to(Tensor([7, 0, 30, 49],"bool"), list[7,8,30,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 30, 49],"bool"), list[7,8,30,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 30, 49].  Tensor sizes: [7, 0, 30, 49]
2025-03-05 15:23:06.109547 test begin: paddle.broadcast_to(Tensor([7, 0, 31, 153],"bool"), list[7,8,31,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 31, 153],"bool"), list[7,8,31,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 31, 153].  Tensor sizes: [7, 0, 31, 153]
2025-03-05 15:23:06.110339 test begin: paddle.broadcast_to(Tensor([7, 0, 31, 31],"bool"), list[7,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 31, 31],"bool"), list[7,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 31, 31].  Tensor sizes: [7, 0, 31, 31]
2025-03-05 15:23:06.113068 test begin: paddle.broadcast_to(Tensor([7, 0, 31, 49],"bool"), list[7,8,31,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 31, 49],"bool"), list[7,8,31,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 31, 49].  Tensor sizes: [7, 0, 31, 49]
2025-03-05 15:23:06.121703 test begin: paddle.broadcast_to(Tensor([7, 0, 32, 153],"bool"), list[7,8,32,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 32, 153],"bool"), list[7,8,32,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 32, 153].  Tensor sizes: [7, 0, 32, 153]
2025-03-05 15:23:06.125070 test begin: paddle.broadcast_to(Tensor([7, 0, 32, 32],"bool"), list[7,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 32, 32],"bool"), list[7,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 32, 32].  Tensor sizes: [7, 0, 32, 32]
2025-03-05 15:23:06.127323 test begin: paddle.broadcast_to(Tensor([7, 0, 32, 49],"bool"), list[7,8,32,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 32, 49],"bool"), list[7,8,32,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 32, 49].  Tensor sizes: [7, 0, 32, 49]
2025-03-05 15:23:06.128414 test begin: paddle.broadcast_to(Tensor([7, 0, 33, 153],"bool"), list[7,8,33,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 33, 153],"bool"), list[7,8,33,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 33, 153].  Tensor sizes: [7, 0, 33, 153]
2025-03-05 15:23:06.129251 test begin: paddle.broadcast_to(Tensor([7, 0, 33, 33],"bool"), list[7,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 33, 33],"bool"), list[7,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 33, 33].  Tensor sizes: [7, 0, 33, 33]
2025-03-05 15:23:06.130198 test begin: paddle.broadcast_to(Tensor([7, 0, 33, 49],"bool"), list[7,8,33,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 33, 49],"bool"), list[7,8,33,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 33, 49].  Tensor sizes: [7, 0, 33, 49]
2025-03-05 15:23:06.134230 test begin: paddle.broadcast_to(Tensor([7, 0, 34, 153],"bool"), list[7,8,34,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 34, 153],"bool"), list[7,8,34,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 34, 153].  Tensor sizes: [7, 0, 34, 153]
2025-03-05 15:23:06.135110 test begin: paddle.broadcast_to(Tensor([7, 0, 34, 34],"bool"), list[7,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 34, 34],"bool"), list[7,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 34, 34].  Tensor sizes: [7, 0, 34, 34]
2025-03-05 15:23:06.136214 test begin: paddle.broadcast_to(Tensor([7, 0, 34, 49],"bool"), list[7,8,34,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 34, 49],"bool"), list[7,8,34,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 34, 49].  Tensor sizes: [7, 0, 34, 49]
2025-03-05 15:23:06.137569 test begin: paddle.broadcast_to(Tensor([7, 0, 35, 153],"bool"), list[7,8,35,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 35, 153],"bool"), list[7,8,35,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 35, 153].  Tensor sizes: [7, 0, 35, 153]
2025-03-05 15:23:06.139794 test begin: paddle.broadcast_to(Tensor([7, 0, 35, 35],"bool"), list[7,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 35, 35],"bool"), list[7,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 35, 35].  Tensor sizes: [7, 0, 35, 35]
2025-03-05 15:23:06.141036 test begin: paddle.broadcast_to(Tensor([7, 0, 35, 49],"bool"), list[7,8,35,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 35, 49],"bool"), list[7,8,35,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 35, 49].  Tensor sizes: [7, 0, 35, 49]
2025-03-05 15:23:06.142056 test begin: paddle.broadcast_to(Tensor([7, 0, 36, 153],"bool"), list[7,8,36,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 36, 153],"bool"), list[7,8,36,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 36, 153].  Tensor sizes: [7, 0, 36, 153]
2025-03-05 15:23:06.143072 test begin: paddle.broadcast_to(Tensor([7, 0, 36, 36],"bool"), list[7,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 36, 36],"bool"), list[7,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 36, 36].  Tensor sizes: [7, 0, 36, 36]
2025-03-05 15:23:06.144017 test begin: paddle.broadcast_to(Tensor([7, 0, 36, 49],"bool"), list[7,8,36,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 36, 49],"bool"), list[7,8,36,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 36, 49].  Tensor sizes: [7, 0, 36, 49]
2025-03-05 15:23:06.145619 test begin: paddle.broadcast_to(Tensor([7, 0, 37, 153],"bool"), list[7,8,37,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 37, 153],"bool"), list[7,8,37,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 37, 153].  Tensor sizes: [7, 0, 37, 153]
2025-03-05 15:23:06.146439 test begin: paddle.broadcast_to(Tensor([7, 0, 37, 37],"bool"), list[7,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 37, 37],"bool"), list[7,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 37, 37].  Tensor sizes: [7, 0, 37, 37]
2025-03-05 15:23:06.150876 test begin: paddle.broadcast_to(Tensor([7, 0, 37, 49],"bool"), list[7,8,37,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 37, 49],"bool"), list[7,8,37,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 37, 49].  Tensor sizes: [7, 0, 37, 49]
2025-03-05 15:23:06.151578 test begin: paddle.broadcast_to(Tensor([7, 0, 38, 153],"bool"), list[7,8,38,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 38, 153],"bool"), list[7,8,38,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 38, 153].  Tensor sizes: [7, 0, 38, 153]
2025-03-05 15:23:06.152220 test begin: paddle.broadcast_to(Tensor([7, 0, 38, 38],"bool"), list[7,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 38, 38],"bool"), list[7,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 38, 38].  Tensor sizes: [7, 0, 38, 38]
2025-03-05 15:23:06.152939 test begin: paddle.broadcast_to(Tensor([7, 0, 38, 49],"bool"), list[7,8,38,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 38, 49],"bool"), list[7,8,38,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 38, 49].  Tensor sizes: [7, 0, 38, 49]
2025-03-05 15:23:06.153653 test begin: paddle.broadcast_to(Tensor([7, 0, 39, 153],"bool"), list[7,8,39,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 39, 153],"bool"), list[7,8,39,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 39, 153].  Tensor sizes: [7, 0, 39, 153]
2025-03-05 15:23:06.154275 test begin: paddle.broadcast_to(Tensor([7, 0, 39, 39],"bool"), list[7,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 39, 39],"bool"), list[7,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 39, 39].  Tensor sizes: [7, 0, 39, 39]
2025-03-05 15:23:06.154839 test begin: paddle.broadcast_to(Tensor([7, 0, 39, 49],"bool"), list[7,8,39,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 39, 49],"bool"), list[7,8,39,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 39, 49].  Tensor sizes: [7, 0, 39, 49]
2025-03-05 15:23:06.155520 test begin: paddle.broadcast_to(Tensor([7, 0, 4, 153],"bool"), list[7,8,4,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 4, 153],"bool"), list[7,8,4,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 4, 153].  Tensor sizes: [7, 0, 4, 153]
2025-03-05 15:23:06.156195 test begin: paddle.broadcast_to(Tensor([7, 0, 4, 49],"bool"), list[7,8,4,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 4, 49],"bool"), list[7,8,4,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 4, 49].  Tensor sizes: [7, 0, 4, 49]
2025-03-05 15:23:06.156972 test begin: paddle.broadcast_to(Tensor([7, 0, 4, 4],"bool"), list[7,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 4, 4],"bool"), list[7,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 4, 4].  Tensor sizes: [7, 0, 4, 4]
2025-03-05 15:23:06.157596 test begin: paddle.broadcast_to(Tensor([7, 0, 40, 153],"bool"), list[7,8,40,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 40, 153],"bool"), list[7,8,40,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 40, 153].  Tensor sizes: [7, 0, 40, 153]
2025-03-05 15:23:06.158669 test begin: paddle.broadcast_to(Tensor([7, 0, 40, 40],"bool"), list[7,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 40, 40],"bool"), list[7,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 40, 40].  Tensor sizes: [7, 0, 40, 40]
2025-03-05 15:23:06.159389 test begin: paddle.broadcast_to(Tensor([7, 0, 40, 49],"bool"), list[7,8,40,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 40, 49],"bool"), list[7,8,40,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 40, 49].  Tensor sizes: [7, 0, 40, 49]
2025-03-05 15:23:06.160008 test begin: paddle.broadcast_to(Tensor([7, 0, 41, 153],"bool"), list[7,8,41,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 41, 153],"bool"), list[7,8,41,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 41, 153].  Tensor sizes: [7, 0, 41, 153]
2025-03-05 15:23:06.160676 test begin: paddle.broadcast_to(Tensor([7, 0, 41, 41],"bool"), list[7,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 41, 41],"bool"), list[7,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 41, 41].  Tensor sizes: [7, 0, 41, 41]
2025-03-05 15:23:06.161414 test begin: paddle.broadcast_to(Tensor([7, 0, 41, 49],"bool"), list[7,8,41,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 41, 49],"bool"), list[7,8,41,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 41, 49].  Tensor sizes: [7, 0, 41, 49]
2025-03-05 15:23:06.162111 test begin: paddle.broadcast_to(Tensor([7, 0, 42, 153],"bool"), list[7,8,42,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 42, 153],"bool"), list[7,8,42,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 42, 153].  Tensor sizes: [7, 0, 42, 153]
2025-03-05 15:23:06.162798 test begin: paddle.broadcast_to(Tensor([7, 0, 42, 42],"bool"), list[7,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 42, 42],"bool"), list[7,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 42, 42].  Tensor sizes: [7, 0, 42, 42]
2025-03-05 15:23:06.163535 test begin: paddle.broadcast_to(Tensor([7, 0, 42, 49],"bool"), list[7,8,42,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 42, 49],"bool"), list[7,8,42,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 42, 49].  Tensor sizes: [7, 0, 42, 49]
2025-03-05 15:23:06.164499 test begin: paddle.broadcast_to(Tensor([7, 0, 43, 153],"bool"), list[7,8,43,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 43, 153],"bool"), list[7,8,43,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 43, 153].  Tensor sizes: [7, 0, 43, 153]
2025-03-05 15:23:06.165287 test begin: paddle.broadcast_to(Tensor([7, 0, 43, 43],"bool"), list[7,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 43, 43],"bool"), list[7,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 43, 43].  Tensor sizes: [7, 0, 43, 43]
2025-03-05 15:23:06.166038 test begin: paddle.broadcast_to(Tensor([7, 0, 43, 49],"bool"), list[7,8,43,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 43, 49],"bool"), list[7,8,43,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 43, 49].  Tensor sizes: [7, 0, 43, 49]
2025-03-05 15:23:06.166940 test begin: paddle.broadcast_to(Tensor([7, 0, 44, 153],"bool"), list[7,8,44,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 44, 153],"bool"), list[7,8,44,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 44, 153].  Tensor sizes: [7, 0, 44, 153]
2025-03-05 15:23:06.167687 test begin: paddle.broadcast_to(Tensor([7, 0, 44, 44],"bool"), list[7,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 44, 44],"bool"), list[7,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 44, 44].  Tensor sizes: [7, 0, 44, 44]
2025-03-05 15:23:06.168570 test begin: paddle.broadcast_to(Tensor([7, 0, 44, 49],"bool"), list[7,8,44,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 44, 49],"bool"), list[7,8,44,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 44, 49].  Tensor sizes: [7, 0, 44, 49]
2025-03-05 15:23:06.169367 test begin: paddle.broadcast_to(Tensor([7, 0, 45, 153],"bool"), list[7,8,45,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 45, 153],"bool"), list[7,8,45,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 45, 153].  Tensor sizes: [7, 0, 45, 153]
2025-03-05 15:23:06.170046 test begin: paddle.broadcast_to(Tensor([7, 0, 45, 45],"bool"), list[7,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 45, 45],"bool"), list[7,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 45, 45].  Tensor sizes: [7, 0, 45, 45]
2025-03-05 15:23:06.170865 test begin: paddle.broadcast_to(Tensor([7, 0, 45, 49],"bool"), list[7,8,45,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 45, 49],"bool"), list[7,8,45,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 45, 49].  Tensor sizes: [7, 0, 45, 49]
2025-03-05 15:23:06.171644 test begin: paddle.broadcast_to(Tensor([7, 0, 46, 153],"bool"), list[7,8,46,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 46, 153],"bool"), list[7,8,46,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 46, 153].  Tensor sizes: [7, 0, 46, 153]
2025-03-05 15:23:06.172295 test begin: paddle.broadcast_to(Tensor([7, 0, 46, 46],"bool"), list[7,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 46, 46],"bool"), list[7,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 46, 46].  Tensor sizes: [7, 0, 46, 46]
2025-03-05 15:23:06.172970 test begin: paddle.broadcast_to(Tensor([7, 0, 46, 49],"bool"), list[7,8,46,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 46, 49],"bool"), list[7,8,46,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 46, 49].  Tensor sizes: [7, 0, 46, 49]
2025-03-05 15:23:06.173714 test begin: paddle.broadcast_to(Tensor([7, 0, 47, 153],"bool"), list[7,8,47,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 47, 153],"bool"), list[7,8,47,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 47, 153].  Tensor sizes: [7, 0, 47, 153]
2025-03-05 15:23:06.174368 test begin: paddle.broadcast_to(Tensor([7, 0, 47, 47],"bool"), list[7,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 47, 47],"bool"), list[7,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 47, 47].  Tensor sizes: [7, 0, 47, 47]
2025-03-05 15:23:06.175412 test begin: paddle.broadcast_to(Tensor([7, 0, 47, 49],"bool"), list[7,8,47,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 47, 49],"bool"), list[7,8,47,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 47, 49].  Tensor sizes: [7, 0, 47, 49]
2025-03-05 15:23:06.176158 test begin: paddle.broadcast_to(Tensor([7, 0, 48, 153],"bool"), list[7,8,48,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 48, 153],"bool"), list[7,8,48,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 48, 153].  Tensor sizes: [7, 0, 48, 153]
2025-03-05 15:23:06.176739 test begin: paddle.broadcast_to(Tensor([7, 0, 48, 48],"bool"), list[7,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 48, 48],"bool"), list[7,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 48, 48].  Tensor sizes: [7, 0, 48, 48]
2025-03-05 15:23:06.177454 test begin: paddle.broadcast_to(Tensor([7, 0, 48, 49],"bool"), list[7,8,48,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 48, 49],"bool"), list[7,8,48,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 48, 49].  Tensor sizes: [7, 0, 48, 49]
2025-03-05 15:23:06.178065 test begin: paddle.broadcast_to(Tensor([7, 0, 49, 153],"bool"), list[7,8,49,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 49, 153],"bool"), list[7,8,49,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 49, 153].  Tensor sizes: [7, 0, 49, 153]
2025-03-05 15:23:06.178610 test begin: paddle.broadcast_to(Tensor([7, 0, 49, 49],"bool"), list[7,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 49, 49],"bool"), list[7,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 49, 49].  Tensor sizes: [7, 0, 49, 49]
2025-03-05 15:23:06.179625 test begin: paddle.broadcast_to(Tensor([7, 0, 5, 153],"bool"), list[7,8,5,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 5, 153],"bool"), list[7,8,5,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 5, 153].  Tensor sizes: [7, 0, 5, 153]
2025-03-05 15:23:06.180401 test begin: paddle.broadcast_to(Tensor([7, 0, 5, 49],"bool"), list[7,8,5,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 5, 49],"bool"), list[7,8,5,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 5, 49].  Tensor sizes: [7, 0, 5, 49]
2025-03-05 15:23:06.181173 test begin: paddle.broadcast_to(Tensor([7, 0, 5, 5],"bool"), list[7,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 5, 5],"bool"), list[7,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 5, 5].  Tensor sizes: [7, 0, 5, 5]
2025-03-05 15:23:06.181937 test begin: paddle.broadcast_to(Tensor([7, 0, 50, 153],"bool"), list[7,8,50,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 50, 153],"bool"), list[7,8,50,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 50, 153].  Tensor sizes: [7, 0, 50, 153]
2025-03-05 15:23:06.182759 test begin: paddle.broadcast_to(Tensor([7, 0, 50, 49],"bool"), list[7,8,50,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 50, 49],"bool"), list[7,8,50,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 50, 49].  Tensor sizes: [7, 0, 50, 49]
2025-03-05 15:23:06.183721 test begin: paddle.broadcast_to(Tensor([7, 0, 50, 50],"bool"), list[7,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 50, 50],"bool"), list[7,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 50, 50].  Tensor sizes: [7, 0, 50, 50]
2025-03-05 15:23:06.184519 test begin: paddle.broadcast_to(Tensor([7, 0, 51, 153],"bool"), list[7,8,51,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 51, 153],"bool"), list[7,8,51,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 51, 153].  Tensor sizes: [7, 0, 51, 153]
2025-03-05 15:23:06.185422 test begin: paddle.broadcast_to(Tensor([7, 0, 51, 49],"bool"), list[7,8,51,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 51, 49],"bool"), list[7,8,51,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 51, 49].  Tensor sizes: [7, 0, 51, 49]
2025-03-05 15:23:06.186096 test begin: paddle.broadcast_to(Tensor([7, 0, 51, 51],"bool"), list[7,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 51, 51],"bool"), list[7,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 51, 51].  Tensor sizes: [7, 0, 51, 51]
2025-03-05 15:23:06.186873 test begin: paddle.broadcast_to(Tensor([7, 0, 52, 153],"bool"), list[7,8,52,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 52, 153],"bool"), list[7,8,52,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 52, 153].  Tensor sizes: [7, 0, 52, 153]
2025-03-05 15:23:06.187629 test begin: paddle.broadcast_to(Tensor([7, 0, 52, 49],"bool"), list[7,8,52,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 52, 49],"bool"), list[7,8,52,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 52, 49].  Tensor sizes: [7, 0, 52, 49]
2025-03-05 15:23:06.188438 test begin: paddle.broadcast_to(Tensor([7, 0, 52, 52],"bool"), list[7,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 52, 52],"bool"), list[7,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 52, 52].  Tensor sizes: [7, 0, 52, 52]
2025-03-05 15:23:06.190259 test begin: paddle.broadcast_to(Tensor([7, 0, 53, 153],"bool"), list[7,8,53,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 53, 153],"bool"), list[7,8,53,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 53, 153].  Tensor sizes: [7, 0, 53, 153]
2025-03-05 15:23:06.191062 test begin: paddle.broadcast_to(Tensor([7, 0, 53, 49],"bool"), list[7,8,53,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 53, 49],"bool"), list[7,8,53,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 53, 49].  Tensor sizes: [7, 0, 53, 49]
2025-03-05 15:23:06.191898 test begin: paddle.broadcast_to(Tensor([7, 0, 53, 53],"bool"), list[7,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 53, 53],"bool"), list[7,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 53, 53].  Tensor sizes: [7, 0, 53, 53]
2025-03-05 15:23:06.192723 test begin: paddle.broadcast_to(Tensor([7, 0, 54, 153],"bool"), list[7,8,54,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 54, 153],"bool"), list[7,8,54,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 54, 153].  Tensor sizes: [7, 0, 54, 153]
2025-03-05 15:23:06.193492 test begin: paddle.broadcast_to(Tensor([7, 0, 54, 54],"bool"), list[7,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 54, 54],"bool"), list[7,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 54, 54].  Tensor sizes: [7, 0, 54, 54]
2025-03-05 15:23:06.194190 test begin: paddle.broadcast_to(Tensor([7, 0, 55, 153],"bool"), list[7,8,55,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 55, 153],"bool"), list[7,8,55,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 55, 153].  Tensor sizes: [7, 0, 55, 153]
2025-03-05 15:23:06.194811 test begin: paddle.broadcast_to(Tensor([7, 0, 55, 55],"bool"), list[7,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 55, 55],"bool"), list[7,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 55, 55].  Tensor sizes: [7, 0, 55, 55]
2025-03-05 15:23:06.195922 test begin: paddle.broadcast_to(Tensor([7, 0, 56, 153],"bool"), list[7,8,56,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 56, 153],"bool"), list[7,8,56,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 56, 153].  Tensor sizes: [7, 0, 56, 153]
2025-03-05 15:23:06.196566 test begin: paddle.broadcast_to(Tensor([7, 0, 56, 56],"bool"), list[7,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 56, 56],"bool"), list[7,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 56, 56].  Tensor sizes: [7, 0, 56, 56]
2025-03-05 15:23:06.197190 test begin: paddle.broadcast_to(Tensor([7, 0, 57, 153],"bool"), list[7,8,57,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 57, 153],"bool"), list[7,8,57,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 57, 153].  Tensor sizes: [7, 0, 57, 153]
2025-03-05 15:23:06.197803 test begin: paddle.broadcast_to(Tensor([7, 0, 57, 57],"bool"), list[7,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 57, 57],"bool"), list[7,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 57, 57].  Tensor sizes: [7, 0, 57, 57]
2025-03-05 15:23:06.198539 test begin: paddle.broadcast_to(Tensor([7, 0, 58, 153],"bool"), list[7,8,58,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 58, 153],"bool"), list[7,8,58,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 58, 153].  Tensor sizes: [7, 0, 58, 153]
2025-03-05 15:23:06.199199 test begin: paddle.broadcast_to(Tensor([7, 0, 58, 58],"bool"), list[7,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 58, 58],"bool"), list[7,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 58, 58].  Tensor sizes: [7, 0, 58, 58]
2025-03-05 15:23:06.199745 test begin: paddle.broadcast_to(Tensor([7, 0, 59, 153],"bool"), list[7,8,59,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 59, 153],"bool"), list[7,8,59,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 59, 153].  Tensor sizes: [7, 0, 59, 153]
2025-03-05 15:23:06.200337 test begin: paddle.broadcast_to(Tensor([7, 0, 59, 59],"bool"), list[7,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 59, 59],"bool"), list[7,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 59, 59].  Tensor sizes: [7, 0, 59, 59]
2025-03-05 15:23:06.200878 test begin: paddle.broadcast_to(Tensor([7, 0, 6, 153],"bool"), list[7,8,6,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 6, 153],"bool"), list[7,8,6,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 6, 153].  Tensor sizes: [7, 0, 6, 153]
2025-03-05 15:23:06.201398 test begin: paddle.broadcast_to(Tensor([7, 0, 6, 49],"bool"), list[7,8,6,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 6, 49],"bool"), list[7,8,6,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 6, 49].  Tensor sizes: [7, 0, 6, 49]
2025-03-05 15:23:06.201969 test begin: paddle.broadcast_to(Tensor([7, 0, 6, 6],"bool"), list[7,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 6, 6],"bool"), list[7,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 6, 6].  Tensor sizes: [7, 0, 6, 6]
2025-03-05 15:23:06.203174 test begin: paddle.broadcast_to(Tensor([7, 0, 60, 153],"bool"), list[7,8,60,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 60, 153],"bool"), list[7,8,60,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 60, 153].  Tensor sizes: [7, 0, 60, 153]
2025-03-05 15:23:06.203995 test begin: paddle.broadcast_to(Tensor([7, 0, 60, 60],"bool"), list[7,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 60, 60],"bool"), list[7,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 60, 60].  Tensor sizes: [7, 0, 60, 60]
2025-03-05 15:23:06.204995 test begin: paddle.broadcast_to(Tensor([7, 0, 61, 153],"bool"), list[7,8,61,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 61, 153],"bool"), list[7,8,61,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 61, 153].  Tensor sizes: [7, 0, 61, 153]
2025-03-05 15:23:06.206166 test begin: paddle.broadcast_to(Tensor([7, 0, 61, 61],"bool"), list[7,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 61, 61],"bool"), list[7,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 61, 61].  Tensor sizes: [7, 0, 61, 61]
2025-03-05 15:23:06.207318 test begin: paddle.broadcast_to(Tensor([7, 0, 62, 153],"bool"), list[7,8,62,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 62, 153],"bool"), list[7,8,62,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 62, 153].  Tensor sizes: [7, 0, 62, 153]
2025-03-05 15:23:06.208132 test begin: paddle.broadcast_to(Tensor([7, 0, 62, 62],"bool"), list[7,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 62, 62],"bool"), list[7,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 62, 62].  Tensor sizes: [7, 0, 62, 62]
2025-03-05 15:23:06.208907 test begin: paddle.broadcast_to(Tensor([7, 0, 63, 153],"bool"), list[7,8,63,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 63, 153],"bool"), list[7,8,63,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 63, 153].  Tensor sizes: [7, 0, 63, 153]
2025-03-05 15:23:06.209490 test begin: paddle.broadcast_to(Tensor([7, 0, 63, 63],"bool"), list[7,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 63, 63],"bool"), list[7,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 63, 63].  Tensor sizes: [7, 0, 63, 63]
2025-03-05 15:23:06.210060 test begin: paddle.broadcast_to(Tensor([7, 0, 64, 153],"bool"), list[7,8,64,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 64, 153],"bool"), list[7,8,64,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 64, 153].  Tensor sizes: [7, 0, 64, 153]
2025-03-05 15:23:06.210627 test begin: paddle.broadcast_to(Tensor([7, 0, 64, 64],"bool"), list[7,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 64, 64],"bool"), list[7,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 64, 64].  Tensor sizes: [7, 0, 64, 64]
2025-03-05 15:23:06.211189 test begin: paddle.broadcast_to(Tensor([7, 0, 65, 153],"bool"), list[7,8,65,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 65, 153],"bool"), list[7,8,65,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 65, 153].  Tensor sizes: [7, 0, 65, 153]
2025-03-05 15:23:06.211770 test begin: paddle.broadcast_to(Tensor([7, 0, 65, 65],"bool"), list[7,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 65, 65],"bool"), list[7,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 65, 65].  Tensor sizes: [7, 0, 65, 65]
2025-03-05 15:23:06.213614 test begin: paddle.broadcast_to(Tensor([7, 0, 66, 153],"bool"), list[7,8,66,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 66, 153],"bool"), list[7,8,66,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 66, 153].  Tensor sizes: [7, 0, 66, 153]
2025-03-05 15:23:06.214340 test begin: paddle.broadcast_to(Tensor([7, 0, 66, 66],"bool"), list[7,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 66, 66],"bool"), list[7,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 66, 66].  Tensor sizes: [7, 0, 66, 66]
2025-03-05 15:23:06.214936 test begin: paddle.broadcast_to(Tensor([7, 0, 67, 153],"bool"), list[7,8,67,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 67, 153],"bool"), list[7,8,67,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 67, 153].  Tensor sizes: [7, 0, 67, 153]
2025-03-05 15:23:06.215517 test begin: paddle.broadcast_to(Tensor([7, 0, 67, 67],"bool"), list[7,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 67, 67],"bool"), list[7,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 67, 67].  Tensor sizes: [7, 0, 67, 67]
2025-03-05 15:23:06.216119 test begin: paddle.broadcast_to(Tensor([7, 0, 68, 153],"bool"), list[7,8,68,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 68, 153],"bool"), list[7,8,68,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 68, 153].  Tensor sizes: [7, 0, 68, 153]
2025-03-05 15:23:06.216694 test begin: paddle.broadcast_to(Tensor([7, 0, 68, 68],"bool"), list[7,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 68, 68],"bool"), list[7,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 68, 68].  Tensor sizes: [7, 0, 68, 68]
2025-03-05 15:23:06.217387 test begin: paddle.broadcast_to(Tensor([7, 0, 69, 153],"bool"), list[7,8,69,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 69, 153],"bool"), list[7,8,69,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 69, 153].  Tensor sizes: [7, 0, 69, 153]
2025-03-05 15:23:06.218028 test begin: paddle.broadcast_to(Tensor([7, 0, 69, 69],"bool"), list[7,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 69, 69],"bool"), list[7,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 69, 69].  Tensor sizes: [7, 0, 69, 69]
2025-03-05 15:23:06.218984 test begin: paddle.broadcast_to(Tensor([7, 0, 7, 153],"bool"), list[7,8,7,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 7, 153],"bool"), list[7,8,7,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 7, 153].  Tensor sizes: [7, 0, 7, 153]
2025-03-05 15:23:06.219723 test begin: paddle.broadcast_to(Tensor([7, 0, 7, 49],"bool"), list[7,8,7,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 7, 49],"bool"), list[7,8,7,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 7, 49].  Tensor sizes: [7, 0, 7, 49]
2025-03-05 15:23:06.220337 test begin: paddle.broadcast_to(Tensor([7, 0, 7, 7],"bool"), list[7,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 7, 7],"bool"), list[7,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 7, 7].  Tensor sizes: [7, 0, 7, 7]
2025-03-05 15:23:06.220885 test begin: paddle.broadcast_to(Tensor([7, 0, 70, 153],"bool"), list[7,8,70,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 70, 153],"bool"), list[7,8,70,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 70, 153].  Tensor sizes: [7, 0, 70, 153]
2025-03-05 15:23:06.221513 test begin: paddle.broadcast_to(Tensor([7, 0, 70, 70],"bool"), list[7,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 70, 70],"bool"), list[7,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 70, 70].  Tensor sizes: [7, 0, 70, 70]
2025-03-05 15:23:06.222116 test begin: paddle.broadcast_to(Tensor([7, 0, 71, 153],"bool"), list[7,8,71,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 71, 153],"bool"), list[7,8,71,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 71, 153].  Tensor sizes: [7, 0, 71, 153]
2025-03-05 15:23:06.222658 test begin: paddle.broadcast_to(Tensor([7, 0, 71, 71],"bool"), list[7,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 71, 71],"bool"), list[7,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 71, 71].  Tensor sizes: [7, 0, 71, 71]
2025-03-05 15:23:06.223212 test begin: paddle.broadcast_to(Tensor([7, 0, 72, 153],"bool"), list[7,8,72,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 72, 153],"bool"), list[7,8,72,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 72, 153].  Tensor sizes: [7, 0, 72, 153]
2025-03-05 15:23:06.224612 test begin: paddle.broadcast_to(Tensor([7, 0, 72, 72],"bool"), list[7,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 72, 72],"bool"), list[7,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 72, 72].  Tensor sizes: [7, 0, 72, 72]
2025-03-05 15:23:06.225271 test begin: paddle.broadcast_to(Tensor([7, 0, 73, 153],"bool"), list[7,8,73,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 73, 153],"bool"), list[7,8,73,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 73, 153].  Tensor sizes: [7, 0, 73, 153]
2025-03-05 15:23:06.225879 test begin: paddle.broadcast_to(Tensor([7, 0, 73, 73],"bool"), list[7,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 73, 73],"bool"), list[7,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 73, 73].  Tensor sizes: [7, 0, 73, 73]
2025-03-05 15:23:06.226449 test begin: paddle.broadcast_to(Tensor([7, 0, 74, 153],"bool"), list[7,8,74,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 74, 153],"bool"), list[7,8,74,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 74, 153].  Tensor sizes: [7, 0, 74, 153]
2025-03-05 15:23:06.227507 test begin: paddle.broadcast_to(Tensor([7, 0, 74, 74],"bool"), list[7,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 74, 74],"bool"), list[7,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 74, 74].  Tensor sizes: [7, 0, 74, 74]
2025-03-05 15:23:06.228088 test begin: paddle.broadcast_to(Tensor([7, 0, 75, 153],"bool"), list[7,8,75,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 75, 153],"bool"), list[7,8,75,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 75, 153].  Tensor sizes: [7, 0, 75, 153]
2025-03-05 15:23:06.228696 test begin: paddle.broadcast_to(Tensor([7, 0, 75, 75],"bool"), list[7,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 75, 75],"bool"), list[7,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 75, 75].  Tensor sizes: [7, 0, 75, 75]
2025-03-05 15:23:06.229258 test begin: paddle.broadcast_to(Tensor([7, 0, 76, 153],"bool"), list[7,8,76,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 76, 153],"bool"), list[7,8,76,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 76, 153].  Tensor sizes: [7, 0, 76, 153]
2025-03-05 15:23:06.229800 test begin: paddle.broadcast_to(Tensor([7, 0, 76, 76],"bool"), list[7,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 76, 76],"bool"), list[7,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 76, 76].  Tensor sizes: [7, 0, 76, 76]
2025-03-05 15:23:06.230350 test begin: paddle.broadcast_to(Tensor([7, 0, 77, 153],"bool"), list[7,8,77,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 77, 153],"bool"), list[7,8,77,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 77, 153].  Tensor sizes: [7, 0, 77, 153]
2025-03-05 15:23:06.231140 test begin: paddle.broadcast_to(Tensor([7, 0, 77, 77],"bool"), list[7,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 77, 77],"bool"), list[7,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 77, 77].  Tensor sizes: [7, 0, 77, 77]
2025-03-05 15:23:06.232091 test begin: paddle.broadcast_to(Tensor([7, 0, 78, 153],"bool"), list[7,8,78,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 78, 153],"bool"), list[7,8,78,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 78, 153].  Tensor sizes: [7, 0, 78, 153]
2025-03-05 15:23:06.232976 test begin: paddle.broadcast_to(Tensor([7, 0, 78, 78],"bool"), list[7,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 78, 78],"bool"), list[7,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 78, 78].  Tensor sizes: [7, 0, 78, 78]
2025-03-05 15:23:06.233566 test begin: paddle.broadcast_to(Tensor([7, 0, 79, 153],"bool"), list[7,8,79,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 79, 153],"bool"), list[7,8,79,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 79, 153].  Tensor sizes: [7, 0, 79, 153]
2025-03-05 15:23:06.234291 test begin: paddle.broadcast_to(Tensor([7, 0, 79, 79],"bool"), list[7,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 79, 79],"bool"), list[7,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 79, 79].  Tensor sizes: [7, 0, 79, 79]
2025-03-05 15:23:06.235931 test begin: paddle.broadcast_to(Tensor([7, 0, 8, 153],"bool"), list[7,8,8,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 8, 153],"bool"), list[7,8,8,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 8, 153].  Tensor sizes: [7, 0, 8, 153]
2025-03-05 15:23:06.236579 test begin: paddle.broadcast_to(Tensor([7, 0, 8, 49],"bool"), list[7,8,8,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 8, 49],"bool"), list[7,8,8,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 8, 49].  Tensor sizes: [7, 0, 8, 49]
2025-03-05 15:23:06.237162 test begin: paddle.broadcast_to(Tensor([7, 0, 8, 8],"bool"), list[7,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 8, 8],"bool"), list[7,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 8, 8].  Tensor sizes: [7, 0, 8, 8]
2025-03-05 15:23:06.238387 test begin: paddle.broadcast_to(Tensor([7, 0, 80, 153],"bool"), list[7,8,80,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 80, 153],"bool"), list[7,8,80,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 80, 153].  Tensor sizes: [7, 0, 80, 153]
2025-03-05 15:23:06.239026 test begin: paddle.broadcast_to(Tensor([7, 0, 80, 80],"bool"), list[7,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 80, 80],"bool"), list[7,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 80, 80].  Tensor sizes: [7, 0, 80, 80]
2025-03-05 15:23:06.239634 test begin: paddle.broadcast_to(Tensor([7, 0, 81, 153],"bool"), list[7,8,81,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 81, 153],"bool"), list[7,8,81,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 81, 153].  Tensor sizes: [7, 0, 81, 153]
2025-03-05 15:23:06.240260 test begin: paddle.broadcast_to(Tensor([7, 0, 81, 81],"bool"), list[7,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 81, 81],"bool"), list[7,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 81, 81].  Tensor sizes: [7, 0, 81, 81]
2025-03-05 15:23:06.240830 test begin: paddle.broadcast_to(Tensor([7, 0, 82, 153],"bool"), list[7,8,82,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 82, 153],"bool"), list[7,8,82,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 82, 153].  Tensor sizes: [7, 0, 82, 153]
2025-03-05 15:23:06.241374 test begin: paddle.broadcast_to(Tensor([7, 0, 82, 82],"bool"), list[7,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 82, 82],"bool"), list[7,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 82, 82].  Tensor sizes: [7, 0, 82, 82]
2025-03-05 15:23:06.241905 test begin: paddle.broadcast_to(Tensor([7, 0, 83, 153],"bool"), list[7,8,83,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 83, 153],"bool"), list[7,8,83,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 83, 153].  Tensor sizes: [7, 0, 83, 153]
2025-03-05 15:23:06.242438 test begin: paddle.broadcast_to(Tensor([7, 0, 83, 83],"bool"), list[7,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 83, 83],"bool"), list[7,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 83, 83].  Tensor sizes: [7, 0, 83, 83]
2025-03-05 15:23:06.242948 test begin: paddle.broadcast_to(Tensor([7, 0, 84, 153],"bool"), list[7,8,84,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 84, 153],"bool"), list[7,8,84,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 84, 153].  Tensor sizes: [7, 0, 84, 153]
2025-03-05 15:23:06.243466 test begin: paddle.broadcast_to(Tensor([7, 0, 84, 84],"bool"), list[7,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 84, 84],"bool"), list[7,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 84, 84].  Tensor sizes: [7, 0, 84, 84]
2025-03-05 15:23:06.243991 test begin: paddle.broadcast_to(Tensor([7, 0, 85, 153],"bool"), list[7,8,85,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 85, 153],"bool"), list[7,8,85,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 85, 153].  Tensor sizes: [7, 0, 85, 153]
2025-03-05 15:23:06.244497 test begin: paddle.broadcast_to(Tensor([7, 0, 85, 85],"bool"), list[7,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 85, 85],"bool"), list[7,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 85, 85].  Tensor sizes: [7, 0, 85, 85]
2025-03-05 15:23:06.245009 test begin: paddle.broadcast_to(Tensor([7, 0, 86, 153],"bool"), list[7,8,86,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 86, 153],"bool"), list[7,8,86,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 86, 153].  Tensor sizes: [7, 0, 86, 153]
2025-03-05 15:23:06.245503 test begin: paddle.broadcast_to(Tensor([7, 0, 86, 86],"bool"), list[7,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 86, 86],"bool"), list[7,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 86, 86].  Tensor sizes: [7, 0, 86, 86]
2025-03-05 15:23:06.246471 test begin: paddle.broadcast_to(Tensor([7, 0, 87, 153],"bool"), list[7,8,87,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 87, 153],"bool"), list[7,8,87,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 87, 153].  Tensor sizes: [7, 0, 87, 153]
2025-03-05 15:23:06.247008 test begin: paddle.broadcast_to(Tensor([7, 0, 87, 87],"bool"), list[7,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 87, 87],"bool"), list[7,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 87, 87].  Tensor sizes: [7, 0, 87, 87]
2025-03-05 15:23:06.247574 test begin: paddle.broadcast_to(Tensor([7, 0, 88, 153],"bool"), list[7,8,88,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 88, 153],"bool"), list[7,8,88,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 88, 153].  Tensor sizes: [7, 0, 88, 153]
2025-03-05 15:23:06.248364 test begin: paddle.broadcast_to(Tensor([7, 0, 88, 88],"bool"), list[7,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 88, 88],"bool"), list[7,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 88, 88].  Tensor sizes: [7, 0, 88, 88]
2025-03-05 15:23:06.249158 test begin: paddle.broadcast_to(Tensor([7, 0, 89, 153],"bool"), list[7,8,89,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 89, 153],"bool"), list[7,8,89,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 89, 153].  Tensor sizes: [7, 0, 89, 153]
2025-03-05 15:23:06.249813 test begin: paddle.broadcast_to(Tensor([7, 0, 89, 89],"bool"), list[7,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 89, 89],"bool"), list[7,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 89, 89].  Tensor sizes: [7, 0, 89, 89]
2025-03-05 15:23:06.250411 test begin: paddle.broadcast_to(Tensor([7, 0, 9, 153],"bool"), list[7,8,9,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 9, 153],"bool"), list[7,8,9,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 9, 153].  Tensor sizes: [7, 0, 9, 153]
2025-03-05 15:23:06.251037 test begin: paddle.broadcast_to(Tensor([7, 0, 9, 49],"bool"), list[7,8,9,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 9, 49],"bool"), list[7,8,9,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 9, 49].  Tensor sizes: [7, 0, 9, 49]
2025-03-05 15:23:06.251623 test begin: paddle.broadcast_to(Tensor([7, 0, 9, 9],"bool"), list[7,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 9, 9],"bool"), list[7,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 9, 9].  Tensor sizes: [7, 0, 9, 9]
2025-03-05 15:23:06.252159 test begin: paddle.broadcast_to(Tensor([7, 0, 90, 153],"bool"), list[7,8,90,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 90, 153],"bool"), list[7,8,90,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 90, 153].  Tensor sizes: [7, 0, 90, 153]
2025-03-05 15:23:06.252813 test begin: paddle.broadcast_to(Tensor([7, 0, 90, 90],"bool"), list[7,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 90, 90],"bool"), list[7,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 90, 90].  Tensor sizes: [7, 0, 90, 90]
2025-03-05 15:23:06.253378 test begin: paddle.broadcast_to(Tensor([7, 0, 91, 153],"bool"), list[7,8,91,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 91, 153],"bool"), list[7,8,91,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 91, 153].  Tensor sizes: [7, 0, 91, 153]
2025-03-05 15:23:06.253927 test begin: paddle.broadcast_to(Tensor([7, 0, 91, 91],"bool"), list[7,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 91, 91],"bool"), list[7,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 91, 91].  Tensor sizes: [7, 0, 91, 91]
2025-03-05 15:23:06.254484 test begin: paddle.broadcast_to(Tensor([7, 0, 92, 153],"bool"), list[7,8,92,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 92, 153],"bool"), list[7,8,92,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 92, 153].  Tensor sizes: [7, 0, 92, 153]
2025-03-05 15:23:06.255040 test begin: paddle.broadcast_to(Tensor([7, 0, 92, 92],"bool"), list[7,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 92, 92],"bool"), list[7,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 92, 92].  Tensor sizes: [7, 0, 92, 92]
2025-03-05 15:23:06.255607 test begin: paddle.broadcast_to(Tensor([7, 0, 93, 153],"bool"), list[7,8,93,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 93, 153],"bool"), list[7,8,93,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 93, 153].  Tensor sizes: [7, 0, 93, 153]
2025-03-05 15:23:06.256196 test begin: paddle.broadcast_to(Tensor([7, 0, 93, 93],"bool"), list[7,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 93, 93],"bool"), list[7,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 93, 93].  Tensor sizes: [7, 0, 93, 93]
2025-03-05 15:23:06.256814 test begin: paddle.broadcast_to(Tensor([7, 0, 94, 153],"bool"), list[7,8,94,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 94, 153],"bool"), list[7,8,94,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 94, 153].  Tensor sizes: [7, 0, 94, 153]
2025-03-05 15:23:06.257354 test begin: paddle.broadcast_to(Tensor([7, 0, 94, 94],"bool"), list[7,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 94, 94],"bool"), list[7,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 94, 94].  Tensor sizes: [7, 0, 94, 94]
2025-03-05 15:23:06.257879 test begin: paddle.broadcast_to(Tensor([7, 0, 95, 153],"bool"), list[7,8,95,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 95, 153],"bool"), list[7,8,95,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 95, 153].  Tensor sizes: [7, 0, 95, 153]
2025-03-05 15:23:06.258484 test begin: paddle.broadcast_to(Tensor([7, 0, 95, 95],"bool"), list[7,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 95, 95],"bool"), list[7,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 95, 95].  Tensor sizes: [7, 0, 95, 95]
2025-03-05 15:23:06.259067 test begin: paddle.broadcast_to(Tensor([7, 0, 96, 153],"bool"), list[7,8,96,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 96, 153],"bool"), list[7,8,96,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 96, 153].  Tensor sizes: [7, 0, 96, 153]
2025-03-05 15:23:06.259641 test begin: paddle.broadcast_to(Tensor([7, 0, 96, 96],"bool"), list[7,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 96, 96],"bool"), list[7,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 96, 96].  Tensor sizes: [7, 0, 96, 96]
2025-03-05 15:23:06.260187 test begin: paddle.broadcast_to(Tensor([7, 0, 97, 153],"bool"), list[7,8,97,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 97, 153],"bool"), list[7,8,97,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 97, 153].  Tensor sizes: [7, 0, 97, 153]
2025-03-05 15:23:06.260720 test begin: paddle.broadcast_to(Tensor([7, 0, 97, 97],"bool"), list[7,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 97, 97],"bool"), list[7,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 97, 97].  Tensor sizes: [7, 0, 97, 97]
2025-03-05 15:23:06.261830 test begin: paddle.broadcast_to(Tensor([7, 0, 98, 153],"bool"), list[7,8,98,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 98, 153],"bool"), list[7,8,98,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 98, 153].  Tensor sizes: [7, 0, 98, 153]
2025-03-05 15:23:06.262368 test begin: paddle.broadcast_to(Tensor([7, 0, 98, 98],"bool"), list[7,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 98, 98],"bool"), list[7,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 98, 98].  Tensor sizes: [7, 0, 98, 98]
2025-03-05 15:23:06.262900 test begin: paddle.broadcast_to(Tensor([7, 0, 99, 153],"bool"), list[7,8,99,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 99, 153],"bool"), list[7,8,99,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 99, 153].  Tensor sizes: [7, 0, 99, 153]
2025-03-05 15:23:06.263462 test begin: paddle.broadcast_to(Tensor([7, 0, 99, 99],"bool"), list[7,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([7, 0, 99, 99],"bool"), list[7,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 8, 99, 99].  Tensor sizes: [7, 0, 99, 99]
2025-03-05 15:23:06.264031 test begin: paddle.broadcast_to(Tensor([7, 0],"bool"), list[7,2,], )

[torch error] paddle.broadcast_to(Tensor([7, 0],"bool"), list[7,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 2].  Tensor sizes: [7, 0]
2025-03-05 15:23:06.264536 test begin: paddle.broadcast_to(Tensor([7, 0],"float32"), tuple(7,799,), )

[torch error] paddle.broadcast_to(Tensor([7, 0],"float32"), tuple(7,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 799].  Tensor sizes: [7, 0]
2025-03-05 15:23:06.265129 test begin: paddle.broadcast_to(Tensor([7, 0],"float64"), tuple(7,24,), )

[torch error] paddle.broadcast_to(Tensor([7, 0],"float64"), tuple(7,24,), ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 24].  Tensor sizes: [7, 0]
2025-03-05 15:23:06.265675 test begin: paddle.broadcast_to(Tensor([7, 0],"int32"), tuple(7,1,), )

[torch error] paddle.broadcast_to(Tensor([7, 0],"int32"), tuple(7,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 1].  Tensor sizes: [7, 0]
2025-03-05 15:23:06.266251 test begin: paddle.broadcast_to(Tensor([7, 0],"int64"), tuple(7,799,), )

[torch error] paddle.broadcast_to(Tensor([7, 0],"int64"), tuple(7,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [7, 799].  Tensor sizes: [7, 0]
2025-03-05 15:23:06.266789 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 100],"bool"), list[7,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 100],"bool"), list[7,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 100, 100].  Tensor sizes: [7, 1, 0, 100]
2025-03-05 15:23:06.267354 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 101],"bool"), list[7,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 101],"bool"), list[7,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 101, 101].  Tensor sizes: [7, 1, 0, 101]
2025-03-05 15:23:06.267991 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 102],"bool"), list[7,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 102],"bool"), list[7,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 102, 102].  Tensor sizes: [7, 1, 0, 102]
2025-03-05 15:23:06.268633 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 103],"bool"), list[7,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 103],"bool"), list[7,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 103, 103].  Tensor sizes: [7, 1, 0, 103]
2025-03-05 15:23:06.269160 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 104],"bool"), list[7,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 104],"bool"), list[7,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 104, 104].  Tensor sizes: [7, 1, 0, 104]
2025-03-05 15:23:06.269690 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 105],"bool"), list[7,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 105],"bool"), list[7,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 105, 105].  Tensor sizes: [7, 1, 0, 105]
2025-03-05 15:23:06.270204 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 106],"bool"), list[7,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 106],"bool"), list[7,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 106, 106].  Tensor sizes: [7, 1, 0, 106]
2025-03-05 15:23:06.270769 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 107],"bool"), list[7,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 107],"bool"), list[7,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 107, 107].  Tensor sizes: [7, 1, 0, 107]
2025-03-05 15:23:06.271293 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 108],"bool"), list[7,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 108],"bool"), list[7,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 108, 108].  Tensor sizes: [7, 1, 0, 108]
2025-03-05 15:23:06.271818 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 109],"bool"), list[7,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 109],"bool"), list[7,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 109, 109].  Tensor sizes: [7, 1, 0, 109]
2025-03-05 15:23:06.272320 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 10],"bool"), list[7,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 10],"bool"), list[7,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 10, 10].  Tensor sizes: [7, 1, 0, 10]
2025-03-05 15:23:06.272839 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 110],"bool"), list[7,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 110],"bool"), list[7,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 110, 110].  Tensor sizes: [7, 1, 0, 110]
2025-03-05 15:23:06.273346 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 111],"bool"), list[7,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 111],"bool"), list[7,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 111, 111].  Tensor sizes: [7, 1, 0, 111]
2025-03-05 15:23:06.273862 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 112],"bool"), list[7,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 112],"bool"), list[7,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 112, 112].  Tensor sizes: [7, 1, 0, 112]
2025-03-05 15:23:06.274371 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 113],"bool"), list[7,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 113],"bool"), list[7,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 113, 113].  Tensor sizes: [7, 1, 0, 113]
2025-03-05 15:23:06.274896 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 114],"bool"), list[7,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 114],"bool"), list[7,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 114, 114].  Tensor sizes: [7, 1, 0, 114]
2025-03-05 15:23:06.275409 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 115],"bool"), list[7,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 115],"bool"), list[7,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 115, 115].  Tensor sizes: [7, 1, 0, 115]
2025-03-05 15:23:06.275921 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 116],"bool"), list[7,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 116],"bool"), list[7,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 116, 116].  Tensor sizes: [7, 1, 0, 116]
2025-03-05 15:23:06.276422 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 117],"bool"), list[7,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 117],"bool"), list[7,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 117, 117].  Tensor sizes: [7, 1, 0, 117]
2025-03-05 15:23:06.276933 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 118],"bool"), list[7,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 118],"bool"), list[7,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 118, 118].  Tensor sizes: [7, 1, 0, 118]
2025-03-05 15:23:06.277427 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 119],"bool"), list[7,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 119],"bool"), list[7,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 119, 119].  Tensor sizes: [7, 1, 0, 119]
2025-03-05 15:23:06.277934 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 11],"bool"), list[7,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 11],"bool"), list[7,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 11, 11].  Tensor sizes: [7, 1, 0, 11]
2025-03-05 15:23:06.278434 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 120],"bool"), list[7,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 120],"bool"), list[7,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 120, 120].  Tensor sizes: [7, 1, 0, 120]
2025-03-05 15:23:06.278944 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 121],"bool"), list[7,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 121],"bool"), list[7,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 121, 121].  Tensor sizes: [7, 1, 0, 121]
2025-03-05 15:23:06.279449 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 122],"bool"), list[7,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 122],"bool"), list[7,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 122, 122].  Tensor sizes: [7, 1, 0, 122]
2025-03-05 15:23:06.280020 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 123],"bool"), list[7,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 123],"bool"), list[7,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 123, 123].  Tensor sizes: [7, 1, 0, 123]
2025-03-05 15:23:06.280537 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 124],"bool"), list[7,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 124],"bool"), list[7,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 124, 124].  Tensor sizes: [7, 1, 0, 124]
2025-03-05 15:23:06.281065 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 125],"bool"), list[7,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 125],"bool"), list[7,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 125, 125].  Tensor sizes: [7, 1, 0, 125]
2025-03-05 15:23:06.281564 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 126],"bool"), list[7,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 126],"bool"), list[7,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 126, 126].  Tensor sizes: [7, 1, 0, 126]
2025-03-05 15:23:06.282088 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 127],"bool"), list[7,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 127],"bool"), list[7,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 127, 127].  Tensor sizes: [7, 1, 0, 127]
2025-03-05 15:23:06.282612 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 128],"bool"), list[7,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 128],"bool"), list[7,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 128, 128].  Tensor sizes: [7, 1, 0, 128]
2025-03-05 15:23:06.283125 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 129],"bool"), list[7,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 129],"bool"), list[7,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 129, 129].  Tensor sizes: [7, 1, 0, 129]
2025-03-05 15:23:06.283627 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 12],"bool"), list[7,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 12],"bool"), list[7,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 12, 12].  Tensor sizes: [7, 1, 0, 12]
2025-03-05 15:23:06.284144 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 130],"bool"), list[7,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 130],"bool"), list[7,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 130, 130].  Tensor sizes: [7, 1, 0, 130]
2025-03-05 15:23:06.284661 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 131],"bool"), list[7,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 131],"bool"), list[7,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 131, 131].  Tensor sizes: [7, 1, 0, 131]
2025-03-05 15:23:06.285165 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 132],"bool"), list[7,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 132],"bool"), list[7,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 132, 132].  Tensor sizes: [7, 1, 0, 132]
2025-03-05 15:23:06.285681 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 133],"bool"), list[7,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 133],"bool"), list[7,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 133, 133].  Tensor sizes: [7, 1, 0, 133]
2025-03-05 15:23:06.286181 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 134],"bool"), list[7,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 134],"bool"), list[7,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 134, 134].  Tensor sizes: [7, 1, 0, 134]
2025-03-05 15:23:06.286721 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 135],"bool"), list[7,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 135],"bool"), list[7,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 135, 135].  Tensor sizes: [7, 1, 0, 135]
2025-03-05 15:23:06.287272 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 136],"bool"), list[7,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 136],"bool"), list[7,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 136, 136].  Tensor sizes: [7, 1, 0, 136]
2025-03-05 15:23:06.287803 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 137],"bool"), list[7,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 137],"bool"), list[7,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 137, 137].  Tensor sizes: [7, 1, 0, 137]
2025-03-05 15:23:06.288370 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 138],"bool"), list[7,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 138],"bool"), list[7,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 138, 138].  Tensor sizes: [7, 1, 0, 138]
2025-03-05 15:23:06.288994 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 139],"bool"), list[7,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 139],"bool"), list[7,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 139, 139].  Tensor sizes: [7, 1, 0, 139]
2025-03-05 15:23:06.289515 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 13],"bool"), list[7,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 13],"bool"), list[7,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 13, 13].  Tensor sizes: [7, 1, 0, 13]
2025-03-05 15:23:06.290036 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 140],"bool"), list[7,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 140],"bool"), list[7,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 140, 140].  Tensor sizes: [7, 1, 0, 140]
2025-03-05 15:23:06.290542 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 141],"bool"), list[7,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 141],"bool"), list[7,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 141, 141].  Tensor sizes: [7, 1, 0, 141]
2025-03-05 15:23:06.291070 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 142],"bool"), list[7,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 142],"bool"), list[7,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 142, 142].  Tensor sizes: [7, 1, 0, 142]
2025-03-05 15:23:06.291604 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 143],"bool"), list[7,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 143],"bool"), list[7,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 143, 143].  Tensor sizes: [7, 1, 0, 143]
2025-03-05 15:23:06.292163 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 144],"bool"), list[7,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 144],"bool"), list[7,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 144, 144].  Tensor sizes: [7, 1, 0, 144]
2025-03-05 15:23:06.292695 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 145],"bool"), list[7,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 145],"bool"), list[7,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 145, 145].  Tensor sizes: [7, 1, 0, 145]
2025-03-05 15:23:06.293224 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 146],"bool"), list[7,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 146],"bool"), list[7,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 146, 146].  Tensor sizes: [7, 1, 0, 146]
2025-03-05 15:23:06.293735 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 147],"bool"), list[7,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 147],"bool"), list[7,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 147, 147].  Tensor sizes: [7, 1, 0, 147]
2025-03-05 15:23:06.294235 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 148],"bool"), list[7,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 148],"bool"), list[7,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 148, 148].  Tensor sizes: [7, 1, 0, 148]
2025-03-05 15:23:06.294750 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 149],"bool"), list[7,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 149],"bool"), list[7,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 149, 149].  Tensor sizes: [7, 1, 0, 149]
2025-03-05 15:23:06.295252 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 14],"bool"), list[7,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 14],"bool"), list[7,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 14, 14].  Tensor sizes: [7, 1, 0, 14]
2025-03-05 15:23:06.295758 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 150],"bool"), list[7,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 150],"bool"), list[7,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 150, 150].  Tensor sizes: [7, 1, 0, 150]
2025-03-05 15:23:06.296265 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 151],"bool"), list[7,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 151],"bool"), list[7,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 151, 151].  Tensor sizes: [7, 1, 0, 151]
2025-03-05 15:23:06.297136 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 152],"bool"), list[7,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 152],"bool"), list[7,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 152, 152].  Tensor sizes: [7, 1, 0, 152]
2025-03-05 15:23:06.297836 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,1,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,1,153,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 1, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.298391 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,10,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,10,153,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 10, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.298942 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,100,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,100,153,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 100, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.299478 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,101,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,101,153,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 101, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.300016 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,102,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,102,153,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 102, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.300562 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,103,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,103,153,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 103, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.301123 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,104,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,104,153,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 104, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.301649 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,105,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,105,153,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 105, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.302397 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,106,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,106,153,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 106, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.303014 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,107,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,107,153,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 107, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.303629 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,108,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,108,153,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 108, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.304223 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,109,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,109,153,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 109, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.304818 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,11,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,11,153,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 11, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.305403 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,110,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,110,153,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 110, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.306000 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,111,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,111,153,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 111, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.306599 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,112,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,112,153,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 112, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.307197 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,113,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,113,153,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 113, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.307812 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,114,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,114,153,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 114, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.308456 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,115,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,115,153,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 115, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.309071 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,116,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,116,153,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 116, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.309640 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,117,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,117,153,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 117, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.310172 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,118,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,118,153,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 118, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.310694 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,119,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,119,153,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 119, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.311201 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,12,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,12,153,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 12, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.311717 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,120,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,120,153,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 120, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.312324 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,121,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,121,153,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 121, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.312872 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,122,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,122,153,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 122, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.313389 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,123,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,123,153,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 123, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.313907 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,124,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,124,153,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 124, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.314424 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,125,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,125,153,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 125, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.314936 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,126,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,126,153,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 126, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.315440 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,127,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,127,153,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 127, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.316042 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,128,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,128,153,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 128, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.316561 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,129,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,129,153,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 129, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.317093 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,13,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,13,153,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 13, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.317608 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,130,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,130,153,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 130, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.318135 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,131,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,131,153,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 131, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.318792 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,132,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,132,153,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 132, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.319305 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,133,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,133,153,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 133, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.319818 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,134,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,134,153,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 134, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.320324 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,135,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,135,153,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 135, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.320844 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,136,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,136,153,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 136, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.321451 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,137,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,137,153,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 137, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.322050 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,138,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,138,153,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 138, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.322708 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,139,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,139,153,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 139, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.323316 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,14,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,14,153,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 14, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.323916 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,140,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,140,153,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 140, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.324511 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,141,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,141,153,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 141, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.325115 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,142,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,142,153,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 142, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.325716 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,143,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,143,153,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 143, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.326296 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,144,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,144,153,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 144, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.326875 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,145,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,145,153,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 145, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.327485 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,146,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,146,153,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 146, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.328089 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,147,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,147,153,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 147, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.328621 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,148,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,148,153,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 148, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.329136 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,149,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,149,153,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 149, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.329729 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,15,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,15,153,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 15, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.330251 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,150,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,150,153,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 150, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.330773 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,151,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,151,153,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 151, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.331314 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,152,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,152,153,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 152, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.331832 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 153, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.332423 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,154,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,154,153,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 154, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.332976 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,155,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,155,153,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 155, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.333490 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,156,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,156,153,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 156, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.334027 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,157,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,157,153,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 157, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.334539 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,158,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,158,153,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 158, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.335054 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,159,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,159,153,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 159, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.335558 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,16,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,16,153,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 16, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.336078 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,160,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,160,153,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 160, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.336591 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,161,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,161,153,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 161, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.337099 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,162,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,162,153,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 162, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.337601 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,163,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,163,153,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 163, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.338103 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,164,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,164,153,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 164, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.338605 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,165,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,165,153,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 165, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.339123 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,166,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,166,153,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 166, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.339645 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,167,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,167,153,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 167, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.340152 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,168,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,168,153,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 168, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.340685 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,169,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,169,153,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 169, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.341263 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,17,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,17,153,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 17, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.341939 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,170,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,170,153,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 170, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.342679 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,171,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,171,153,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 171, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.343306 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,172,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,172,153,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 172, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.343912 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,173,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,173,153,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 173, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.344553 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,174,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,174,153,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 174, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.345162 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,175,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,175,153,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 175, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.345701 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,176,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,176,153,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 176, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.346232 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,177,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,177,153,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 177, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.346748 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,178,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,178,153,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 178, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.347264 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,179,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,179,153,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 179, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.347784 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,18,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,18,153,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 18, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.348298 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,180,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,180,153,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 180, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.348827 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,19,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,19,153,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 19, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.349348 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,2,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,2,153,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 2, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.349878 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,20,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,20,153,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 20, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.350403 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,21,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,21,153,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 21, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.350919 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,22,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,22,153,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 22, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.351437 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,23,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,23,153,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 23, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.351948 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,24,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,24,153,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 24, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.352458 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,25,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,25,153,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 25, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.352985 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,26,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,26,153,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 26, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.353527 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,27,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,27,153,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 27, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.354221 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,28,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,28,153,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 28, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.354842 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,29,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,29,153,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 29, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.355426 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,3,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,3,153,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 3, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.356033 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,30,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,30,153,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 30, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.356620 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,31,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,31,153,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 31, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.357249 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,32,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,32,153,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 32, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.357880 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,33,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,33,153,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 33, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.358478 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,34,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,34,153,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 34, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.359088 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,35,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,35,153,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 35, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.359680 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,36,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,36,153,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 36, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.360259 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,37,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,37,153,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 37, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.360851 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,38,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,38,153,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 38, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.361446 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,39,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,39,153,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 39, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.362051 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,4,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,4,153,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 4, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.362664 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,40,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,40,153,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 40, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.363260 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,41,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,41,153,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 41, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.363879 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,42,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,42,153,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 42, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.364477 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,43,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,43,153,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 43, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.365085 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,44,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,44,153,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 44, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.365674 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,45,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,45,153,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 45, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.366269 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,46,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,46,153,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 46, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.366861 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,47,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,47,153,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 47, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.367453 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,48,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,48,153,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 48, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.368053 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,49,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,49,153,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 49, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.368646 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,5,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,5,153,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 5, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.369248 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,50,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,50,153,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 50, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.369854 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,51,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,51,153,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 51, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.370446 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,52,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,52,153,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 52, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.371096 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,53,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,53,153,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 53, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.371684 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,54,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,54,153,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 54, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.372206 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,55,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,55,153,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 55, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.372741 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,56,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,56,153,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 56, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.373264 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,57,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,57,153,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 57, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.373781 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,58,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,58,153,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 58, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.374286 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,59,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,59,153,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 59, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.374799 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,6,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,6,153,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 6, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.375299 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,60,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,60,153,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 60, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.375864 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,61,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,61,153,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 61, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.376375 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,62,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,62,153,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 62, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.376892 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,63,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,63,153,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 63, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.377462 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,64,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,64,153,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 64, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.378215 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,65,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,65,153,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 65, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.378848 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,66,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,66,153,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 66, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.379450 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,67,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,67,153,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 67, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.380059 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,68,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,68,153,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 68, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.380655 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,69,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,69,153,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 69, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.381244 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,7,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,7,153,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 7, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.381864 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,70,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,70,153,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 70, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.382474 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,71,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,71,153,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 71, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.383083 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,72,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,72,153,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 72, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.383682 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,73,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,73,153,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 73, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.384271 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,74,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,74,153,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 74, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.384862 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,75,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,75,153,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 75, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.385453 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,76,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,76,153,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 76, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.386045 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,77,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,77,153,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 77, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.386666 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,78,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,78,153,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 78, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.387318 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,79,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,79,153,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 79, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.387931 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,8,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,8,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 8, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.388472 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,80,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,80,153,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 80, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.388995 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,81,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,81,153,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 81, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.389518 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,82,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,82,153,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 82, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.390036 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,83,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,83,153,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 83, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.390540 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,84,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,84,153,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 84, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.391054 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,85,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,85,153,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 85, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.391666 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,86,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,86,153,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 86, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.392182 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,87,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,87,153,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 87, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.392708 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,88,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,88,153,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 88, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.393221 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,89,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,89,153,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 89, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.393740 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,9,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,9,153,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 9, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.394247 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,90,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,90,153,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 90, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.394771 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,91,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,91,153,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 91, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.395329 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,92,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,92,153,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 92, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.396022 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,93,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,93,153,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 93, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.396638 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,94,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,94,153,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 94, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.397237 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,95,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,95,153,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 95, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.397895 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,96,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,96,153,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 96, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.398554 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,97,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,97,153,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 97, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.399172 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,98,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,98,153,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 98, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.399855 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,99,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 153],"bool"), list[7,8,99,153,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 99, 153].  Tensor sizes: [7, 1, 0, 153]
2025-03-05 15:23:06.400517 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 154],"bool"), list[7,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 154],"bool"), list[7,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 154, 154].  Tensor sizes: [7, 1, 0, 154]
2025-03-05 15:23:06.401141 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 155],"bool"), list[7,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 155],"bool"), list[7,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 155, 155].  Tensor sizes: [7, 1, 0, 155]
2025-03-05 15:23:06.401750 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 156],"bool"), list[7,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 156],"bool"), list[7,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 156, 156].  Tensor sizes: [7, 1, 0, 156]
2025-03-05 15:23:06.402305 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 157],"bool"), list[7,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 157],"bool"), list[7,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 157, 157].  Tensor sizes: [7, 1, 0, 157]
2025-03-05 15:23:06.402843 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 158],"bool"), list[7,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 158],"bool"), list[7,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 158, 158].  Tensor sizes: [7, 1, 0, 158]
2025-03-05 15:23:06.403363 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 159],"bool"), list[7,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 159],"bool"), list[7,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 159, 159].  Tensor sizes: [7, 1, 0, 159]
2025-03-05 15:23:06.403915 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 15],"bool"), list[7,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 15],"bool"), list[7,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 15, 15].  Tensor sizes: [7, 1, 0, 15]
2025-03-05 15:23:06.404557 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 160],"bool"), list[7,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 160],"bool"), list[7,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 160, 160].  Tensor sizes: [7, 1, 0, 160]
2025-03-05 15:23:06.405227 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 161],"bool"), list[7,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 161],"bool"), list[7,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 161, 161].  Tensor sizes: [7, 1, 0, 161]
2025-03-05 15:23:06.405838 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 162],"bool"), list[7,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 162],"bool"), list[7,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 162, 162].  Tensor sizes: [7, 1, 0, 162]
2025-03-05 15:23:06.406443 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 163],"bool"), list[7,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 163],"bool"), list[7,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 163, 163].  Tensor sizes: [7, 1, 0, 163]
2025-03-05 15:23:06.407041 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 164],"bool"), list[7,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 164],"bool"), list[7,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 164, 164].  Tensor sizes: [7, 1, 0, 164]
2025-03-05 15:23:06.407657 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 165],"bool"), list[7,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 165],"bool"), list[7,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 165, 165].  Tensor sizes: [7, 1, 0, 165]
2025-03-05 15:23:06.408278 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 166],"bool"), list[7,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 166],"bool"), list[7,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 166, 166].  Tensor sizes: [7, 1, 0, 166]
2025-03-05 15:23:06.408917 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 167],"bool"), list[7,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 167],"bool"), list[7,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 167, 167].  Tensor sizes: [7, 1, 0, 167]
2025-03-05 15:23:06.409515 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 168],"bool"), list[7,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 168],"bool"), list[7,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 168, 168].  Tensor sizes: [7, 1, 0, 168]
2025-03-05 15:23:06.410128 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 169],"bool"), list[7,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 169],"bool"), list[7,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 169, 169].  Tensor sizes: [7, 1, 0, 169]
2025-03-05 15:23:06.410747 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 16],"bool"), list[7,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 16],"bool"), list[7,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 16, 16].  Tensor sizes: [7, 1, 0, 16]
2025-03-05 15:23:06.411387 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 170],"bool"), list[7,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 170],"bool"), list[7,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 170, 170].  Tensor sizes: [7, 1, 0, 170]
2025-03-05 15:23:06.412005 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 171],"bool"), list[7,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 171],"bool"), list[7,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 171, 171].  Tensor sizes: [7, 1, 0, 171]
2025-03-05 15:23:06.412528 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 172],"bool"), list[7,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 172],"bool"), list[7,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 172, 172].  Tensor sizes: [7, 1, 0, 172]
2025-03-05 15:23:06.413052 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 173],"bool"), list[7,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 173],"bool"), list[7,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 173, 173].  Tensor sizes: [7, 1, 0, 173]
2025-03-05 15:23:06.413595 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 174],"bool"), list[7,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 174],"bool"), list[7,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 174, 174].  Tensor sizes: [7, 1, 0, 174]
2025-03-05 15:23:06.414164 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 175],"bool"), list[7,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 175],"bool"), list[7,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 175, 175].  Tensor sizes: [7, 1, 0, 175]
2025-03-05 15:23:06.414899 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 176],"bool"), list[7,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 176],"bool"), list[7,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 176, 176].  Tensor sizes: [7, 1, 0, 176]
2025-03-05 15:23:06.415510 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 177],"bool"), list[7,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 177],"bool"), list[7,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 177, 177].  Tensor sizes: [7, 1, 0, 177]
2025-03-05 15:23:06.416133 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 178],"bool"), list[7,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 178],"bool"), list[7,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 178, 178].  Tensor sizes: [7, 1, 0, 178]
2025-03-05 15:23:06.416737 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 179],"bool"), list[7,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 179],"bool"), list[7,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 179, 179].  Tensor sizes: [7, 1, 0, 179]
2025-03-05 15:23:06.417431 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 17],"bool"), list[7,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 17],"bool"), list[7,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 17, 17].  Tensor sizes: [7, 1, 0, 17]
2025-03-05 15:23:06.418081 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 180],"bool"), list[7,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 180],"bool"), list[7,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 180, 180].  Tensor sizes: [7, 1, 0, 180]
2025-03-05 15:23:06.418787 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 18],"bool"), list[7,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 18],"bool"), list[7,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 18, 18].  Tensor sizes: [7, 1, 0, 18]
2025-03-05 15:23:06.419404 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 19],"bool"), list[7,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 19],"bool"), list[7,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 19, 19].  Tensor sizes: [7, 1, 0, 19]
2025-03-05 15:23:06.419996 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 1],"bool"), list[7,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 1],"bool"), list[7,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 1, 1].  Tensor sizes: [7, 1, 0, 1]
2025-03-05 15:23:06.420640 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 20],"bool"), list[7,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 20],"bool"), list[7,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 20, 20].  Tensor sizes: [7, 1, 0, 20]
2025-03-05 15:23:06.421233 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 21],"bool"), list[7,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 21],"bool"), list[7,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 21, 21].  Tensor sizes: [7, 1, 0, 21]
2025-03-05 15:23:06.421829 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 22],"bool"), list[7,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 22],"bool"), list[7,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 22, 22].  Tensor sizes: [7, 1, 0, 22]
2025-03-05 15:23:06.422418 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 23],"bool"), list[7,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 23],"bool"), list[7,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 23, 23].  Tensor sizes: [7, 1, 0, 23]
2025-03-05 15:23:06.423022 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 24],"bool"), list[7,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 24],"bool"), list[7,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 24, 24].  Tensor sizes: [7, 1, 0, 24]
2025-03-05 15:23:06.423646 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 25],"bool"), list[7,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 25],"bool"), list[7,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 25, 25].  Tensor sizes: [7, 1, 0, 25]
2025-03-05 15:23:06.424244 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 26],"bool"), list[7,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 26],"bool"), list[7,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 26, 26].  Tensor sizes: [7, 1, 0, 26]
2025-03-05 15:23:06.424852 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 27],"bool"), list[7,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 27],"bool"), list[7,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 27, 27].  Tensor sizes: [7, 1, 0, 27]
2025-03-05 15:23:06.425457 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 28],"bool"), list[7,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 28],"bool"), list[7,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 28, 28].  Tensor sizes: [7, 1, 0, 28]
2025-03-05 15:23:06.426066 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 29],"bool"), list[7,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 29],"bool"), list[7,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 29, 29].  Tensor sizes: [7, 1, 0, 29]
2025-03-05 15:23:06.426668 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 2],"bool"), list[7,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 2],"bool"), list[7,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 2, 2].  Tensor sizes: [7, 1, 0, 2]
2025-03-05 15:23:06.427253 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 30],"bool"), list[7,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 30],"bool"), list[7,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 30, 30].  Tensor sizes: [7, 1, 0, 30]
2025-03-05 15:23:06.427845 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 31],"bool"), list[7,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 31],"bool"), list[7,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 31, 31].  Tensor sizes: [7, 1, 0, 31]
2025-03-05 15:23:06.428423 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 32],"bool"), list[7,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 32],"bool"), list[7,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 32, 32].  Tensor sizes: [7, 1, 0, 32]
2025-03-05 15:23:06.429005 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 33],"bool"), list[7,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 33],"bool"), list[7,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 33, 33].  Tensor sizes: [7, 1, 0, 33]
2025-03-05 15:23:06.429612 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 34],"bool"), list[7,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 34],"bool"), list[7,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 34, 34].  Tensor sizes: [7, 1, 0, 34]
2025-03-05 15:23:06.430212 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 35],"bool"), list[7,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 35],"bool"), list[7,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 35, 35].  Tensor sizes: [7, 1, 0, 35]
2025-03-05 15:23:06.430829 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 36],"bool"), list[7,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 36],"bool"), list[7,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 36, 36].  Tensor sizes: [7, 1, 0, 36]
2025-03-05 15:23:06.431427 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 37],"bool"), list[7,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 37],"bool"), list[7,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 37, 37].  Tensor sizes: [7, 1, 0, 37]
2025-03-05 15:23:06.432071 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 38],"bool"), list[7,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 38],"bool"), list[7,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 38, 38].  Tensor sizes: [7, 1, 0, 38]
2025-03-05 15:23:06.432666 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 39],"bool"), list[7,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 39],"bool"), list[7,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 39, 39].  Tensor sizes: [7, 1, 0, 39]
2025-03-05 15:23:06.433248 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 3],"bool"), list[7,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 3],"bool"), list[7,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 3, 3].  Tensor sizes: [7, 1, 0, 3]
2025-03-05 15:23:06.433839 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 40],"bool"), list[7,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 40],"bool"), list[7,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 40, 40].  Tensor sizes: [7, 1, 0, 40]
2025-03-05 15:23:06.434424 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 41],"bool"), list[7,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 41],"bool"), list[7,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 41, 41].  Tensor sizes: [7, 1, 0, 41]
2025-03-05 15:23:06.435315 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 42],"bool"), list[7,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 42],"bool"), list[7,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 42, 42].  Tensor sizes: [7, 1, 0, 42]
2025-03-05 15:23:06.435886 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 43],"bool"), list[7,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 43],"bool"), list[7,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 43, 43].  Tensor sizes: [7, 1, 0, 43]
2025-03-05 15:23:06.436403 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 44],"bool"), list[7,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 44],"bool"), list[7,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 44, 44].  Tensor sizes: [7, 1, 0, 44]
2025-03-05 15:23:06.436942 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 45],"bool"), list[7,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 45],"bool"), list[7,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 45, 45].  Tensor sizes: [7, 1, 0, 45]
2025-03-05 15:23:06.437461 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 46],"bool"), list[7,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 46],"bool"), list[7,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 46, 46].  Tensor sizes: [7, 1, 0, 46]
2025-03-05 15:23:06.437982 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 47],"bool"), list[7,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 47],"bool"), list[7,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 47, 47].  Tensor sizes: [7, 1, 0, 47]
2025-03-05 15:23:06.438527 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 48],"bool"), list[7,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 48],"bool"), list[7,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 48, 48].  Tensor sizes: [7, 1, 0, 48]
2025-03-05 15:23:06.439148 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,1,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,1,49,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 1, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.439694 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,10,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,10,49,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 10, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.440208 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,11,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,11,49,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 11, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.440729 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,12,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,12,49,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 12, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.441238 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,13,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,13,49,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 13, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.441764 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,14,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,14,49,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 14, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.442284 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,15,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,15,49,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 15, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.442807 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,16,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,16,49,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 16, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.443321 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,17,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,17,49,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 17, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.443860 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,18,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,18,49,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 18, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.444381 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,19,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,19,49,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 19, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.444898 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,2,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,2,49,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 2, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.445436 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,20,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,20,49,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 20, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.446134 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,21,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,21,49,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 21, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.446815 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,22,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,22,49,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 22, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.447432 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,23,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,23,49,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 23, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.448039 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,24,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,24,49,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 24, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.448646 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,25,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,25,49,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 25, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.449236 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,26,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,26,49,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 26, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.449841 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,27,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,27,49,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 27, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.450434 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,28,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,28,49,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 28, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.451030 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,29,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,29,49,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 29, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.451624 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,3,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,3,49,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 3, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.452220 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,30,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,30,49,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 30, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.452856 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,31,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,31,49,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 31, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.453452 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,32,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,32,49,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 32, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.454057 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,33,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,33,49,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 33, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.454689 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,34,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,34,49,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 34, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.455277 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,35,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,35,49,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 35, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.455869 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,36,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,36,49,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 36, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.456457 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,37,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,37,49,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 37, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.457066 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,38,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,38,49,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 38, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.457688 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,39,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,39,49,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 39, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.458270 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,4,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,4,49,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 4, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.458979 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,40,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,40,49,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 40, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.459637 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,41,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,41,49,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 41, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.460198 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,42,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,42,49,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 42, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.460730 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,43,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,43,49,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 43, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.461242 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,44,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,44,49,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 44, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.461766 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,45,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,45,49,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 45, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.462273 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,46,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,46,49,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 46, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.462788 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,47,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,47,49,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 47, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.463305 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,48,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,48,49,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 48, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.463939 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 49, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.464555 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,5,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,5,49,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 5, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.465168 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,50,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,50,49,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 50, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.465773 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,51,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,51,49,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 51, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.466361 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,52,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,52,49,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 52, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.466947 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,53,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,53,49,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 53, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.467520 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,6,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,6,49,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 6, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.468124 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,7,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,7,49,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 7, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.468717 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,8,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,8,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 8, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.469304 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,9,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 49],"bool"), list[7,8,9,49,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 9, 49].  Tensor sizes: [7, 1, 0, 49]
2025-03-05 15:23:06.469888 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 4],"bool"), list[7,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 4],"bool"), list[7,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 4, 4].  Tensor sizes: [7, 1, 0, 4]
2025-03-05 15:23:06.470490 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 50],"bool"), list[7,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 50],"bool"), list[7,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 50, 50].  Tensor sizes: [7, 1, 0, 50]
2025-03-05 15:23:06.471104 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 51],"bool"), list[7,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 51],"bool"), list[7,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 51, 51].  Tensor sizes: [7, 1, 0, 51]
2025-03-05 15:23:06.471697 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 52],"bool"), list[7,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 52],"bool"), list[7,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 52, 52].  Tensor sizes: [7, 1, 0, 52]
2025-03-05 15:23:06.472278 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 53],"bool"), list[7,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 53],"bool"), list[7,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 53, 53].  Tensor sizes: [7, 1, 0, 53]
2025-03-05 15:23:06.472862 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 54],"bool"), list[7,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 54],"bool"), list[7,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 54, 54].  Tensor sizes: [7, 1, 0, 54]
2025-03-05 15:23:06.473441 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 55],"bool"), list[7,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 55],"bool"), list[7,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 55, 55].  Tensor sizes: [7, 1, 0, 55]
2025-03-05 15:23:06.474032 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 56],"bool"), list[7,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 56],"bool"), list[7,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 56, 56].  Tensor sizes: [7, 1, 0, 56]
2025-03-05 15:23:06.474625 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 57],"bool"), list[7,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 57],"bool"), list[7,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 57, 57].  Tensor sizes: [7, 1, 0, 57]
2025-03-05 15:23:06.475216 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 58],"bool"), list[7,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 58],"bool"), list[7,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 58, 58].  Tensor sizes: [7, 1, 0, 58]
2025-03-05 15:23:06.475849 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 59],"bool"), list[7,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 59],"bool"), list[7,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 59, 59].  Tensor sizes: [7, 1, 0, 59]
2025-03-05 15:23:06.476446 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 5],"bool"), list[7,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 5],"bool"), list[7,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 5, 5].  Tensor sizes: [7, 1, 0, 5]
2025-03-05 15:23:06.477068 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 60],"bool"), list[7,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 60],"bool"), list[7,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 60, 60].  Tensor sizes: [7, 1, 0, 60]
2025-03-05 15:23:06.477665 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 61],"bool"), list[7,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 61],"bool"), list[7,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 61, 61].  Tensor sizes: [7, 1, 0, 61]
2025-03-05 15:23:06.478251 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 62],"bool"), list[7,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 62],"bool"), list[7,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 62, 62].  Tensor sizes: [7, 1, 0, 62]
2025-03-05 15:23:06.478841 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 63],"bool"), list[7,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 63],"bool"), list[7,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 63, 63].  Tensor sizes: [7, 1, 0, 63]
2025-03-05 15:23:06.479425 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 64],"bool"), list[7,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 64],"bool"), list[7,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 64, 64].  Tensor sizes: [7, 1, 0, 64]
2025-03-05 15:23:06.480124 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 65],"bool"), list[7,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 65],"bool"), list[7,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 65, 65].  Tensor sizes: [7, 1, 0, 65]
2025-03-05 15:23:06.480748 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 66],"bool"), list[7,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 66],"bool"), list[7,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 66, 66].  Tensor sizes: [7, 1, 0, 66]
2025-03-05 15:23:06.481344 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 67],"bool"), list[7,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 67],"bool"), list[7,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 67, 67].  Tensor sizes: [7, 1, 0, 67]
2025-03-05 15:23:06.481994 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 68],"bool"), list[7,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 68],"bool"), list[7,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 68, 68].  Tensor sizes: [7, 1, 0, 68]
2025-03-05 15:23:06.482571 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 69],"bool"), list[7,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 69],"bool"), list[7,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 69, 69].  Tensor sizes: [7, 1, 0, 69]
2025-03-05 15:23:06.483166 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 6],"bool"), list[7,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 6],"bool"), list[7,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 6, 6].  Tensor sizes: [7, 1, 0, 6]
2025-03-05 15:23:06.483788 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 70],"bool"), list[7,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 70],"bool"), list[7,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 70, 70].  Tensor sizes: [7, 1, 0, 70]
2025-03-05 15:23:06.484391 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 71],"bool"), list[7,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 71],"bool"), list[7,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 71, 71].  Tensor sizes: [7, 1, 0, 71]
2025-03-05 15:23:06.484994 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 72],"bool"), list[7,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 72],"bool"), list[7,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 72, 72].  Tensor sizes: [7, 1, 0, 72]
2025-03-05 15:23:06.485591 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 73],"bool"), list[7,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 73],"bool"), list[7,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 73, 73].  Tensor sizes: [7, 1, 0, 73]
2025-03-05 15:23:06.486178 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 74],"bool"), list[7,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 74],"bool"), list[7,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 74, 74].  Tensor sizes: [7, 1, 0, 74]
2025-03-05 15:23:06.486765 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 75],"bool"), list[7,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 75],"bool"), list[7,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 75, 75].  Tensor sizes: [7, 1, 0, 75]
2025-03-05 15:23:06.487352 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 76],"bool"), list[7,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 76],"bool"), list[7,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 76, 76].  Tensor sizes: [7, 1, 0, 76]
2025-03-05 15:23:06.487954 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 77],"bool"), list[7,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 77],"bool"), list[7,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 77, 77].  Tensor sizes: [7, 1, 0, 77]
2025-03-05 15:23:06.488543 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 78],"bool"), list[7,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 78],"bool"), list[7,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 78, 78].  Tensor sizes: [7, 1, 0, 78]
2025-03-05 15:23:06.489266 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 79],"bool"), list[7,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 79],"bool"), list[7,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 79, 79].  Tensor sizes: [7, 1, 0, 79]
2025-03-05 15:23:06.489899 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 7],"bool"), list[7,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 7],"bool"), list[7,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 7, 7].  Tensor sizes: [7, 1, 0, 7]
2025-03-05 15:23:06.490437 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 80],"bool"), list[7,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 80],"bool"), list[7,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 80, 80].  Tensor sizes: [7, 1, 0, 80]
2025-03-05 15:23:06.490988 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 81],"bool"), list[7,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 81],"bool"), list[7,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 81, 81].  Tensor sizes: [7, 1, 0, 81]
2025-03-05 15:23:06.491499 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 82],"bool"), list[7,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 82],"bool"), list[7,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 82, 82].  Tensor sizes: [7, 1, 0, 82]
2025-03-05 15:23:06.492026 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 83],"bool"), list[7,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 83],"bool"), list[7,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 83, 83].  Tensor sizes: [7, 1, 0, 83]
2025-03-05 15:23:06.492531 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 84],"bool"), list[7,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 84],"bool"), list[7,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 84, 84].  Tensor sizes: [7, 1, 0, 84]
2025-03-05 15:23:06.493068 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 85],"bool"), list[7,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 85],"bool"), list[7,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 85, 85].  Tensor sizes: [7, 1, 0, 85]
2025-03-05 15:23:06.493576 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 86],"bool"), list[7,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 86],"bool"), list[7,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 86, 86].  Tensor sizes: [7, 1, 0, 86]
2025-03-05 15:23:06.494124 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 87],"bool"), list[7,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 87],"bool"), list[7,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 87, 87].  Tensor sizes: [7, 1, 0, 87]
2025-03-05 15:23:06.494660 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 88],"bool"), list[7,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 88],"bool"), list[7,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 88, 88].  Tensor sizes: [7, 1, 0, 88]
2025-03-05 15:23:06.495178 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 89],"bool"), list[7,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 89],"bool"), list[7,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 89, 89].  Tensor sizes: [7, 1, 0, 89]
2025-03-05 15:23:06.495724 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 8],"bool"), list[7,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 8],"bool"), list[7,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 8, 8].  Tensor sizes: [7, 1, 0, 8]
2025-03-05 15:23:06.496229 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 90],"bool"), list[7,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 90],"bool"), list[7,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 90, 90].  Tensor sizes: [7, 1, 0, 90]
2025-03-05 15:23:06.496739 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 91],"bool"), list[7,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 91],"bool"), list[7,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 91, 91].  Tensor sizes: [7, 1, 0, 91]
2025-03-05 15:23:06.497259 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 92],"bool"), list[7,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 92],"bool"), list[7,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 92, 92].  Tensor sizes: [7, 1, 0, 92]
2025-03-05 15:23:06.497774 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 93],"bool"), list[7,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 93],"bool"), list[7,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 93, 93].  Tensor sizes: [7, 1, 0, 93]
2025-03-05 15:23:06.498297 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 94],"bool"), list[7,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 94],"bool"), list[7,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 94, 94].  Tensor sizes: [7, 1, 0, 94]
2025-03-05 15:23:06.498806 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 95],"bool"), list[7,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 95],"bool"), list[7,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 95, 95].  Tensor sizes: [7, 1, 0, 95]
2025-03-05 15:23:06.499321 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 96],"bool"), list[7,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 96],"bool"), list[7,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 96, 96].  Tensor sizes: [7, 1, 0, 96]
2025-03-05 15:23:06.499840 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 97],"bool"), list[7,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 97],"bool"), list[7,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 97, 97].  Tensor sizes: [7, 1, 0, 97]
2025-03-05 15:23:06.500359 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 98],"bool"), list[7,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 98],"bool"), list[7,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 98, 98].  Tensor sizes: [7, 1, 0, 98]
2025-03-05 15:23:06.500865 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 99],"bool"), list[7,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 99],"bool"), list[7,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 99, 99].  Tensor sizes: [7, 1, 0, 99]
2025-03-05 15:23:06.501369 test begin: paddle.broadcast_to(Tensor([7, 1, 0, 9],"bool"), list[7,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 0, 9],"bool"), list[7,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [7, 8, 9, 9].  Tensor sizes: [7, 1, 0, 9]
2025-03-05 15:23:06.501879 test begin: paddle.broadcast_to(Tensor([7, 1, 1, 0],"bool"), list[7,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 1, 0],"bool"), list[7,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 1, 1].  Tensor sizes: [7, 1, 1, 0]
2025-03-05 15:23:06.502385 test begin: paddle.broadcast_to(Tensor([7, 1, 1, 0],"bool"), list[7,8,1,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 1, 0],"bool"), list[7,8,1,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 1, 153].  Tensor sizes: [7, 1, 1, 0]
2025-03-05 15:23:06.502974 test begin: paddle.broadcast_to(Tensor([7, 1, 1, 0],"bool"), list[7,8,1,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 1, 0],"bool"), list[7,8,1,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 1, 49].  Tensor sizes: [7, 1, 1, 0]
2025-03-05 15:23:06.503490 test begin: paddle.broadcast_to(Tensor([7, 1, 10, 0],"bool"), list[7,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 10, 0],"bool"), list[7,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 10, 10].  Tensor sizes: [7, 1, 10, 0]
2025-03-05 15:23:06.503997 test begin: paddle.broadcast_to(Tensor([7, 1, 10, 0],"bool"), list[7,8,10,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 10, 0],"bool"), list[7,8,10,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 10, 153].  Tensor sizes: [7, 1, 10, 0]
2025-03-05 15:23:06.504502 test begin: paddle.broadcast_to(Tensor([7, 1, 10, 0],"bool"), list[7,8,10,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 10, 0],"bool"), list[7,8,10,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 10, 49].  Tensor sizes: [7, 1, 10, 0]
2025-03-05 15:23:06.505018 test begin: paddle.broadcast_to(Tensor([7, 1, 100, 0],"bool"), list[7,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 100, 0],"bool"), list[7,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 100, 100].  Tensor sizes: [7, 1, 100, 0]
2025-03-05 15:23:06.505559 test begin: paddle.broadcast_to(Tensor([7, 1, 100, 0],"bool"), list[7,8,100,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 100, 0],"bool"), list[7,8,100,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 100, 153].  Tensor sizes: [7, 1, 100, 0]
2025-03-05 15:23:06.506574 test begin: paddle.broadcast_to(Tensor([7, 1, 101, 0],"bool"), list[7,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 101, 0],"bool"), list[7,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 101, 101].  Tensor sizes: [7, 1, 101, 0]
2025-03-05 15:23:06.507155 test begin: paddle.broadcast_to(Tensor([7, 1, 101, 0],"bool"), list[7,8,101,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 101, 0],"bool"), list[7,8,101,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 101, 153].  Tensor sizes: [7, 1, 101, 0]
2025-03-05 15:23:06.507688 test begin: paddle.broadcast_to(Tensor([7, 1, 102, 0],"bool"), list[7,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 102, 0],"bool"), list[7,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 102, 102].  Tensor sizes: [7, 1, 102, 0]
2025-03-05 15:23:06.508217 test begin: paddle.broadcast_to(Tensor([7, 1, 102, 0],"bool"), list[7,8,102,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 102, 0],"bool"), list[7,8,102,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 102, 153].  Tensor sizes: [7, 1, 102, 0]
2025-03-05 15:23:06.508851 test begin: paddle.broadcast_to(Tensor([7, 1, 103, 0],"bool"), list[7,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 103, 0],"bool"), list[7,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 103, 103].  Tensor sizes: [7, 1, 103, 0]
2025-03-05 15:23:06.509447 test begin: paddle.broadcast_to(Tensor([7, 1, 103, 0],"bool"), list[7,8,103,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 103, 0],"bool"), list[7,8,103,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 103, 153].  Tensor sizes: [7, 1, 103, 0]
2025-03-05 15:23:06.510007 test begin: paddle.broadcast_to(Tensor([7, 1, 104, 0],"bool"), list[7,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 104, 0],"bool"), list[7,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 104, 104].  Tensor sizes: [7, 1, 104, 0]
2025-03-05 15:23:06.510538 test begin: paddle.broadcast_to(Tensor([7, 1, 104, 0],"bool"), list[7,8,104,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 104, 0],"bool"), list[7,8,104,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 104, 153].  Tensor sizes: [7, 1, 104, 0]
2025-03-05 15:23:06.511069 test begin: paddle.broadcast_to(Tensor([7, 1, 105, 0],"bool"), list[7,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 105, 0],"bool"), list[7,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 105, 105].  Tensor sizes: [7, 1, 105, 0]
2025-03-05 15:23:06.511647 test begin: paddle.broadcast_to(Tensor([7, 1, 105, 0],"bool"), list[7,8,105,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 105, 0],"bool"), list[7,8,105,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 105, 153].  Tensor sizes: [7, 1, 105, 0]
2025-03-05 15:23:06.512259 test begin: paddle.broadcast_to(Tensor([7, 1, 106, 0],"bool"), list[7,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 106, 0],"bool"), list[7,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 106, 106].  Tensor sizes: [7, 1, 106, 0]
2025-03-05 15:23:06.512797 test begin: paddle.broadcast_to(Tensor([7, 1, 106, 0],"bool"), list[7,8,106,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 106, 0],"bool"), list[7,8,106,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 106, 153].  Tensor sizes: [7, 1, 106, 0]
2025-03-05 15:23:06.513309 test begin: paddle.broadcast_to(Tensor([7, 1, 107, 0],"bool"), list[7,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 107, 0],"bool"), list[7,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 107, 107].  Tensor sizes: [7, 1, 107, 0]
2025-03-05 15:23:06.513878 test begin: paddle.broadcast_to(Tensor([7, 1, 107, 0],"bool"), list[7,8,107,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 107, 0],"bool"), list[7,8,107,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 107, 153].  Tensor sizes: [7, 1, 107, 0]
2025-03-05 15:23:06.514418 test begin: paddle.broadcast_to(Tensor([7, 1, 108, 0],"bool"), list[7,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 108, 0],"bool"), list[7,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 108, 108].  Tensor sizes: [7, 1, 108, 0]
2025-03-05 15:23:06.514947 test begin: paddle.broadcast_to(Tensor([7, 1, 108, 0],"bool"), list[7,8,108,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 108, 0],"bool"), list[7,8,108,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 108, 153].  Tensor sizes: [7, 1, 108, 0]
2025-03-05 15:23:06.515456 test begin: paddle.broadcast_to(Tensor([7, 1, 109, 0],"bool"), list[7,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 109, 0],"bool"), list[7,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 109, 109].  Tensor sizes: [7, 1, 109, 0]
2025-03-05 15:23:06.516058 test begin: paddle.broadcast_to(Tensor([7, 1, 109, 0],"bool"), list[7,8,109,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 109, 0],"bool"), list[7,8,109,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 109, 153].  Tensor sizes: [7, 1, 109, 0]
2025-03-05 15:23:06.516642 test begin: paddle.broadcast_to(Tensor([7, 1, 11, 0],"bool"), list[7,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 11, 0],"bool"), list[7,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 11, 11].  Tensor sizes: [7, 1, 11, 0]
2025-03-05 15:23:06.517196 test begin: paddle.broadcast_to(Tensor([7, 1, 11, 0],"bool"), list[7,8,11,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 11, 0],"bool"), list[7,8,11,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 11, 153].  Tensor sizes: [7, 1, 11, 0]
2025-03-05 15:23:06.517764 test begin: paddle.broadcast_to(Tensor([7, 1, 11, 0],"bool"), list[7,8,11,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 11, 0],"bool"), list[7,8,11,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 11, 49].  Tensor sizes: [7, 1, 11, 0]
2025-03-05 15:23:06.518287 test begin: paddle.broadcast_to(Tensor([7, 1, 110, 0],"bool"), list[7,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 110, 0],"bool"), list[7,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 110, 110].  Tensor sizes: [7, 1, 110, 0]
2025-03-05 15:23:06.518825 test begin: paddle.broadcast_to(Tensor([7, 1, 110, 0],"bool"), list[7,8,110,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 110, 0],"bool"), list[7,8,110,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 110, 153].  Tensor sizes: [7, 1, 110, 0]
2025-03-05 15:23:06.519378 test begin: paddle.broadcast_to(Tensor([7, 1, 111, 0],"bool"), list[7,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 111, 0],"bool"), list[7,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 111, 111].  Tensor sizes: [7, 1, 111, 0]
2025-03-05 15:23:06.519919 test begin: paddle.broadcast_to(Tensor([7, 1, 111, 0],"bool"), list[7,8,111,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 111, 0],"bool"), list[7,8,111,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 111, 153].  Tensor sizes: [7, 1, 111, 0]
2025-03-05 15:23:06.520486 test begin: paddle.broadcast_to(Tensor([7, 1, 112, 0],"bool"), list[7,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 112, 0],"bool"), list[7,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 112, 112].  Tensor sizes: [7, 1, 112, 0]
2025-03-05 15:23:06.521417 test begin: paddle.broadcast_to(Tensor([7, 1, 112, 0],"bool"), list[7,8,112,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 112, 0],"bool"), list[7,8,112,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 112, 153].  Tensor sizes: [7, 1, 112, 0]
2025-03-05 15:23:06.522007 test begin: paddle.broadcast_to(Tensor([7, 1, 113, 0],"bool"), list[7,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 113, 0],"bool"), list[7,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 113, 113].  Tensor sizes: [7, 1, 113, 0]
2025-03-05 15:23:06.522560 test begin: paddle.broadcast_to(Tensor([7, 1, 113, 0],"bool"), list[7,8,113,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 113, 0],"bool"), list[7,8,113,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 113, 153].  Tensor sizes: [7, 1, 113, 0]
2025-03-05 15:23:06.523207 test begin: paddle.broadcast_to(Tensor([7, 1, 114, 0],"bool"), list[7,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 114, 0],"bool"), list[7,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 114, 114].  Tensor sizes: [7, 1, 114, 0]
2025-03-05 15:23:06.523844 test begin: paddle.broadcast_to(Tensor([7, 1, 114, 0],"bool"), list[7,8,114,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 114, 0],"bool"), list[7,8,114,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 114, 153].  Tensor sizes: [7, 1, 114, 0]
2025-03-05 15:23:06.524438 test begin: paddle.broadcast_to(Tensor([7, 1, 115, 0],"bool"), list[7,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 115, 0],"bool"), list[7,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 115, 115].  Tensor sizes: [7, 1, 115, 0]
2025-03-05 15:23:06.525037 test begin: paddle.broadcast_to(Tensor([7, 1, 115, 0],"bool"), list[7,8,115,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 115, 0],"bool"), list[7,8,115,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 115, 153].  Tensor sizes: [7, 1, 115, 0]
2025-03-05 15:23:06.525639 test begin: paddle.broadcast_to(Tensor([7, 1, 116, 0],"bool"), list[7,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 116, 0],"bool"), list[7,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 116, 116].  Tensor sizes: [7, 1, 116, 0]
2025-03-05 15:23:06.526265 test begin: paddle.broadcast_to(Tensor([7, 1, 116, 0],"bool"), list[7,8,116,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 116, 0],"bool"), list[7,8,116,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 116, 153].  Tensor sizes: [7, 1, 116, 0]
2025-03-05 15:23:06.526927 test begin: paddle.broadcast_to(Tensor([7, 1, 117, 0],"bool"), list[7,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 117, 0],"bool"), list[7,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 117, 117].  Tensor sizes: [7, 1, 117, 0]
2025-03-05 15:23:06.527556 test begin: paddle.broadcast_to(Tensor([7, 1, 117, 0],"bool"), list[7,8,117,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 117, 0],"bool"), list[7,8,117,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 117, 153].  Tensor sizes: [7, 1, 117, 0]
2025-03-05 15:23:06.528133 test begin: paddle.broadcast_to(Tensor([7, 1, 118, 0],"bool"), list[7,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 118, 0],"bool"), list[7,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 118, 118].  Tensor sizes: [7, 1, 118, 0]
2025-03-05 15:23:06.528669 test begin: paddle.broadcast_to(Tensor([7, 1, 118, 0],"bool"), list[7,8,118,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 118, 0],"bool"), list[7,8,118,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 118, 153].  Tensor sizes: [7, 1, 118, 0]
2025-03-05 15:23:06.529199 test begin: paddle.broadcast_to(Tensor([7, 1, 119, 0],"bool"), list[7,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 119, 0],"bool"), list[7,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 119, 119].  Tensor sizes: [7, 1, 119, 0]
2025-03-05 15:23:06.529720 test begin: paddle.broadcast_to(Tensor([7, 1, 119, 0],"bool"), list[7,8,119,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 119, 0],"bool"), list[7,8,119,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 119, 153].  Tensor sizes: [7, 1, 119, 0]
2025-03-05 15:23:06.530227 test begin: paddle.broadcast_to(Tensor([7, 1, 12, 0],"bool"), list[7,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 12, 0],"bool"), list[7,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 12, 12].  Tensor sizes: [7, 1, 12, 0]
2025-03-05 15:23:06.530738 test begin: paddle.broadcast_to(Tensor([7, 1, 12, 0],"bool"), list[7,8,12,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 12, 0],"bool"), list[7,8,12,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 12, 153].  Tensor sizes: [7, 1, 12, 0]
2025-03-05 15:23:06.531292 test begin: paddle.broadcast_to(Tensor([7, 1, 12, 0],"bool"), list[7,8,12,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 12, 0],"bool"), list[7,8,12,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 12, 49].  Tensor sizes: [7, 1, 12, 0]
2025-03-05 15:23:06.531803 test begin: paddle.broadcast_to(Tensor([7, 1, 120, 0],"bool"), list[7,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 120, 0],"bool"), list[7,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 120, 120].  Tensor sizes: [7, 1, 120, 0]
2025-03-05 15:23:06.532301 test begin: paddle.broadcast_to(Tensor([7, 1, 120, 0],"bool"), list[7,8,120,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 120, 0],"bool"), list[7,8,120,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 120, 153].  Tensor sizes: [7, 1, 120, 0]
2025-03-05 15:23:06.532855 test begin: paddle.broadcast_to(Tensor([7, 1, 121, 0],"bool"), list[7,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 121, 0],"bool"), list[7,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 121, 121].  Tensor sizes: [7, 1, 121, 0]
2025-03-05 15:23:06.533370 test begin: paddle.broadcast_to(Tensor([7, 1, 121, 0],"bool"), list[7,8,121,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 121, 0],"bool"), list[7,8,121,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 121, 153].  Tensor sizes: [7, 1, 121, 0]
2025-03-05 15:23:06.533883 test begin: paddle.broadcast_to(Tensor([7, 1, 122, 0],"bool"), list[7,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 122, 0],"bool"), list[7,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 122, 122].  Tensor sizes: [7, 1, 122, 0]
2025-03-05 15:23:06.534393 test begin: paddle.broadcast_to(Tensor([7, 1, 122, 0],"bool"), list[7,8,122,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 122, 0],"bool"), list[7,8,122,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 122, 153].  Tensor sizes: [7, 1, 122, 0]
2025-03-05 15:23:06.534904 test begin: paddle.broadcast_to(Tensor([7, 1, 123, 0],"bool"), list[7,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 123, 0],"bool"), list[7,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 123, 123].  Tensor sizes: [7, 1, 123, 0]
2025-03-05 15:23:06.535414 test begin: paddle.broadcast_to(Tensor([7, 1, 123, 0],"bool"), list[7,8,123,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 123, 0],"bool"), list[7,8,123,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 123, 153].  Tensor sizes: [7, 1, 123, 0]
2025-03-05 15:23:06.535914 test begin: paddle.broadcast_to(Tensor([7, 1, 124, 0],"bool"), list[7,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 124, 0],"bool"), list[7,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 124, 124].  Tensor sizes: [7, 1, 124, 0]
2025-03-05 15:23:06.536431 test begin: paddle.broadcast_to(Tensor([7, 1, 124, 0],"bool"), list[7,8,124,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 124, 0],"bool"), list[7,8,124,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 124, 153].  Tensor sizes: [7, 1, 124, 0]
2025-03-05 15:23:06.536943 test begin: paddle.broadcast_to(Tensor([7, 1, 125, 0],"bool"), list[7,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 125, 0],"bool"), list[7,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 125, 125].  Tensor sizes: [7, 1, 125, 0]
2025-03-05 15:23:06.537461 test begin: paddle.broadcast_to(Tensor([7, 1, 125, 0],"bool"), list[7,8,125,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 125, 0],"bool"), list[7,8,125,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 125, 153].  Tensor sizes: [7, 1, 125, 0]
2025-03-05 15:23:06.537986 test begin: paddle.broadcast_to(Tensor([7, 1, 126, 0],"bool"), list[7,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 126, 0],"bool"), list[7,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 126, 126].  Tensor sizes: [7, 1, 126, 0]
2025-03-05 15:23:06.538488 test begin: paddle.broadcast_to(Tensor([7, 1, 126, 0],"bool"), list[7,8,126,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 126, 0],"bool"), list[7,8,126,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 126, 153].  Tensor sizes: [7, 1, 126, 0]
2025-03-05 15:23:06.539001 test begin: paddle.broadcast_to(Tensor([7, 1, 127, 0],"bool"), list[7,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 127, 0],"bool"), list[7,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 127, 127].  Tensor sizes: [7, 1, 127, 0]
2025-03-05 15:23:06.539512 test begin: paddle.broadcast_to(Tensor([7, 1, 127, 0],"bool"), list[7,8,127,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 127, 0],"bool"), list[7,8,127,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 127, 153].  Tensor sizes: [7, 1, 127, 0]
2025-03-05 15:23:06.540035 test begin: paddle.broadcast_to(Tensor([7, 1, 128, 0],"bool"), list[7,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 128, 0],"bool"), list[7,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 128, 128].  Tensor sizes: [7, 1, 128, 0]
2025-03-05 15:23:06.540601 test begin: paddle.broadcast_to(Tensor([7, 1, 128, 0],"bool"), list[7,8,128,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 128, 0],"bool"), list[7,8,128,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 128, 153].  Tensor sizes: [7, 1, 128, 0]
2025-03-05 15:23:06.541696 test begin: paddle.broadcast_to(Tensor([7, 1, 129, 0],"bool"), list[7,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 129, 0],"bool"), list[7,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 129, 129].  Tensor sizes: [7, 1, 129, 0]
2025-03-05 15:23:06.542277 test begin: paddle.broadcast_to(Tensor([7, 1, 129, 0],"bool"), list[7,8,129,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 129, 0],"bool"), list[7,8,129,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 129, 153].  Tensor sizes: [7, 1, 129, 0]
2025-03-05 15:23:06.542821 test begin: paddle.broadcast_to(Tensor([7, 1, 13, 0],"bool"), list[7,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 13, 0],"bool"), list[7,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 13, 13].  Tensor sizes: [7, 1, 13, 0]
2025-03-05 15:23:06.543344 test begin: paddle.broadcast_to(Tensor([7, 1, 13, 0],"bool"), list[7,8,13,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 13, 0],"bool"), list[7,8,13,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 13, 153].  Tensor sizes: [7, 1, 13, 0]
2025-03-05 15:23:06.543873 test begin: paddle.broadcast_to(Tensor([7, 1, 13, 0],"bool"), list[7,8,13,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 13, 0],"bool"), list[7,8,13,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 13, 49].  Tensor sizes: [7, 1, 13, 0]
2025-03-05 15:23:06.544389 test begin: paddle.broadcast_to(Tensor([7, 1, 130, 0],"bool"), list[7,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 130, 0],"bool"), list[7,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 130, 130].  Tensor sizes: [7, 1, 130, 0]
2025-03-05 15:23:06.544920 test begin: paddle.broadcast_to(Tensor([7, 1, 130, 0],"bool"), list[7,8,130,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 130, 0],"bool"), list[7,8,130,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 130, 153].  Tensor sizes: [7, 1, 130, 0]
2025-03-05 15:23:06.545429 test begin: paddle.broadcast_to(Tensor([7, 1, 131, 0],"bool"), list[7,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 131, 0],"bool"), list[7,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 131, 131].  Tensor sizes: [7, 1, 131, 0]
2025-03-05 15:23:06.545963 test begin: paddle.broadcast_to(Tensor([7, 1, 131, 0],"bool"), list[7,8,131,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 131, 0],"bool"), list[7,8,131,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 131, 153].  Tensor sizes: [7, 1, 131, 0]
2025-03-05 15:23:06.546478 test begin: paddle.broadcast_to(Tensor([7, 1, 132, 0],"bool"), list[7,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 132, 0],"bool"), list[7,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 132, 132].  Tensor sizes: [7, 1, 132, 0]
2025-03-05 15:23:06.546992 test begin: paddle.broadcast_to(Tensor([7, 1, 132, 0],"bool"), list[7,8,132,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 132, 0],"bool"), list[7,8,132,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 132, 153].  Tensor sizes: [7, 1, 132, 0]
2025-03-05 15:23:06.547621 test begin: paddle.broadcast_to(Tensor([7, 1, 133, 0],"bool"), list[7,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 133, 0],"bool"), list[7,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 133, 133].  Tensor sizes: [7, 1, 133, 0]
2025-03-05 15:23:06.548160 test begin: paddle.broadcast_to(Tensor([7, 1, 133, 0],"bool"), list[7,8,133,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 133, 0],"bool"), list[7,8,133,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 133, 153].  Tensor sizes: [7, 1, 133, 0]
2025-03-05 15:23:06.548699 test begin: paddle.broadcast_to(Tensor([7, 1, 134, 0],"bool"), list[7,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 134, 0],"bool"), list[7,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 134, 134].  Tensor sizes: [7, 1, 134, 0]
2025-03-05 15:23:06.549228 test begin: paddle.broadcast_to(Tensor([7, 1, 134, 0],"bool"), list[7,8,134,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 134, 0],"bool"), list[7,8,134,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 134, 153].  Tensor sizes: [7, 1, 134, 0]
2025-03-05 15:23:06.549764 test begin: paddle.broadcast_to(Tensor([7, 1, 135, 0],"bool"), list[7,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 135, 0],"bool"), list[7,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 135, 135].  Tensor sizes: [7, 1, 135, 0]
2025-03-05 15:23:06.550292 test begin: paddle.broadcast_to(Tensor([7, 1, 135, 0],"bool"), list[7,8,135,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 135, 0],"bool"), list[7,8,135,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 135, 153].  Tensor sizes: [7, 1, 135, 0]
2025-03-05 15:23:06.550833 test begin: paddle.broadcast_to(Tensor([7, 1, 136, 0],"bool"), list[7,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 136, 0],"bool"), list[7,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 136, 136].  Tensor sizes: [7, 1, 136, 0]
2025-03-05 15:23:06.551351 test begin: paddle.broadcast_to(Tensor([7, 1, 136, 0],"bool"), list[7,8,136,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 136, 0],"bool"), list[7,8,136,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 136, 153].  Tensor sizes: [7, 1, 136, 0]
2025-03-05 15:23:06.551880 test begin: paddle.broadcast_to(Tensor([7, 1, 137, 0],"bool"), list[7,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 137, 0],"bool"), list[7,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 137, 137].  Tensor sizes: [7, 1, 137, 0]
2025-03-05 15:23:06.552447 test begin: paddle.broadcast_to(Tensor([7, 1, 137, 0],"bool"), list[7,8,137,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 137, 0],"bool"), list[7,8,137,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 137, 153].  Tensor sizes: [7, 1, 137, 0]
2025-03-05 15:23:06.552988 test begin: paddle.broadcast_to(Tensor([7, 1, 138, 0],"bool"), list[7,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 138, 0],"bool"), list[7,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 138, 138].  Tensor sizes: [7, 1, 138, 0]
2025-03-05 15:23:06.553513 test begin: paddle.broadcast_to(Tensor([7, 1, 138, 0],"bool"), list[7,8,138,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 138, 0],"bool"), list[7,8,138,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 138, 153].  Tensor sizes: [7, 1, 138, 0]
2025-03-05 15:23:06.554042 test begin: paddle.broadcast_to(Tensor([7, 1, 139, 0],"bool"), list[7,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 139, 0],"bool"), list[7,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 139, 139].  Tensor sizes: [7, 1, 139, 0]
2025-03-05 15:23:06.554551 test begin: paddle.broadcast_to(Tensor([7, 1, 139, 0],"bool"), list[7,8,139,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 139, 0],"bool"), list[7,8,139,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 139, 153].  Tensor sizes: [7, 1, 139, 0]
2025-03-05 15:23:06.555082 test begin: paddle.broadcast_to(Tensor([7, 1, 14, 0],"bool"), list[7,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 14, 0],"bool"), list[7,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 14, 14].  Tensor sizes: [7, 1, 14, 0]
2025-03-05 15:23:06.555579 test begin: paddle.broadcast_to(Tensor([7, 1, 14, 0],"bool"), list[7,8,14,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 14, 0],"bool"), list[7,8,14,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 14, 153].  Tensor sizes: [7, 1, 14, 0]
2025-03-05 15:23:06.556098 test begin: paddle.broadcast_to(Tensor([7, 1, 14, 0],"bool"), list[7,8,14,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 14, 0],"bool"), list[7,8,14,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 14, 49].  Tensor sizes: [7, 1, 14, 0]
2025-03-05 15:23:06.556626 test begin: paddle.broadcast_to(Tensor([7, 1, 140, 0],"bool"), list[7,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 140, 0],"bool"), list[7,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 140, 140].  Tensor sizes: [7, 1, 140, 0]
2025-03-05 15:23:06.557175 test begin: paddle.broadcast_to(Tensor([7, 1, 140, 0],"bool"), list[7,8,140,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 140, 0],"bool"), list[7,8,140,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 140, 153].  Tensor sizes: [7, 1, 140, 0]
2025-03-05 15:23:06.557710 test begin: paddle.broadcast_to(Tensor([7, 1, 141, 0],"bool"), list[7,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 141, 0],"bool"), list[7,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 141, 141].  Tensor sizes: [7, 1, 141, 0]
2025-03-05 15:23:06.558220 test begin: paddle.broadcast_to(Tensor([7, 1, 141, 0],"bool"), list[7,8,141,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 141, 0],"bool"), list[7,8,141,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 141, 153].  Tensor sizes: [7, 1, 141, 0]
2025-03-05 15:23:06.558733 test begin: paddle.broadcast_to(Tensor([7, 1, 142, 0],"bool"), list[7,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 142, 0],"bool"), list[7,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 142, 142].  Tensor sizes: [7, 1, 142, 0]
2025-03-05 15:23:06.559238 test begin: paddle.broadcast_to(Tensor([7, 1, 142, 0],"bool"), list[7,8,142,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 142, 0],"bool"), list[7,8,142,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 142, 153].  Tensor sizes: [7, 1, 142, 0]
2025-03-05 15:23:06.559765 test begin: paddle.broadcast_to(Tensor([7, 1, 143, 0],"bool"), list[7,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 143, 0],"bool"), list[7,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 143, 143].  Tensor sizes: [7, 1, 143, 0]
2025-03-05 15:23:06.560269 test begin: paddle.broadcast_to(Tensor([7, 1, 143, 0],"bool"), list[7,8,143,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 143, 0],"bool"), list[7,8,143,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 143, 153].  Tensor sizes: [7, 1, 143, 0]
2025-03-05 15:23:06.560793 test begin: paddle.broadcast_to(Tensor([7, 1, 144, 0],"bool"), list[7,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 144, 0],"bool"), list[7,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 144, 144].  Tensor sizes: [7, 1, 144, 0]
2025-03-05 15:23:06.561302 test begin: paddle.broadcast_to(Tensor([7, 1, 144, 0],"bool"), list[7,8,144,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 144, 0],"bool"), list[7,8,144,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 144, 153].  Tensor sizes: [7, 1, 144, 0]
2025-03-05 15:23:06.561974 test begin: paddle.broadcast_to(Tensor([7, 1, 145, 0],"bool"), list[7,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 145, 0],"bool"), list[7,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 145, 145].  Tensor sizes: [7, 1, 145, 0]
2025-03-05 15:23:06.562516 test begin: paddle.broadcast_to(Tensor([7, 1, 145, 0],"bool"), list[7,8,145,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 145, 0],"bool"), list[7,8,145,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 145, 153].  Tensor sizes: [7, 1, 145, 0]
2025-03-05 15:23:06.563053 test begin: paddle.broadcast_to(Tensor([7, 1, 146, 0],"bool"), list[7,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 146, 0],"bool"), list[7,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 146, 146].  Tensor sizes: [7, 1, 146, 0]
2025-03-05 15:23:06.563651 test begin: paddle.broadcast_to(Tensor([7, 1, 146, 0],"bool"), list[7,8,146,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 146, 0],"bool"), list[7,8,146,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 146, 153].  Tensor sizes: [7, 1, 146, 0]
2025-03-05 15:23:06.564234 test begin: paddle.broadcast_to(Tensor([7, 1, 147, 0],"bool"), list[7,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 147, 0],"bool"), list[7,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 147, 147].  Tensor sizes: [7, 1, 147, 0]
2025-03-05 15:23:06.564802 test begin: paddle.broadcast_to(Tensor([7, 1, 147, 0],"bool"), list[7,8,147,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 147, 0],"bool"), list[7,8,147,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 147, 153].  Tensor sizes: [7, 1, 147, 0]
2025-03-05 15:23:06.565409 test begin: paddle.broadcast_to(Tensor([7, 1, 148, 0],"bool"), list[7,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 148, 0],"bool"), list[7,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 148, 148].  Tensor sizes: [7, 1, 148, 0]
2025-03-05 15:23:06.565952 test begin: paddle.broadcast_to(Tensor([7, 1, 148, 0],"bool"), list[7,8,148,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 148, 0],"bool"), list[7,8,148,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 148, 153].  Tensor sizes: [7, 1, 148, 0]
2025-03-05 15:23:06.566457 test begin: paddle.broadcast_to(Tensor([7, 1, 149, 0],"bool"), list[7,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 149, 0],"bool"), list[7,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 149, 149].  Tensor sizes: [7, 1, 149, 0]
2025-03-05 15:23:06.566984 test begin: paddle.broadcast_to(Tensor([7, 1, 149, 0],"bool"), list[7,8,149,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 149, 0],"bool"), list[7,8,149,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 149, 153].  Tensor sizes: [7, 1, 149, 0]
2025-03-05 15:23:06.567485 test begin: paddle.broadcast_to(Tensor([7, 1, 15, 0],"bool"), list[7,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 15, 0],"bool"), list[7,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 15, 15].  Tensor sizes: [7, 1, 15, 0]
2025-03-05 15:23:06.567996 test begin: paddle.broadcast_to(Tensor([7, 1, 15, 0],"bool"), list[7,8,15,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 15, 0],"bool"), list[7,8,15,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 15, 153].  Tensor sizes: [7, 1, 15, 0]
2025-03-05 15:23:06.569000 test begin: paddle.broadcast_to(Tensor([7, 1, 15, 0],"bool"), list[7,8,15,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 15, 0],"bool"), list[7,8,15,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 15, 49].  Tensor sizes: [7, 1, 15, 0]
2025-03-05 15:23:06.569694 test begin: paddle.broadcast_to(Tensor([7, 1, 150, 0],"bool"), list[7,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 150, 0],"bool"), list[7,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 150, 150].  Tensor sizes: [7, 1, 150, 0]
2025-03-05 15:23:06.572983 test begin: paddle.broadcast_to(Tensor([7, 1, 150, 0],"bool"), list[7,8,150,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 150, 0],"bool"), list[7,8,150,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 150, 153].  Tensor sizes: [7, 1, 150, 0]
2025-03-05 15:23:06.573788 test begin: paddle.broadcast_to(Tensor([7, 1, 151, 0],"bool"), list[7,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 151, 0],"bool"), list[7,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 151, 151].  Tensor sizes: [7, 1, 151, 0]
2025-03-05 15:23:06.574547 test begin: paddle.broadcast_to(Tensor([7, 1, 151, 0],"bool"), list[7,8,151,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 151, 0],"bool"), list[7,8,151,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 151, 153].  Tensor sizes: [7, 1, 151, 0]
2025-03-05 15:23:06.575220 test begin: paddle.broadcast_to(Tensor([7, 1, 152, 0],"bool"), list[7,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 152, 0],"bool"), list[7,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 152, 152].  Tensor sizes: [7, 1, 152, 0]
2025-03-05 15:23:06.575858 test begin: paddle.broadcast_to(Tensor([7, 1, 152, 0],"bool"), list[7,8,152,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 152, 0],"bool"), list[7,8,152,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 152, 153].  Tensor sizes: [7, 1, 152, 0]
2025-03-05 15:23:06.576493 test begin: paddle.broadcast_to(Tensor([7, 1, 153, 0],"bool"), list[7,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 153, 0],"bool"), list[7,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 153, 153].  Tensor sizes: [7, 1, 153, 0]
2025-03-05 15:23:06.577186 test begin: paddle.broadcast_to(Tensor([7, 1, 154, 0],"bool"), list[7,8,154,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 154, 0],"bool"), list[7,8,154,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 154, 153].  Tensor sizes: [7, 1, 154, 0]
2025-03-05 15:23:06.578165 test begin: paddle.broadcast_to(Tensor([7, 1, 154, 0],"bool"), list[7,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 154, 0],"bool"), list[7,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 154, 154].  Tensor sizes: [7, 1, 154, 0]
2025-03-05 15:23:06.578901 test begin: paddle.broadcast_to(Tensor([7, 1, 155, 0],"bool"), list[7,8,155,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 155, 0],"bool"), list[7,8,155,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 155, 153].  Tensor sizes: [7, 1, 155, 0]
2025-03-05 15:23:06.579688 test begin: paddle.broadcast_to(Tensor([7, 1, 155, 0],"bool"), list[7,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 155, 0],"bool"), list[7,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 155, 155].  Tensor sizes: [7, 1, 155, 0]
2025-03-05 15:23:06.580361 test begin: paddle.broadcast_to(Tensor([7, 1, 156, 0],"bool"), list[7,8,156,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 156, 0],"bool"), list[7,8,156,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 156, 153].  Tensor sizes: [7, 1, 156, 0]
2025-03-05 15:23:06.581614 test begin: paddle.broadcast_to(Tensor([7, 1, 156, 0],"bool"), list[7,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 156, 0],"bool"), list[7,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 156, 156].  Tensor sizes: [7, 1, 156, 0]
2025-03-05 15:23:06.582235 test begin: paddle.broadcast_to(Tensor([7, 1, 157, 0],"bool"), list[7,8,157,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 157, 0],"bool"), list[7,8,157,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 157, 153].  Tensor sizes: [7, 1, 157, 0]
2025-03-05 15:23:06.582880 test begin: paddle.broadcast_to(Tensor([7, 1, 157, 0],"bool"), list[7,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 157, 0],"bool"), list[7,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 157, 157].  Tensor sizes: [7, 1, 157, 0]
2025-03-05 15:23:06.583475 test begin: paddle.broadcast_to(Tensor([7, 1, 158, 0],"bool"), list[7,8,158,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 158, 0],"bool"), list[7,8,158,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 158, 153].  Tensor sizes: [7, 1, 158, 0]
2025-03-05 15:23:06.584091 test begin: paddle.broadcast_to(Tensor([7, 1, 158, 0],"bool"), list[7,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 158, 0],"bool"), list[7,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 158, 158].  Tensor sizes: [7, 1, 158, 0]
2025-03-05 15:23:06.584741 test begin: paddle.broadcast_to(Tensor([7, 1, 159, 0],"bool"), list[7,8,159,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 159, 0],"bool"), list[7,8,159,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 159, 153].  Tensor sizes: [7, 1, 159, 0]
2025-03-05 15:23:06.585298 test begin: paddle.broadcast_to(Tensor([7, 1, 159, 0],"bool"), list[7,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 159, 0],"bool"), list[7,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 159, 159].  Tensor sizes: [7, 1, 159, 0]
2025-03-05 15:23:06.585824 test begin: paddle.broadcast_to(Tensor([7, 1, 16, 0],"bool"), list[7,8,16,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 16, 0],"bool"), list[7,8,16,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 16, 153].  Tensor sizes: [7, 1, 16, 0]
2025-03-05 15:23:06.586343 test begin: paddle.broadcast_to(Tensor([7, 1, 16, 0],"bool"), list[7,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 16, 0],"bool"), list[7,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 16, 16].  Tensor sizes: [7, 1, 16, 0]
2025-03-05 15:23:06.586879 test begin: paddle.broadcast_to(Tensor([7, 1, 16, 0],"bool"), list[7,8,16,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 16, 0],"bool"), list[7,8,16,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 16, 49].  Tensor sizes: [7, 1, 16, 0]
2025-03-05 15:23:06.587497 test begin: paddle.broadcast_to(Tensor([7, 1, 160, 0],"bool"), list[7,8,160,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 160, 0],"bool"), list[7,8,160,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 160, 153].  Tensor sizes: [7, 1, 160, 0]
2025-03-05 15:23:06.588164 test begin: paddle.broadcast_to(Tensor([7, 1, 160, 0],"bool"), list[7,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 160, 0],"bool"), list[7,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 160, 160].  Tensor sizes: [7, 1, 160, 0]
2025-03-05 15:23:06.588784 test begin: paddle.broadcast_to(Tensor([7, 1, 161, 0],"bool"), list[7,8,161,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 161, 0],"bool"), list[7,8,161,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 161, 153].  Tensor sizes: [7, 1, 161, 0]
2025-03-05 15:23:06.589389 test begin: paddle.broadcast_to(Tensor([7, 1, 161, 0],"bool"), list[7,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 161, 0],"bool"), list[7,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 161, 161].  Tensor sizes: [7, 1, 161, 0]
2025-03-05 15:23:06.589989 test begin: paddle.broadcast_to(Tensor([7, 1, 162, 0],"bool"), list[7,8,162,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 162, 0],"bool"), list[7,8,162,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 162, 153].  Tensor sizes: [7, 1, 162, 0]
2025-03-05 15:23:06.590597 test begin: paddle.broadcast_to(Tensor([7, 1, 162, 0],"bool"), list[7,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 162, 0],"bool"), list[7,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 162, 162].  Tensor sizes: [7, 1, 162, 0]
2025-03-05 15:23:06.591197 test begin: paddle.broadcast_to(Tensor([7, 1, 163, 0],"bool"), list[7,8,163,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 163, 0],"bool"), list[7,8,163,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 163, 153].  Tensor sizes: [7, 1, 163, 0]
2025-03-05 15:23:06.591801 test begin: paddle.broadcast_to(Tensor([7, 1, 163, 0],"bool"), list[7,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 163, 0],"bool"), list[7,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 163, 163].  Tensor sizes: [7, 1, 163, 0]
2025-03-05 15:23:06.592389 test begin: paddle.broadcast_to(Tensor([7, 1, 164, 0],"bool"), list[7,8,164,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 164, 0],"bool"), list[7,8,164,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 164, 153].  Tensor sizes: [7, 1, 164, 0]
2025-03-05 15:23:06.593040 test begin: paddle.broadcast_to(Tensor([7, 1, 164, 0],"bool"), list[7,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 164, 0],"bool"), list[7,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 164, 164].  Tensor sizes: [7, 1, 164, 0]
2025-03-05 15:23:06.593649 test begin: paddle.broadcast_to(Tensor([7, 1, 165, 0],"bool"), list[7,8,165,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 165, 0],"bool"), list[7,8,165,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 165, 153].  Tensor sizes: [7, 1, 165, 0]
2025-03-05 15:23:06.594258 test begin: paddle.broadcast_to(Tensor([7, 1, 165, 0],"bool"), list[7,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 165, 0],"bool"), list[7,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 165, 165].  Tensor sizes: [7, 1, 165, 0]
2025-03-05 15:23:06.594858 test begin: paddle.broadcast_to(Tensor([7, 1, 166, 0],"bool"), list[7,8,166,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 166, 0],"bool"), list[7,8,166,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 166, 153].  Tensor sizes: [7, 1, 166, 0]
2025-03-05 15:23:06.595452 test begin: paddle.broadcast_to(Tensor([7, 1, 166, 0],"bool"), list[7,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 166, 0],"bool"), list[7,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 166, 166].  Tensor sizes: [7, 1, 166, 0]
2025-03-05 15:23:06.596051 test begin: paddle.broadcast_to(Tensor([7, 1, 167, 0],"bool"), list[7,8,167,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 167, 0],"bool"), list[7,8,167,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 167, 153].  Tensor sizes: [7, 1, 167, 0]
2025-03-05 15:23:06.596646 test begin: paddle.broadcast_to(Tensor([7, 1, 167, 0],"bool"), list[7,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 167, 0],"bool"), list[7,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 167, 167].  Tensor sizes: [7, 1, 167, 0]
2025-03-05 15:23:06.597235 test begin: paddle.broadcast_to(Tensor([7, 1, 168, 0],"bool"), list[7,8,168,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 168, 0],"bool"), list[7,8,168,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 168, 153].  Tensor sizes: [7, 1, 168, 0]
2025-03-05 15:23:06.597841 test begin: paddle.broadcast_to(Tensor([7, 1, 168, 0],"bool"), list[7,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 168, 0],"bool"), list[7,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 168, 168].  Tensor sizes: [7, 1, 168, 0]
2025-03-05 15:23:06.598435 test begin: paddle.broadcast_to(Tensor([7, 1, 169, 0],"bool"), list[7,8,169,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 169, 0],"bool"), list[7,8,169,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 169, 153].  Tensor sizes: [7, 1, 169, 0]
2025-03-05 15:23:06.599110 test begin: paddle.broadcast_to(Tensor([7, 1, 169, 0],"bool"), list[7,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 169, 0],"bool"), list[7,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 169, 169].  Tensor sizes: [7, 1, 169, 0]
2025-03-05 15:23:06.599724 test begin: paddle.broadcast_to(Tensor([7, 1, 17, 0],"bool"), list[7,8,17,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 17, 0],"bool"), list[7,8,17,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 17, 153].  Tensor sizes: [7, 1, 17, 0]
2025-03-05 15:23:06.600366 test begin: paddle.broadcast_to(Tensor([7, 1, 17, 0],"bool"), list[7,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 17, 0],"bool"), list[7,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 17, 17].  Tensor sizes: [7, 1, 17, 0]
2025-03-05 15:23:06.600970 test begin: paddle.broadcast_to(Tensor([7, 1, 17, 0],"bool"), list[7,8,17,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 17, 0],"bool"), list[7,8,17,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 17, 49].  Tensor sizes: [7, 1, 17, 0]
2025-03-05 15:23:06.601573 test begin: paddle.broadcast_to(Tensor([7, 1, 170, 0],"bool"), list[7,8,170,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 170, 0],"bool"), list[7,8,170,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 170, 153].  Tensor sizes: [7, 1, 170, 0]
2025-03-05 15:23:06.602167 test begin: paddle.broadcast_to(Tensor([7, 1, 170, 0],"bool"), list[7,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 170, 0],"bool"), list[7,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 170, 170].  Tensor sizes: [7, 1, 170, 0]
2025-03-05 15:23:06.602759 test begin: paddle.broadcast_to(Tensor([7, 1, 171, 0],"bool"), list[7,8,171,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 171, 0],"bool"), list[7,8,171,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 171, 153].  Tensor sizes: [7, 1, 171, 0]
2025-03-05 15:23:06.603404 test begin: paddle.broadcast_to(Tensor([7, 1, 171, 0],"bool"), list[7,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 171, 0],"bool"), list[7,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 171, 171].  Tensor sizes: [7, 1, 171, 0]
2025-03-05 15:23:06.604028 test begin: paddle.broadcast_to(Tensor([7, 1, 172, 0],"bool"), list[7,8,172,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 172, 0],"bool"), list[7,8,172,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 172, 153].  Tensor sizes: [7, 1, 172, 0]
2025-03-05 15:23:06.604727 test begin: paddle.broadcast_to(Tensor([7, 1, 172, 0],"bool"), list[7,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 172, 0],"bool"), list[7,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 172, 172].  Tensor sizes: [7, 1, 172, 0]
2025-03-05 15:23:06.605548 test begin: paddle.broadcast_to(Tensor([7, 1, 173, 0],"bool"), list[7,8,173,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 173, 0],"bool"), list[7,8,173,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 173, 153].  Tensor sizes: [7, 1, 173, 0]
2025-03-05 15:23:06.606119 test begin: paddle.broadcast_to(Tensor([7, 1, 173, 0],"bool"), list[7,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 173, 0],"bool"), list[7,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 173, 173].  Tensor sizes: [7, 1, 173, 0]
2025-03-05 15:23:06.606662 test begin: paddle.broadcast_to(Tensor([7, 1, 174, 0],"bool"), list[7,8,174,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 174, 0],"bool"), list[7,8,174,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 174, 153].  Tensor sizes: [7, 1, 174, 0]
2025-03-05 15:23:06.607185 test begin: paddle.broadcast_to(Tensor([7, 1, 174, 0],"bool"), list[7,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 174, 0],"bool"), list[7,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 174, 174].  Tensor sizes: [7, 1, 174, 0]
2025-03-05 15:23:06.607715 test begin: paddle.broadcast_to(Tensor([7, 1, 175, 0],"bool"), list[7,8,175,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 175, 0],"bool"), list[7,8,175,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 175, 153].  Tensor sizes: [7, 1, 175, 0]
2025-03-05 15:23:06.608248 test begin: paddle.broadcast_to(Tensor([7, 1, 175, 0],"bool"), list[7,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 175, 0],"bool"), list[7,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 175, 175].  Tensor sizes: [7, 1, 175, 0]
2025-03-05 15:23:06.608773 test begin: paddle.broadcast_to(Tensor([7, 1, 176, 0],"bool"), list[7,8,176,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 176, 0],"bool"), list[7,8,176,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 176, 153].  Tensor sizes: [7, 1, 176, 0]
2025-03-05 15:23:06.609283 test begin: paddle.broadcast_to(Tensor([7, 1, 176, 0],"bool"), list[7,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 176, 0],"bool"), list[7,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 176, 176].  Tensor sizes: [7, 1, 176, 0]
2025-03-05 15:23:06.609804 test begin: paddle.broadcast_to(Tensor([7, 1, 177, 0],"bool"), list[7,8,177,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 177, 0],"bool"), list[7,8,177,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 177, 153].  Tensor sizes: [7, 1, 177, 0]
2025-03-05 15:23:06.610324 test begin: paddle.broadcast_to(Tensor([7, 1, 177, 0],"bool"), list[7,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 177, 0],"bool"), list[7,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 177, 177].  Tensor sizes: [7, 1, 177, 0]
2025-03-05 15:23:06.610871 test begin: paddle.broadcast_to(Tensor([7, 1, 178, 0],"bool"), list[7,8,178,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 178, 0],"bool"), list[7,8,178,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 178, 153].  Tensor sizes: [7, 1, 178, 0]
2025-03-05 15:23:06.611414 test begin: paddle.broadcast_to(Tensor([7, 1, 178, 0],"bool"), list[7,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 178, 0],"bool"), list[7,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 178, 178].  Tensor sizes: [7, 1, 178, 0]
2025-03-05 15:23:06.611963 test begin: paddle.broadcast_to(Tensor([7, 1, 179, 0],"bool"), list[7,8,179,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 179, 0],"bool"), list[7,8,179,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 179, 153].  Tensor sizes: [7, 1, 179, 0]
2025-03-05 15:23:06.612503 test begin: paddle.broadcast_to(Tensor([7, 1, 179, 0],"bool"), list[7,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 179, 0],"bool"), list[7,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 179, 179].  Tensor sizes: [7, 1, 179, 0]
2025-03-05 15:23:06.613024 test begin: paddle.broadcast_to(Tensor([7, 1, 18, 0],"bool"), list[7,8,18,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 18, 0],"bool"), list[7,8,18,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 18, 153].  Tensor sizes: [7, 1, 18, 0]
2025-03-05 15:23:06.613538 test begin: paddle.broadcast_to(Tensor([7, 1, 18, 0],"bool"), list[7,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 18, 0],"bool"), list[7,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 18, 18].  Tensor sizes: [7, 1, 18, 0]
2025-03-05 15:23:06.614067 test begin: paddle.broadcast_to(Tensor([7, 1, 18, 0],"bool"), list[7,8,18,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 18, 0],"bool"), list[7,8,18,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 18, 49].  Tensor sizes: [7, 1, 18, 0]
2025-03-05 15:23:06.614579 test begin: paddle.broadcast_to(Tensor([7, 1, 180, 0],"bool"), list[7,8,180,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 180, 0],"bool"), list[7,8,180,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 180, 153].  Tensor sizes: [7, 1, 180, 0]
2025-03-05 15:23:06.615124 test begin: paddle.broadcast_to(Tensor([7, 1, 180, 0],"bool"), list[7,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 180, 0],"bool"), list[7,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 180, 180].  Tensor sizes: [7, 1, 180, 0]
2025-03-05 15:23:06.615637 test begin: paddle.broadcast_to(Tensor([7, 1, 19, 0],"bool"), list[7,8,19,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 19, 0],"bool"), list[7,8,19,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 19, 153].  Tensor sizes: [7, 1, 19, 0]
2025-03-05 15:23:06.616146 test begin: paddle.broadcast_to(Tensor([7, 1, 19, 0],"bool"), list[7,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 19, 0],"bool"), list[7,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 19, 19].  Tensor sizes: [7, 1, 19, 0]
2025-03-05 15:23:06.616707 test begin: paddle.broadcast_to(Tensor([7, 1, 19, 0],"bool"), list[7,8,19,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 19, 0],"bool"), list[7,8,19,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 19, 49].  Tensor sizes: [7, 1, 19, 0]
2025-03-05 15:23:06.617228 test begin: paddle.broadcast_to(Tensor([7, 1, 2, 0],"bool"), list[7,8,2,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 2, 0],"bool"), list[7,8,2,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 2, 153].  Tensor sizes: [7, 1, 2, 0]
2025-03-05 15:23:06.617754 test begin: paddle.broadcast_to(Tensor([7, 1, 2, 0],"bool"), list[7,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 2, 0],"bool"), list[7,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 2, 2].  Tensor sizes: [7, 1, 2, 0]
2025-03-05 15:23:06.618266 test begin: paddle.broadcast_to(Tensor([7, 1, 2, 0],"bool"), list[7,8,2,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 2, 0],"bool"), list[7,8,2,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 2, 49].  Tensor sizes: [7, 1, 2, 0]
2025-03-05 15:23:06.618789 test begin: paddle.broadcast_to(Tensor([7, 1, 20, 0],"bool"), list[7,8,20,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 20, 0],"bool"), list[7,8,20,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 20, 153].  Tensor sizes: [7, 1, 20, 0]
2025-03-05 15:23:06.619297 test begin: paddle.broadcast_to(Tensor([7, 1, 20, 0],"bool"), list[7,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 20, 0],"bool"), list[7,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 20, 20].  Tensor sizes: [7, 1, 20, 0]
2025-03-05 15:23:06.619814 test begin: paddle.broadcast_to(Tensor([7, 1, 20, 0],"bool"), list[7,8,20,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 20, 0],"bool"), list[7,8,20,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 20, 49].  Tensor sizes: [7, 1, 20, 0]
2025-03-05 15:23:06.620322 test begin: paddle.broadcast_to(Tensor([7, 1, 21, 0],"bool"), list[7,8,21,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 21, 0],"bool"), list[7,8,21,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 21, 153].  Tensor sizes: [7, 1, 21, 0]
2025-03-05 15:23:06.620853 test begin: paddle.broadcast_to(Tensor([7, 1, 21, 0],"bool"), list[7,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 21, 0],"bool"), list[7,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 21, 21].  Tensor sizes: [7, 1, 21, 0]
2025-03-05 15:23:06.621369 test begin: paddle.broadcast_to(Tensor([7, 1, 21, 0],"bool"), list[7,8,21,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 21, 0],"bool"), list[7,8,21,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 21, 49].  Tensor sizes: [7, 1, 21, 0]
2025-03-05 15:23:06.621888 test begin: paddle.broadcast_to(Tensor([7, 1, 22, 0],"bool"), list[7,8,22,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 22, 0],"bool"), list[7,8,22,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 22, 153].  Tensor sizes: [7, 1, 22, 0]
2025-03-05 15:23:06.622401 test begin: paddle.broadcast_to(Tensor([7, 1, 22, 0],"bool"), list[7,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 22, 0],"bool"), list[7,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 22, 22].  Tensor sizes: [7, 1, 22, 0]
2025-03-05 15:23:06.622923 test begin: paddle.broadcast_to(Tensor([7, 1, 22, 0],"bool"), list[7,8,22,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 22, 0],"bool"), list[7,8,22,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 22, 49].  Tensor sizes: [7, 1, 22, 0]
2025-03-05 15:23:06.623432 test begin: paddle.broadcast_to(Tensor([7, 1, 23, 0],"bool"), list[7,8,23,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 23, 0],"bool"), list[7,8,23,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 23, 153].  Tensor sizes: [7, 1, 23, 0]
2025-03-05 15:23:06.623955 test begin: paddle.broadcast_to(Tensor([7, 1, 23, 0],"bool"), list[7,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 23, 0],"bool"), list[7,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 23, 23].  Tensor sizes: [7, 1, 23, 0]
2025-03-05 15:23:06.624477 test begin: paddle.broadcast_to(Tensor([7, 1, 23, 0],"bool"), list[7,8,23,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 23, 0],"bool"), list[7,8,23,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 23, 49].  Tensor sizes: [7, 1, 23, 0]
2025-03-05 15:23:06.624997 test begin: paddle.broadcast_to(Tensor([7, 1, 24, 0],"bool"), list[7,8,24,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 24, 0],"bool"), list[7,8,24,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 24, 153].  Tensor sizes: [7, 1, 24, 0]
2025-03-05 15:23:06.625512 test begin: paddle.broadcast_to(Tensor([7, 1, 24, 0],"bool"), list[7,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 24, 0],"bool"), list[7,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 24, 24].  Tensor sizes: [7, 1, 24, 0]
2025-03-05 15:23:06.626116 test begin: paddle.broadcast_to(Tensor([7, 1, 24, 0],"bool"), list[7,8,24,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 24, 0],"bool"), list[7,8,24,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 24, 49].  Tensor sizes: [7, 1, 24, 0]
2025-03-05 15:23:06.626649 test begin: paddle.broadcast_to(Tensor([7, 1, 25, 0],"bool"), list[7,8,25,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 25, 0],"bool"), list[7,8,25,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 25, 153].  Tensor sizes: [7, 1, 25, 0]
2025-03-05 15:23:06.627166 test begin: paddle.broadcast_to(Tensor([7, 1, 25, 0],"bool"), list[7,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 25, 0],"bool"), list[7,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 25, 25].  Tensor sizes: [7, 1, 25, 0]
2025-03-05 15:23:06.627687 test begin: paddle.broadcast_to(Tensor([7, 1, 25, 0],"bool"), list[7,8,25,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 25, 0],"bool"), list[7,8,25,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 25, 49].  Tensor sizes: [7, 1, 25, 0]
2025-03-05 15:23:06.628192 test begin: paddle.broadcast_to(Tensor([7, 1, 26, 0],"bool"), list[7,8,26,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 26, 0],"bool"), list[7,8,26,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 26, 153].  Tensor sizes: [7, 1, 26, 0]
2025-03-05 15:23:06.628780 test begin: paddle.broadcast_to(Tensor([7, 1, 26, 0],"bool"), list[7,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 26, 0],"bool"), list[7,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 26, 26].  Tensor sizes: [7, 1, 26, 0]
2025-03-05 15:23:06.629300 test begin: paddle.broadcast_to(Tensor([7, 1, 26, 0],"bool"), list[7,8,26,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 26, 0],"bool"), list[7,8,26,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 26, 49].  Tensor sizes: [7, 1, 26, 0]
2025-03-05 15:23:06.629822 test begin: paddle.broadcast_to(Tensor([7, 1, 27, 0],"bool"), list[7,8,27,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 27, 0],"bool"), list[7,8,27,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 27, 153].  Tensor sizes: [7, 1, 27, 0]
2025-03-05 15:23:06.630333 test begin: paddle.broadcast_to(Tensor([7, 1, 27, 0],"bool"), list[7,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 27, 0],"bool"), list[7,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 27, 27].  Tensor sizes: [7, 1, 27, 0]
2025-03-05 15:23:06.630843 test begin: paddle.broadcast_to(Tensor([7, 1, 27, 0],"bool"), list[7,8,27,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 27, 0],"bool"), list[7,8,27,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 27, 49].  Tensor sizes: [7, 1, 27, 0]
2025-03-05 15:23:06.631356 test begin: paddle.broadcast_to(Tensor([7, 1, 28, 0],"bool"), list[7,8,28,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 28, 0],"bool"), list[7,8,28,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 28, 153].  Tensor sizes: [7, 1, 28, 0]
2025-03-05 15:23:06.631894 test begin: paddle.broadcast_to(Tensor([7, 1, 28, 0],"bool"), list[7,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 28, 0],"bool"), list[7,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 28, 28].  Tensor sizes: [7, 1, 28, 0]
2025-03-05 15:23:06.632432 test begin: paddle.broadcast_to(Tensor([7, 1, 28, 0],"bool"), list[7,8,28,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 28, 0],"bool"), list[7,8,28,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 28, 49].  Tensor sizes: [7, 1, 28, 0]
2025-03-05 15:23:06.633035 test begin: paddle.broadcast_to(Tensor([7, 1, 29, 0],"bool"), list[7,8,29,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 29, 0],"bool"), list[7,8,29,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 29, 153].  Tensor sizes: [7, 1, 29, 0]
2025-03-05 15:23:06.633568 test begin: paddle.broadcast_to(Tensor([7, 1, 29, 0],"bool"), list[7,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 29, 0],"bool"), list[7,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 29, 29].  Tensor sizes: [7, 1, 29, 0]
2025-03-05 15:23:06.634098 test begin: paddle.broadcast_to(Tensor([7, 1, 29, 0],"bool"), list[7,8,29,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 29, 0],"bool"), list[7,8,29,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 29, 49].  Tensor sizes: [7, 1, 29, 0]
2025-03-05 15:23:06.634618 test begin: paddle.broadcast_to(Tensor([7, 1, 3, 0],"bool"), list[7,8,3,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 3, 0],"bool"), list[7,8,3,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 3, 153].  Tensor sizes: [7, 1, 3, 0]
2025-03-05 15:23:06.635145 test begin: paddle.broadcast_to(Tensor([7, 1, 3, 0],"bool"), list[7,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 3, 0],"bool"), list[7,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 3, 3].  Tensor sizes: [7, 1, 3, 0]
2025-03-05 15:23:06.635719 test begin: paddle.broadcast_to(Tensor([7, 1, 3, 0],"bool"), list[7,8,3,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 3, 0],"bool"), list[7,8,3,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 3, 49].  Tensor sizes: [7, 1, 3, 0]
2025-03-05 15:23:06.636236 test begin: paddle.broadcast_to(Tensor([7, 1, 30, 0],"bool"), list[7,8,30,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 30, 0],"bool"), list[7,8,30,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 30, 153].  Tensor sizes: [7, 1, 30, 0]
2025-03-05 15:23:06.636757 test begin: paddle.broadcast_to(Tensor([7, 1, 30, 0],"bool"), list[7,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 30, 0],"bool"), list[7,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 30, 30].  Tensor sizes: [7, 1, 30, 0]
2025-03-05 15:23:06.637279 test begin: paddle.broadcast_to(Tensor([7, 1, 30, 0],"bool"), list[7,8,30,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 30, 0],"bool"), list[7,8,30,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 30, 49].  Tensor sizes: [7, 1, 30, 0]
2025-03-05 15:23:06.637801 test begin: paddle.broadcast_to(Tensor([7, 1, 31, 0],"bool"), list[7,8,31,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 31, 0],"bool"), list[7,8,31,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 31, 153].  Tensor sizes: [7, 1, 31, 0]
2025-03-05 15:23:06.638308 test begin: paddle.broadcast_to(Tensor([7, 1, 31, 0],"bool"), list[7,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 31, 0],"bool"), list[7,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 31, 31].  Tensor sizes: [7, 1, 31, 0]
2025-03-05 15:23:06.638840 test begin: paddle.broadcast_to(Tensor([7, 1, 31, 0],"bool"), list[7,8,31,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 31, 0],"bool"), list[7,8,31,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 31, 49].  Tensor sizes: [7, 1, 31, 0]
2025-03-05 15:23:06.639353 test begin: paddle.broadcast_to(Tensor([7, 1, 32, 0],"bool"), list[7,8,32,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 32, 0],"bool"), list[7,8,32,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 32, 153].  Tensor sizes: [7, 1, 32, 0]
2025-03-05 15:23:06.639900 test begin: paddle.broadcast_to(Tensor([7, 1, 32, 0],"bool"), list[7,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 32, 0],"bool"), list[7,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 32, 32].  Tensor sizes: [7, 1, 32, 0]
2025-03-05 15:23:06.640405 test begin: paddle.broadcast_to(Tensor([7, 1, 32, 0],"bool"), list[7,8,32,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 32, 0],"bool"), list[7,8,32,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 32, 49].  Tensor sizes: [7, 1, 32, 0]
2025-03-05 15:23:06.640923 test begin: paddle.broadcast_to(Tensor([7, 1, 33, 0],"bool"), list[7,8,33,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 33, 0],"bool"), list[7,8,33,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 33, 153].  Tensor sizes: [7, 1, 33, 0]
2025-03-05 15:23:06.641437 test begin: paddle.broadcast_to(Tensor([7, 1, 33, 0],"bool"), list[7,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 33, 0],"bool"), list[7,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 33, 33].  Tensor sizes: [7, 1, 33, 0]
2025-03-05 15:23:06.641960 test begin: paddle.broadcast_to(Tensor([7, 1, 33, 0],"bool"), list[7,8,33,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 33, 0],"bool"), list[7,8,33,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 33, 49].  Tensor sizes: [7, 1, 33, 0]
2025-03-05 15:23:06.642502 test begin: paddle.broadcast_to(Tensor([7, 1, 34, 0],"bool"), list[7,8,34,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 34, 0],"bool"), list[7,8,34,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 34, 153].  Tensor sizes: [7, 1, 34, 0]
2025-03-05 15:23:06.643032 test begin: paddle.broadcast_to(Tensor([7, 1, 34, 0],"bool"), list[7,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 34, 0],"bool"), list[7,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 34, 34].  Tensor sizes: [7, 1, 34, 0]
2025-03-05 15:23:06.643542 test begin: paddle.broadcast_to(Tensor([7, 1, 34, 0],"bool"), list[7,8,34,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 34, 0],"bool"), list[7,8,34,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 34, 49].  Tensor sizes: [7, 1, 34, 0]
2025-03-05 15:23:06.644062 test begin: paddle.broadcast_to(Tensor([7, 1, 35, 0],"bool"), list[7,8,35,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 35, 0],"bool"), list[7,8,35,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 35, 153].  Tensor sizes: [7, 1, 35, 0]
2025-03-05 15:23:06.644565 test begin: paddle.broadcast_to(Tensor([7, 1, 35, 0],"bool"), list[7,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 35, 0],"bool"), list[7,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 35, 35].  Tensor sizes: [7, 1, 35, 0]
2025-03-05 15:23:06.645105 test begin: paddle.broadcast_to(Tensor([7, 1, 35, 0],"bool"), list[7,8,35,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 35, 0],"bool"), list[7,8,35,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 35, 49].  Tensor sizes: [7, 1, 35, 0]
2025-03-05 15:23:06.645634 test begin: paddle.broadcast_to(Tensor([7, 1, 36, 0],"bool"), list[7,8,36,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 36, 0],"bool"), list[7,8,36,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 36, 153].  Tensor sizes: [7, 1, 36, 0]
2025-03-05 15:23:06.646154 test begin: paddle.broadcast_to(Tensor([7, 1, 36, 0],"bool"), list[7,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 36, 0],"bool"), list[7,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 36, 36].  Tensor sizes: [7, 1, 36, 0]
2025-03-05 15:23:06.646671 test begin: paddle.broadcast_to(Tensor([7, 1, 36, 0],"bool"), list[7,8,36,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 36, 0],"bool"), list[7,8,36,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 36, 49].  Tensor sizes: [7, 1, 36, 0]
2025-03-05 15:23:06.647185 test begin: paddle.broadcast_to(Tensor([7, 1, 37, 0],"bool"), list[7,8,37,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 37, 0],"bool"), list[7,8,37,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 37, 153].  Tensor sizes: [7, 1, 37, 0]
2025-03-05 15:23:06.647705 test begin: paddle.broadcast_to(Tensor([7, 1, 37, 0],"bool"), list[7,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 37, 0],"bool"), list[7,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 37, 37].  Tensor sizes: [7, 1, 37, 0]
2025-03-05 15:23:06.648226 test begin: paddle.broadcast_to(Tensor([7, 1, 37, 0],"bool"), list[7,8,37,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 37, 0],"bool"), list[7,8,37,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 37, 49].  Tensor sizes: [7, 1, 37, 0]
2025-03-05 15:23:06.648769 test begin: paddle.broadcast_to(Tensor([7, 1, 38, 0],"bool"), list[7,8,38,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 38, 0],"bool"), list[7,8,38,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 38, 153].  Tensor sizes: [7, 1, 38, 0]
2025-03-05 15:23:06.649304 test begin: paddle.broadcast_to(Tensor([7, 1, 38, 0],"bool"), list[7,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 38, 0],"bool"), list[7,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 38, 38].  Tensor sizes: [7, 1, 38, 0]
2025-03-05 15:23:06.649837 test begin: paddle.broadcast_to(Tensor([7, 1, 38, 0],"bool"), list[7,8,38,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 38, 0],"bool"), list[7,8,38,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 38, 49].  Tensor sizes: [7, 1, 38, 0]
2025-03-05 15:23:06.650343 test begin: paddle.broadcast_to(Tensor([7, 1, 39, 0],"bool"), list[7,8,39,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 39, 0],"bool"), list[7,8,39,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 39, 153].  Tensor sizes: [7, 1, 39, 0]
2025-03-05 15:23:06.650861 test begin: paddle.broadcast_to(Tensor([7, 1, 39, 0],"bool"), list[7,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 39, 0],"bool"), list[7,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 39, 39].  Tensor sizes: [7, 1, 39, 0]
2025-03-05 15:23:06.651380 test begin: paddle.broadcast_to(Tensor([7, 1, 39, 0],"bool"), list[7,8,39,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 39, 0],"bool"), list[7,8,39,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 39, 49].  Tensor sizes: [7, 1, 39, 0]
2025-03-05 15:23:06.651913 test begin: paddle.broadcast_to(Tensor([7, 1, 4, 0],"bool"), list[7,8,4,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 4, 0],"bool"), list[7,8,4,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 4, 153].  Tensor sizes: [7, 1, 4, 0]
2025-03-05 15:23:06.652423 test begin: paddle.broadcast_to(Tensor([7, 1, 4, 0],"bool"), list[7,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 4, 0],"bool"), list[7,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 4, 4].  Tensor sizes: [7, 1, 4, 0]
2025-03-05 15:23:06.652950 test begin: paddle.broadcast_to(Tensor([7, 1, 4, 0],"bool"), list[7,8,4,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 4, 0],"bool"), list[7,8,4,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 4, 49].  Tensor sizes: [7, 1, 4, 0]
2025-03-05 15:23:06.653456 test begin: paddle.broadcast_to(Tensor([7, 1, 40, 0],"bool"), list[7,8,40,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 40, 0],"bool"), list[7,8,40,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 40, 153].  Tensor sizes: [7, 1, 40, 0]
2025-03-05 15:23:06.653974 test begin: paddle.broadcast_to(Tensor([7, 1, 40, 0],"bool"), list[7,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 40, 0],"bool"), list[7,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 40, 40].  Tensor sizes: [7, 1, 40, 0]
2025-03-05 15:23:06.654484 test begin: paddle.broadcast_to(Tensor([7, 1, 40, 0],"bool"), list[7,8,40,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 40, 0],"bool"), list[7,8,40,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 40, 49].  Tensor sizes: [7, 1, 40, 0]
2025-03-05 15:23:06.655009 test begin: paddle.broadcast_to(Tensor([7, 1, 41, 0],"bool"), list[7,8,41,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 41, 0],"bool"), list[7,8,41,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 41, 153].  Tensor sizes: [7, 1, 41, 0]
2025-03-05 15:23:06.655519 test begin: paddle.broadcast_to(Tensor([7, 1, 41, 0],"bool"), list[7,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 41, 0],"bool"), list[7,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 41, 41].  Tensor sizes: [7, 1, 41, 0]
2025-03-05 15:23:06.656066 test begin: paddle.broadcast_to(Tensor([7, 1, 41, 0],"bool"), list[7,8,41,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 41, 0],"bool"), list[7,8,41,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 41, 49].  Tensor sizes: [7, 1, 41, 0]
2025-03-05 15:23:06.656613 test begin: paddle.broadcast_to(Tensor([7, 1, 42, 0],"bool"), list[7,8,42,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 42, 0],"bool"), list[7,8,42,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 42, 153].  Tensor sizes: [7, 1, 42, 0]
2025-03-05 15:23:06.657135 test begin: paddle.broadcast_to(Tensor([7, 1, 42, 0],"bool"), list[7,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 42, 0],"bool"), list[7,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 42, 42].  Tensor sizes: [7, 1, 42, 0]
2025-03-05 15:23:06.657659 test begin: paddle.broadcast_to(Tensor([7, 1, 42, 0],"bool"), list[7,8,42,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 42, 0],"bool"), list[7,8,42,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 42, 49].  Tensor sizes: [7, 1, 42, 0]
2025-03-05 15:23:06.658172 test begin: paddle.broadcast_to(Tensor([7, 1, 43, 0],"bool"), list[7,8,43,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 43, 0],"bool"), list[7,8,43,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 43, 153].  Tensor sizes: [7, 1, 43, 0]
2025-03-05 15:23:06.658698 test begin: paddle.broadcast_to(Tensor([7, 1, 43, 0],"bool"), list[7,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 43, 0],"bool"), list[7,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 43, 43].  Tensor sizes: [7, 1, 43, 0]
2025-03-05 15:23:06.659211 test begin: paddle.broadcast_to(Tensor([7, 1, 43, 0],"bool"), list[7,8,43,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 43, 0],"bool"), list[7,8,43,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 43, 49].  Tensor sizes: [7, 1, 43, 0]
2025-03-05 15:23:06.659778 test begin: paddle.broadcast_to(Tensor([7, 1, 44, 0],"bool"), list[7,8,44,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 44, 0],"bool"), list[7,8,44,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 44, 153].  Tensor sizes: [7, 1, 44, 0]
2025-03-05 15:23:06.660298 test begin: paddle.broadcast_to(Tensor([7, 1, 44, 0],"bool"), list[7,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 44, 0],"bool"), list[7,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 44, 44].  Tensor sizes: [7, 1, 44, 0]
2025-03-05 15:23:06.660822 test begin: paddle.broadcast_to(Tensor([7, 1, 44, 0],"bool"), list[7,8,44,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 44, 0],"bool"), list[7,8,44,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 44, 49].  Tensor sizes: [7, 1, 44, 0]
2025-03-05 15:23:06.661350 test begin: paddle.broadcast_to(Tensor([7, 1, 45, 0],"bool"), list[7,8,45,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 45, 0],"bool"), list[7,8,45,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 45, 153].  Tensor sizes: [7, 1, 45, 0]
2025-03-05 15:23:06.661870 test begin: paddle.broadcast_to(Tensor([7, 1, 45, 0],"bool"), list[7,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 45, 0],"bool"), list[7,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 45, 45].  Tensor sizes: [7, 1, 45, 0]
2025-03-05 15:23:06.662380 test begin: paddle.broadcast_to(Tensor([7, 1, 45, 0],"bool"), list[7,8,45,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 45, 0],"bool"), list[7,8,45,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 45, 49].  Tensor sizes: [7, 1, 45, 0]
2025-03-05 15:23:06.662949 test begin: paddle.broadcast_to(Tensor([7, 1, 46, 0],"bool"), list[7,8,46,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 46, 0],"bool"), list[7,8,46,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 46, 153].  Tensor sizes: [7, 1, 46, 0]
2025-03-05 15:23:06.663802 test begin: paddle.broadcast_to(Tensor([7, 1, 46, 0],"bool"), list[7,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 46, 0],"bool"), list[7,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 46, 46].  Tensor sizes: [7, 1, 46, 0]
2025-03-05 15:23:06.664469 test begin: paddle.broadcast_to(Tensor([7, 1, 46, 0],"bool"), list[7,8,46,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 46, 0],"bool"), list[7,8,46,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 46, 49].  Tensor sizes: [7, 1, 46, 0]
2025-03-05 15:23:06.665084 test begin: paddle.broadcast_to(Tensor([7, 1, 47, 0],"bool"), list[7,8,47,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 47, 0],"bool"), list[7,8,47,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 47, 153].  Tensor sizes: [7, 1, 47, 0]
2025-03-05 15:23:06.665720 test begin: paddle.broadcast_to(Tensor([7, 1, 47, 0],"bool"), list[7,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 47, 0],"bool"), list[7,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 47, 47].  Tensor sizes: [7, 1, 47, 0]
2025-03-05 15:23:06.666363 test begin: paddle.broadcast_to(Tensor([7, 1, 47, 0],"bool"), list[7,8,47,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 47, 0],"bool"), list[7,8,47,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 47, 49].  Tensor sizes: [7, 1, 47, 0]
2025-03-05 15:23:06.666964 test begin: paddle.broadcast_to(Tensor([7, 1, 48, 0],"bool"), list[7,8,48,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 48, 0],"bool"), list[7,8,48,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 48, 153].  Tensor sizes: [7, 1, 48, 0]
2025-03-05 15:23:06.667598 test begin: paddle.broadcast_to(Tensor([7, 1, 48, 0],"bool"), list[7,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 48, 0],"bool"), list[7,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 48, 48].  Tensor sizes: [7, 1, 48, 0]
2025-03-05 15:23:06.668231 test begin: paddle.broadcast_to(Tensor([7, 1, 48, 0],"bool"), list[7,8,48,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 48, 0],"bool"), list[7,8,48,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 48, 49].  Tensor sizes: [7, 1, 48, 0]
2025-03-05 15:23:06.668835 test begin: paddle.broadcast_to(Tensor([7, 1, 49, 0],"bool"), list[7,8,49,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 49, 0],"bool"), list[7,8,49,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 49, 153].  Tensor sizes: [7, 1, 49, 0]
2025-03-05 15:23:06.669423 test begin: paddle.broadcast_to(Tensor([7, 1, 49, 0],"bool"), list[7,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 49, 0],"bool"), list[7,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 49, 49].  Tensor sizes: [7, 1, 49, 0]
2025-03-05 15:23:06.670046 test begin: paddle.broadcast_to(Tensor([7, 1, 5, 0],"bool"), list[7,8,5,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 5, 0],"bool"), list[7,8,5,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 5, 153].  Tensor sizes: [7, 1, 5, 0]
2025-03-05 15:23:06.670649 test begin: paddle.broadcast_to(Tensor([7, 1, 5, 0],"bool"), list[7,8,5,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 5, 0],"bool"), list[7,8,5,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 5, 49].  Tensor sizes: [7, 1, 5, 0]
2025-03-05 15:23:06.671232 test begin: paddle.broadcast_to(Tensor([7, 1, 5, 0],"bool"), list[7,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 5, 0],"bool"), list[7,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 5, 5].  Tensor sizes: [7, 1, 5, 0]
2025-03-05 15:23:06.671824 test begin: paddle.broadcast_to(Tensor([7, 1, 50, 0],"bool"), list[7,8,50,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 50, 0],"bool"), list[7,8,50,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 50, 153].  Tensor sizes: [7, 1, 50, 0]
2025-03-05 15:23:06.672403 test begin: paddle.broadcast_to(Tensor([7, 1, 50, 0],"bool"), list[7,8,50,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 50, 0],"bool"), list[7,8,50,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 50, 49].  Tensor sizes: [7, 1, 50, 0]
2025-03-05 15:23:06.672996 test begin: paddle.broadcast_to(Tensor([7, 1, 50, 0],"bool"), list[7,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 50, 0],"bool"), list[7,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 50, 50].  Tensor sizes: [7, 1, 50, 0]
2025-03-05 15:23:06.673576 test begin: paddle.broadcast_to(Tensor([7, 1, 51, 0],"bool"), list[7,8,51,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 51, 0],"bool"), list[7,8,51,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 51, 153].  Tensor sizes: [7, 1, 51, 0]
2025-03-05 15:23:06.674161 test begin: paddle.broadcast_to(Tensor([7, 1, 51, 0],"bool"), list[7,8,51,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 51, 0],"bool"), list[7,8,51,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 51, 49].  Tensor sizes: [7, 1, 51, 0]
2025-03-05 15:23:06.674753 test begin: paddle.broadcast_to(Tensor([7, 1, 51, 0],"bool"), list[7,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 51, 0],"bool"), list[7,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 51, 51].  Tensor sizes: [7, 1, 51, 0]
2025-03-05 15:23:06.675330 test begin: paddle.broadcast_to(Tensor([7, 1, 52, 0],"bool"), list[7,8,52,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 52, 0],"bool"), list[7,8,52,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 52, 153].  Tensor sizes: [7, 1, 52, 0]
2025-03-05 15:23:06.675911 test begin: paddle.broadcast_to(Tensor([7, 1, 52, 0],"bool"), list[7,8,52,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 52, 0],"bool"), list[7,8,52,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 52, 49].  Tensor sizes: [7, 1, 52, 0]
2025-03-05 15:23:06.676497 test begin: paddle.broadcast_to(Tensor([7, 1, 52, 0],"bool"), list[7,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 52, 0],"bool"), list[7,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 52, 52].  Tensor sizes: [7, 1, 52, 0]
2025-03-05 15:23:06.677255 test begin: paddle.broadcast_to(Tensor([7, 1, 53, 0],"bool"), list[7,8,53,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 53, 0],"bool"), list[7,8,53,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 53, 153].  Tensor sizes: [7, 1, 53, 0]
2025-03-05 15:23:06.677975 test begin: paddle.broadcast_to(Tensor([7, 1, 53, 0],"bool"), list[7,8,53,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 53, 0],"bool"), list[7,8,53,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 53, 49].  Tensor sizes: [7, 1, 53, 0]
2025-03-05 15:23:06.678682 test begin: paddle.broadcast_to(Tensor([7, 1, 53, 0],"bool"), list[7,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 53, 0],"bool"), list[7,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 53, 53].  Tensor sizes: [7, 1, 53, 0]
2025-03-05 15:23:06.679278 test begin: paddle.broadcast_to(Tensor([7, 1, 54, 0],"bool"), list[7,8,54,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 54, 0],"bool"), list[7,8,54,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 54, 153].  Tensor sizes: [7, 1, 54, 0]
2025-03-05 15:23:06.680049 test begin: paddle.broadcast_to(Tensor([7, 1, 54, 0],"bool"), list[7,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 54, 0],"bool"), list[7,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 54, 54].  Tensor sizes: [7, 1, 54, 0]
2025-03-05 15:23:06.680649 test begin: paddle.broadcast_to(Tensor([7, 1, 55, 0],"bool"), list[7,8,55,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 55, 0],"bool"), list[7,8,55,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 55, 153].  Tensor sizes: [7, 1, 55, 0]
2025-03-05 15:23:06.681266 test begin: paddle.broadcast_to(Tensor([7, 1, 55, 0],"bool"), list[7,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 55, 0],"bool"), list[7,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 55, 55].  Tensor sizes: [7, 1, 55, 0]
2025-03-05 15:23:06.682016 test begin: paddle.broadcast_to(Tensor([7, 1, 56, 0],"bool"), list[7,8,56,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 56, 0],"bool"), list[7,8,56,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 56, 153].  Tensor sizes: [7, 1, 56, 0]
2025-03-05 15:23:06.682764 test begin: paddle.broadcast_to(Tensor([7, 1, 56, 0],"bool"), list[7,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 56, 0],"bool"), list[7,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 56, 56].  Tensor sizes: [7, 1, 56, 0]
2025-03-05 15:23:06.683350 test begin: paddle.broadcast_to(Tensor([7, 1, 57, 0],"bool"), list[7,8,57,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 57, 0],"bool"), list[7,8,57,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 57, 153].  Tensor sizes: [7, 1, 57, 0]
2025-03-05 15:23:06.683940 test begin: paddle.broadcast_to(Tensor([7, 1, 57, 0],"bool"), list[7,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 57, 0],"bool"), list[7,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 57, 57].  Tensor sizes: [7, 1, 57, 0]
2025-03-05 15:23:06.684520 test begin: paddle.broadcast_to(Tensor([7, 1, 58, 0],"bool"), list[7,8,58,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 58, 0],"bool"), list[7,8,58,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 58, 153].  Tensor sizes: [7, 1, 58, 0]
2025-03-05 15:23:06.685129 test begin: paddle.broadcast_to(Tensor([7, 1, 58, 0],"bool"), list[7,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 58, 0],"bool"), list[7,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 58, 58].  Tensor sizes: [7, 1, 58, 0]
2025-03-05 15:23:06.685726 test begin: paddle.broadcast_to(Tensor([7, 1, 59, 0],"bool"), list[7,8,59,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 59, 0],"bool"), list[7,8,59,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 59, 153].  Tensor sizes: [7, 1, 59, 0]
2025-03-05 15:23:06.686311 test begin: paddle.broadcast_to(Tensor([7, 1, 59, 0],"bool"), list[7,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 59, 0],"bool"), list[7,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 59, 59].  Tensor sizes: [7, 1, 59, 0]
2025-03-05 15:23:06.686899 test begin: paddle.broadcast_to(Tensor([7, 1, 6, 0],"bool"), list[7,8,6,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 6, 0],"bool"), list[7,8,6,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 6, 153].  Tensor sizes: [7, 1, 6, 0]
2025-03-05 15:23:06.687498 test begin: paddle.broadcast_to(Tensor([7, 1, 6, 0],"bool"), list[7,8,6,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 6, 0],"bool"), list[7,8,6,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 6, 49].  Tensor sizes: [7, 1, 6, 0]
2025-03-05 15:23:06.688093 test begin: paddle.broadcast_to(Tensor([7, 1, 6, 0],"bool"), list[7,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 6, 0],"bool"), list[7,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 6, 6].  Tensor sizes: [7, 1, 6, 0]
2025-03-05 15:23:06.688718 test begin: paddle.broadcast_to(Tensor([7, 1, 60, 0],"bool"), list[7,8,60,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 60, 0],"bool"), list[7,8,60,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 60, 153].  Tensor sizes: [7, 1, 60, 0]
2025-03-05 15:23:06.689310 test begin: paddle.broadcast_to(Tensor([7, 1, 60, 0],"bool"), list[7,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 60, 0],"bool"), list[7,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 60, 60].  Tensor sizes: [7, 1, 60, 0]
2025-03-05 15:23:06.689898 test begin: paddle.broadcast_to(Tensor([7, 1, 61, 0],"bool"), list[7,8,61,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 61, 0],"bool"), list[7,8,61,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 61, 153].  Tensor sizes: [7, 1, 61, 0]
2025-03-05 15:23:06.690478 test begin: paddle.broadcast_to(Tensor([7, 1, 61, 0],"bool"), list[7,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 61, 0],"bool"), list[7,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 61, 61].  Tensor sizes: [7, 1, 61, 0]
2025-03-05 15:23:06.691066 test begin: paddle.broadcast_to(Tensor([7, 1, 62, 0],"bool"), list[7,8,62,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 62, 0],"bool"), list[7,8,62,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 62, 153].  Tensor sizes: [7, 1, 62, 0]
2025-03-05 15:23:06.691647 test begin: paddle.broadcast_to(Tensor([7, 1, 62, 0],"bool"), list[7,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 62, 0],"bool"), list[7,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 62, 62].  Tensor sizes: [7, 1, 62, 0]
2025-03-05 15:23:06.692225 test begin: paddle.broadcast_to(Tensor([7, 1, 63, 0],"bool"), list[7,8,63,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 63, 0],"bool"), list[7,8,63,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 63, 153].  Tensor sizes: [7, 1, 63, 0]
2025-03-05 15:23:06.692809 test begin: paddle.broadcast_to(Tensor([7, 1, 63, 0],"bool"), list[7,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 63, 0],"bool"), list[7,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 63, 63].  Tensor sizes: [7, 1, 63, 0]
2025-03-05 15:23:06.693387 test begin: paddle.broadcast_to(Tensor([7, 1, 64, 0],"bool"), list[7,8,64,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 64, 0],"bool"), list[7,8,64,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 64, 153].  Tensor sizes: [7, 1, 64, 0]
2025-03-05 15:23:06.693992 test begin: paddle.broadcast_to(Tensor([7, 1, 64, 0],"bool"), list[7,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 64, 0],"bool"), list[7,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 64, 64].  Tensor sizes: [7, 1, 64, 0]
2025-03-05 15:23:06.694571 test begin: paddle.broadcast_to(Tensor([7, 1, 65, 0],"bool"), list[7,8,65,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 65, 0],"bool"), list[7,8,65,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 65, 153].  Tensor sizes: [7, 1, 65, 0]
2025-03-05 15:23:06.695196 test begin: paddle.broadcast_to(Tensor([7, 1, 65, 0],"bool"), list[7,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 65, 0],"bool"), list[7,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 65, 65].  Tensor sizes: [7, 1, 65, 0]
2025-03-05 15:23:06.695779 test begin: paddle.broadcast_to(Tensor([7, 1, 66, 0],"bool"), list[7,8,66,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 66, 0],"bool"), list[7,8,66,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 66, 153].  Tensor sizes: [7, 1, 66, 0]
2025-03-05 15:23:06.700041 test begin: paddle.broadcast_to(Tensor([7, 1, 66, 0],"bool"), list[7,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 66, 0],"bool"), list[7,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 66, 66].  Tensor sizes: [7, 1, 66, 0]
2025-03-05 15:23:06.700638 test begin: paddle.broadcast_to(Tensor([7, 1, 67, 0],"bool"), list[7,8,67,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 67, 0],"bool"), list[7,8,67,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 67, 153].  Tensor sizes: [7, 1, 67, 0]
2025-03-05 15:23:06.701211 test begin: paddle.broadcast_to(Tensor([7, 1, 67, 0],"bool"), list[7,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 67, 0],"bool"), list[7,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 67, 67].  Tensor sizes: [7, 1, 67, 0]
2025-03-05 15:23:06.701799 test begin: paddle.broadcast_to(Tensor([7, 1, 68, 0],"bool"), list[7,8,68,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 68, 0],"bool"), list[7,8,68,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 68, 153].  Tensor sizes: [7, 1, 68, 0]
2025-03-05 15:23:06.702380 test begin: paddle.broadcast_to(Tensor([7, 1, 68, 0],"bool"), list[7,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 68, 0],"bool"), list[7,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 68, 68].  Tensor sizes: [7, 1, 68, 0]
2025-03-05 15:23:06.703038 test begin: paddle.broadcast_to(Tensor([7, 1, 69, 0],"bool"), list[7,8,69,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 69, 0],"bool"), list[7,8,69,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 69, 153].  Tensor sizes: [7, 1, 69, 0]
2025-03-05 15:23:06.703628 test begin: paddle.broadcast_to(Tensor([7, 1, 69, 0],"bool"), list[7,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 69, 0],"bool"), list[7,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 69, 69].  Tensor sizes: [7, 1, 69, 0]
2025-03-05 15:23:06.704195 test begin: paddle.broadcast_to(Tensor([7, 1, 7, 0],"bool"), list[7,8,7,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 7, 0],"bool"), list[7,8,7,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 7, 153].  Tensor sizes: [7, 1, 7, 0]
2025-03-05 15:23:06.704785 test begin: paddle.broadcast_to(Tensor([7, 1, 7, 0],"bool"), list[7,8,7,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 7, 0],"bool"), list[7,8,7,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 7, 49].  Tensor sizes: [7, 1, 7, 0]
2025-03-05 15:23:06.705429 test begin: paddle.broadcast_to(Tensor([7, 1, 7, 0],"bool"), list[7,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 7, 0],"bool"), list[7,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 7, 7].  Tensor sizes: [7, 1, 7, 0]
2025-03-05 15:23:06.706034 test begin: paddle.broadcast_to(Tensor([7, 1, 70, 0],"bool"), list[7,8,70,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 70, 0],"bool"), list[7,8,70,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 70, 153].  Tensor sizes: [7, 1, 70, 0]
2025-03-05 15:23:06.706646 test begin: paddle.broadcast_to(Tensor([7, 1, 70, 0],"bool"), list[7,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 70, 0],"bool"), list[7,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 70, 70].  Tensor sizes: [7, 1, 70, 0]
2025-03-05 15:23:06.707381 test begin: paddle.broadcast_to(Tensor([7, 1, 71, 0],"bool"), list[7,8,71,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 71, 0],"bool"), list[7,8,71,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 71, 153].  Tensor sizes: [7, 1, 71, 0]
2025-03-05 15:23:06.708135 test begin: paddle.broadcast_to(Tensor([7, 1, 71, 0],"bool"), list[7,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 71, 0],"bool"), list[7,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 71, 71].  Tensor sizes: [7, 1, 71, 0]
2025-03-05 15:23:06.708786 test begin: paddle.broadcast_to(Tensor([7, 1, 72, 0],"bool"), list[7,8,72,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 72, 0],"bool"), list[7,8,72,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 72, 153].  Tensor sizes: [7, 1, 72, 0]
2025-03-05 15:23:06.709407 test begin: paddle.broadcast_to(Tensor([7, 1, 72, 0],"bool"), list[7,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 72, 0],"bool"), list[7,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 72, 72].  Tensor sizes: [7, 1, 72, 0]
2025-03-05 15:23:06.710010 test begin: paddle.broadcast_to(Tensor([7, 1, 73, 0],"bool"), list[7,8,73,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 73, 0],"bool"), list[7,8,73,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 73, 153].  Tensor sizes: [7, 1, 73, 0]
2025-03-05 15:23:06.710609 test begin: paddle.broadcast_to(Tensor([7, 1, 73, 0],"bool"), list[7,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 73, 0],"bool"), list[7,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 73, 73].  Tensor sizes: [7, 1, 73, 0]
2025-03-05 15:23:06.711192 test begin: paddle.broadcast_to(Tensor([7, 1, 74, 0],"bool"), list[7,8,74,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 74, 0],"bool"), list[7,8,74,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 74, 153].  Tensor sizes: [7, 1, 74, 0]
2025-03-05 15:23:06.711788 test begin: paddle.broadcast_to(Tensor([7, 1, 74, 0],"bool"), list[7,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 74, 0],"bool"), list[7,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 74, 74].  Tensor sizes: [7, 1, 74, 0]
2025-03-05 15:23:06.712393 test begin: paddle.broadcast_to(Tensor([7, 1, 75, 0],"bool"), list[7,8,75,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 75, 0],"bool"), list[7,8,75,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 75, 153].  Tensor sizes: [7, 1, 75, 0]
2025-03-05 15:23:06.712992 test begin: paddle.broadcast_to(Tensor([7, 1, 75, 0],"bool"), list[7,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 75, 0],"bool"), list[7,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 75, 75].  Tensor sizes: [7, 1, 75, 0]
2025-03-05 15:23:06.713603 test begin: paddle.broadcast_to(Tensor([7, 1, 76, 0],"bool"), list[7,8,76,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 76, 0],"bool"), list[7,8,76,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 76, 153].  Tensor sizes: [7, 1, 76, 0]
2025-03-05 15:23:06.714253 test begin: paddle.broadcast_to(Tensor([7, 1, 76, 0],"bool"), list[7,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 76, 0],"bool"), list[7,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 76, 76].  Tensor sizes: [7, 1, 76, 0]
2025-03-05 15:23:06.714838 test begin: paddle.broadcast_to(Tensor([7, 1, 77, 0],"bool"), list[7,8,77,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 77, 0],"bool"), list[7,8,77,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 77, 153].  Tensor sizes: [7, 1, 77, 0]
2025-03-05 15:23:06.715556 test begin: paddle.broadcast_to(Tensor([7, 1, 77, 0],"bool"), list[7,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 77, 0],"bool"), list[7,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 77, 77].  Tensor sizes: [7, 1, 77, 0]
2025-03-05 15:23:06.716143 test begin: paddle.broadcast_to(Tensor([7, 1, 78, 0],"bool"), list[7,8,78,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 78, 0],"bool"), list[7,8,78,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 78, 153].  Tensor sizes: [7, 1, 78, 0]
2025-03-05 15:23:06.716739 test begin: paddle.broadcast_to(Tensor([7, 1, 78, 0],"bool"), list[7,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 78, 0],"bool"), list[7,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 78, 78].  Tensor sizes: [7, 1, 78, 0]
2025-03-05 15:23:06.717350 test begin: paddle.broadcast_to(Tensor([7, 1, 79, 0],"bool"), list[7,8,79,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 79, 0],"bool"), list[7,8,79,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 79, 153].  Tensor sizes: [7, 1, 79, 0]
2025-03-05 15:23:06.717948 test begin: paddle.broadcast_to(Tensor([7, 1, 79, 0],"bool"), list[7,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 79, 0],"bool"), list[7,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 79, 79].  Tensor sizes: [7, 1, 79, 0]
2025-03-05 15:23:06.718542 test begin: paddle.broadcast_to(Tensor([7, 1, 8, 0],"bool"), list[7,8,8,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 8, 0],"bool"), list[7,8,8,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 8, 153].  Tensor sizes: [7, 1, 8, 0]
2025-03-05 15:23:06.719367 test begin: paddle.broadcast_to(Tensor([7, 1, 8, 0],"bool"), list[7,8,8,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 8, 0],"bool"), list[7,8,8,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 8, 49].  Tensor sizes: [7, 1, 8, 0]
2025-03-05 15:23:06.719955 test begin: paddle.broadcast_to(Tensor([7, 1, 8, 0],"bool"), list[7,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 8, 0],"bool"), list[7,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 8, 8].  Tensor sizes: [7, 1, 8, 0]
2025-03-05 15:23:06.720532 test begin: paddle.broadcast_to(Tensor([7, 1, 80, 0],"bool"), list[7,8,80,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 80, 0],"bool"), list[7,8,80,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 80, 153].  Tensor sizes: [7, 1, 80, 0]
2025-03-05 15:23:06.721119 test begin: paddle.broadcast_to(Tensor([7, 1, 80, 0],"bool"), list[7,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 80, 0],"bool"), list[7,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 80, 80].  Tensor sizes: [7, 1, 80, 0]
2025-03-05 15:23:06.721774 test begin: paddle.broadcast_to(Tensor([7, 1, 81, 0],"bool"), list[7,8,81,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 81, 0],"bool"), list[7,8,81,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 81, 153].  Tensor sizes: [7, 1, 81, 0]
2025-03-05 15:23:06.722376 test begin: paddle.broadcast_to(Tensor([7, 1, 81, 0],"bool"), list[7,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 81, 0],"bool"), list[7,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 81, 81].  Tensor sizes: [7, 1, 81, 0]
2025-03-05 15:23:06.722970 test begin: paddle.broadcast_to(Tensor([7, 1, 82, 0],"bool"), list[7,8,82,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 82, 0],"bool"), list[7,8,82,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 82, 153].  Tensor sizes: [7, 1, 82, 0]
2025-03-05 15:23:06.723546 test begin: paddle.broadcast_to(Tensor([7, 1, 82, 0],"bool"), list[7,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 82, 0],"bool"), list[7,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 82, 82].  Tensor sizes: [7, 1, 82, 0]
2025-03-05 15:23:06.724128 test begin: paddle.broadcast_to(Tensor([7, 1, 83, 0],"bool"), list[7,8,83,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 83, 0],"bool"), list[7,8,83,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 83, 153].  Tensor sizes: [7, 1, 83, 0]
2025-03-05 15:23:06.724705 test begin: paddle.broadcast_to(Tensor([7, 1, 83, 0],"bool"), list[7,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 83, 0],"bool"), list[7,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 83, 83].  Tensor sizes: [7, 1, 83, 0]
2025-03-05 15:23:06.725280 test begin: paddle.broadcast_to(Tensor([7, 1, 84, 0],"bool"), list[7,8,84,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 84, 0],"bool"), list[7,8,84,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 84, 153].  Tensor sizes: [7, 1, 84, 0]
2025-03-05 15:23:06.725903 test begin: paddle.broadcast_to(Tensor([7, 1, 84, 0],"bool"), list[7,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 84, 0],"bool"), list[7,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 84, 84].  Tensor sizes: [7, 1, 84, 0]
2025-03-05 15:23:06.726482 test begin: paddle.broadcast_to(Tensor([7, 1, 85, 0],"bool"), list[7,8,85,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 85, 0],"bool"), list[7,8,85,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 85, 153].  Tensor sizes: [7, 1, 85, 0]
2025-03-05 15:23:06.727067 test begin: paddle.broadcast_to(Tensor([7, 1, 85, 0],"bool"), list[7,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 85, 0],"bool"), list[7,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 85, 85].  Tensor sizes: [7, 1, 85, 0]
2025-03-05 15:23:06.727693 test begin: paddle.broadcast_to(Tensor([7, 1, 86, 0],"bool"), list[7,8,86,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 86, 0],"bool"), list[7,8,86,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 86, 153].  Tensor sizes: [7, 1, 86, 0]
2025-03-05 15:23:06.728280 test begin: paddle.broadcast_to(Tensor([7, 1, 86, 0],"bool"), list[7,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 86, 0],"bool"), list[7,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 86, 86].  Tensor sizes: [7, 1, 86, 0]
2025-03-05 15:23:06.728870 test begin: paddle.broadcast_to(Tensor([7, 1, 87, 0],"bool"), list[7,8,87,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 87, 0],"bool"), list[7,8,87,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 87, 153].  Tensor sizes: [7, 1, 87, 0]
2025-03-05 15:23:06.729452 test begin: paddle.broadcast_to(Tensor([7, 1, 87, 0],"bool"), list[7,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 87, 0],"bool"), list[7,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 87, 87].  Tensor sizes: [7, 1, 87, 0]
2025-03-05 15:23:06.730056 test begin: paddle.broadcast_to(Tensor([7, 1, 88, 0],"bool"), list[7,8,88,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 88, 0],"bool"), list[7,8,88,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 88, 153].  Tensor sizes: [7, 1, 88, 0]
2025-03-05 15:23:06.730668 test begin: paddle.broadcast_to(Tensor([7, 1, 88, 0],"bool"), list[7,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 88, 0],"bool"), list[7,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 88, 88].  Tensor sizes: [7, 1, 88, 0]
2025-03-05 15:23:06.731297 test begin: paddle.broadcast_to(Tensor([7, 1, 89, 0],"bool"), list[7,8,89,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 89, 0],"bool"), list[7,8,89,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 89, 153].  Tensor sizes: [7, 1, 89, 0]
2025-03-05 15:23:06.731905 test begin: paddle.broadcast_to(Tensor([7, 1, 89, 0],"bool"), list[7,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 89, 0],"bool"), list[7,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 89, 89].  Tensor sizes: [7, 1, 89, 0]
2025-03-05 15:23:06.732517 test begin: paddle.broadcast_to(Tensor([7, 1, 9, 0],"bool"), list[7,8,9,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 9, 0],"bool"), list[7,8,9,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 9, 153].  Tensor sizes: [7, 1, 9, 0]
2025-03-05 15:23:06.733121 test begin: paddle.broadcast_to(Tensor([7, 1, 9, 0],"bool"), list[7,8,9,49,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 9, 0],"bool"), list[7,8,9,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 9, 49].  Tensor sizes: [7, 1, 9, 0]
2025-03-05 15:23:06.733714 test begin: paddle.broadcast_to(Tensor([7, 1, 9, 0],"bool"), list[7,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 9, 0],"bool"), list[7,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 9, 9].  Tensor sizes: [7, 1, 9, 0]
2025-03-05 15:23:06.734304 test begin: paddle.broadcast_to(Tensor([7, 1, 90, 0],"bool"), list[7,8,90,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 90, 0],"bool"), list[7,8,90,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 90, 153].  Tensor sizes: [7, 1, 90, 0]
2025-03-05 15:23:06.734897 test begin: paddle.broadcast_to(Tensor([7, 1, 90, 0],"bool"), list[7,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 90, 0],"bool"), list[7,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 90, 90].  Tensor sizes: [7, 1, 90, 0]
2025-03-05 15:23:06.735494 test begin: paddle.broadcast_to(Tensor([7, 1, 91, 0],"bool"), list[7,8,91,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 91, 0],"bool"), list[7,8,91,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 91, 153].  Tensor sizes: [7, 1, 91, 0]
2025-03-05 15:23:06.736094 test begin: paddle.broadcast_to(Tensor([7, 1, 91, 0],"bool"), list[7,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 91, 0],"bool"), list[7,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 91, 91].  Tensor sizes: [7, 1, 91, 0]
2025-03-05 15:23:06.736677 test begin: paddle.broadcast_to(Tensor([7, 1, 92, 0],"bool"), list[7,8,92,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 92, 0],"bool"), list[7,8,92,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 92, 153].  Tensor sizes: [7, 1, 92, 0]
2025-03-05 15:23:06.737265 test begin: paddle.broadcast_to(Tensor([7, 1, 92, 0],"bool"), list[7,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 92, 0],"bool"), list[7,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 92, 92].  Tensor sizes: [7, 1, 92, 0]
2025-03-05 15:23:06.737855 test begin: paddle.broadcast_to(Tensor([7, 1, 93, 0],"bool"), list[7,8,93,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 93, 0],"bool"), list[7,8,93,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 93, 153].  Tensor sizes: [7, 1, 93, 0]
2025-03-05 15:23:06.738429 test begin: paddle.broadcast_to(Tensor([7, 1, 93, 0],"bool"), list[7,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 93, 0],"bool"), list[7,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 93, 93].  Tensor sizes: [7, 1, 93, 0]
2025-03-05 15:23:06.739019 test begin: paddle.broadcast_to(Tensor([7, 1, 94, 0],"bool"), list[7,8,94,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 94, 0],"bool"), list[7,8,94,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 94, 153].  Tensor sizes: [7, 1, 94, 0]
2025-03-05 15:23:06.739669 test begin: paddle.broadcast_to(Tensor([7, 1, 94, 0],"bool"), list[7,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 94, 0],"bool"), list[7,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 94, 94].  Tensor sizes: [7, 1, 94, 0]
2025-03-05 15:23:06.740314 test begin: paddle.broadcast_to(Tensor([7, 1, 95, 0],"bool"), list[7,8,95,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 95, 0],"bool"), list[7,8,95,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 95, 153].  Tensor sizes: [7, 1, 95, 0]
2025-03-05 15:23:06.740904 test begin: paddle.broadcast_to(Tensor([7, 1, 95, 0],"bool"), list[7,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 95, 0],"bool"), list[7,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 95, 95].  Tensor sizes: [7, 1, 95, 0]
2025-03-05 15:23:06.741483 test begin: paddle.broadcast_to(Tensor([7, 1, 96, 0],"bool"), list[7,8,96,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 96, 0],"bool"), list[7,8,96,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 96, 153].  Tensor sizes: [7, 1, 96, 0]
2025-03-05 15:23:06.742115 test begin: paddle.broadcast_to(Tensor([7, 1, 96, 0],"bool"), list[7,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 96, 0],"bool"), list[7,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 96, 96].  Tensor sizes: [7, 1, 96, 0]
2025-03-05 15:23:06.742921 test begin: paddle.broadcast_to(Tensor([7, 1, 97, 0],"bool"), list[7,8,97,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 97, 0],"bool"), list[7,8,97,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 97, 153].  Tensor sizes: [7, 1, 97, 0]
2025-03-05 15:23:06.743618 test begin: paddle.broadcast_to(Tensor([7, 1, 97, 0],"bool"), list[7,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 97, 0],"bool"), list[7,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 97, 97].  Tensor sizes: [7, 1, 97, 0]
2025-03-05 15:23:06.744177 test begin: paddle.broadcast_to(Tensor([7, 1, 98, 0],"bool"), list[7,8,98,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 98, 0],"bool"), list[7,8,98,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 98, 153].  Tensor sizes: [7, 1, 98, 0]
2025-03-05 15:23:06.744715 test begin: paddle.broadcast_to(Tensor([7, 1, 98, 0],"bool"), list[7,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 98, 0],"bool"), list[7,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 98, 98].  Tensor sizes: [7, 1, 98, 0]
2025-03-05 15:23:06.745392 test begin: paddle.broadcast_to(Tensor([7, 1, 99, 0],"bool"), list[7,8,99,153,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 99, 0],"bool"), list[7,8,99,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 99, 153].  Tensor sizes: [7, 1, 99, 0]
2025-03-05 15:23:06.746085 test begin: paddle.broadcast_to(Tensor([7, 1, 99, 0],"bool"), list[7,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([7, 1, 99, 0],"bool"), list[7,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [7, 8, 99, 99].  Tensor sizes: [7, 1, 99, 0]
2025-03-05 15:23:06.746906 test begin: paddle.broadcast_to(Tensor([8, 0, 1, 113],"bool"), list[8,8,1,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 1, 113],"bool"), list[8,8,1,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 1, 113].  Tensor sizes: [8, 0, 1, 113]
2025-03-05 15:23:06.747553 test begin: paddle.broadcast_to(Tensor([8, 0, 1, 121],"bool"), list[8,8,1,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 1, 121],"bool"), list[8,8,1,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 1, 121].  Tensor sizes: [8, 0, 1, 121]
2025-03-05 15:23:06.748118 test begin: paddle.broadcast_to(Tensor([8, 0, 1, 1],"bool"), list[8,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 1, 1],"bool"), list[8,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 1, 1].  Tensor sizes: [8, 0, 1, 1]
2025-03-05 15:23:06.748662 test begin: paddle.broadcast_to(Tensor([8, 0, 1, 33],"bool"), list[8,8,1,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 1, 33],"bool"), list[8,8,1,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 1, 33].  Tensor sizes: [8, 0, 1, 33]
2025-03-05 15:23:06.749217 test begin: paddle.broadcast_to(Tensor([8, 0, 10, 10],"bool"), list[8,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 10, 10],"bool"), list[8,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 10, 10].  Tensor sizes: [8, 0, 10, 10]
2025-03-05 15:23:06.749774 test begin: paddle.broadcast_to(Tensor([8, 0, 10, 113],"bool"), list[8,8,10,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 10, 113],"bool"), list[8,8,10,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 10, 113].  Tensor sizes: [8, 0, 10, 113]
2025-03-05 15:23:06.750301 test begin: paddle.broadcast_to(Tensor([8, 0, 10, 121],"bool"), list[8,8,10,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 10, 121],"bool"), list[8,8,10,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 10, 121].  Tensor sizes: [8, 0, 10, 121]
2025-03-05 15:23:06.750831 test begin: paddle.broadcast_to(Tensor([8, 0, 10, 33],"bool"), list[8,8,10,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 10, 33],"bool"), list[8,8,10,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 10, 33].  Tensor sizes: [8, 0, 10, 33]
2025-03-05 15:23:06.751345 test begin: paddle.broadcast_to(Tensor([8, 0, 100, 100],"bool"), list[8,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 100, 100],"bool"), list[8,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 100, 100].  Tensor sizes: [8, 0, 100, 100]
2025-03-05 15:23:06.751874 test begin: paddle.broadcast_to(Tensor([8, 0, 100, 113],"bool"), list[8,8,100,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 100, 113],"bool"), list[8,8,100,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 100, 113].  Tensor sizes: [8, 0, 100, 113]
2025-03-05 15:23:06.752408 test begin: paddle.broadcast_to(Tensor([8, 0, 100, 121],"bool"), list[8,8,100,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 100, 121],"bool"), list[8,8,100,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 100, 121].  Tensor sizes: [8, 0, 100, 121]
2025-03-05 15:23:06.752928 test begin: paddle.broadcast_to(Tensor([8, 0, 101, 101],"bool"), list[8,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 101, 101],"bool"), list[8,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 101, 101].  Tensor sizes: [8, 0, 101, 101]
2025-03-05 15:23:06.753554 test begin: paddle.broadcast_to(Tensor([8, 0, 101, 113],"bool"), list[8,8,101,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 101, 113],"bool"), list[8,8,101,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 101, 113].  Tensor sizes: [8, 0, 101, 113]
2025-03-05 15:23:06.754107 test begin: paddle.broadcast_to(Tensor([8, 0, 101, 121],"bool"), list[8,8,101,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 101, 121],"bool"), list[8,8,101,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 101, 121].  Tensor sizes: [8, 0, 101, 121]
2025-03-05 15:23:06.754637 test begin: paddle.broadcast_to(Tensor([8, 0, 102, 102],"bool"), list[8,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 102, 102],"bool"), list[8,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 102, 102].  Tensor sizes: [8, 0, 102, 102]
2025-03-05 15:23:06.755165 test begin: paddle.broadcast_to(Tensor([8, 0, 102, 113],"bool"), list[8,8,102,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 102, 113],"bool"), list[8,8,102,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 102, 113].  Tensor sizes: [8, 0, 102, 113]
2025-03-05 15:23:06.755687 test begin: paddle.broadcast_to(Tensor([8, 0, 102, 121],"bool"), list[8,8,102,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 102, 121],"bool"), list[8,8,102,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 102, 121].  Tensor sizes: [8, 0, 102, 121]
2025-03-05 15:23:06.756217 test begin: paddle.broadcast_to(Tensor([8, 0, 103, 103],"bool"), list[8,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 103, 103],"bool"), list[8,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 103, 103].  Tensor sizes: [8, 0, 103, 103]
2025-03-05 15:23:06.756733 test begin: paddle.broadcast_to(Tensor([8, 0, 103, 113],"bool"), list[8,8,103,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 103, 113],"bool"), list[8,8,103,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 103, 113].  Tensor sizes: [8, 0, 103, 113]
2025-03-05 15:23:06.757242 test begin: paddle.broadcast_to(Tensor([8, 0, 103, 121],"bool"), list[8,8,103,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 103, 121],"bool"), list[8,8,103,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 103, 121].  Tensor sizes: [8, 0, 103, 121]
2025-03-05 15:23:06.757749 test begin: paddle.broadcast_to(Tensor([8, 0, 104, 104],"bool"), list[8,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 104, 104],"bool"), list[8,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 104, 104].  Tensor sizes: [8, 0, 104, 104]
2025-03-05 15:23:06.758278 test begin: paddle.broadcast_to(Tensor([8, 0, 104, 113],"bool"), list[8,8,104,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 104, 113],"bool"), list[8,8,104,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 104, 113].  Tensor sizes: [8, 0, 104, 113]
2025-03-05 15:23:06.758811 test begin: paddle.broadcast_to(Tensor([8, 0, 104, 121],"bool"), list[8,8,104,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 104, 121],"bool"), list[8,8,104,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 104, 121].  Tensor sizes: [8, 0, 104, 121]
2025-03-05 15:23:06.759347 test begin: paddle.broadcast_to(Tensor([8, 0, 105, 105],"bool"), list[8,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 105, 105],"bool"), list[8,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 105, 105].  Tensor sizes: [8, 0, 105, 105]
2025-03-05 15:23:06.759874 test begin: paddle.broadcast_to(Tensor([8, 0, 105, 113],"bool"), list[8,8,105,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 105, 113],"bool"), list[8,8,105,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 105, 113].  Tensor sizes: [8, 0, 105, 113]
2025-03-05 15:23:06.760419 test begin: paddle.broadcast_to(Tensor([8, 0, 105, 121],"bool"), list[8,8,105,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 105, 121],"bool"), list[8,8,105,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 105, 121].  Tensor sizes: [8, 0, 105, 121]
2025-03-05 15:23:06.760940 test begin: paddle.broadcast_to(Tensor([8, 0, 106, 106],"bool"), list[8,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 106, 106],"bool"), list[8,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 106, 106].  Tensor sizes: [8, 0, 106, 106]
2025-03-05 15:23:06.761451 test begin: paddle.broadcast_to(Tensor([8, 0, 106, 113],"bool"), list[8,8,106,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 106, 113],"bool"), list[8,8,106,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 106, 113].  Tensor sizes: [8, 0, 106, 113]
2025-03-05 15:23:06.761961 test begin: paddle.broadcast_to(Tensor([8, 0, 106, 121],"bool"), list[8,8,106,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 106, 121],"bool"), list[8,8,106,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 106, 121].  Tensor sizes: [8, 0, 106, 121]
2025-03-05 15:23:06.762490 test begin: paddle.broadcast_to(Tensor([8, 0, 107, 107],"bool"), list[8,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 107, 107],"bool"), list[8,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 107, 107].  Tensor sizes: [8, 0, 107, 107]
2025-03-05 15:23:06.763065 test begin: paddle.broadcast_to(Tensor([8, 0, 107, 113],"bool"), list[8,8,107,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 107, 113],"bool"), list[8,8,107,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 107, 113].  Tensor sizes: [8, 0, 107, 113]
2025-03-05 15:23:06.763793 test begin: paddle.broadcast_to(Tensor([8, 0, 107, 121],"bool"), list[8,8,107,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 107, 121],"bool"), list[8,8,107,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 107, 121].  Tensor sizes: [8, 0, 107, 121]
2025-03-05 15:23:06.764336 test begin: paddle.broadcast_to(Tensor([8, 0, 108, 108],"bool"), list[8,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 108, 108],"bool"), list[8,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 108, 108].  Tensor sizes: [8, 0, 108, 108]
2025-03-05 15:23:06.764863 test begin: paddle.broadcast_to(Tensor([8, 0, 108, 113],"bool"), list[8,8,108,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 108, 113],"bool"), list[8,8,108,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 108, 113].  Tensor sizes: [8, 0, 108, 113]
2025-03-05 15:23:06.765391 test begin: paddle.broadcast_to(Tensor([8, 0, 108, 121],"bool"), list[8,8,108,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 108, 121],"bool"), list[8,8,108,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 108, 121].  Tensor sizes: [8, 0, 108, 121]
2025-03-05 15:23:06.765916 test begin: paddle.broadcast_to(Tensor([8, 0, 109, 109],"bool"), list[8,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 109, 109],"bool"), list[8,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 109, 109].  Tensor sizes: [8, 0, 109, 109]
2025-03-05 15:23:06.766426 test begin: paddle.broadcast_to(Tensor([8, 0, 109, 113],"bool"), list[8,8,109,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 109, 113],"bool"), list[8,8,109,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 109, 113].  Tensor sizes: [8, 0, 109, 113]
2025-03-05 15:23:06.766934 test begin: paddle.broadcast_to(Tensor([8, 0, 109, 121],"bool"), list[8,8,109,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 109, 121],"bool"), list[8,8,109,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 109, 121].  Tensor sizes: [8, 0, 109, 121]
2025-03-05 15:23:06.767454 test begin: paddle.broadcast_to(Tensor([8, 0, 11, 113],"bool"), list[8,8,11,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 11, 113],"bool"), list[8,8,11,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 11, 113].  Tensor sizes: [8, 0, 11, 113]
2025-03-05 15:23:06.768005 test begin: paddle.broadcast_to(Tensor([8, 0, 11, 11],"bool"), list[8,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 11, 11],"bool"), list[8,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 11, 11].  Tensor sizes: [8, 0, 11, 11]
2025-03-05 15:23:06.768509 test begin: paddle.broadcast_to(Tensor([8, 0, 11, 121],"bool"), list[8,8,11,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 11, 121],"bool"), list[8,8,11,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 11, 121].  Tensor sizes: [8, 0, 11, 121]
2025-03-05 15:23:06.769038 test begin: paddle.broadcast_to(Tensor([8, 0, 11, 33],"bool"), list[8,8,11,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 11, 33],"bool"), list[8,8,11,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 11, 33].  Tensor sizes: [8, 0, 11, 33]
2025-03-05 15:23:06.769532 test begin: paddle.broadcast_to(Tensor([8, 0, 110, 110],"bool"), list[8,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 110, 110],"bool"), list[8,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 110, 110].  Tensor sizes: [8, 0, 110, 110]
2025-03-05 15:23:06.770054 test begin: paddle.broadcast_to(Tensor([8, 0, 110, 113],"bool"), list[8,8,110,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 110, 113],"bool"), list[8,8,110,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 110, 113].  Tensor sizes: [8, 0, 110, 113]
2025-03-05 15:23:06.770548 test begin: paddle.broadcast_to(Tensor([8, 0, 110, 121],"bool"), list[8,8,110,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 110, 121],"bool"), list[8,8,110,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 110, 121].  Tensor sizes: [8, 0, 110, 121]
2025-03-05 15:23:06.771083 test begin: paddle.broadcast_to(Tensor([8, 0, 111, 111],"bool"), list[8,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 111, 111],"bool"), list[8,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 111, 111].  Tensor sizes: [8, 0, 111, 111]
2025-03-05 15:23:06.771600 test begin: paddle.broadcast_to(Tensor([8, 0, 111, 113],"bool"), list[8,8,111,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 111, 113],"bool"), list[8,8,111,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 111, 113].  Tensor sizes: [8, 0, 111, 113]
2025-03-05 15:23:06.772112 test begin: paddle.broadcast_to(Tensor([8, 0, 111, 121],"bool"), list[8,8,111,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 111, 121],"bool"), list[8,8,111,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 111, 121].  Tensor sizes: [8, 0, 111, 121]
2025-03-05 15:23:06.772622 test begin: paddle.broadcast_to(Tensor([8, 0, 112, 112],"bool"), list[8,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 112, 112],"bool"), list[8,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 112, 112].  Tensor sizes: [8, 0, 112, 112]
2025-03-05 15:23:06.773132 test begin: paddle.broadcast_to(Tensor([8, 0, 112, 113],"bool"), list[8,8,112,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 112, 113],"bool"), list[8,8,112,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 112, 113].  Tensor sizes: [8, 0, 112, 113]
2025-03-05 15:23:06.773628 test begin: paddle.broadcast_to(Tensor([8, 0, 112, 121],"bool"), list[8,8,112,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 112, 121],"bool"), list[8,8,112,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 112, 121].  Tensor sizes: [8, 0, 112, 121]
2025-03-05 15:23:06.774129 test begin: paddle.broadcast_to(Tensor([8, 0, 113, 113],"bool"), list[8,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 113, 113],"bool"), list[8,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 113, 113].  Tensor sizes: [8, 0, 113, 113]
2025-03-05 15:23:06.774636 test begin: paddle.broadcast_to(Tensor([8, 0, 113, 121],"bool"), list[8,8,113,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 113, 121],"bool"), list[8,8,113,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 113, 121].  Tensor sizes: [8, 0, 113, 121]
2025-03-05 15:23:06.775156 test begin: paddle.broadcast_to(Tensor([8, 0, 114, 113],"bool"), list[8,8,114,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 114, 113],"bool"), list[8,8,114,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 114, 113].  Tensor sizes: [8, 0, 114, 113]
2025-03-05 15:23:06.775739 test begin: paddle.broadcast_to(Tensor([8, 0, 114, 114],"bool"), list[8,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 114, 114],"bool"), list[8,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 114, 114].  Tensor sizes: [8, 0, 114, 114]
2025-03-05 15:23:06.776244 test begin: paddle.broadcast_to(Tensor([8, 0, 114, 121],"bool"), list[8,8,114,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 114, 121],"bool"), list[8,8,114,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 114, 121].  Tensor sizes: [8, 0, 114, 121]
2025-03-05 15:23:06.776767 test begin: paddle.broadcast_to(Tensor([8, 0, 115, 113],"bool"), list[8,8,115,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 115, 113],"bool"), list[8,8,115,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 115, 113].  Tensor sizes: [8, 0, 115, 113]
2025-03-05 15:23:06.777289 test begin: paddle.broadcast_to(Tensor([8, 0, 115, 115],"bool"), list[8,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 115, 115],"bool"), list[8,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 115, 115].  Tensor sizes: [8, 0, 115, 115]
2025-03-05 15:23:06.777802 test begin: paddle.broadcast_to(Tensor([8, 0, 115, 121],"bool"), list[8,8,115,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 115, 121],"bool"), list[8,8,115,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 115, 121].  Tensor sizes: [8, 0, 115, 121]
2025-03-05 15:23:06.778307 test begin: paddle.broadcast_to(Tensor([8, 0, 116, 113],"bool"), list[8,8,116,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 116, 113],"bool"), list[8,8,116,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 116, 113].  Tensor sizes: [8, 0, 116, 113]
2025-03-05 15:23:06.778818 test begin: paddle.broadcast_to(Tensor([8, 0, 116, 116],"bool"), list[8,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 116, 116],"bool"), list[8,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 116, 116].  Tensor sizes: [8, 0, 116, 116]
2025-03-05 15:23:06.779370 test begin: paddle.broadcast_to(Tensor([8, 0, 116, 121],"bool"), list[8,8,116,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 116, 121],"bool"), list[8,8,116,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 116, 121].  Tensor sizes: [8, 0, 116, 121]
2025-03-05 15:23:06.780093 test begin: paddle.broadcast_to(Tensor([8, 0, 117, 113],"bool"), list[8,8,117,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 117, 113],"bool"), list[8,8,117,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 117, 113].  Tensor sizes: [8, 0, 117, 113]
2025-03-05 15:23:06.780649 test begin: paddle.broadcast_to(Tensor([8, 0, 117, 117],"bool"), list[8,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 117, 117],"bool"), list[8,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 117, 117].  Tensor sizes: [8, 0, 117, 117]
2025-03-05 15:23:06.781168 test begin: paddle.broadcast_to(Tensor([8, 0, 117, 121],"bool"), list[8,8,117,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 117, 121],"bool"), list[8,8,117,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 117, 121].  Tensor sizes: [8, 0, 117, 121]
2025-03-05 15:23:06.781713 test begin: paddle.broadcast_to(Tensor([8, 0, 118, 113],"bool"), list[8,8,118,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 118, 113],"bool"), list[8,8,118,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 118, 113].  Tensor sizes: [8, 0, 118, 113]
2025-03-05 15:23:06.782229 test begin: paddle.broadcast_to(Tensor([8, 0, 118, 118],"bool"), list[8,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 118, 118],"bool"), list[8,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 118, 118].  Tensor sizes: [8, 0, 118, 118]
2025-03-05 15:23:06.782759 test begin: paddle.broadcast_to(Tensor([8, 0, 118, 121],"bool"), list[8,8,118,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 118, 121],"bool"), list[8,8,118,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 118, 121].  Tensor sizes: [8, 0, 118, 121]
2025-03-05 15:23:06.783273 test begin: paddle.broadcast_to(Tensor([8, 0, 119, 113],"bool"), list[8,8,119,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 119, 113],"bool"), list[8,8,119,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 119, 113].  Tensor sizes: [8, 0, 119, 113]
2025-03-05 15:23:06.783783 test begin: paddle.broadcast_to(Tensor([8, 0, 119, 119],"bool"), list[8,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 119, 119],"bool"), list[8,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 119, 119].  Tensor sizes: [8, 0, 119, 119]
2025-03-05 15:23:06.784278 test begin: paddle.broadcast_to(Tensor([8, 0, 119, 121],"bool"), list[8,8,119,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 119, 121],"bool"), list[8,8,119,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 119, 121].  Tensor sizes: [8, 0, 119, 121]
2025-03-05 15:23:06.784781 test begin: paddle.broadcast_to(Tensor([8, 0, 12, 113],"bool"), list[8,8,12,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 12, 113],"bool"), list[8,8,12,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 12, 113].  Tensor sizes: [8, 0, 12, 113]
2025-03-05 15:23:06.785287 test begin: paddle.broadcast_to(Tensor([8, 0, 12, 121],"bool"), list[8,8,12,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 12, 121],"bool"), list[8,8,12,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 12, 121].  Tensor sizes: [8, 0, 12, 121]
2025-03-05 15:23:06.785798 test begin: paddle.broadcast_to(Tensor([8, 0, 12, 12],"bool"), list[8,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 12, 12],"bool"), list[8,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 12, 12].  Tensor sizes: [8, 0, 12, 12]
2025-03-05 15:23:06.786303 test begin: paddle.broadcast_to(Tensor([8, 0, 12, 33],"bool"), list[8,8,12,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 12, 33],"bool"), list[8,8,12,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 12, 33].  Tensor sizes: [8, 0, 12, 33]
2025-03-05 15:23:06.786833 test begin: paddle.broadcast_to(Tensor([8, 0, 120, 113],"bool"), list[8,8,120,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 120, 113],"bool"), list[8,8,120,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 120, 113].  Tensor sizes: [8, 0, 120, 113]
2025-03-05 15:23:06.787340 test begin: paddle.broadcast_to(Tensor([8, 0, 120, 120],"bool"), list[8,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 120, 120],"bool"), list[8,8,120,120,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 120, 120].  Tensor sizes: [8, 0, 120, 120]
2025-03-05 15:23:06.787907 test begin: paddle.broadcast_to(Tensor([8, 0, 120, 121],"bool"), list[8,8,120,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 120, 121],"bool"), list[8,8,120,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 120, 121].  Tensor sizes: [8, 0, 120, 121]
2025-03-05 15:23:06.788432 test begin: paddle.broadcast_to(Tensor([8, 0, 121, 113],"bool"), list[8,8,121,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 121, 113],"bool"), list[8,8,121,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 121, 113].  Tensor sizes: [8, 0, 121, 113]
2025-03-05 15:23:06.788941 test begin: paddle.broadcast_to(Tensor([8, 0, 121, 121],"bool"), list[8,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 121, 121],"bool"), list[8,8,121,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 121, 121].  Tensor sizes: [8, 0, 121, 121]
2025-03-05 15:23:06.789456 test begin: paddle.broadcast_to(Tensor([8, 0, 122, 113],"bool"), list[8,8,122,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 122, 113],"bool"), list[8,8,122,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 122, 113].  Tensor sizes: [8, 0, 122, 113]
2025-03-05 15:23:06.789991 test begin: paddle.broadcast_to(Tensor([8, 0, 122, 121],"bool"), list[8,8,122,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 122, 121],"bool"), list[8,8,122,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 122, 121].  Tensor sizes: [8, 0, 122, 121]
2025-03-05 15:23:06.790502 test begin: paddle.broadcast_to(Tensor([8, 0, 122, 122],"bool"), list[8,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 122, 122],"bool"), list[8,8,122,122,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 122, 122].  Tensor sizes: [8, 0, 122, 122]
2025-03-05 15:23:06.791023 test begin: paddle.broadcast_to(Tensor([8, 0, 123, 113],"bool"), list[8,8,123,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 123, 113],"bool"), list[8,8,123,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 123, 113].  Tensor sizes: [8, 0, 123, 113]
2025-03-05 15:23:06.791525 test begin: paddle.broadcast_to(Tensor([8, 0, 123, 121],"bool"), list[8,8,123,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 123, 121],"bool"), list[8,8,123,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 123, 121].  Tensor sizes: [8, 0, 123, 121]
2025-03-05 15:23:06.792065 test begin: paddle.broadcast_to(Tensor([8, 0, 123, 123],"bool"), list[8,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 123, 123],"bool"), list[8,8,123,123,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 123, 123].  Tensor sizes: [8, 0, 123, 123]
2025-03-05 15:23:06.792573 test begin: paddle.broadcast_to(Tensor([8, 0, 124, 113],"bool"), list[8,8,124,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 124, 113],"bool"), list[8,8,124,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 124, 113].  Tensor sizes: [8, 0, 124, 113]
2025-03-05 15:23:06.793097 test begin: paddle.broadcast_to(Tensor([8, 0, 124, 121],"bool"), list[8,8,124,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 124, 121],"bool"), list[8,8,124,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 124, 121].  Tensor sizes: [8, 0, 124, 121]
2025-03-05 15:23:06.793619 test begin: paddle.broadcast_to(Tensor([8, 0, 124, 124],"bool"), list[8,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 124, 124],"bool"), list[8,8,124,124,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 124, 124].  Tensor sizes: [8, 0, 124, 124]
2025-03-05 15:23:06.794132 test begin: paddle.broadcast_to(Tensor([8, 0, 125, 113],"bool"), list[8,8,125,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 125, 113],"bool"), list[8,8,125,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 125, 113].  Tensor sizes: [8, 0, 125, 113]
2025-03-05 15:23:06.794654 test begin: paddle.broadcast_to(Tensor([8, 0, 125, 121],"bool"), list[8,8,125,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 125, 121],"bool"), list[8,8,125,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 125, 121].  Tensor sizes: [8, 0, 125, 121]
2025-03-05 15:23:06.795161 test begin: paddle.broadcast_to(Tensor([8, 0, 125, 125],"bool"), list[8,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 125, 125],"bool"), list[8,8,125,125,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 125, 125].  Tensor sizes: [8, 0, 125, 125]
2025-03-05 15:23:06.795723 test begin: paddle.broadcast_to(Tensor([8, 0, 126, 113],"bool"), list[8,8,126,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 126, 113],"bool"), list[8,8,126,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 126, 113].  Tensor sizes: [8, 0, 126, 113]
2025-03-05 15:23:06.796449 test begin: paddle.broadcast_to(Tensor([8, 0, 126, 121],"bool"), list[8,8,126,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 126, 121],"bool"), list[8,8,126,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 126, 121].  Tensor sizes: [8, 0, 126, 121]
2025-03-05 15:23:06.796996 test begin: paddle.broadcast_to(Tensor([8, 0, 126, 126],"bool"), list[8,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 126, 126],"bool"), list[8,8,126,126,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 126, 126].  Tensor sizes: [8, 0, 126, 126]
2025-03-05 15:23:06.797499 test begin: paddle.broadcast_to(Tensor([8, 0, 127, 113],"bool"), list[8,8,127,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 127, 113],"bool"), list[8,8,127,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 127, 113].  Tensor sizes: [8, 0, 127, 113]
2025-03-05 15:23:06.798026 test begin: paddle.broadcast_to(Tensor([8, 0, 127, 121],"bool"), list[8,8,127,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 127, 121],"bool"), list[8,8,127,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 127, 121].  Tensor sizes: [8, 0, 127, 121]
2025-03-05 15:23:06.798537 test begin: paddle.broadcast_to(Tensor([8, 0, 127, 127],"bool"), list[8,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 127, 127],"bool"), list[8,8,127,127,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 127, 127].  Tensor sizes: [8, 0, 127, 127]
2025-03-05 15:23:06.799060 test begin: paddle.broadcast_to(Tensor([8, 0, 128, 113],"bool"), list[8,8,128,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 128, 113],"bool"), list[8,8,128,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 128, 113].  Tensor sizes: [8, 0, 128, 113]
2025-03-05 15:23:06.799560 test begin: paddle.broadcast_to(Tensor([8, 0, 128, 121],"bool"), list[8,8,128,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 128, 121],"bool"), list[8,8,128,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 128, 121].  Tensor sizes: [8, 0, 128, 121]
2025-03-05 15:23:06.800142 test begin: paddle.broadcast_to(Tensor([8, 0, 128, 128],"bool"), list[8,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 128, 128],"bool"), list[8,8,128,128,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 128, 128].  Tensor sizes: [8, 0, 128, 128]
2025-03-05 15:23:06.800673 test begin: paddle.broadcast_to(Tensor([8, 0, 129, 113],"bool"), list[8,8,129,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 129, 113],"bool"), list[8,8,129,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 129, 113].  Tensor sizes: [8, 0, 129, 113]
2025-03-05 15:23:06.801181 test begin: paddle.broadcast_to(Tensor([8, 0, 129, 121],"bool"), list[8,8,129,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 129, 121],"bool"), list[8,8,129,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 129, 121].  Tensor sizes: [8, 0, 129, 121]
2025-03-05 15:23:06.801698 test begin: paddle.broadcast_to(Tensor([8, 0, 129, 129],"bool"), list[8,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 129, 129],"bool"), list[8,8,129,129,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 129, 129].  Tensor sizes: [8, 0, 129, 129]
2025-03-05 15:23:06.802216 test begin: paddle.broadcast_to(Tensor([8, 0, 13, 113],"bool"), list[8,8,13,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 13, 113],"bool"), list[8,8,13,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 13, 113].  Tensor sizes: [8, 0, 13, 113]
2025-03-05 15:23:06.802720 test begin: paddle.broadcast_to(Tensor([8, 0, 13, 121],"bool"), list[8,8,13,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 13, 121],"bool"), list[8,8,13,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 13, 121].  Tensor sizes: [8, 0, 13, 121]
2025-03-05 15:23:06.803235 test begin: paddle.broadcast_to(Tensor([8, 0, 13, 13],"bool"), list[8,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 13, 13],"bool"), list[8,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 13, 13].  Tensor sizes: [8, 0, 13, 13]
2025-03-05 15:23:06.803806 test begin: paddle.broadcast_to(Tensor([8, 0, 13, 33],"bool"), list[8,8,13,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 13, 33],"bool"), list[8,8,13,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 13, 33].  Tensor sizes: [8, 0, 13, 33]
2025-03-05 15:23:06.804347 test begin: paddle.broadcast_to(Tensor([8, 0, 130, 113],"bool"), list[8,8,130,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 130, 113],"bool"), list[8,8,130,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 130, 113].  Tensor sizes: [8, 0, 130, 113]
2025-03-05 15:23:06.804864 test begin: paddle.broadcast_to(Tensor([8, 0, 130, 121],"bool"), list[8,8,130,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 130, 121],"bool"), list[8,8,130,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 130, 121].  Tensor sizes: [8, 0, 130, 121]
2025-03-05 15:23:06.805425 test begin: paddle.broadcast_to(Tensor([8, 0, 130, 130],"bool"), list[8,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 130, 130],"bool"), list[8,8,130,130,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 130, 130].  Tensor sizes: [8, 0, 130, 130]
2025-03-05 15:23:06.805954 test begin: paddle.broadcast_to(Tensor([8, 0, 131, 113],"bool"), list[8,8,131,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 131, 113],"bool"), list[8,8,131,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 131, 113].  Tensor sizes: [8, 0, 131, 113]
2025-03-05 15:23:06.806474 test begin: paddle.broadcast_to(Tensor([8, 0, 131, 121],"bool"), list[8,8,131,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 131, 121],"bool"), list[8,8,131,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 131, 121].  Tensor sizes: [8, 0, 131, 121]
2025-03-05 15:23:06.807014 test begin: paddle.broadcast_to(Tensor([8, 0, 131, 131],"bool"), list[8,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 131, 131],"bool"), list[8,8,131,131,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 131, 131].  Tensor sizes: [8, 0, 131, 131]
2025-03-05 15:23:06.807519 test begin: paddle.broadcast_to(Tensor([8, 0, 132, 113],"bool"), list[8,8,132,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 132, 113],"bool"), list[8,8,132,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 132, 113].  Tensor sizes: [8, 0, 132, 113]
2025-03-05 15:23:06.808057 test begin: paddle.broadcast_to(Tensor([8, 0, 132, 121],"bool"), list[8,8,132,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 132, 121],"bool"), list[8,8,132,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 132, 121].  Tensor sizes: [8, 0, 132, 121]
2025-03-05 15:23:06.808568 test begin: paddle.broadcast_to(Tensor([8, 0, 132, 132],"bool"), list[8,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 132, 132],"bool"), list[8,8,132,132,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 132, 132].  Tensor sizes: [8, 0, 132, 132]
2025-03-05 15:23:06.809090 test begin: paddle.broadcast_to(Tensor([8, 0, 133, 113],"bool"), list[8,8,133,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 133, 113],"bool"), list[8,8,133,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 133, 113].  Tensor sizes: [8, 0, 133, 113]
2025-03-05 15:23:06.809604 test begin: paddle.broadcast_to(Tensor([8, 0, 133, 121],"bool"), list[8,8,133,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 133, 121],"bool"), list[8,8,133,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 133, 121].  Tensor sizes: [8, 0, 133, 121]
2025-03-05 15:23:06.810105 test begin: paddle.broadcast_to(Tensor([8, 0, 133, 133],"bool"), list[8,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 133, 133],"bool"), list[8,8,133,133,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 133, 133].  Tensor sizes: [8, 0, 133, 133]
2025-03-05 15:23:06.810604 test begin: paddle.broadcast_to(Tensor([8, 0, 134, 113],"bool"), list[8,8,134,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 134, 113],"bool"), list[8,8,134,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 134, 113].  Tensor sizes: [8, 0, 134, 113]
2025-03-05 15:23:06.811115 test begin: paddle.broadcast_to(Tensor([8, 0, 134, 121],"bool"), list[8,8,134,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 134, 121],"bool"), list[8,8,134,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 134, 121].  Tensor sizes: [8, 0, 134, 121]
2025-03-05 15:23:06.811623 test begin: paddle.broadcast_to(Tensor([8, 0, 134, 134],"bool"), list[8,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 134, 134],"bool"), list[8,8,134,134,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 134, 134].  Tensor sizes: [8, 0, 134, 134]
2025-03-05 15:23:06.812197 test begin: paddle.broadcast_to(Tensor([8, 0, 135, 113],"bool"), list[8,8,135,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 135, 113],"bool"), list[8,8,135,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 135, 113].  Tensor sizes: [8, 0, 135, 113]
2025-03-05 15:23:06.812883 test begin: paddle.broadcast_to(Tensor([8, 0, 135, 121],"bool"), list[8,8,135,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 135, 121],"bool"), list[8,8,135,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 135, 121].  Tensor sizes: [8, 0, 135, 121]
2025-03-05 15:23:06.813425 test begin: paddle.broadcast_to(Tensor([8, 0, 135, 135],"bool"), list[8,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 135, 135],"bool"), list[8,8,135,135,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 135, 135].  Tensor sizes: [8, 0, 135, 135]
2025-03-05 15:23:06.813958 test begin: paddle.broadcast_to(Tensor([8, 0, 136, 113],"bool"), list[8,8,136,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 136, 113],"bool"), list[8,8,136,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 136, 113].  Tensor sizes: [8, 0, 136, 113]
2025-03-05 15:23:06.814465 test begin: paddle.broadcast_to(Tensor([8, 0, 136, 121],"bool"), list[8,8,136,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 136, 121],"bool"), list[8,8,136,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 136, 121].  Tensor sizes: [8, 0, 136, 121]
2025-03-05 15:23:06.814990 test begin: paddle.broadcast_to(Tensor([8, 0, 136, 136],"bool"), list[8,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 136, 136],"bool"), list[8,8,136,136,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 136, 136].  Tensor sizes: [8, 0, 136, 136]
2025-03-05 15:23:06.815489 test begin: paddle.broadcast_to(Tensor([8, 0, 137, 113],"bool"), list[8,8,137,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 137, 113],"bool"), list[8,8,137,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 137, 113].  Tensor sizes: [8, 0, 137, 113]
2025-03-05 15:23:06.816020 test begin: paddle.broadcast_to(Tensor([8, 0, 137, 121],"bool"), list[8,8,137,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 137, 121],"bool"), list[8,8,137,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 137, 121].  Tensor sizes: [8, 0, 137, 121]
2025-03-05 15:23:06.816526 test begin: paddle.broadcast_to(Tensor([8, 0, 137, 137],"bool"), list[8,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 137, 137],"bool"), list[8,8,137,137,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 137, 137].  Tensor sizes: [8, 0, 137, 137]
2025-03-05 15:23:06.817052 test begin: paddle.broadcast_to(Tensor([8, 0, 138, 113],"bool"), list[8,8,138,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 138, 113],"bool"), list[8,8,138,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 138, 113].  Tensor sizes: [8, 0, 138, 113]
2025-03-05 15:23:06.817563 test begin: paddle.broadcast_to(Tensor([8, 0, 138, 121],"bool"), list[8,8,138,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 138, 121],"bool"), list[8,8,138,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 138, 121].  Tensor sizes: [8, 0, 138, 121]
2025-03-05 15:23:06.818095 test begin: paddle.broadcast_to(Tensor([8, 0, 138, 138],"bool"), list[8,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 138, 138],"bool"), list[8,8,138,138,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 138, 138].  Tensor sizes: [8, 0, 138, 138]
2025-03-05 15:23:06.818603 test begin: paddle.broadcast_to(Tensor([8, 0, 139, 113],"bool"), list[8,8,139,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 139, 113],"bool"), list[8,8,139,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 139, 113].  Tensor sizes: [8, 0, 139, 113]
2025-03-05 15:23:06.819124 test begin: paddle.broadcast_to(Tensor([8, 0, 139, 121],"bool"), list[8,8,139,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 139, 121],"bool"), list[8,8,139,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 139, 121].  Tensor sizes: [8, 0, 139, 121]
2025-03-05 15:23:06.819643 test begin: paddle.broadcast_to(Tensor([8, 0, 139, 139],"bool"), list[8,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 139, 139],"bool"), list[8,8,139,139,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 139, 139].  Tensor sizes: [8, 0, 139, 139]
2025-03-05 15:23:06.820151 test begin: paddle.broadcast_to(Tensor([8, 0, 14, 113],"bool"), list[8,8,14,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 14, 113],"bool"), list[8,8,14,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 14, 113].  Tensor sizes: [8, 0, 14, 113]
2025-03-05 15:23:06.820728 test begin: paddle.broadcast_to(Tensor([8, 0, 14, 121],"bool"), list[8,8,14,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 14, 121],"bool"), list[8,8,14,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 14, 121].  Tensor sizes: [8, 0, 14, 121]
2025-03-05 15:23:06.821246 test begin: paddle.broadcast_to(Tensor([8, 0, 14, 14],"bool"), list[8,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 14, 14],"bool"), list[8,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 14, 14].  Tensor sizes: [8, 0, 14, 14]
2025-03-05 15:23:06.821762 test begin: paddle.broadcast_to(Tensor([8, 0, 14, 33],"bool"), list[8,8,14,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 14, 33],"bool"), list[8,8,14,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 14, 33].  Tensor sizes: [8, 0, 14, 33]
2025-03-05 15:23:06.822279 test begin: paddle.broadcast_to(Tensor([8, 0, 140, 113],"bool"), list[8,8,140,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 140, 113],"bool"), list[8,8,140,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 140, 113].  Tensor sizes: [8, 0, 140, 113]
2025-03-05 15:23:06.822790 test begin: paddle.broadcast_to(Tensor([8, 0, 140, 121],"bool"), list[8,8,140,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 140, 121],"bool"), list[8,8,140,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 140, 121].  Tensor sizes: [8, 0, 140, 121]
2025-03-05 15:23:06.823294 test begin: paddle.broadcast_to(Tensor([8, 0, 140, 140],"bool"), list[8,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 140, 140],"bool"), list[8,8,140,140,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 140, 140].  Tensor sizes: [8, 0, 140, 140]
2025-03-05 15:23:06.823818 test begin: paddle.broadcast_to(Tensor([8, 0, 141, 113],"bool"), list[8,8,141,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 141, 113],"bool"), list[8,8,141,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 141, 113].  Tensor sizes: [8, 0, 141, 113]
2025-03-05 15:23:06.824319 test begin: paddle.broadcast_to(Tensor([8, 0, 141, 121],"bool"), list[8,8,141,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 141, 121],"bool"), list[8,8,141,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 141, 121].  Tensor sizes: [8, 0, 141, 121]
2025-03-05 15:23:06.824823 test begin: paddle.broadcast_to(Tensor([8, 0, 141, 141],"bool"), list[8,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 141, 141],"bool"), list[8,8,141,141,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 141, 141].  Tensor sizes: [8, 0, 141, 141]
2025-03-05 15:23:06.825328 test begin: paddle.broadcast_to(Tensor([8, 0, 142, 113],"bool"), list[8,8,142,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 142, 113],"bool"), list[8,8,142,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 142, 113].  Tensor sizes: [8, 0, 142, 113]
2025-03-05 15:23:06.825842 test begin: paddle.broadcast_to(Tensor([8, 0, 142, 121],"bool"), list[8,8,142,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 142, 121],"bool"), list[8,8,142,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 142, 121].  Tensor sizes: [8, 0, 142, 121]
2025-03-05 15:23:06.826363 test begin: paddle.broadcast_to(Tensor([8, 0, 142, 142],"bool"), list[8,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 142, 142],"bool"), list[8,8,142,142,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 142, 142].  Tensor sizes: [8, 0, 142, 142]
2025-03-05 15:23:06.826884 test begin: paddle.broadcast_to(Tensor([8, 0, 143, 113],"bool"), list[8,8,143,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 143, 113],"bool"), list[8,8,143,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 143, 113].  Tensor sizes: [8, 0, 143, 113]
2025-03-05 15:23:06.827391 test begin: paddle.broadcast_to(Tensor([8, 0, 143, 121],"bool"), list[8,8,143,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 143, 121],"bool"), list[8,8,143,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 143, 121].  Tensor sizes: [8, 0, 143, 121]
2025-03-05 15:23:06.827916 test begin: paddle.broadcast_to(Tensor([8, 0, 143, 143],"bool"), list[8,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 143, 143],"bool"), list[8,8,143,143,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 143, 143].  Tensor sizes: [8, 0, 143, 143]
2025-03-05 15:23:06.828466 test begin: paddle.broadcast_to(Tensor([8, 0, 144, 113],"bool"), list[8,8,144,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 144, 113],"bool"), list[8,8,144,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 144, 113].  Tensor sizes: [8, 0, 144, 113]
2025-03-05 15:23:06.829156 test begin: paddle.broadcast_to(Tensor([8, 0, 144, 121],"bool"), list[8,8,144,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 144, 121],"bool"), list[8,8,144,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 144, 121].  Tensor sizes: [8, 0, 144, 121]
2025-03-05 15:23:06.829768 test begin: paddle.broadcast_to(Tensor([8, 0, 144, 144],"bool"), list[8,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 144, 144],"bool"), list[8,8,144,144,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 144, 144].  Tensor sizes: [8, 0, 144, 144]
2025-03-05 15:23:06.830283 test begin: paddle.broadcast_to(Tensor([8, 0, 145, 113],"bool"), list[8,8,145,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 145, 113],"bool"), list[8,8,145,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 145, 113].  Tensor sizes: [8, 0, 145, 113]
2025-03-05 15:23:06.830802 test begin: paddle.broadcast_to(Tensor([8, 0, 145, 121],"bool"), list[8,8,145,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 145, 121],"bool"), list[8,8,145,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 145, 121].  Tensor sizes: [8, 0, 145, 121]
2025-03-05 15:23:06.831321 test begin: paddle.broadcast_to(Tensor([8, 0, 145, 145],"bool"), list[8,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 145, 145],"bool"), list[8,8,145,145,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 145, 145].  Tensor sizes: [8, 0, 145, 145]
2025-03-05 15:23:06.831839 test begin: paddle.broadcast_to(Tensor([8, 0, 146, 113],"bool"), list[8,8,146,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 146, 113],"bool"), list[8,8,146,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 146, 113].  Tensor sizes: [8, 0, 146, 113]
2025-03-05 15:23:06.832356 test begin: paddle.broadcast_to(Tensor([8, 0, 146, 121],"bool"), list[8,8,146,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 146, 121],"bool"), list[8,8,146,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 146, 121].  Tensor sizes: [8, 0, 146, 121]
2025-03-05 15:23:06.832861 test begin: paddle.broadcast_to(Tensor([8, 0, 146, 146],"bool"), list[8,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 146, 146],"bool"), list[8,8,146,146,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 146, 146].  Tensor sizes: [8, 0, 146, 146]
2025-03-05 15:23:06.833377 test begin: paddle.broadcast_to(Tensor([8, 0, 147, 113],"bool"), list[8,8,147,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 147, 113],"bool"), list[8,8,147,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 147, 113].  Tensor sizes: [8, 0, 147, 113]
2025-03-05 15:23:06.833887 test begin: paddle.broadcast_to(Tensor([8, 0, 147, 121],"bool"), list[8,8,147,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 147, 121],"bool"), list[8,8,147,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 147, 121].  Tensor sizes: [8, 0, 147, 121]
2025-03-05 15:23:06.834384 test begin: paddle.broadcast_to(Tensor([8, 0, 147, 147],"bool"), list[8,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 147, 147],"bool"), list[8,8,147,147,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 147, 147].  Tensor sizes: [8, 0, 147, 147]
2025-03-05 15:23:06.834924 test begin: paddle.broadcast_to(Tensor([8, 0, 148, 113],"bool"), list[8,8,148,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 148, 113],"bool"), list[8,8,148,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 148, 113].  Tensor sizes: [8, 0, 148, 113]
2025-03-05 15:23:06.835447 test begin: paddle.broadcast_to(Tensor([8, 0, 148, 121],"bool"), list[8,8,148,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 148, 121],"bool"), list[8,8,148,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 148, 121].  Tensor sizes: [8, 0, 148, 121]
2025-03-05 15:23:06.835969 test begin: paddle.broadcast_to(Tensor([8, 0, 148, 148],"bool"), list[8,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 148, 148],"bool"), list[8,8,148,148,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 148, 148].  Tensor sizes: [8, 0, 148, 148]
2025-03-05 15:23:06.836474 test begin: paddle.broadcast_to(Tensor([8, 0, 149, 113],"bool"), list[8,8,149,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 149, 113],"bool"), list[8,8,149,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 149, 113].  Tensor sizes: [8, 0, 149, 113]
2025-03-05 15:23:06.836992 test begin: paddle.broadcast_to(Tensor([8, 0, 149, 121],"bool"), list[8,8,149,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 149, 121],"bool"), list[8,8,149,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 149, 121].  Tensor sizes: [8, 0, 149, 121]
2025-03-05 15:23:06.837489 test begin: paddle.broadcast_to(Tensor([8, 0, 149, 149],"bool"), list[8,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 149, 149],"bool"), list[8,8,149,149,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 149, 149].  Tensor sizes: [8, 0, 149, 149]
2025-03-05 15:23:06.838006 test begin: paddle.broadcast_to(Tensor([8, 0, 15, 113],"bool"), list[8,8,15,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 15, 113],"bool"), list[8,8,15,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 15, 113].  Tensor sizes: [8, 0, 15, 113]
2025-03-05 15:23:06.838509 test begin: paddle.broadcast_to(Tensor([8, 0, 15, 121],"bool"), list[8,8,15,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 15, 121],"bool"), list[8,8,15,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 15, 121].  Tensor sizes: [8, 0, 15, 121]
2025-03-05 15:23:06.839536 test begin: paddle.broadcast_to(Tensor([8, 0, 15, 15],"bool"), list[8,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 15, 15],"bool"), list[8,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 15, 15].  Tensor sizes: [8, 0, 15, 15]
2025-03-05 15:23:06.840131 test begin: paddle.broadcast_to(Tensor([8, 0, 15, 33],"bool"), list[8,8,15,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 15, 33],"bool"), list[8,8,15,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 15, 33].  Tensor sizes: [8, 0, 15, 33]
2025-03-05 15:23:06.840632 test begin: paddle.broadcast_to(Tensor([8, 0, 150, 113],"bool"), list[8,8,150,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 150, 113],"bool"), list[8,8,150,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 150, 113].  Tensor sizes: [8, 0, 150, 113]
2025-03-05 15:23:06.841149 test begin: paddle.broadcast_to(Tensor([8, 0, 150, 121],"bool"), list[8,8,150,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 150, 121],"bool"), list[8,8,150,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 150, 121].  Tensor sizes: [8, 0, 150, 121]
2025-03-05 15:23:06.841688 test begin: paddle.broadcast_to(Tensor([8, 0, 150, 150],"bool"), list[8,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 150, 150],"bool"), list[8,8,150,150,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 150, 150].  Tensor sizes: [8, 0, 150, 150]
2025-03-05 15:23:06.842200 test begin: paddle.broadcast_to(Tensor([8, 0, 151, 113],"bool"), list[8,8,151,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 151, 113],"bool"), list[8,8,151,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 151, 113].  Tensor sizes: [8, 0, 151, 113]
2025-03-05 15:23:06.842789 test begin: paddle.broadcast_to(Tensor([8, 0, 151, 121],"bool"), list[8,8,151,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 151, 121],"bool"), list[8,8,151,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 151, 121].  Tensor sizes: [8, 0, 151, 121]
2025-03-05 15:23:06.843298 test begin: paddle.broadcast_to(Tensor([8, 0, 151, 151],"bool"), list[8,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 151, 151],"bool"), list[8,8,151,151,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 151, 151].  Tensor sizes: [8, 0, 151, 151]
2025-03-05 15:23:06.843804 test begin: paddle.broadcast_to(Tensor([8, 0, 152, 113],"bool"), list[8,8,152,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 152, 113],"bool"), list[8,8,152,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 152, 113].  Tensor sizes: [8, 0, 152, 113]
2025-03-05 15:23:06.844325 test begin: paddle.broadcast_to(Tensor([8, 0, 152, 121],"bool"), list[8,8,152,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 152, 121],"bool"), list[8,8,152,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 152, 121].  Tensor sizes: [8, 0, 152, 121]
2025-03-05 15:23:06.844841 test begin: paddle.broadcast_to(Tensor([8, 0, 152, 152],"bool"), list[8,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 152, 152],"bool"), list[8,8,152,152,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 152, 152].  Tensor sizes: [8, 0, 152, 152]
2025-03-05 15:23:06.845396 test begin: paddle.broadcast_to(Tensor([8, 0, 153, 113],"bool"), list[8,8,153,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 153, 113],"bool"), list[8,8,153,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 153, 113].  Tensor sizes: [8, 0, 153, 113]
2025-03-05 15:23:06.846113 test begin: paddle.broadcast_to(Tensor([8, 0, 153, 121],"bool"), list[8,8,153,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 153, 121],"bool"), list[8,8,153,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 153, 121].  Tensor sizes: [8, 0, 153, 121]
2025-03-05 15:23:06.846664 test begin: paddle.broadcast_to(Tensor([8, 0, 153, 153],"bool"), list[8,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 153, 153],"bool"), list[8,8,153,153,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 153, 153].  Tensor sizes: [8, 0, 153, 153]
2025-03-05 15:23:06.847179 test begin: paddle.broadcast_to(Tensor([8, 0, 154, 113],"bool"), list[8,8,154,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 154, 113],"bool"), list[8,8,154,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 154, 113].  Tensor sizes: [8, 0, 154, 113]
2025-03-05 15:23:06.847714 test begin: paddle.broadcast_to(Tensor([8, 0, 154, 121],"bool"), list[8,8,154,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 154, 121],"bool"), list[8,8,154,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 154, 121].  Tensor sizes: [8, 0, 154, 121]
2025-03-05 15:23:06.848225 test begin: paddle.broadcast_to(Tensor([8, 0, 154, 154],"bool"), list[8,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 154, 154],"bool"), list[8,8,154,154,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 154, 154].  Tensor sizes: [8, 0, 154, 154]
2025-03-05 15:23:06.848741 test begin: paddle.broadcast_to(Tensor([8, 0, 155, 113],"bool"), list[8,8,155,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 155, 113],"bool"), list[8,8,155,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 155, 113].  Tensor sizes: [8, 0, 155, 113]
2025-03-05 15:23:06.849241 test begin: paddle.broadcast_to(Tensor([8, 0, 155, 121],"bool"), list[8,8,155,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 155, 121],"bool"), list[8,8,155,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 155, 121].  Tensor sizes: [8, 0, 155, 121]
2025-03-05 15:23:06.849757 test begin: paddle.broadcast_to(Tensor([8, 0, 155, 155],"bool"), list[8,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 155, 155],"bool"), list[8,8,155,155,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 155, 155].  Tensor sizes: [8, 0, 155, 155]
2025-03-05 15:23:06.850261 test begin: paddle.broadcast_to(Tensor([8, 0, 156, 113],"bool"), list[8,8,156,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 156, 113],"bool"), list[8,8,156,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 156, 113].  Tensor sizes: [8, 0, 156, 113]
2025-03-05 15:23:06.850769 test begin: paddle.broadcast_to(Tensor([8, 0, 156, 121],"bool"), list[8,8,156,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 156, 121],"bool"), list[8,8,156,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 156, 121].  Tensor sizes: [8, 0, 156, 121]
2025-03-05 15:23:06.851270 test begin: paddle.broadcast_to(Tensor([8, 0, 156, 156],"bool"), list[8,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 156, 156],"bool"), list[8,8,156,156,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 156, 156].  Tensor sizes: [8, 0, 156, 156]
2025-03-05 15:23:06.851777 test begin: paddle.broadcast_to(Tensor([8, 0, 157, 113],"bool"), list[8,8,157,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 157, 113],"bool"), list[8,8,157,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 157, 113].  Tensor sizes: [8, 0, 157, 113]
2025-03-05 15:23:06.852279 test begin: paddle.broadcast_to(Tensor([8, 0, 157, 121],"bool"), list[8,8,157,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 157, 121],"bool"), list[8,8,157,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 157, 121].  Tensor sizes: [8, 0, 157, 121]
2025-03-05 15:23:06.852801 test begin: paddle.broadcast_to(Tensor([8, 0, 157, 157],"bool"), list[8,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 157, 157],"bool"), list[8,8,157,157,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 157, 157].  Tensor sizes: [8, 0, 157, 157]
2025-03-05 15:23:06.853301 test begin: paddle.broadcast_to(Tensor([8, 0, 158, 113],"bool"), list[8,8,158,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 158, 113],"bool"), list[8,8,158,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 158, 113].  Tensor sizes: [8, 0, 158, 113]
2025-03-05 15:23:06.853820 test begin: paddle.broadcast_to(Tensor([8, 0, 158, 121],"bool"), list[8,8,158,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 158, 121],"bool"), list[8,8,158,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 158, 121].  Tensor sizes: [8, 0, 158, 121]
2025-03-05 15:23:06.854322 test begin: paddle.broadcast_to(Tensor([8, 0, 158, 158],"bool"), list[8,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 158, 158],"bool"), list[8,8,158,158,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 158, 158].  Tensor sizes: [8, 0, 158, 158]
2025-03-05 15:23:06.854889 test begin: paddle.broadcast_to(Tensor([8, 0, 159, 113],"bool"), list[8,8,159,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 159, 113],"bool"), list[8,8,159,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 159, 113].  Tensor sizes: [8, 0, 159, 113]
2025-03-05 15:23:06.855417 test begin: paddle.broadcast_to(Tensor([8, 0, 159, 121],"bool"), list[8,8,159,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 159, 121],"bool"), list[8,8,159,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 159, 121].  Tensor sizes: [8, 0, 159, 121]
2025-03-05 15:23:06.855931 test begin: paddle.broadcast_to(Tensor([8, 0, 159, 159],"bool"), list[8,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 159, 159],"bool"), list[8,8,159,159,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 159, 159].  Tensor sizes: [8, 0, 159, 159]
2025-03-05 15:23:06.856451 test begin: paddle.broadcast_to(Tensor([8, 0, 16, 113],"bool"), list[8,8,16,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 16, 113],"bool"), list[8,8,16,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 16, 113].  Tensor sizes: [8, 0, 16, 113]
2025-03-05 15:23:06.856970 test begin: paddle.broadcast_to(Tensor([8, 0, 16, 121],"bool"), list[8,8,16,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 16, 121],"bool"), list[8,8,16,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 16, 121].  Tensor sizes: [8, 0, 16, 121]
2025-03-05 15:23:06.857477 test begin: paddle.broadcast_to(Tensor([8, 0, 16, 16],"bool"), list[8,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 16, 16],"bool"), list[8,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 16, 16].  Tensor sizes: [8, 0, 16, 16]
2025-03-05 15:23:06.857989 test begin: paddle.broadcast_to(Tensor([8, 0, 16, 33],"bool"), list[8,8,16,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 16, 33],"bool"), list[8,8,16,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 16, 33].  Tensor sizes: [8, 0, 16, 33]
2025-03-05 15:23:06.858481 test begin: paddle.broadcast_to(Tensor([8, 0, 160, 113],"bool"), list[8,8,160,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 160, 113],"bool"), list[8,8,160,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 160, 113].  Tensor sizes: [8, 0, 160, 113]
2025-03-05 15:23:06.859000 test begin: paddle.broadcast_to(Tensor([8, 0, 160, 160],"bool"), list[8,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 160, 160],"bool"), list[8,8,160,160,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 160, 160].  Tensor sizes: [8, 0, 160, 160]
2025-03-05 15:23:06.859516 test begin: paddle.broadcast_to(Tensor([8, 0, 161, 113],"bool"), list[8,8,161,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 161, 113],"bool"), list[8,8,161,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 161, 113].  Tensor sizes: [8, 0, 161, 113]
2025-03-05 15:23:06.860060 test begin: paddle.broadcast_to(Tensor([8, 0, 161, 161],"bool"), list[8,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 161, 161],"bool"), list[8,8,161,161,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 161, 161].  Tensor sizes: [8, 0, 161, 161]
2025-03-05 15:23:06.860551 test begin: paddle.broadcast_to(Tensor([8, 0, 162, 113],"bool"), list[8,8,162,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 162, 113],"bool"), list[8,8,162,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 162, 113].  Tensor sizes: [8, 0, 162, 113]
2025-03-05 15:23:06.861078 test begin: paddle.broadcast_to(Tensor([8, 0, 162, 162],"bool"), list[8,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 162, 162],"bool"), list[8,8,162,162,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 162, 162].  Tensor sizes: [8, 0, 162, 162]
2025-03-05 15:23:06.861637 test begin: paddle.broadcast_to(Tensor([8, 0, 163, 113],"bool"), list[8,8,163,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 163, 113],"bool"), list[8,8,163,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 163, 113].  Tensor sizes: [8, 0, 163, 113]
2025-03-05 15:23:06.862744 test begin: paddle.broadcast_to(Tensor([8, 0, 163, 163],"bool"), list[8,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 163, 163],"bool"), list[8,8,163,163,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 163, 163].  Tensor sizes: [8, 0, 163, 163]
2025-03-05 15:23:06.863330 test begin: paddle.broadcast_to(Tensor([8, 0, 164, 113],"bool"), list[8,8,164,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 164, 113],"bool"), list[8,8,164,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 164, 113].  Tensor sizes: [8, 0, 164, 113]
2025-03-05 15:23:06.863864 test begin: paddle.broadcast_to(Tensor([8, 0, 164, 164],"bool"), list[8,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 164, 164],"bool"), list[8,8,164,164,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 164, 164].  Tensor sizes: [8, 0, 164, 164]
2025-03-05 15:23:06.864378 test begin: paddle.broadcast_to(Tensor([8, 0, 165, 113],"bool"), list[8,8,165,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 165, 113],"bool"), list[8,8,165,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 165, 113].  Tensor sizes: [8, 0, 165, 113]
2025-03-05 15:23:06.864914 test begin: paddle.broadcast_to(Tensor([8, 0, 165, 165],"bool"), list[8,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 165, 165],"bool"), list[8,8,165,165,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 165, 165].  Tensor sizes: [8, 0, 165, 165]
2025-03-05 15:23:06.865470 test begin: paddle.broadcast_to(Tensor([8, 0, 166, 113],"bool"), list[8,8,166,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 166, 113],"bool"), list[8,8,166,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 166, 113].  Tensor sizes: [8, 0, 166, 113]
2025-03-05 15:23:06.866000 test begin: paddle.broadcast_to(Tensor([8, 0, 166, 166],"bool"), list[8,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 166, 166],"bool"), list[8,8,166,166,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 166, 166].  Tensor sizes: [8, 0, 166, 166]
2025-03-05 15:23:06.866505 test begin: paddle.broadcast_to(Tensor([8, 0, 167, 113],"bool"), list[8,8,167,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 167, 113],"bool"), list[8,8,167,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 167, 113].  Tensor sizes: [8, 0, 167, 113]
2025-03-05 15:23:06.867024 test begin: paddle.broadcast_to(Tensor([8, 0, 167, 167],"bool"), list[8,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 167, 167],"bool"), list[8,8,167,167,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 167, 167].  Tensor sizes: [8, 0, 167, 167]
2025-03-05 15:23:06.867534 test begin: paddle.broadcast_to(Tensor([8, 0, 168, 113],"bool"), list[8,8,168,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 168, 113],"bool"), list[8,8,168,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 168, 113].  Tensor sizes: [8, 0, 168, 113]
2025-03-05 15:23:06.868055 test begin: paddle.broadcast_to(Tensor([8, 0, 168, 168],"bool"), list[8,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 168, 168],"bool"), list[8,8,168,168,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 168, 168].  Tensor sizes: [8, 0, 168, 168]
2025-03-05 15:23:06.868561 test begin: paddle.broadcast_to(Tensor([8, 0, 169, 113],"bool"), list[8,8,169,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 169, 113],"bool"), list[8,8,169,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 169, 113].  Tensor sizes: [8, 0, 169, 113]
2025-03-05 15:23:06.869131 test begin: paddle.broadcast_to(Tensor([8, 0, 169, 169],"bool"), list[8,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 169, 169],"bool"), list[8,8,169,169,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 169, 169].  Tensor sizes: [8, 0, 169, 169]
2025-03-05 15:23:06.869647 test begin: paddle.broadcast_to(Tensor([8, 0, 17, 113],"bool"), list[8,8,17,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 17, 113],"bool"), list[8,8,17,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 17, 113].  Tensor sizes: [8, 0, 17, 113]
2025-03-05 15:23:06.870164 test begin: paddle.broadcast_to(Tensor([8, 0, 17, 121],"bool"), list[8,8,17,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 17, 121],"bool"), list[8,8,17,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 17, 121].  Tensor sizes: [8, 0, 17, 121]
2025-03-05 15:23:06.870691 test begin: paddle.broadcast_to(Tensor([8, 0, 17, 17],"bool"), list[8,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 17, 17],"bool"), list[8,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 17, 17].  Tensor sizes: [8, 0, 17, 17]
2025-03-05 15:23:06.871218 test begin: paddle.broadcast_to(Tensor([8, 0, 17, 33],"bool"), list[8,8,17,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 17, 33],"bool"), list[8,8,17,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 17, 33].  Tensor sizes: [8, 0, 17, 33]
2025-03-05 15:23:06.871854 test begin: paddle.broadcast_to(Tensor([8, 0, 170, 113],"bool"), list[8,8,170,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 170, 113],"bool"), list[8,8,170,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 170, 113].  Tensor sizes: [8, 0, 170, 113]
2025-03-05 15:23:06.872413 test begin: paddle.broadcast_to(Tensor([8, 0, 170, 170],"bool"), list[8,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 170, 170],"bool"), list[8,8,170,170,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 170, 170].  Tensor sizes: [8, 0, 170, 170]
2025-03-05 15:23:06.872953 test begin: paddle.broadcast_to(Tensor([8, 0, 171, 113],"bool"), list[8,8,171,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 171, 113],"bool"), list[8,8,171,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 171, 113].  Tensor sizes: [8, 0, 171, 113]
2025-03-05 15:23:06.873463 test begin: paddle.broadcast_to(Tensor([8, 0, 171, 171],"bool"), list[8,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 171, 171],"bool"), list[8,8,171,171,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 171, 171].  Tensor sizes: [8, 0, 171, 171]
2025-03-05 15:23:06.873986 test begin: paddle.broadcast_to(Tensor([8, 0, 172, 113],"bool"), list[8,8,172,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 172, 113],"bool"), list[8,8,172,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 172, 113].  Tensor sizes: [8, 0, 172, 113]
2025-03-05 15:23:06.874494 test begin: paddle.broadcast_to(Tensor([8, 0, 172, 172],"bool"), list[8,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 172, 172],"bool"), list[8,8,172,172,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 172, 172].  Tensor sizes: [8, 0, 172, 172]
2025-03-05 15:23:06.875014 test begin: paddle.broadcast_to(Tensor([8, 0, 173, 113],"bool"), list[8,8,173,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 173, 113],"bool"), list[8,8,173,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 173, 113].  Tensor sizes: [8, 0, 173, 113]
2025-03-05 15:23:06.875515 test begin: paddle.broadcast_to(Tensor([8, 0, 173, 173],"bool"), list[8,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 173, 173],"bool"), list[8,8,173,173,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 173, 173].  Tensor sizes: [8, 0, 173, 173]
2025-03-05 15:23:06.876035 test begin: paddle.broadcast_to(Tensor([8, 0, 174, 113],"bool"), list[8,8,174,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 174, 113],"bool"), list[8,8,174,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 174, 113].  Tensor sizes: [8, 0, 174, 113]
2025-03-05 15:23:06.876541 test begin: paddle.broadcast_to(Tensor([8, 0, 174, 174],"bool"), list[8,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 174, 174],"bool"), list[8,8,174,174,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 174, 174].  Tensor sizes: [8, 0, 174, 174]
2025-03-05 15:23:06.877062 test begin: paddle.broadcast_to(Tensor([8, 0, 175, 113],"bool"), list[8,8,175,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 175, 113],"bool"), list[8,8,175,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 175, 113].  Tensor sizes: [8, 0, 175, 113]
2025-03-05 15:23:06.877571 test begin: paddle.broadcast_to(Tensor([8, 0, 175, 175],"bool"), list[8,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 175, 175],"bool"), list[8,8,175,175,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 175, 175].  Tensor sizes: [8, 0, 175, 175]
2025-03-05 15:23:06.878117 test begin: paddle.broadcast_to(Tensor([8, 0, 176, 113],"bool"), list[8,8,176,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 176, 113],"bool"), list[8,8,176,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 176, 113].  Tensor sizes: [8, 0, 176, 113]
2025-03-05 15:23:06.878710 test begin: paddle.broadcast_to(Tensor([8, 0, 176, 176],"bool"), list[8,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 176, 176],"bool"), list[8,8,176,176,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 176, 176].  Tensor sizes: [8, 0, 176, 176]
2025-03-05 15:23:06.879226 test begin: paddle.broadcast_to(Tensor([8, 0, 177, 113],"bool"), list[8,8,177,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 177, 113],"bool"), list[8,8,177,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 177, 113].  Tensor sizes: [8, 0, 177, 113]
2025-03-05 15:23:06.879765 test begin: paddle.broadcast_to(Tensor([8, 0, 177, 177],"bool"), list[8,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 177, 177],"bool"), list[8,8,177,177,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 177, 177].  Tensor sizes: [8, 0, 177, 177]
2025-03-05 15:23:06.880271 test begin: paddle.broadcast_to(Tensor([8, 0, 178, 113],"bool"), list[8,8,178,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 178, 113],"bool"), list[8,8,178,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 178, 113].  Tensor sizes: [8, 0, 178, 113]
2025-03-05 15:23:06.880780 test begin: paddle.broadcast_to(Tensor([8, 0, 178, 178],"bool"), list[8,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 178, 178],"bool"), list[8,8,178,178,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 178, 178].  Tensor sizes: [8, 0, 178, 178]
2025-03-05 15:23:06.881284 test begin: paddle.broadcast_to(Tensor([8, 0, 179, 113],"bool"), list[8,8,179,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 179, 113],"bool"), list[8,8,179,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 179, 113].  Tensor sizes: [8, 0, 179, 113]
2025-03-05 15:23:06.881790 test begin: paddle.broadcast_to(Tensor([8, 0, 179, 179],"bool"), list[8,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 179, 179],"bool"), list[8,8,179,179,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 179, 179].  Tensor sizes: [8, 0, 179, 179]
2025-03-05 15:23:06.882294 test begin: paddle.broadcast_to(Tensor([8, 0, 18, 113],"bool"), list[8,8,18,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 18, 113],"bool"), list[8,8,18,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 18, 113].  Tensor sizes: [8, 0, 18, 113]
2025-03-05 15:23:06.882798 test begin: paddle.broadcast_to(Tensor([8, 0, 18, 121],"bool"), list[8,8,18,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 18, 121],"bool"), list[8,8,18,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 18, 121].  Tensor sizes: [8, 0, 18, 121]
2025-03-05 15:23:06.883315 test begin: paddle.broadcast_to(Tensor([8, 0, 18, 18],"bool"), list[8,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 18, 18],"bool"), list[8,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 18, 18].  Tensor sizes: [8, 0, 18, 18]
2025-03-05 15:23:06.883824 test begin: paddle.broadcast_to(Tensor([8, 0, 18, 33],"bool"), list[8,8,18,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 18, 33],"bool"), list[8,8,18,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 18, 33].  Tensor sizes: [8, 0, 18, 33]
2025-03-05 15:23:06.884327 test begin: paddle.broadcast_to(Tensor([8, 0, 180, 113],"bool"), list[8,8,180,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 180, 113],"bool"), list[8,8,180,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 180, 113].  Tensor sizes: [8, 0, 180, 113]
2025-03-05 15:23:06.884842 test begin: paddle.broadcast_to(Tensor([8, 0, 180, 180],"bool"), list[8,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 180, 180],"bool"), list[8,8,180,180,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 180, 180].  Tensor sizes: [8, 0, 180, 180]
2025-03-05 15:23:06.885343 test begin: paddle.broadcast_to(Tensor([8, 0, 181, 113],"bool"), list[8,8,181,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 181, 113],"bool"), list[8,8,181,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 181, 113].  Tensor sizes: [8, 0, 181, 113]
2025-03-05 15:23:06.886393 test begin: paddle.broadcast_to(Tensor([8, 0, 181, 181],"bool"), list[8,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 181, 181],"bool"), list[8,8,181,181,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 181, 181].  Tensor sizes: [8, 0, 181, 181]
2025-03-05 15:23:06.887144 test begin: paddle.broadcast_to(Tensor([8, 0, 182, 113],"bool"), list[8,8,182,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 182, 113],"bool"), list[8,8,182,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 182, 113].  Tensor sizes: [8, 0, 182, 113]
2025-03-05 15:23:06.887812 test begin: paddle.broadcast_to(Tensor([8, 0, 182, 182],"bool"), list[8,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 182, 182],"bool"), list[8,8,182,182,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 182, 182].  Tensor sizes: [8, 0, 182, 182]
2025-03-05 15:23:06.888408 test begin: paddle.broadcast_to(Tensor([8, 0, 183, 113],"bool"), list[8,8,183,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 183, 113],"bool"), list[8,8,183,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 183, 113].  Tensor sizes: [8, 0, 183, 113]
2025-03-05 15:23:06.889028 test begin: paddle.broadcast_to(Tensor([8, 0, 183, 183],"bool"), list[8,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 183, 183],"bool"), list[8,8,183,183,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 183, 183].  Tensor sizes: [8, 0, 183, 183]
2025-03-05 15:23:06.889576 test begin: paddle.broadcast_to(Tensor([8, 0, 184, 113],"bool"), list[8,8,184,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 184, 113],"bool"), list[8,8,184,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 184, 113].  Tensor sizes: [8, 0, 184, 113]
2025-03-05 15:23:06.890139 test begin: paddle.broadcast_to(Tensor([8, 0, 184, 184],"bool"), list[8,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 184, 184],"bool"), list[8,8,184,184,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 184, 184].  Tensor sizes: [8, 0, 184, 184]
2025-03-05 15:23:06.890686 test begin: paddle.broadcast_to(Tensor([8, 0, 185, 113],"bool"), list[8,8,185,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 185, 113],"bool"), list[8,8,185,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 185, 113].  Tensor sizes: [8, 0, 185, 113]
2025-03-05 15:23:06.891285 test begin: paddle.broadcast_to(Tensor([8, 0, 185, 185],"bool"), list[8,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 185, 185],"bool"), list[8,8,185,185,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 185, 185].  Tensor sizes: [8, 0, 185, 185]
2025-03-05 15:23:06.891858 test begin: paddle.broadcast_to(Tensor([8, 0, 186, 113],"bool"), list[8,8,186,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 186, 113],"bool"), list[8,8,186,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 186, 113].  Tensor sizes: [8, 0, 186, 113]
2025-03-05 15:23:06.892415 test begin: paddle.broadcast_to(Tensor([8, 0, 186, 186],"bool"), list[8,8,186,186,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 186, 186],"bool"), list[8,8,186,186,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 186, 186].  Tensor sizes: [8, 0, 186, 186]
2025-03-05 15:23:06.892960 test begin: paddle.broadcast_to(Tensor([8, 0, 187, 113],"bool"), list[8,8,187,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 187, 113],"bool"), list[8,8,187,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 187, 113].  Tensor sizes: [8, 0, 187, 113]
2025-03-05 15:23:06.893529 test begin: paddle.broadcast_to(Tensor([8, 0, 187, 187],"bool"), list[8,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 187, 187],"bool"), list[8,8,187,187,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 187, 187].  Tensor sizes: [8, 0, 187, 187]
2025-03-05 15:23:06.894117 test begin: paddle.broadcast_to(Tensor([8, 0, 188, 113],"bool"), list[8,8,188,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 188, 113],"bool"), list[8,8,188,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 188, 113].  Tensor sizes: [8, 0, 188, 113]
2025-03-05 15:23:06.894669 test begin: paddle.broadcast_to(Tensor([8, 0, 188, 188],"bool"), list[8,8,188,188,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 188, 188],"bool"), list[8,8,188,188,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 188, 188].  Tensor sizes: [8, 0, 188, 188]
2025-03-05 15:23:06.895191 test begin: paddle.broadcast_to(Tensor([8, 0, 189, 113],"bool"), list[8,8,189,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 189, 113],"bool"), list[8,8,189,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 189, 113].  Tensor sizes: [8, 0, 189, 113]
2025-03-05 15:23:06.895763 test begin: paddle.broadcast_to(Tensor([8, 0, 189, 189],"bool"), list[8,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 189, 189],"bool"), list[8,8,189,189,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 189, 189].  Tensor sizes: [8, 0, 189, 189]
2025-03-05 15:23:06.896368 test begin: paddle.broadcast_to(Tensor([8, 0, 19, 113],"bool"), list[8,8,19,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 19, 113],"bool"), list[8,8,19,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 19, 113].  Tensor sizes: [8, 0, 19, 113]
2025-03-05 15:23:06.897210 test begin: paddle.broadcast_to(Tensor([8, 0, 19, 121],"bool"), list[8,8,19,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 19, 121],"bool"), list[8,8,19,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 19, 121].  Tensor sizes: [8, 0, 19, 121]
2025-03-05 15:23:06.897771 test begin: paddle.broadcast_to(Tensor([8, 0, 19, 19],"bool"), list[8,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 19, 19],"bool"), list[8,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 19, 19].  Tensor sizes: [8, 0, 19, 19]
2025-03-05 15:23:06.898293 test begin: paddle.broadcast_to(Tensor([8, 0, 19, 33],"bool"), list[8,8,19,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 19, 33],"bool"), list[8,8,19,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 19, 33].  Tensor sizes: [8, 0, 19, 33]
2025-03-05 15:23:06.898816 test begin: paddle.broadcast_to(Tensor([8, 0, 190, 113],"bool"), list[8,8,190,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 190, 113],"bool"), list[8,8,190,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 190, 113].  Tensor sizes: [8, 0, 190, 113]
2025-03-05 15:23:06.899335 test begin: paddle.broadcast_to(Tensor([8, 0, 190, 190],"bool"), list[8,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 190, 190],"bool"), list[8,8,190,190,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 190, 190].  Tensor sizes: [8, 0, 190, 190]
2025-03-05 15:23:06.899910 test begin: paddle.broadcast_to(Tensor([8, 0, 191, 113],"bool"), list[8,8,191,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 191, 113],"bool"), list[8,8,191,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 191, 113].  Tensor sizes: [8, 0, 191, 113]
2025-03-05 15:23:06.900423 test begin: paddle.broadcast_to(Tensor([8, 0, 191, 191],"bool"), list[8,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 191, 191],"bool"), list[8,8,191,191,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 191, 191].  Tensor sizes: [8, 0, 191, 191]
2025-03-05 15:23:06.900932 test begin: paddle.broadcast_to(Tensor([8, 0, 192, 113],"bool"), list[8,8,192,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 192, 113],"bool"), list[8,8,192,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 192, 113].  Tensor sizes: [8, 0, 192, 113]
2025-03-05 15:23:06.901443 test begin: paddle.broadcast_to(Tensor([8, 0, 192, 192],"bool"), list[8,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 192, 192],"bool"), list[8,8,192,192,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 192, 192].  Tensor sizes: [8, 0, 192, 192]
2025-03-05 15:23:06.901963 test begin: paddle.broadcast_to(Tensor([8, 0, 193, 113],"bool"), list[8,8,193,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 193, 113],"bool"), list[8,8,193,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 193, 113].  Tensor sizes: [8, 0, 193, 113]
2025-03-05 15:23:06.902474 test begin: paddle.broadcast_to(Tensor([8, 0, 193, 193],"bool"), list[8,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 193, 193],"bool"), list[8,8,193,193,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 193, 193].  Tensor sizes: [8, 0, 193, 193]
2025-03-05 15:23:06.903002 test begin: paddle.broadcast_to(Tensor([8, 0, 194, 113],"bool"), list[8,8,194,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 194, 113],"bool"), list[8,8,194,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 194, 113].  Tensor sizes: [8, 0, 194, 113]
2025-03-05 15:23:06.903544 test begin: paddle.broadcast_to(Tensor([8, 0, 194, 194],"bool"), list[8,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 194, 194],"bool"), list[8,8,194,194,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 194, 194].  Tensor sizes: [8, 0, 194, 194]
2025-03-05 15:23:06.906284 test begin: paddle.broadcast_to(Tensor([8, 0, 195, 113],"bool"), list[8,8,195,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 195, 113],"bool"), list[8,8,195,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 195, 113].  Tensor sizes: [8, 0, 195, 113]
2025-03-05 15:23:06.906860 test begin: paddle.broadcast_to(Tensor([8, 0, 195, 195],"bool"), list[8,8,195,195,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 195, 195],"bool"), list[8,8,195,195,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 195, 195].  Tensor sizes: [8, 0, 195, 195]
2025-03-05 15:23:06.907383 test begin: paddle.broadcast_to(Tensor([8, 0, 196, 113],"bool"), list[8,8,196,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 196, 113],"bool"), list[8,8,196,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 196, 113].  Tensor sizes: [8, 0, 196, 113]
2025-03-05 15:23:06.907900 test begin: paddle.broadcast_to(Tensor([8, 0, 196, 196],"bool"), list[8,8,196,196,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 196, 196],"bool"), list[8,8,196,196,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 196, 196].  Tensor sizes: [8, 0, 196, 196]
2025-03-05 15:23:06.908394 test begin: paddle.broadcast_to(Tensor([8, 0, 197, 113],"bool"), list[8,8,197,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 197, 113],"bool"), list[8,8,197,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 197, 113].  Tensor sizes: [8, 0, 197, 113]
2025-03-05 15:23:06.908906 test begin: paddle.broadcast_to(Tensor([8, 0, 197, 197],"bool"), list[8,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 197, 197],"bool"), list[8,8,197,197,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 197, 197].  Tensor sizes: [8, 0, 197, 197]
2025-03-05 15:23:06.909409 test begin: paddle.broadcast_to(Tensor([8, 0, 198, 113],"bool"), list[8,8,198,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 198, 113],"bool"), list[8,8,198,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 198, 113].  Tensor sizes: [8, 0, 198, 113]
2025-03-05 15:23:06.909927 test begin: paddle.broadcast_to(Tensor([8, 0, 198, 198],"bool"), list[8,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 198, 198],"bool"), list[8,8,198,198,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 198, 198].  Tensor sizes: [8, 0, 198, 198]
2025-03-05 15:23:06.910432 test begin: paddle.broadcast_to(Tensor([8, 0, 199, 113],"bool"), list[8,8,199,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 199, 113],"bool"), list[8,8,199,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 199, 113].  Tensor sizes: [8, 0, 199, 113]
2025-03-05 15:23:06.910957 test begin: paddle.broadcast_to(Tensor([8, 0, 199, 199],"bool"), list[8,8,199,199,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 199, 199],"bool"), list[8,8,199,199,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 199, 199].  Tensor sizes: [8, 0, 199, 199]
2025-03-05 15:23:06.911463 test begin: paddle.broadcast_to(Tensor([8, 0, 2, 113],"bool"), list[8,8,2,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 2, 113],"bool"), list[8,8,2,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 2, 113].  Tensor sizes: [8, 0, 2, 113]
2025-03-05 15:23:06.911974 test begin: paddle.broadcast_to(Tensor([8, 0, 2, 121],"bool"), list[8,8,2,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 2, 121],"bool"), list[8,8,2,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 2, 121].  Tensor sizes: [8, 0, 2, 121]
2025-03-05 15:23:06.912504 test begin: paddle.broadcast_to(Tensor([8, 0, 2, 2],"bool"), list[8,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 2, 2],"bool"), list[8,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 2, 2].  Tensor sizes: [8, 0, 2, 2]
2025-03-05 15:23:06.913117 test begin: paddle.broadcast_to(Tensor([8, 0, 2, 33],"bool"), list[8,8,2,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 2, 33],"bool"), list[8,8,2,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 2, 33].  Tensor sizes: [8, 0, 2, 33]
2025-03-05 15:23:06.913664 test begin: paddle.broadcast_to(Tensor([8, 0, 20, 113],"bool"), list[8,8,20,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 20, 113],"bool"), list[8,8,20,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 20, 113].  Tensor sizes: [8, 0, 20, 113]
2025-03-05 15:23:06.914174 test begin: paddle.broadcast_to(Tensor([8, 0, 20, 121],"bool"), list[8,8,20,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 20, 121],"bool"), list[8,8,20,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 20, 121].  Tensor sizes: [8, 0, 20, 121]
2025-03-05 15:23:06.914679 test begin: paddle.broadcast_to(Tensor([8, 0, 20, 20],"bool"), list[8,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 20, 20],"bool"), list[8,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 20, 20].  Tensor sizes: [8, 0, 20, 20]
2025-03-05 15:23:06.915190 test begin: paddle.broadcast_to(Tensor([8, 0, 20, 33],"bool"), list[8,8,20,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 20, 33],"bool"), list[8,8,20,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 20, 33].  Tensor sizes: [8, 0, 20, 33]
2025-03-05 15:23:06.915702 test begin: paddle.broadcast_to(Tensor([8, 0, 200, 113],"bool"), list[8,8,200,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 200, 113],"bool"), list[8,8,200,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 200, 113].  Tensor sizes: [8, 0, 200, 113]
2025-03-05 15:23:06.916214 test begin: paddle.broadcast_to(Tensor([8, 0, 200, 200],"bool"), list[8,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 200, 200],"bool"), list[8,8,200,200,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 200, 200].  Tensor sizes: [8, 0, 200, 200]
2025-03-05 15:23:06.916730 test begin: paddle.broadcast_to(Tensor([8, 0, 201, 113],"bool"), list[8,8,201,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 201, 113],"bool"), list[8,8,201,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 201, 113].  Tensor sizes: [8, 0, 201, 113]
2025-03-05 15:23:06.917303 test begin: paddle.broadcast_to(Tensor([8, 0, 201, 201],"bool"), list[8,8,201,201,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 201, 201],"bool"), list[8,8,201,201,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 201, 201].  Tensor sizes: [8, 0, 201, 201]
2025-03-05 15:23:06.917883 test begin: paddle.broadcast_to(Tensor([8, 0, 202, 113],"bool"), list[8,8,202,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 202, 113],"bool"), list[8,8,202,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 202, 113].  Tensor sizes: [8, 0, 202, 113]
2025-03-05 15:23:06.918465 test begin: paddle.broadcast_to(Tensor([8, 0, 202, 202],"bool"), list[8,8,202,202,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 202, 202],"bool"), list[8,8,202,202,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 202, 202].  Tensor sizes: [8, 0, 202, 202]
2025-03-05 15:23:06.918980 test begin: paddle.broadcast_to(Tensor([8, 0, 203, 113],"bool"), list[8,8,203,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 203, 113],"bool"), list[8,8,203,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 203, 113].  Tensor sizes: [8, 0, 203, 113]
2025-03-05 15:23:06.919489 test begin: paddle.broadcast_to(Tensor([8, 0, 203, 203],"bool"), list[8,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 203, 203],"bool"), list[8,8,203,203,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 203, 203].  Tensor sizes: [8, 0, 203, 203]
2025-03-05 15:23:06.920002 test begin: paddle.broadcast_to(Tensor([8, 0, 204, 113],"bool"), list[8,8,204,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 204, 113],"bool"), list[8,8,204,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 204, 113].  Tensor sizes: [8, 0, 204, 113]
2025-03-05 15:23:06.920502 test begin: paddle.broadcast_to(Tensor([8, 0, 204, 204],"bool"), list[8,8,204,204,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 204, 204],"bool"), list[8,8,204,204,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 204, 204].  Tensor sizes: [8, 0, 204, 204]
2025-03-05 15:23:06.921016 test begin: paddle.broadcast_to(Tensor([8, 0, 205, 113],"bool"), list[8,8,205,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 205, 113],"bool"), list[8,8,205,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 205, 113].  Tensor sizes: [8, 0, 205, 113]
2025-03-05 15:23:06.921512 test begin: paddle.broadcast_to(Tensor([8, 0, 205, 205],"bool"), list[8,8,205,205,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 205, 205],"bool"), list[8,8,205,205,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 205, 205].  Tensor sizes: [8, 0, 205, 205]
2025-03-05 15:23:06.922027 test begin: paddle.broadcast_to(Tensor([8, 0, 206, 113],"bool"), list[8,8,206,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 206, 113],"bool"), list[8,8,206,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 206, 113].  Tensor sizes: [8, 0, 206, 113]
2025-03-05 15:23:06.922541 test begin: paddle.broadcast_to(Tensor([8, 0, 206, 206],"bool"), list[8,8,206,206,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 206, 206],"bool"), list[8,8,206,206,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 206, 206].  Tensor sizes: [8, 0, 206, 206]
2025-03-05 15:23:06.923051 test begin: paddle.broadcast_to(Tensor([8, 0, 207, 113],"bool"), list[8,8,207,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 207, 113],"bool"), list[8,8,207,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 207, 113].  Tensor sizes: [8, 0, 207, 113]
2025-03-05 15:23:06.923551 test begin: paddle.broadcast_to(Tensor([8, 0, 207, 207],"bool"), list[8,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 207, 207],"bool"), list[8,8,207,207,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 207, 207].  Tensor sizes: [8, 0, 207, 207]
2025-03-05 15:23:06.924080 test begin: paddle.broadcast_to(Tensor([8, 0, 208, 113],"bool"), list[8,8,208,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 208, 113],"bool"), list[8,8,208,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 208, 113].  Tensor sizes: [8, 0, 208, 113]
2025-03-05 15:23:06.924593 test begin: paddle.broadcast_to(Tensor([8, 0, 208, 208],"bool"), list[8,8,208,208,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 208, 208],"bool"), list[8,8,208,208,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 208, 208].  Tensor sizes: [8, 0, 208, 208]
2025-03-05 15:23:06.925108 test begin: paddle.broadcast_to(Tensor([8, 0, 209, 113],"bool"), list[8,8,209,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 209, 113],"bool"), list[8,8,209,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 209, 113].  Tensor sizes: [8, 0, 209, 113]
2025-03-05 15:23:06.925685 test begin: paddle.broadcast_to(Tensor([8, 0, 209, 209],"bool"), list[8,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 209, 209],"bool"), list[8,8,209,209,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 209, 209].  Tensor sizes: [8, 0, 209, 209]
2025-03-05 15:23:06.926201 test begin: paddle.broadcast_to(Tensor([8, 0, 21, 113],"bool"), list[8,8,21,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 21, 113],"bool"), list[8,8,21,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 21, 113].  Tensor sizes: [8, 0, 21, 113]
2025-03-05 15:23:06.926719 test begin: paddle.broadcast_to(Tensor([8, 0, 21, 121],"bool"), list[8,8,21,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 21, 121],"bool"), list[8,8,21,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 21, 121].  Tensor sizes: [8, 0, 21, 121]
2025-03-05 15:23:06.927269 test begin: paddle.broadcast_to(Tensor([8, 0, 21, 21],"bool"), list[8,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 21, 21],"bool"), list[8,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 21, 21].  Tensor sizes: [8, 0, 21, 21]
2025-03-05 15:23:06.927802 test begin: paddle.broadcast_to(Tensor([8, 0, 21, 33],"bool"), list[8,8,21,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 21, 33],"bool"), list[8,8,21,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 21, 33].  Tensor sizes: [8, 0, 21, 33]
2025-03-05 15:23:06.928339 test begin: paddle.broadcast_to(Tensor([8, 0, 210, 113],"bool"), list[8,8,210,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 210, 113],"bool"), list[8,8,210,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 210, 113].  Tensor sizes: [8, 0, 210, 113]
2025-03-05 15:23:06.928859 test begin: paddle.broadcast_to(Tensor([8, 0, 210, 210],"bool"), list[8,8,210,210,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 210, 210],"bool"), list[8,8,210,210,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 210, 210].  Tensor sizes: [8, 0, 210, 210]
2025-03-05 15:23:06.929366 test begin: paddle.broadcast_to(Tensor([8, 0, 211, 113],"bool"), list[8,8,211,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 211, 113],"bool"), list[8,8,211,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 211, 113].  Tensor sizes: [8, 0, 211, 113]
2025-03-05 15:23:06.929898 test begin: paddle.broadcast_to(Tensor([8, 0, 211, 211],"bool"), list[8,8,211,211,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 211, 211],"bool"), list[8,8,211,211,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 211, 211].  Tensor sizes: [8, 0, 211, 211]
2025-03-05 15:23:06.930427 test begin: paddle.broadcast_to(Tensor([8, 0, 212, 113],"bool"), list[8,8,212,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 212, 113],"bool"), list[8,8,212,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 212, 113].  Tensor sizes: [8, 0, 212, 113]
2025-03-05 15:23:06.930937 test begin: paddle.broadcast_to(Tensor([8, 0, 212, 212],"bool"), list[8,8,212,212,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 212, 212],"bool"), list[8,8,212,212,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 212, 212].  Tensor sizes: [8, 0, 212, 212]
2025-03-05 15:23:06.931447 test begin: paddle.broadcast_to(Tensor([8, 0, 213, 113],"bool"), list[8,8,213,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 213, 113],"bool"), list[8,8,213,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 213, 113].  Tensor sizes: [8, 0, 213, 113]
2025-03-05 15:23:06.931963 test begin: paddle.broadcast_to(Tensor([8, 0, 213, 213],"bool"), list[8,8,213,213,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 213, 213],"bool"), list[8,8,213,213,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 213, 213].  Tensor sizes: [8, 0, 213, 213]
2025-03-05 15:23:06.932472 test begin: paddle.broadcast_to(Tensor([8, 0, 214, 113],"bool"), list[8,8,214,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 214, 113],"bool"), list[8,8,214,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 214, 113].  Tensor sizes: [8, 0, 214, 113]
2025-03-05 15:23:06.933014 test begin: paddle.broadcast_to(Tensor([8, 0, 214, 214],"bool"), list[8,8,214,214,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 214, 214],"bool"), list[8,8,214,214,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 214, 214].  Tensor sizes: [8, 0, 214, 214]
2025-03-05 15:23:06.933635 test begin: paddle.broadcast_to(Tensor([8, 0, 215, 113],"bool"), list[8,8,215,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 215, 113],"bool"), list[8,8,215,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 215, 113].  Tensor sizes: [8, 0, 215, 113]
2025-03-05 15:23:06.934276 test begin: paddle.broadcast_to(Tensor([8, 0, 215, 215],"bool"), list[8,8,215,215,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 215, 215],"bool"), list[8,8,215,215,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 215, 215].  Tensor sizes: [8, 0, 215, 215]
2025-03-05 15:23:06.934909 test begin: paddle.broadcast_to(Tensor([8, 0, 216, 113],"bool"), list[8,8,216,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 216, 113],"bool"), list[8,8,216,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 216, 113].  Tensor sizes: [8, 0, 216, 113]
2025-03-05 15:23:06.935466 test begin: paddle.broadcast_to(Tensor([8, 0, 216, 216],"bool"), list[8,8,216,216,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 216, 216],"bool"), list[8,8,216,216,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 216, 216].  Tensor sizes: [8, 0, 216, 216]
2025-03-05 15:23:06.936106 test begin: paddle.broadcast_to(Tensor([8, 0, 217, 113],"bool"), list[8,8,217,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 217, 113],"bool"), list[8,8,217,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 217, 113].  Tensor sizes: [8, 0, 217, 113]
2025-03-05 15:23:06.936721 test begin: paddle.broadcast_to(Tensor([8, 0, 217, 217],"bool"), list[8,8,217,217,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 217, 217],"bool"), list[8,8,217,217,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 217, 217].  Tensor sizes: [8, 0, 217, 217]
2025-03-05 15:23:06.937329 test begin: paddle.broadcast_to(Tensor([8, 0, 218, 113],"bool"), list[8,8,218,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 218, 113],"bool"), list[8,8,218,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 218, 113].  Tensor sizes: [8, 0, 218, 113]
2025-03-05 15:23:06.937966 test begin: paddle.broadcast_to(Tensor([8, 0, 218, 218],"bool"), list[8,8,218,218,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 218, 218],"bool"), list[8,8,218,218,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 218, 218].  Tensor sizes: [8, 0, 218, 218]
2025-03-05 15:23:06.938606 test begin: paddle.broadcast_to(Tensor([8, 0, 219, 113],"bool"), list[8,8,219,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 219, 113],"bool"), list[8,8,219,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 219, 113].  Tensor sizes: [8, 0, 219, 113]
2025-03-05 15:23:06.939149 test begin: paddle.broadcast_to(Tensor([8, 0, 219, 219],"bool"), list[8,8,219,219,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 219, 219],"bool"), list[8,8,219,219,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 219, 219].  Tensor sizes: [8, 0, 219, 219]
2025-03-05 15:23:06.939690 test begin: paddle.broadcast_to(Tensor([8, 0, 22, 113],"bool"), list[8,8,22,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 22, 113],"bool"), list[8,8,22,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 22, 113].  Tensor sizes: [8, 0, 22, 113]
2025-03-05 15:23:06.940193 test begin: paddle.broadcast_to(Tensor([8, 0, 22, 121],"bool"), list[8,8,22,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 22, 121],"bool"), list[8,8,22,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 22, 121].  Tensor sizes: [8, 0, 22, 121]
2025-03-05 15:23:06.940723 test begin: paddle.broadcast_to(Tensor([8, 0, 22, 22],"bool"), list[8,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 22, 22],"bool"), list[8,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 22, 22].  Tensor sizes: [8, 0, 22, 22]
2025-03-05 15:23:06.941233 test begin: paddle.broadcast_to(Tensor([8, 0, 22, 33],"bool"), list[8,8,22,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 22, 33],"bool"), list[8,8,22,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 22, 33].  Tensor sizes: [8, 0, 22, 33]
2025-03-05 15:23:06.941743 test begin: paddle.broadcast_to(Tensor([8, 0, 220, 113],"bool"), list[8,8,220,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 220, 113],"bool"), list[8,8,220,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 220, 113].  Tensor sizes: [8, 0, 220, 113]
2025-03-05 15:23:06.942242 test begin: paddle.broadcast_to(Tensor([8, 0, 220, 220],"bool"), list[8,8,220,220,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 220, 220],"bool"), list[8,8,220,220,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 220, 220].  Tensor sizes: [8, 0, 220, 220]
2025-03-05 15:23:06.942757 test begin: paddle.broadcast_to(Tensor([8, 0, 221, 113],"bool"), list[8,8,221,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 221, 113],"bool"), list[8,8,221,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 221, 113].  Tensor sizes: [8, 0, 221, 113]
2025-03-05 15:23:06.943266 test begin: paddle.broadcast_to(Tensor([8, 0, 221, 221],"bool"), list[8,8,221,221,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 221, 221],"bool"), list[8,8,221,221,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 221, 221].  Tensor sizes: [8, 0, 221, 221]
2025-03-05 15:23:06.943786 test begin: paddle.broadcast_to(Tensor([8, 0, 222, 113],"bool"), list[8,8,222,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 222, 113],"bool"), list[8,8,222,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 222, 113].  Tensor sizes: [8, 0, 222, 113]
2025-03-05 15:23:06.944293 test begin: paddle.broadcast_to(Tensor([8, 0, 222, 222],"bool"), list[8,8,222,222,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 222, 222],"bool"), list[8,8,222,222,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 222, 222].  Tensor sizes: [8, 0, 222, 222]
2025-03-05 15:23:06.944808 test begin: paddle.broadcast_to(Tensor([8, 0, 223, 113],"bool"), list[8,8,223,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 223, 113],"bool"), list[8,8,223,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 223, 113].  Tensor sizes: [8, 0, 223, 113]
2025-03-05 15:23:06.945327 test begin: paddle.broadcast_to(Tensor([8, 0, 223, 223],"bool"), list[8,8,223,223,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 223, 223],"bool"), list[8,8,223,223,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 223, 223].  Tensor sizes: [8, 0, 223, 223]
2025-03-05 15:23:06.945845 test begin: paddle.broadcast_to(Tensor([8, 0, 224, 113],"bool"), list[8,8,224,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 224, 113],"bool"), list[8,8,224,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 224, 113].  Tensor sizes: [8, 0, 224, 113]
2025-03-05 15:23:06.946490 test begin: paddle.broadcast_to(Tensor([8, 0, 224, 224],"bool"), list[8,8,224,224,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 224, 224],"bool"), list[8,8,224,224,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 224, 224].  Tensor sizes: [8, 0, 224, 224]
2025-03-05 15:23:06.947109 test begin: paddle.broadcast_to(Tensor([8, 0, 225, 113],"bool"), list[8,8,225,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 225, 113],"bool"), list[8,8,225,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 225, 113].  Tensor sizes: [8, 0, 225, 113]
2025-03-05 15:23:06.947765 test begin: paddle.broadcast_to(Tensor([8, 0, 225, 225],"bool"), list[8,8,225,225,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 225, 225],"bool"), list[8,8,225,225,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 225, 225].  Tensor sizes: [8, 0, 225, 225]
2025-03-05 15:23:06.948375 test begin: paddle.broadcast_to(Tensor([8, 0, 226, 113],"bool"), list[8,8,226,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 226, 113],"bool"), list[8,8,226,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 226, 113].  Tensor sizes: [8, 0, 226, 113]
2025-03-05 15:23:06.948925 test begin: paddle.broadcast_to(Tensor([8, 0, 226, 226],"bool"), list[8,8,226,226,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 226, 226],"bool"), list[8,8,226,226,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 226, 226].  Tensor sizes: [8, 0, 226, 226]
2025-03-05 15:23:06.949439 test begin: paddle.broadcast_to(Tensor([8, 0, 227, 113],"bool"), list[8,8,227,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 227, 113],"bool"), list[8,8,227,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 227, 113].  Tensor sizes: [8, 0, 227, 113]
2025-03-05 15:23:06.949947 test begin: paddle.broadcast_to(Tensor([8, 0, 227, 227],"bool"), list[8,8,227,227,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 227, 227],"bool"), list[8,8,227,227,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 227, 227].  Tensor sizes: [8, 0, 227, 227]
2025-03-05 15:23:06.950486 test begin: paddle.broadcast_to(Tensor([8, 0, 228, 113],"bool"), list[8,8,228,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 228, 113],"bool"), list[8,8,228,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 228, 113].  Tensor sizes: [8, 0, 228, 113]
2025-03-05 15:23:06.951026 test begin: paddle.broadcast_to(Tensor([8, 0, 228, 228],"bool"), list[8,8,228,228,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 228, 228],"bool"), list[8,8,228,228,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 228, 228].  Tensor sizes: [8, 0, 228, 228]
2025-03-05 15:23:06.951540 test begin: paddle.broadcast_to(Tensor([8, 0, 229, 113],"bool"), list[8,8,229,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 229, 113],"bool"), list[8,8,229,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 229, 113].  Tensor sizes: [8, 0, 229, 113]
2025-03-05 15:23:06.952058 test begin: paddle.broadcast_to(Tensor([8, 0, 229, 229],"bool"), list[8,8,229,229,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 229, 229],"bool"), list[8,8,229,229,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 229, 229].  Tensor sizes: [8, 0, 229, 229]
2025-03-05 15:23:06.952590 test begin: paddle.broadcast_to(Tensor([8, 0, 23, 113],"bool"), list[8,8,23,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 23, 113],"bool"), list[8,8,23,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 23, 113].  Tensor sizes: [8, 0, 23, 113]
2025-03-05 15:23:06.953103 test begin: paddle.broadcast_to(Tensor([8, 0, 23, 121],"bool"), list[8,8,23,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 23, 121],"bool"), list[8,8,23,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 23, 121].  Tensor sizes: [8, 0, 23, 121]
2025-03-05 15:23:06.953619 test begin: paddle.broadcast_to(Tensor([8, 0, 23, 23],"bool"), list[8,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 23, 23],"bool"), list[8,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 23, 23].  Tensor sizes: [8, 0, 23, 23]
2025-03-05 15:23:06.954131 test begin: paddle.broadcast_to(Tensor([8, 0, 23, 33],"bool"), list[8,8,23,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 23, 33],"bool"), list[8,8,23,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 23, 33].  Tensor sizes: [8, 0, 23, 33]
2025-03-05 15:23:06.954643 test begin: paddle.broadcast_to(Tensor([8, 0, 230, 113],"bool"), list[8,8,230,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 230, 113],"bool"), list[8,8,230,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 230, 113].  Tensor sizes: [8, 0, 230, 113]
2025-03-05 15:23:06.955149 test begin: paddle.broadcast_to(Tensor([8, 0, 230, 230],"bool"), list[8,8,230,230,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 230, 230],"bool"), list[8,8,230,230,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 230, 230].  Tensor sizes: [8, 0, 230, 230]
2025-03-05 15:23:06.955714 test begin: paddle.broadcast_to(Tensor([8, 0, 231, 113],"bool"), list[8,8,231,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 231, 113],"bool"), list[8,8,231,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 231, 113].  Tensor sizes: [8, 0, 231, 113]
2025-03-05 15:23:06.956223 test begin: paddle.broadcast_to(Tensor([8, 0, 231, 231],"bool"), list[8,8,231,231,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 231, 231],"bool"), list[8,8,231,231,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 231, 231].  Tensor sizes: [8, 0, 231, 231]
2025-03-05 15:23:06.956766 test begin: paddle.broadcast_to(Tensor([8, 0, 232, 113],"bool"), list[8,8,232,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 232, 113],"bool"), list[8,8,232,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 232, 113].  Tensor sizes: [8, 0, 232, 113]
2025-03-05 15:23:06.957275 test begin: paddle.broadcast_to(Tensor([8, 0, 232, 232],"bool"), list[8,8,232,232,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 232, 232],"bool"), list[8,8,232,232,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 232, 232].  Tensor sizes: [8, 0, 232, 232]
2025-03-05 15:23:06.957801 test begin: paddle.broadcast_to(Tensor([8, 0, 233, 113],"bool"), list[8,8,233,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 233, 113],"bool"), list[8,8,233,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 233, 113].  Tensor sizes: [8, 0, 233, 113]
2025-03-05 15:23:06.958314 test begin: paddle.broadcast_to(Tensor([8, 0, 233, 233],"bool"), list[8,8,233,233,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 233, 233],"bool"), list[8,8,233,233,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 233, 233].  Tensor sizes: [8, 0, 233, 233]
2025-03-05 15:23:06.958827 test begin: paddle.broadcast_to(Tensor([8, 0, 234, 113],"bool"), list[8,8,234,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 234, 113],"bool"), list[8,8,234,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 234, 113].  Tensor sizes: [8, 0, 234, 113]
2025-03-05 15:23:06.959336 test begin: paddle.broadcast_to(Tensor([8, 0, 234, 234],"bool"), list[8,8,234,234,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 234, 234],"bool"), list[8,8,234,234,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 234, 234].  Tensor sizes: [8, 0, 234, 234]
2025-03-05 15:23:06.959854 test begin: paddle.broadcast_to(Tensor([8, 0, 235, 113],"bool"), list[8,8,235,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 235, 113],"bool"), list[8,8,235,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 235, 113].  Tensor sizes: [8, 0, 235, 113]
2025-03-05 15:23:06.960367 test begin: paddle.broadcast_to(Tensor([8, 0, 235, 235],"bool"), list[8,8,235,235,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 235, 235],"bool"), list[8,8,235,235,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 235, 235].  Tensor sizes: [8, 0, 235, 235]
2025-03-05 15:23:06.960888 test begin: paddle.broadcast_to(Tensor([8, 0, 236, 113],"bool"), list[8,8,236,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 236, 113],"bool"), list[8,8,236,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 236, 113].  Tensor sizes: [8, 0, 236, 113]
2025-03-05 15:23:06.961385 test begin: paddle.broadcast_to(Tensor([8, 0, 236, 236],"bool"), list[8,8,236,236,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 236, 236],"bool"), list[8,8,236,236,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 236, 236].  Tensor sizes: [8, 0, 236, 236]
2025-03-05 15:23:06.961897 test begin: paddle.broadcast_to(Tensor([8, 0, 237, 113],"bool"), list[8,8,237,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 237, 113],"bool"), list[8,8,237,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 237, 113].  Tensor sizes: [8, 0, 237, 113]
2025-03-05 15:23:06.962410 test begin: paddle.broadcast_to(Tensor([8, 0, 237, 237],"bool"), list[8,8,237,237,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 237, 237],"bool"), list[8,8,237,237,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 237, 237].  Tensor sizes: [8, 0, 237, 237]
2025-03-05 15:23:06.962928 test begin: paddle.broadcast_to(Tensor([8, 0, 238, 113],"bool"), list[8,8,238,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 238, 113],"bool"), list[8,8,238,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 238, 113].  Tensor sizes: [8, 0, 238, 113]
2025-03-05 15:23:06.963427 test begin: paddle.broadcast_to(Tensor([8, 0, 238, 238],"bool"), list[8,8,238,238,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 238, 238],"bool"), list[8,8,238,238,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 238, 238].  Tensor sizes: [8, 0, 238, 238]
2025-03-05 15:23:06.963949 test begin: paddle.broadcast_to(Tensor([8, 0, 239, 113],"bool"), list[8,8,239,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 239, 113],"bool"), list[8,8,239,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 239, 113].  Tensor sizes: [8, 0, 239, 113]
2025-03-05 15:23:06.964470 test begin: paddle.broadcast_to(Tensor([8, 0, 239, 239],"bool"), list[8,8,239,239,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 239, 239],"bool"), list[8,8,239,239,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 239, 239].  Tensor sizes: [8, 0, 239, 239]
2025-03-05 15:23:06.965063 test begin: paddle.broadcast_to(Tensor([8, 0, 24, 113],"bool"), list[8,8,24,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 24, 113],"bool"), list[8,8,24,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 24, 113].  Tensor sizes: [8, 0, 24, 113]
2025-03-05 15:23:06.965920 test begin: paddle.broadcast_to(Tensor([8, 0, 24, 121],"bool"), list[8,8,24,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 24, 121],"bool"), list[8,8,24,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 24, 121].  Tensor sizes: [8, 0, 24, 121]
2025-03-05 15:23:06.966533 test begin: paddle.broadcast_to(Tensor([8, 0, 24, 24],"bool"), list[8,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 24, 24],"bool"), list[8,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 24, 24].  Tensor sizes: [8, 0, 24, 24]
2025-03-05 15:23:06.967181 test begin: paddle.broadcast_to(Tensor([8, 0, 24, 33],"bool"), list[8,8,24,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 24, 33],"bool"), list[8,8,24,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 24, 33].  Tensor sizes: [8, 0, 24, 33]
2025-03-05 15:23:06.967793 test begin: paddle.broadcast_to(Tensor([8, 0, 240, 113],"bool"), list[8,8,240,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 240, 113],"bool"), list[8,8,240,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 240, 113].  Tensor sizes: [8, 0, 240, 113]
2025-03-05 15:23:06.968364 test begin: paddle.broadcast_to(Tensor([8, 0, 240, 240],"bool"), list[8,8,240,240,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 240, 240],"bool"), list[8,8,240,240,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 240, 240].  Tensor sizes: [8, 0, 240, 240]
2025-03-05 15:23:06.968922 test begin: paddle.broadcast_to(Tensor([8, 0, 241, 113],"bool"), list[8,8,241,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 241, 113],"bool"), list[8,8,241,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 241, 113].  Tensor sizes: [8, 0, 241, 113]
2025-03-05 15:23:06.969444 test begin: paddle.broadcast_to(Tensor([8, 0, 241, 241],"bool"), list[8,8,241,241,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 241, 241],"bool"), list[8,8,241,241,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 241, 241].  Tensor sizes: [8, 0, 241, 241]
2025-03-05 15:23:06.969950 test begin: paddle.broadcast_to(Tensor([8, 0, 242, 113],"bool"), list[8,8,242,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 242, 113],"bool"), list[8,8,242,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 242, 113].  Tensor sizes: [8, 0, 242, 113]
2025-03-05 15:23:06.970449 test begin: paddle.broadcast_to(Tensor([8, 0, 242, 242],"bool"), list[8,8,242,242,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 242, 242],"bool"), list[8,8,242,242,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 242, 242].  Tensor sizes: [8, 0, 242, 242]
2025-03-05 15:23:06.970967 test begin: paddle.broadcast_to(Tensor([8, 0, 243, 113],"bool"), list[8,8,243,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 243, 113],"bool"), list[8,8,243,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 243, 113].  Tensor sizes: [8, 0, 243, 113]
2025-03-05 15:23:06.971495 test begin: paddle.broadcast_to(Tensor([8, 0, 243, 243],"bool"), list[8,8,243,243,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 243, 243],"bool"), list[8,8,243,243,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 243, 243].  Tensor sizes: [8, 0, 243, 243]
2025-03-05 15:23:06.972021 test begin: paddle.broadcast_to(Tensor([8, 0, 244, 113],"bool"), list[8,8,244,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 244, 113],"bool"), list[8,8,244,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 244, 113].  Tensor sizes: [8, 0, 244, 113]
2025-03-05 15:23:06.972520 test begin: paddle.broadcast_to(Tensor([8, 0, 244, 244],"bool"), list[8,8,244,244,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 244, 244],"bool"), list[8,8,244,244,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 244, 244].  Tensor sizes: [8, 0, 244, 244]
2025-03-05 15:23:06.973042 test begin: paddle.broadcast_to(Tensor([8, 0, 245, 113],"bool"), list[8,8,245,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 245, 113],"bool"), list[8,8,245,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 245, 113].  Tensor sizes: [8, 0, 245, 113]
2025-03-05 15:23:06.973597 test begin: paddle.broadcast_to(Tensor([8, 0, 245, 245],"bool"), list[8,8,245,245,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 245, 245],"bool"), list[8,8,245,245,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 245, 245].  Tensor sizes: [8, 0, 245, 245]
2025-03-05 15:23:06.974115 test begin: paddle.broadcast_to(Tensor([8, 0, 246, 113],"bool"), list[8,8,246,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 246, 113],"bool"), list[8,8,246,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 246, 113].  Tensor sizes: [8, 0, 246, 113]
2025-03-05 15:23:06.974631 test begin: paddle.broadcast_to(Tensor([8, 0, 246, 246],"bool"), list[8,8,246,246,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 246, 246],"bool"), list[8,8,246,246,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 246, 246].  Tensor sizes: [8, 0, 246, 246]
2025-03-05 15:23:06.975139 test begin: paddle.broadcast_to(Tensor([8, 0, 247, 113],"bool"), list[8,8,247,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 247, 113],"bool"), list[8,8,247,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 247, 113].  Tensor sizes: [8, 0, 247, 113]
2025-03-05 15:23:06.975650 test begin: paddle.broadcast_to(Tensor([8, 0, 247, 247],"bool"), list[8,8,247,247,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 247, 247],"bool"), list[8,8,247,247,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 247, 247].  Tensor sizes: [8, 0, 247, 247]
2025-03-05 15:23:06.976157 test begin: paddle.broadcast_to(Tensor([8, 0, 248, 113],"bool"), list[8,8,248,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 248, 113],"bool"), list[8,8,248,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 248, 113].  Tensor sizes: [8, 0, 248, 113]
2025-03-05 15:23:06.976700 test begin: paddle.broadcast_to(Tensor([8, 0, 248, 248],"bool"), list[8,8,248,248,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 248, 248],"bool"), list[8,8,248,248,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 248, 248].  Tensor sizes: [8, 0, 248, 248]
2025-03-05 15:23:06.977221 test begin: paddle.broadcast_to(Tensor([8, 0, 249, 113],"bool"), list[8,8,249,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 249, 113],"bool"), list[8,8,249,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 249, 113].  Tensor sizes: [8, 0, 249, 113]
2025-03-05 15:23:06.977740 test begin: paddle.broadcast_to(Tensor([8, 0, 249, 249],"bool"), list[8,8,249,249,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 249, 249],"bool"), list[8,8,249,249,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 249, 249].  Tensor sizes: [8, 0, 249, 249]
2025-03-05 15:23:06.978241 test begin: paddle.broadcast_to(Tensor([8, 0, 25, 113],"bool"), list[8,8,25,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 25, 113],"bool"), list[8,8,25,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 25, 113].  Tensor sizes: [8, 0, 25, 113]
2025-03-05 15:23:06.978744 test begin: paddle.broadcast_to(Tensor([8, 0, 25, 121],"bool"), list[8,8,25,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 25, 121],"bool"), list[8,8,25,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 25, 121].  Tensor sizes: [8, 0, 25, 121]
2025-03-05 15:23:06.979240 test begin: paddle.broadcast_to(Tensor([8, 0, 25, 25],"bool"), list[8,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 25, 25],"bool"), list[8,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 25, 25].  Tensor sizes: [8, 0, 25, 25]
2025-03-05 15:23:06.979805 test begin: paddle.broadcast_to(Tensor([8, 0, 25, 33],"bool"), list[8,8,25,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 25, 33],"bool"), list[8,8,25,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 25, 33].  Tensor sizes: [8, 0, 25, 33]
2025-03-05 15:23:06.980323 test begin: paddle.broadcast_to(Tensor([8, 0, 250, 113],"bool"), list[8,8,250,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 250, 113],"bool"), list[8,8,250,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 250, 113].  Tensor sizes: [8, 0, 250, 113]
2025-03-05 15:23:06.980849 test begin: paddle.broadcast_to(Tensor([8, 0, 250, 250],"bool"), list[8,8,250,250,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 250, 250],"bool"), list[8,8,250,250,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 250, 250].  Tensor sizes: [8, 0, 250, 250]
2025-03-05 15:23:06.981560 test begin: paddle.broadcast_to(Tensor([8, 0, 251, 113],"bool"), list[8,8,251,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 251, 113],"bool"), list[8,8,251,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 251, 113].  Tensor sizes: [8, 0, 251, 113]
2025-03-05 15:23:06.982119 test begin: paddle.broadcast_to(Tensor([8, 0, 251, 251],"bool"), list[8,8,251,251,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 251, 251],"bool"), list[8,8,251,251,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 251, 251].  Tensor sizes: [8, 0, 251, 251]
2025-03-05 15:23:06.982861 test begin: paddle.broadcast_to(Tensor([8, 0, 252, 113],"bool"), list[8,8,252,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 252, 113],"bool"), list[8,8,252,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 252, 113].  Tensor sizes: [8, 0, 252, 113]
2025-03-05 15:23:06.983500 test begin: paddle.broadcast_to(Tensor([8, 0, 252, 252],"bool"), list[8,8,252,252,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 252, 252],"bool"), list[8,8,252,252,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 252, 252].  Tensor sizes: [8, 0, 252, 252]
2025-03-05 15:23:06.984103 test begin: paddle.broadcast_to(Tensor([8, 0, 253, 113],"bool"), list[8,8,253,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 253, 113],"bool"), list[8,8,253,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 253, 113].  Tensor sizes: [8, 0, 253, 113]
2025-03-05 15:23:06.984645 test begin: paddle.broadcast_to(Tensor([8, 0, 253, 253],"bool"), list[8,8,253,253,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 253, 253],"bool"), list[8,8,253,253,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 253, 253].  Tensor sizes: [8, 0, 253, 253]
2025-03-05 15:23:06.985176 test begin: paddle.broadcast_to(Tensor([8, 0, 254, 113],"bool"), list[8,8,254,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 254, 113],"bool"), list[8,8,254,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 254, 113].  Tensor sizes: [8, 0, 254, 113]
2025-03-05 15:23:06.985699 test begin: paddle.broadcast_to(Tensor([8, 0, 254, 254],"bool"), list[8,8,254,254,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 254, 254],"bool"), list[8,8,254,254,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 254, 254].  Tensor sizes: [8, 0, 254, 254]
2025-03-05 15:23:06.986212 test begin: paddle.broadcast_to(Tensor([8, 0, 255, 113],"bool"), list[8,8,255,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 255, 113],"bool"), list[8,8,255,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 255, 113].  Tensor sizes: [8, 0, 255, 113]
2025-03-05 15:23:06.986739 test begin: paddle.broadcast_to(Tensor([8, 0, 255, 255],"bool"), list[8,8,255,255,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 255, 255],"bool"), list[8,8,255,255,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 255, 255].  Tensor sizes: [8, 0, 255, 255]
2025-03-05 15:23:06.987246 test begin: paddle.broadcast_to(Tensor([8, 0, 256, 113],"bool"), list[8,8,256,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 256, 113],"bool"), list[8,8,256,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 256, 113].  Tensor sizes: [8, 0, 256, 113]
2025-03-05 15:23:06.987771 test begin: paddle.broadcast_to(Tensor([8, 0, 256, 256],"bool"), list[8,8,256,256,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 256, 256],"bool"), list[8,8,256,256,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 256, 256].  Tensor sizes: [8, 0, 256, 256]
2025-03-05 15:23:06.988280 test begin: paddle.broadcast_to(Tensor([8, 0, 257, 113],"bool"), list[8,8,257,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 257, 113],"bool"), list[8,8,257,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 257, 113].  Tensor sizes: [8, 0, 257, 113]
2025-03-05 15:23:06.988805 test begin: paddle.broadcast_to(Tensor([8, 0, 257, 257],"bool"), list[8,8,257,257,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 257, 257],"bool"), list[8,8,257,257,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 257, 257].  Tensor sizes: [8, 0, 257, 257]
2025-03-05 15:23:06.989315 test begin: paddle.broadcast_to(Tensor([8, 0, 258, 113],"bool"), list[8,8,258,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 258, 113],"bool"), list[8,8,258,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 258, 113].  Tensor sizes: [8, 0, 258, 113]
2025-03-05 15:23:06.989864 test begin: paddle.broadcast_to(Tensor([8, 0, 258, 258],"bool"), list[8,8,258,258,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 258, 258],"bool"), list[8,8,258,258,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 258, 258].  Tensor sizes: [8, 0, 258, 258]
2025-03-05 15:23:06.990386 test begin: paddle.broadcast_to(Tensor([8, 0, 259, 113],"bool"), list[8,8,259,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 259, 113],"bool"), list[8,8,259,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 259, 113].  Tensor sizes: [8, 0, 259, 113]
2025-03-05 15:23:06.990910 test begin: paddle.broadcast_to(Tensor([8, 0, 259, 259],"bool"), list[8,8,259,259,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 259, 259],"bool"), list[8,8,259,259,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 259, 259].  Tensor sizes: [8, 0, 259, 259]
2025-03-05 15:23:06.991430 test begin: paddle.broadcast_to(Tensor([8, 0, 26, 113],"bool"), list[8,8,26,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 26, 113],"bool"), list[8,8,26,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 26, 113].  Tensor sizes: [8, 0, 26, 113]
2025-03-05 15:23:06.991952 test begin: paddle.broadcast_to(Tensor([8, 0, 26, 121],"bool"), list[8,8,26,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 26, 121],"bool"), list[8,8,26,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 26, 121].  Tensor sizes: [8, 0, 26, 121]
2025-03-05 15:23:06.992467 test begin: paddle.broadcast_to(Tensor([8, 0, 26, 26],"bool"), list[8,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 26, 26],"bool"), list[8,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 26, 26].  Tensor sizes: [8, 0, 26, 26]
2025-03-05 15:23:06.992986 test begin: paddle.broadcast_to(Tensor([8, 0, 26, 33],"bool"), list[8,8,26,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 26, 33],"bool"), list[8,8,26,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 26, 33].  Tensor sizes: [8, 0, 26, 33]
2025-03-05 15:23:06.993487 test begin: paddle.broadcast_to(Tensor([8, 0, 260, 113],"bool"), list[8,8,260,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 260, 113],"bool"), list[8,8,260,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 260, 113].  Tensor sizes: [8, 0, 260, 113]
2025-03-05 15:23:06.994004 test begin: paddle.broadcast_to(Tensor([8, 0, 260, 260],"bool"), list[8,8,260,260,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 260, 260],"bool"), list[8,8,260,260,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 260, 260].  Tensor sizes: [8, 0, 260, 260]
2025-03-05 15:23:06.994549 test begin: paddle.broadcast_to(Tensor([8, 0, 261, 113],"bool"), list[8,8,261,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 261, 113],"bool"), list[8,8,261,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 261, 113].  Tensor sizes: [8, 0, 261, 113]
2025-03-05 15:23:06.995106 test begin: paddle.broadcast_to(Tensor([8, 0, 261, 261],"bool"), list[8,8,261,261,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 261, 261],"bool"), list[8,8,261,261,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 261, 261].  Tensor sizes: [8, 0, 261, 261]
2025-03-05 15:23:06.995629 test begin: paddle.broadcast_to(Tensor([8, 0, 262, 113],"bool"), list[8,8,262,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 262, 113],"bool"), list[8,8,262,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 262, 113].  Tensor sizes: [8, 0, 262, 113]
2025-03-05 15:23:06.996146 test begin: paddle.broadcast_to(Tensor([8, 0, 262, 262],"bool"), list[8,8,262,262,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 262, 262],"bool"), list[8,8,262,262,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 262, 262].  Tensor sizes: [8, 0, 262, 262]
2025-03-05 15:23:06.996665 test begin: paddle.broadcast_to(Tensor([8, 0, 263, 113],"bool"), list[8,8,263,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 263, 113],"bool"), list[8,8,263,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 263, 113].  Tensor sizes: [8, 0, 263, 113]
2025-03-05 15:23:06.997169 test begin: paddle.broadcast_to(Tensor([8, 0, 263, 263],"bool"), list[8,8,263,263,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 263, 263],"bool"), list[8,8,263,263,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 263, 263].  Tensor sizes: [8, 0, 263, 263]
2025-03-05 15:23:06.997693 test begin: paddle.broadcast_to(Tensor([8, 0, 264, 113],"bool"), list[8,8,264,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 264, 113],"bool"), list[8,8,264,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 264, 113].  Tensor sizes: [8, 0, 264, 113]
2025-03-05 15:23:06.998204 test begin: paddle.broadcast_to(Tensor([8, 0, 264, 264],"bool"), list[8,8,264,264,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 264, 264],"bool"), list[8,8,264,264,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 264, 264].  Tensor sizes: [8, 0, 264, 264]
2025-03-05 15:23:06.998777 test begin: paddle.broadcast_to(Tensor([8, 0, 265, 113],"bool"), list[8,8,265,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 265, 113],"bool"), list[8,8,265,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 265, 113].  Tensor sizes: [8, 0, 265, 113]
2025-03-05 15:23:06.999788 test begin: paddle.broadcast_to(Tensor([8, 0, 265, 265],"bool"), list[8,8,265,265,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 265, 265],"bool"), list[8,8,265,265,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 265, 265].  Tensor sizes: [8, 0, 265, 265]
2025-03-05 15:23:07.000359 test begin: paddle.broadcast_to(Tensor([8, 0, 266, 113],"bool"), list[8,8,266,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 266, 113],"bool"), list[8,8,266,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 266, 113].  Tensor sizes: [8, 0, 266, 113]
2025-03-05 15:23:07.000906 test begin: paddle.broadcast_to(Tensor([8, 0, 266, 266],"bool"), list[8,8,266,266,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 266, 266],"bool"), list[8,8,266,266,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 266, 266].  Tensor sizes: [8, 0, 266, 266]
2025-03-05 15:23:07.001430 test begin: paddle.broadcast_to(Tensor([8, 0, 267, 113],"bool"), list[8,8,267,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 267, 113],"bool"), list[8,8,267,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 267, 113].  Tensor sizes: [8, 0, 267, 113]
2025-03-05 15:23:07.002487 test begin: paddle.broadcast_to(Tensor([8, 0, 267, 267],"bool"), list[8,8,267,267,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 267, 267],"bool"), list[8,8,267,267,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 267, 267].  Tensor sizes: [8, 0, 267, 267]
2025-03-05 15:23:07.003234 test begin: paddle.broadcast_to(Tensor([8, 0, 268, 113],"bool"), list[8,8,268,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 268, 113],"bool"), list[8,8,268,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 268, 113].  Tensor sizes: [8, 0, 268, 113]
2025-03-05 15:23:07.003824 test begin: paddle.broadcast_to(Tensor([8, 0, 268, 268],"bool"), list[8,8,268,268,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 268, 268],"bool"), list[8,8,268,268,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 268, 268].  Tensor sizes: [8, 0, 268, 268]
2025-03-05 15:23:07.004371 test begin: paddle.broadcast_to(Tensor([8, 0, 269, 113],"bool"), list[8,8,269,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 269, 113],"bool"), list[8,8,269,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 269, 113].  Tensor sizes: [8, 0, 269, 113]
2025-03-05 15:23:07.004934 test begin: paddle.broadcast_to(Tensor([8, 0, 269, 269],"bool"), list[8,8,269,269,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 269, 269],"bool"), list[8,8,269,269,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 269, 269].  Tensor sizes: [8, 0, 269, 269]
2025-03-05 15:23:07.005479 test begin: paddle.broadcast_to(Tensor([8, 0, 27, 113],"bool"), list[8,8,27,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 27, 113],"bool"), list[8,8,27,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 27, 113].  Tensor sizes: [8, 0, 27, 113]
2025-03-05 15:23:07.006043 test begin: paddle.broadcast_to(Tensor([8, 0, 27, 121],"bool"), list[8,8,27,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 27, 121],"bool"), list[8,8,27,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 27, 121].  Tensor sizes: [8, 0, 27, 121]
2025-03-05 15:23:07.006616 test begin: paddle.broadcast_to(Tensor([8, 0, 27, 27],"bool"), list[8,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 27, 27],"bool"), list[8,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 27, 27].  Tensor sizes: [8, 0, 27, 27]
2025-03-05 15:23:07.007148 test begin: paddle.broadcast_to(Tensor([8, 0, 27, 33],"bool"), list[8,8,27,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 27, 33],"bool"), list[8,8,27,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 27, 33].  Tensor sizes: [8, 0, 27, 33]
2025-03-05 15:23:07.007678 test begin: paddle.broadcast_to(Tensor([8, 0, 270, 113],"bool"), list[8,8,270,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 270, 113],"bool"), list[8,8,270,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 270, 113].  Tensor sizes: [8, 0, 270, 113]
2025-03-05 15:23:07.008460 test begin: paddle.broadcast_to(Tensor([8, 0, 270, 270],"bool"), list[8,8,270,270,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 270, 270],"bool"), list[8,8,270,270,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 270, 270].  Tensor sizes: [8, 0, 270, 270]
2025-03-05 15:23:07.009134 test begin: paddle.broadcast_to(Tensor([8, 0, 271, 113],"bool"), list[8,8,271,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 271, 113],"bool"), list[8,8,271,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 271, 113].  Tensor sizes: [8, 0, 271, 113]
2025-03-05 15:23:07.009755 test begin: paddle.broadcast_to(Tensor([8, 0, 271, 271],"bool"), list[8,8,271,271,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 271, 271],"bool"), list[8,8,271,271,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 271, 271].  Tensor sizes: [8, 0, 271, 271]
2025-03-05 15:23:07.010304 test begin: paddle.broadcast_to(Tensor([8, 0, 272, 113],"bool"), list[8,8,272,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 272, 113],"bool"), list[8,8,272,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 272, 113].  Tensor sizes: [8, 0, 272, 113]
2025-03-05 15:23:07.011078 test begin: paddle.broadcast_to(Tensor([8, 0, 272, 272],"bool"), list[8,8,272,272,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 272, 272],"bool"), list[8,8,272,272,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 272, 272].  Tensor sizes: [8, 0, 272, 272]
2025-03-05 15:23:07.011712 test begin: paddle.broadcast_to(Tensor([8, 0, 273, 113],"bool"), list[8,8,273,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 273, 113],"bool"), list[8,8,273,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 273, 113].  Tensor sizes: [8, 0, 273, 113]
2025-03-05 15:23:07.012263 test begin: paddle.broadcast_to(Tensor([8, 0, 273, 273],"bool"), list[8,8,273,273,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 273, 273],"bool"), list[8,8,273,273,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 273, 273].  Tensor sizes: [8, 0, 273, 273]
2025-03-05 15:23:07.012794 test begin: paddle.broadcast_to(Tensor([8, 0, 274, 113],"bool"), list[8,8,274,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 274, 113],"bool"), list[8,8,274,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 274, 113].  Tensor sizes: [8, 0, 274, 113]
2025-03-05 15:23:07.013312 test begin: paddle.broadcast_to(Tensor([8, 0, 274, 274],"bool"), list[8,8,274,274,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 274, 274],"bool"), list[8,8,274,274,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 274, 274].  Tensor sizes: [8, 0, 274, 274]
2025-03-05 15:23:07.013828 test begin: paddle.broadcast_to(Tensor([8, 0, 275, 113],"bool"), list[8,8,275,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 275, 113],"bool"), list[8,8,275,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 275, 113].  Tensor sizes: [8, 0, 275, 113]
2025-03-05 15:23:07.014336 test begin: paddle.broadcast_to(Tensor([8, 0, 275, 275],"bool"), list[8,8,275,275,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 275, 275],"bool"), list[8,8,275,275,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 275, 275].  Tensor sizes: [8, 0, 275, 275]
2025-03-05 15:23:07.014875 test begin: paddle.broadcast_to(Tensor([8, 0, 276, 113],"bool"), list[8,8,276,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 276, 113],"bool"), list[8,8,276,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 276, 113].  Tensor sizes: [8, 0, 276, 113]
2025-03-05 15:23:07.015631 test begin: paddle.broadcast_to(Tensor([8, 0, 276, 276],"bool"), list[8,8,276,276,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 276, 276],"bool"), list[8,8,276,276,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 276, 276].  Tensor sizes: [8, 0, 276, 276]
2025-03-05 15:23:07.016358 test begin: paddle.broadcast_to(Tensor([8, 0, 277, 113],"bool"), list[8,8,277,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 277, 113],"bool"), list[8,8,277,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 277, 113].  Tensor sizes: [8, 0, 277, 113]
2025-03-05 15:23:07.017082 test begin: paddle.broadcast_to(Tensor([8, 0, 277, 277],"bool"), list[8,8,277,277,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 277, 277],"bool"), list[8,8,277,277,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 277, 277].  Tensor sizes: [8, 0, 277, 277]
2025-03-05 15:23:07.018070 test begin: paddle.broadcast_to(Tensor([8, 0, 278, 113],"bool"), list[8,8,278,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 278, 113],"bool"), list[8,8,278,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 278, 113].  Tensor sizes: [8, 0, 278, 113]
2025-03-05 15:23:07.019453 test begin: paddle.broadcast_to(Tensor([8, 0, 278, 278],"bool"), list[8,8,278,278,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 278, 278],"bool"), list[8,8,278,278,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 278, 278].  Tensor sizes: [8, 0, 278, 278]
2025-03-05 15:23:07.020141 test begin: paddle.broadcast_to(Tensor([8, 0, 279, 113],"bool"), list[8,8,279,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 279, 113],"bool"), list[8,8,279,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 279, 113].  Tensor sizes: [8, 0, 279, 113]
2025-03-05 15:23:07.020873 test begin: paddle.broadcast_to(Tensor([8, 0, 279, 279],"bool"), list[8,8,279,279,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 279, 279],"bool"), list[8,8,279,279,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 279, 279].  Tensor sizes: [8, 0, 279, 279]
2025-03-05 15:23:07.021665 test begin: paddle.broadcast_to(Tensor([8, 0, 28, 113],"bool"), list[8,8,28,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 28, 113],"bool"), list[8,8,28,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 28, 113].  Tensor sizes: [8, 0, 28, 113]
2025-03-05 15:23:07.022367 test begin: paddle.broadcast_to(Tensor([8, 0, 28, 121],"bool"), list[8,8,28,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 28, 121],"bool"), list[8,8,28,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 28, 121].  Tensor sizes: [8, 0, 28, 121]
2025-03-05 15:23:07.023069 test begin: paddle.broadcast_to(Tensor([8, 0, 28, 28],"bool"), list[8,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 28, 28],"bool"), list[8,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 28, 28].  Tensor sizes: [8, 0, 28, 28]
2025-03-05 15:23:07.023755 test begin: paddle.broadcast_to(Tensor([8, 0, 28, 33],"bool"), list[8,8,28,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 28, 33],"bool"), list[8,8,28,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 28, 33].  Tensor sizes: [8, 0, 28, 33]
2025-03-05 15:23:07.024368 test begin: paddle.broadcast_to(Tensor([8, 0, 280, 113],"bool"), list[8,8,280,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 280, 113],"bool"), list[8,8,280,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 280, 113].  Tensor sizes: [8, 0, 280, 113]
2025-03-05 15:23:07.024935 test begin: paddle.broadcast_to(Tensor([8, 0, 280, 280],"bool"), list[8,8,280,280,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 280, 280],"bool"), list[8,8,280,280,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 280, 280].  Tensor sizes: [8, 0, 280, 280]
2025-03-05 15:23:07.025461 test begin: paddle.broadcast_to(Tensor([8, 0, 281, 113],"bool"), list[8,8,281,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 281, 113],"bool"), list[8,8,281,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 281, 113].  Tensor sizes: [8, 0, 281, 113]
2025-03-05 15:23:07.026063 test begin: paddle.broadcast_to(Tensor([8, 0, 281, 281],"bool"), list[8,8,281,281,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 281, 281],"bool"), list[8,8,281,281,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 281, 281].  Tensor sizes: [8, 0, 281, 281]
2025-03-05 15:23:07.026683 test begin: paddle.broadcast_to(Tensor([8, 0, 282, 113],"bool"), list[8,8,282,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 282, 113],"bool"), list[8,8,282,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 282, 113].  Tensor sizes: [8, 0, 282, 113]
2025-03-05 15:23:07.027279 test begin: paddle.broadcast_to(Tensor([8, 0, 282, 282],"bool"), list[8,8,282,282,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 282, 282],"bool"), list[8,8,282,282,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 282, 282].  Tensor sizes: [8, 0, 282, 282]
2025-03-05 15:23:07.027888 test begin: paddle.broadcast_to(Tensor([8, 0, 283, 113],"bool"), list[8,8,283,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 283, 113],"bool"), list[8,8,283,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 283, 113].  Tensor sizes: [8, 0, 283, 113]
2025-03-05 15:23:07.028474 test begin: paddle.broadcast_to(Tensor([8, 0, 283, 283],"bool"), list[8,8,283,283,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 283, 283],"bool"), list[8,8,283,283,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 283, 283].  Tensor sizes: [8, 0, 283, 283]
2025-03-05 15:23:07.029010 test begin: paddle.broadcast_to(Tensor([8, 0, 284, 113],"bool"), list[8,8,284,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 284, 113],"bool"), list[8,8,284,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 284, 113].  Tensor sizes: [8, 0, 284, 113]
2025-03-05 15:23:07.029522 test begin: paddle.broadcast_to(Tensor([8, 0, 284, 284],"bool"), list[8,8,284,284,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 284, 284],"bool"), list[8,8,284,284,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 284, 284].  Tensor sizes: [8, 0, 284, 284]
2025-03-05 15:23:07.030060 test begin: paddle.broadcast_to(Tensor([8, 0, 285, 113],"bool"), list[8,8,285,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 285, 113],"bool"), list[8,8,285,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 285, 113].  Tensor sizes: [8, 0, 285, 113]
2025-03-05 15:23:07.030567 test begin: paddle.broadcast_to(Tensor([8, 0, 285, 285],"bool"), list[8,8,285,285,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 285, 285],"bool"), list[8,8,285,285,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 285, 285].  Tensor sizes: [8, 0, 285, 285]
2025-03-05 15:23:07.031084 test begin: paddle.broadcast_to(Tensor([8, 0, 286, 113],"bool"), list[8,8,286,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 286, 113],"bool"), list[8,8,286,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 286, 113].  Tensor sizes: [8, 0, 286, 113]
2025-03-05 15:23:07.031695 test begin: paddle.broadcast_to(Tensor([8, 0, 286, 286],"bool"), list[8,8,286,286,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 286, 286],"bool"), list[8,8,286,286,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 286, 286].  Tensor sizes: [8, 0, 286, 286]
2025-03-05 15:23:07.032232 test begin: paddle.broadcast_to(Tensor([8, 0, 287, 113],"bool"), list[8,8,287,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 287, 113],"bool"), list[8,8,287,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 287, 113].  Tensor sizes: [8, 0, 287, 113]
2025-03-05 15:23:07.032767 test begin: paddle.broadcast_to(Tensor([8, 0, 287, 287],"bool"), list[8,8,287,287,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 287, 287],"bool"), list[8,8,287,287,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 287, 287].  Tensor sizes: [8, 0, 287, 287]
2025-03-05 15:23:07.033277 test begin: paddle.broadcast_to(Tensor([8, 0, 288, 113],"bool"), list[8,8,288,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 288, 113],"bool"), list[8,8,288,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 288, 113].  Tensor sizes: [8, 0, 288, 113]
2025-03-05 15:23:07.033787 test begin: paddle.broadcast_to(Tensor([8, 0, 288, 288],"bool"), list[8,8,288,288,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 288, 288],"bool"), list[8,8,288,288,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 288, 288].  Tensor sizes: [8, 0, 288, 288]
2025-03-05 15:23:07.034296 test begin: paddle.broadcast_to(Tensor([8, 0, 289, 113],"bool"), list[8,8,289,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 289, 113],"bool"), list[8,8,289,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 289, 113].  Tensor sizes: [8, 0, 289, 113]
2025-03-05 15:23:07.034823 test begin: paddle.broadcast_to(Tensor([8, 0, 289, 289],"bool"), list[8,8,289,289,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 289, 289],"bool"), list[8,8,289,289,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 289, 289].  Tensor sizes: [8, 0, 289, 289]
2025-03-05 15:23:07.035339 test begin: paddle.broadcast_to(Tensor([8, 0, 29, 113],"bool"), list[8,8,29,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 29, 113],"bool"), list[8,8,29,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 29, 113].  Tensor sizes: [8, 0, 29, 113]
2025-03-05 15:23:07.035877 test begin: paddle.broadcast_to(Tensor([8, 0, 29, 121],"bool"), list[8,8,29,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 29, 121],"bool"), list[8,8,29,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 29, 121].  Tensor sizes: [8, 0, 29, 121]
2025-03-05 15:23:07.036385 test begin: paddle.broadcast_to(Tensor([8, 0, 29, 29],"bool"), list[8,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 29, 29],"bool"), list[8,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 29, 29].  Tensor sizes: [8, 0, 29, 29]
2025-03-05 15:23:07.036946 test begin: paddle.broadcast_to(Tensor([8, 0, 29, 33],"bool"), list[8,8,29,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 29, 33],"bool"), list[8,8,29,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 29, 33].  Tensor sizes: [8, 0, 29, 33]
2025-03-05 15:23:07.037489 test begin: paddle.broadcast_to(Tensor([8, 0, 290, 113],"bool"), list[8,8,290,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 290, 113],"bool"), list[8,8,290,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 290, 113].  Tensor sizes: [8, 0, 290, 113]
2025-03-05 15:23:07.038020 test begin: paddle.broadcast_to(Tensor([8, 0, 290, 290],"bool"), list[8,8,290,290,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 290, 290],"bool"), list[8,8,290,290,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 290, 290].  Tensor sizes: [8, 0, 290, 290]
2025-03-05 15:23:07.038527 test begin: paddle.broadcast_to(Tensor([8, 0, 291, 113],"bool"), list[8,8,291,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 291, 113],"bool"), list[8,8,291,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 291, 113].  Tensor sizes: [8, 0, 291, 113]
2025-03-05 15:23:07.039043 test begin: paddle.broadcast_to(Tensor([8, 0, 291, 291],"bool"), list[8,8,291,291,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 291, 291],"bool"), list[8,8,291,291,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 291, 291].  Tensor sizes: [8, 0, 291, 291]
2025-03-05 15:23:07.039553 test begin: paddle.broadcast_to(Tensor([8, 0, 292, 113],"bool"), list[8,8,292,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 292, 113],"bool"), list[8,8,292,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 292, 113].  Tensor sizes: [8, 0, 292, 113]
2025-03-05 15:23:07.040084 test begin: paddle.broadcast_to(Tensor([8, 0, 292, 292],"bool"), list[8,8,292,292,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 292, 292],"bool"), list[8,8,292,292,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 292, 292].  Tensor sizes: [8, 0, 292, 292]
2025-03-05 15:23:07.040644 test begin: paddle.broadcast_to(Tensor([8, 0, 293, 113],"bool"), list[8,8,293,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 293, 113],"bool"), list[8,8,293,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 293, 113].  Tensor sizes: [8, 0, 293, 113]
2025-03-05 15:23:07.041167 test begin: paddle.broadcast_to(Tensor([8, 0, 293, 293],"bool"), list[8,8,293,293,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 293, 293],"bool"), list[8,8,293,293,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 293, 293].  Tensor sizes: [8, 0, 293, 293]
2025-03-05 15:23:07.041695 test begin: paddle.broadcast_to(Tensor([8, 0, 3, 113],"bool"), list[8,8,3,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 3, 113],"bool"), list[8,8,3,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 3, 113].  Tensor sizes: [8, 0, 3, 113]
2025-03-05 15:23:07.042206 test begin: paddle.broadcast_to(Tensor([8, 0, 3, 121],"bool"), list[8,8,3,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 3, 121],"bool"), list[8,8,3,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 3, 121].  Tensor sizes: [8, 0, 3, 121]
2025-03-05 15:23:07.042725 test begin: paddle.broadcast_to(Tensor([8, 0, 3, 33],"bool"), list[8,8,3,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 3, 33],"bool"), list[8,8,3,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 3, 33].  Tensor sizes: [8, 0, 3, 33]
2025-03-05 15:23:07.043244 test begin: paddle.broadcast_to(Tensor([8, 0, 3, 3],"bool"), list[8,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 3, 3],"bool"), list[8,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 3, 3].  Tensor sizes: [8, 0, 3, 3]
2025-03-05 15:23:07.043756 test begin: paddle.broadcast_to(Tensor([8, 0, 30, 113],"bool"), list[8,8,30,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 30, 113],"bool"), list[8,8,30,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 30, 113].  Tensor sizes: [8, 0, 30, 113]
2025-03-05 15:23:07.044257 test begin: paddle.broadcast_to(Tensor([8, 0, 30, 121],"bool"), list[8,8,30,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 30, 121],"bool"), list[8,8,30,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 30, 121].  Tensor sizes: [8, 0, 30, 121]
2025-03-05 15:23:07.044784 test begin: paddle.broadcast_to(Tensor([8, 0, 30, 30],"bool"), list[8,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 30, 30],"bool"), list[8,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 30, 30].  Tensor sizes: [8, 0, 30, 30]
2025-03-05 15:23:07.045287 test begin: paddle.broadcast_to(Tensor([8, 0, 30, 33],"bool"), list[8,8,30,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 30, 33],"bool"), list[8,8,30,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 30, 33].  Tensor sizes: [8, 0, 30, 33]
2025-03-05 15:23:07.045792 test begin: paddle.broadcast_to(Tensor([8, 0, 31, 113],"bool"), list[8,8,31,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 31, 113],"bool"), list[8,8,31,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 31, 113].  Tensor sizes: [8, 0, 31, 113]
2025-03-05 15:23:07.046295 test begin: paddle.broadcast_to(Tensor([8, 0, 31, 121],"bool"), list[8,8,31,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 31, 121],"bool"), list[8,8,31,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 31, 121].  Tensor sizes: [8, 0, 31, 121]
2025-03-05 15:23:07.046803 test begin: paddle.broadcast_to(Tensor([8, 0, 31, 31],"bool"), list[8,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 31, 31],"bool"), list[8,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 31, 31].  Tensor sizes: [8, 0, 31, 31]
2025-03-05 15:23:07.047301 test begin: paddle.broadcast_to(Tensor([8, 0, 31, 33],"bool"), list[8,8,31,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 31, 33],"bool"), list[8,8,31,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 31, 33].  Tensor sizes: [8, 0, 31, 33]
2025-03-05 15:23:07.047829 test begin: paddle.broadcast_to(Tensor([8, 0, 32, 113],"bool"), list[8,8,32,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 32, 113],"bool"), list[8,8,32,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 32, 113].  Tensor sizes: [8, 0, 32, 113]
2025-03-05 15:23:07.048345 test begin: paddle.broadcast_to(Tensor([8, 0, 32, 121],"bool"), list[8,8,32,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 32, 121],"bool"), list[8,8,32,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 32, 121].  Tensor sizes: [8, 0, 32, 121]
2025-03-05 15:23:07.048868 test begin: paddle.broadcast_to(Tensor([8, 0, 32, 32],"bool"), list[8,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 32, 32],"bool"), list[8,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 32, 32].  Tensor sizes: [8, 0, 32, 32]
2025-03-05 15:23:07.049376 test begin: paddle.broadcast_to(Tensor([8, 0, 32, 33],"bool"), list[8,8,32,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 32, 33],"bool"), list[8,8,32,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 32, 33].  Tensor sizes: [8, 0, 32, 33]
2025-03-05 15:23:07.049893 test begin: paddle.broadcast_to(Tensor([8, 0, 33, 113],"bool"), list[8,8,33,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 33, 113],"bool"), list[8,8,33,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 33, 113].  Tensor sizes: [8, 0, 33, 113]
2025-03-05 15:23:07.050404 test begin: paddle.broadcast_to(Tensor([8, 0, 33, 121],"bool"), list[8,8,33,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 33, 121],"bool"), list[8,8,33,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 33, 121].  Tensor sizes: [8, 0, 33, 121]
2025-03-05 15:23:07.050915 test begin: paddle.broadcast_to(Tensor([8, 0, 33, 33],"bool"), list[8,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 33, 33],"bool"), list[8,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 33, 33].  Tensor sizes: [8, 0, 33, 33]
2025-03-05 15:23:07.051419 test begin: paddle.broadcast_to(Tensor([8, 0, 34, 113],"bool"), list[8,8,34,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 34, 113],"bool"), list[8,8,34,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 34, 113].  Tensor sizes: [8, 0, 34, 113]
2025-03-05 15:23:07.051930 test begin: paddle.broadcast_to(Tensor([8, 0, 34, 121],"bool"), list[8,8,34,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 34, 121],"bool"), list[8,8,34,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 34, 121].  Tensor sizes: [8, 0, 34, 121]
2025-03-05 15:23:07.052445 test begin: paddle.broadcast_to(Tensor([8, 0, 34, 33],"bool"), list[8,8,34,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 34, 33],"bool"), list[8,8,34,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 34, 33].  Tensor sizes: [8, 0, 34, 33]
2025-03-05 15:23:07.053476 test begin: paddle.broadcast_to(Tensor([8, 0, 34, 34],"bool"), list[8,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 34, 34],"bool"), list[8,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 34, 34].  Tensor sizes: [8, 0, 34, 34]
2025-03-05 15:23:07.054088 test begin: paddle.broadcast_to(Tensor([8, 0, 35, 113],"bool"), list[8,8,35,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 35, 113],"bool"), list[8,8,35,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 35, 113].  Tensor sizes: [8, 0, 35, 113]
2025-03-05 15:23:07.054622 test begin: paddle.broadcast_to(Tensor([8, 0, 35, 121],"bool"), list[8,8,35,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 35, 121],"bool"), list[8,8,35,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 35, 121].  Tensor sizes: [8, 0, 35, 121]
2025-03-05 15:23:07.055141 test begin: paddle.broadcast_to(Tensor([8, 0, 35, 33],"bool"), list[8,8,35,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 35, 33],"bool"), list[8,8,35,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 35, 33].  Tensor sizes: [8, 0, 35, 33]
2025-03-05 15:23:07.055650 test begin: paddle.broadcast_to(Tensor([8, 0, 35, 35],"bool"), list[8,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 35, 35],"bool"), list[8,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 35, 35].  Tensor sizes: [8, 0, 35, 35]
2025-03-05 15:23:07.056164 test begin: paddle.broadcast_to(Tensor([8, 0, 36, 113],"bool"), list[8,8,36,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 36, 113],"bool"), list[8,8,36,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 36, 113].  Tensor sizes: [8, 0, 36, 113]
2025-03-05 15:23:07.056682 test begin: paddle.broadcast_to(Tensor([8, 0, 36, 121],"bool"), list[8,8,36,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 36, 121],"bool"), list[8,8,36,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 36, 121].  Tensor sizes: [8, 0, 36, 121]
2025-03-05 15:23:07.057194 test begin: paddle.broadcast_to(Tensor([8, 0, 36, 33],"bool"), list[8,8,36,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 36, 33],"bool"), list[8,8,36,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 36, 33].  Tensor sizes: [8, 0, 36, 33]
2025-03-05 15:23:07.057719 test begin: paddle.broadcast_to(Tensor([8, 0, 36, 36],"bool"), list[8,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 36, 36],"bool"), list[8,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 36, 36].  Tensor sizes: [8, 0, 36, 36]
2025-03-05 15:23:07.058265 test begin: paddle.broadcast_to(Tensor([8, 0, 37, 113],"bool"), list[8,8,37,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 37, 113],"bool"), list[8,8,37,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 37, 113].  Tensor sizes: [8, 0, 37, 113]
2025-03-05 15:23:07.058795 test begin: paddle.broadcast_to(Tensor([8, 0, 37, 121],"bool"), list[8,8,37,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 37, 121],"bool"), list[8,8,37,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 37, 121].  Tensor sizes: [8, 0, 37, 121]
2025-03-05 15:23:07.059311 test begin: paddle.broadcast_to(Tensor([8, 0, 37, 33],"bool"), list[8,8,37,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 37, 33],"bool"), list[8,8,37,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 37, 33].  Tensor sizes: [8, 0, 37, 33]
2025-03-05 15:23:07.059836 test begin: paddle.broadcast_to(Tensor([8, 0, 37, 37],"bool"), list[8,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 37, 37],"bool"), list[8,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 37, 37].  Tensor sizes: [8, 0, 37, 37]
2025-03-05 15:23:07.060347 test begin: paddle.broadcast_to(Tensor([8, 0, 38, 113],"bool"), list[8,8,38,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 38, 113],"bool"), list[8,8,38,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 38, 113].  Tensor sizes: [8, 0, 38, 113]
2025-03-05 15:23:07.060854 test begin: paddle.broadcast_to(Tensor([8, 0, 38, 121],"bool"), list[8,8,38,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 38, 121],"bool"), list[8,8,38,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 38, 121].  Tensor sizes: [8, 0, 38, 121]
2025-03-05 15:23:07.061368 test begin: paddle.broadcast_to(Tensor([8, 0, 38, 33],"bool"), list[8,8,38,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 38, 33],"bool"), list[8,8,38,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 38, 33].  Tensor sizes: [8, 0, 38, 33]
2025-03-05 15:23:07.061874 test begin: paddle.broadcast_to(Tensor([8, 0, 38, 38],"bool"), list[8,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 38, 38],"bool"), list[8,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 38, 38].  Tensor sizes: [8, 0, 38, 38]
2025-03-05 15:23:07.062378 test begin: paddle.broadcast_to(Tensor([8, 0, 39, 113],"bool"), list[8,8,39,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 39, 113],"bool"), list[8,8,39,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 39, 113].  Tensor sizes: [8, 0, 39, 113]
2025-03-05 15:23:07.063022 test begin: paddle.broadcast_to(Tensor([8, 0, 39, 121],"bool"), list[8,8,39,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 39, 121],"bool"), list[8,8,39,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 39, 121].  Tensor sizes: [8, 0, 39, 121]
2025-03-05 15:23:07.063533 test begin: paddle.broadcast_to(Tensor([8, 0, 39, 33],"bool"), list[8,8,39,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 39, 33],"bool"), list[8,8,39,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 39, 33].  Tensor sizes: [8, 0, 39, 33]
2025-03-05 15:23:07.064064 test begin: paddle.broadcast_to(Tensor([8, 0, 39, 39],"bool"), list[8,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 39, 39],"bool"), list[8,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 39, 39].  Tensor sizes: [8, 0, 39, 39]
2025-03-05 15:23:07.064564 test begin: paddle.broadcast_to(Tensor([8, 0, 4, 113],"bool"), list[8,8,4,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 4, 113],"bool"), list[8,8,4,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 4, 113].  Tensor sizes: [8, 0, 4, 113]
2025-03-05 15:23:07.065079 test begin: paddle.broadcast_to(Tensor([8, 0, 4, 121],"bool"), list[8,8,4,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 4, 121],"bool"), list[8,8,4,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 4, 121].  Tensor sizes: [8, 0, 4, 121]
2025-03-05 15:23:07.065589 test begin: paddle.broadcast_to(Tensor([8, 0, 4, 33],"bool"), list[8,8,4,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 4, 33],"bool"), list[8,8,4,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 4, 33].  Tensor sizes: [8, 0, 4, 33]
2025-03-05 15:23:07.066110 test begin: paddle.broadcast_to(Tensor([8, 0, 4, 4],"bool"), list[8,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 4, 4],"bool"), list[8,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 4, 4].  Tensor sizes: [8, 0, 4, 4]
2025-03-05 15:23:07.066620 test begin: paddle.broadcast_to(Tensor([8, 0, 40, 113],"bool"), list[8,8,40,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 40, 113],"bool"), list[8,8,40,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 40, 113].  Tensor sizes: [8, 0, 40, 113]
2025-03-05 15:23:07.067130 test begin: paddle.broadcast_to(Tensor([8, 0, 40, 121],"bool"), list[8,8,40,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 40, 121],"bool"), list[8,8,40,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 40, 121].  Tensor sizes: [8, 0, 40, 121]
2025-03-05 15:23:07.067640 test begin: paddle.broadcast_to(Tensor([8, 0, 40, 33],"bool"), list[8,8,40,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 40, 33],"bool"), list[8,8,40,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 40, 33].  Tensor sizes: [8, 0, 40, 33]
2025-03-05 15:23:07.068148 test begin: paddle.broadcast_to(Tensor([8, 0, 40, 40],"bool"), list[8,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 40, 40],"bool"), list[8,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 40, 40].  Tensor sizes: [8, 0, 40, 40]
2025-03-05 15:23:07.068656 test begin: paddle.broadcast_to(Tensor([8, 0, 41, 113],"bool"), list[8,8,41,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 41, 113],"bool"), list[8,8,41,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 41, 113].  Tensor sizes: [8, 0, 41, 113]
2025-03-05 15:23:07.069165 test begin: paddle.broadcast_to(Tensor([8, 0, 41, 121],"bool"), list[8,8,41,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 41, 121],"bool"), list[8,8,41,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 41, 121].  Tensor sizes: [8, 0, 41, 121]
2025-03-05 15:23:07.069677 test begin: paddle.broadcast_to(Tensor([8, 0, 41, 33],"bool"), list[8,8,41,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 41, 33],"bool"), list[8,8,41,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 41, 33].  Tensor sizes: [8, 0, 41, 33]
2025-03-05 15:23:07.070265 test begin: paddle.broadcast_to(Tensor([8, 0, 41, 41],"bool"), list[8,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 41, 41],"bool"), list[8,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 41, 41].  Tensor sizes: [8, 0, 41, 41]
2025-03-05 15:23:07.071114 test begin: paddle.broadcast_to(Tensor([8, 0, 42, 113],"bool"), list[8,8,42,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 42, 113],"bool"), list[8,8,42,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 42, 113].  Tensor sizes: [8, 0, 42, 113]
2025-03-05 15:23:07.071734 test begin: paddle.broadcast_to(Tensor([8, 0, 42, 121],"bool"), list[8,8,42,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 42, 121],"bool"), list[8,8,42,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 42, 121].  Tensor sizes: [8, 0, 42, 121]
2025-03-05 15:23:07.072341 test begin: paddle.broadcast_to(Tensor([8, 0, 42, 33],"bool"), list[8,8,42,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 42, 33],"bool"), list[8,8,42,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 42, 33].  Tensor sizes: [8, 0, 42, 33]
2025-03-05 15:23:07.073026 test begin: paddle.broadcast_to(Tensor([8, 0, 42, 42],"bool"), list[8,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 42, 42],"bool"), list[8,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 42, 42].  Tensor sizes: [8, 0, 42, 42]
2025-03-05 15:23:07.073630 test begin: paddle.broadcast_to(Tensor([8, 0, 43, 113],"bool"), list[8,8,43,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 43, 113],"bool"), list[8,8,43,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 43, 113].  Tensor sizes: [8, 0, 43, 113]
2025-03-05 15:23:07.074212 test begin: paddle.broadcast_to(Tensor([8, 0, 43, 121],"bool"), list[8,8,43,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 43, 121],"bool"), list[8,8,43,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 43, 121].  Tensor sizes: [8, 0, 43, 121]
2025-03-05 15:23:07.074825 test begin: paddle.broadcast_to(Tensor([8, 0, 43, 33],"bool"), list[8,8,43,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 43, 33],"bool"), list[8,8,43,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 43, 33].  Tensor sizes: [8, 0, 43, 33]
2025-03-05 15:23:07.075417 test begin: paddle.broadcast_to(Tensor([8, 0, 43, 43],"bool"), list[8,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 43, 43],"bool"), list[8,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 43, 43].  Tensor sizes: [8, 0, 43, 43]
2025-03-05 15:23:07.076006 test begin: paddle.broadcast_to(Tensor([8, 0, 44, 113],"bool"), list[8,8,44,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 44, 113],"bool"), list[8,8,44,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 44, 113].  Tensor sizes: [8, 0, 44, 113]
2025-03-05 15:23:07.076600 test begin: paddle.broadcast_to(Tensor([8, 0, 44, 121],"bool"), list[8,8,44,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 44, 121],"bool"), list[8,8,44,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 44, 121].  Tensor sizes: [8, 0, 44, 121]
2025-03-05 15:23:07.077192 test begin: paddle.broadcast_to(Tensor([8, 0, 44, 33],"bool"), list[8,8,44,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 44, 33],"bool"), list[8,8,44,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 44, 33].  Tensor sizes: [8, 0, 44, 33]
2025-03-05 15:23:07.077813 test begin: paddle.broadcast_to(Tensor([8, 0, 44, 44],"bool"), list[8,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 44, 44],"bool"), list[8,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 44, 44].  Tensor sizes: [8, 0, 44, 44]
2025-03-05 15:23:07.078456 test begin: paddle.broadcast_to(Tensor([8, 0, 45, 113],"bool"), list[8,8,45,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 45, 113],"bool"), list[8,8,45,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 45, 113].  Tensor sizes: [8, 0, 45, 113]
2025-03-05 15:23:07.079126 test begin: paddle.broadcast_to(Tensor([8, 0, 45, 121],"bool"), list[8,8,45,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 45, 121],"bool"), list[8,8,45,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 45, 121].  Tensor sizes: [8, 0, 45, 121]
2025-03-05 15:23:07.079742 test begin: paddle.broadcast_to(Tensor([8, 0, 45, 33],"bool"), list[8,8,45,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 45, 33],"bool"), list[8,8,45,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 45, 33].  Tensor sizes: [8, 0, 45, 33]
2025-03-05 15:23:07.080358 test begin: paddle.broadcast_to(Tensor([8, 0, 45, 45],"bool"), list[8,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 45, 45],"bool"), list[8,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 45, 45].  Tensor sizes: [8, 0, 45, 45]
2025-03-05 15:23:07.080960 test begin: paddle.broadcast_to(Tensor([8, 0, 46, 113],"bool"), list[8,8,46,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 46, 113],"bool"), list[8,8,46,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 46, 113].  Tensor sizes: [8, 0, 46, 113]
2025-03-05 15:23:07.081614 test begin: paddle.broadcast_to(Tensor([8, 0, 46, 121],"bool"), list[8,8,46,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 46, 121],"bool"), list[8,8,46,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 46, 121].  Tensor sizes: [8, 0, 46, 121]
2025-03-05 15:23:07.082222 test begin: paddle.broadcast_to(Tensor([8, 0, 46, 33],"bool"), list[8,8,46,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 46, 33],"bool"), list[8,8,46,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 46, 33].  Tensor sizes: [8, 0, 46, 33]
2025-03-05 15:23:07.082747 test begin: paddle.broadcast_to(Tensor([8, 0, 46, 46],"bool"), list[8,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 46, 46],"bool"), list[8,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 46, 46].  Tensor sizes: [8, 0, 46, 46]
2025-03-05 15:23:07.083279 test begin: paddle.broadcast_to(Tensor([8, 0, 47, 113],"bool"), list[8,8,47,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 47, 113],"bool"), list[8,8,47,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 47, 113].  Tensor sizes: [8, 0, 47, 113]
2025-03-05 15:23:07.084255 test begin: paddle.broadcast_to(Tensor([8, 0, 47, 121],"bool"), list[8,8,47,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 47, 121],"bool"), list[8,8,47,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 47, 121].  Tensor sizes: [8, 0, 47, 121]
2025-03-05 15:23:07.084932 test begin: paddle.broadcast_to(Tensor([8, 0, 47, 33],"bool"), list[8,8,47,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 47, 33],"bool"), list[8,8,47,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 47, 33].  Tensor sizes: [8, 0, 47, 33]
2025-03-05 15:23:07.085565 test begin: paddle.broadcast_to(Tensor([8, 0, 47, 47],"bool"), list[8,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 47, 47],"bool"), list[8,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 47, 47].  Tensor sizes: [8, 0, 47, 47]
2025-03-05 15:23:07.086206 test begin: paddle.broadcast_to(Tensor([8, 0, 48, 113],"bool"), list[8,8,48,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 48, 113],"bool"), list[8,8,48,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 48, 113].  Tensor sizes: [8, 0, 48, 113]
2025-03-05 15:23:07.086823 test begin: paddle.broadcast_to(Tensor([8, 0, 48, 121],"bool"), list[8,8,48,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 48, 121],"bool"), list[8,8,48,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 48, 121].  Tensor sizes: [8, 0, 48, 121]
2025-03-05 15:23:07.087412 test begin: paddle.broadcast_to(Tensor([8, 0, 48, 33],"bool"), list[8,8,48,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 48, 33],"bool"), list[8,8,48,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 48, 33].  Tensor sizes: [8, 0, 48, 33]
2025-03-05 15:23:07.088010 test begin: paddle.broadcast_to(Tensor([8, 0, 48, 48],"bool"), list[8,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 48, 48],"bool"), list[8,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 48, 48].  Tensor sizes: [8, 0, 48, 48]
2025-03-05 15:23:07.088613 test begin: paddle.broadcast_to(Tensor([8, 0, 49, 113],"bool"), list[8,8,49,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 49, 113],"bool"), list[8,8,49,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 49, 113].  Tensor sizes: [8, 0, 49, 113]
2025-03-05 15:23:07.089210 test begin: paddle.broadcast_to(Tensor([8, 0, 49, 121],"bool"), list[8,8,49,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 49, 121],"bool"), list[8,8,49,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 49, 121].  Tensor sizes: [8, 0, 49, 121]
2025-03-05 15:23:07.089815 test begin: paddle.broadcast_to(Tensor([8, 0, 49, 33],"bool"), list[8,8,49,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 49, 33],"bool"), list[8,8,49,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 49, 33].  Tensor sizes: [8, 0, 49, 33]
2025-03-05 15:23:07.090420 test begin: paddle.broadcast_to(Tensor([8, 0, 49, 49],"bool"), list[8,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 49, 49],"bool"), list[8,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 49, 49].  Tensor sizes: [8, 0, 49, 49]
2025-03-05 15:23:07.091018 test begin: paddle.broadcast_to(Tensor([8, 0, 5, 113],"bool"), list[8,8,5,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 5, 113],"bool"), list[8,8,5,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 5, 113].  Tensor sizes: [8, 0, 5, 113]
2025-03-05 15:23:07.091610 test begin: paddle.broadcast_to(Tensor([8, 0, 5, 121],"bool"), list[8,8,5,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 5, 121],"bool"), list[8,8,5,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 5, 121].  Tensor sizes: [8, 0, 5, 121]
2025-03-05 15:23:07.092194 test begin: paddle.broadcast_to(Tensor([8, 0, 5, 33],"bool"), list[8,8,5,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 5, 33],"bool"), list[8,8,5,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 5, 33].  Tensor sizes: [8, 0, 5, 33]
2025-03-05 15:23:07.092783 test begin: paddle.broadcast_to(Tensor([8, 0, 5, 5],"bool"), list[8,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 5, 5],"bool"), list[8,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 5, 5].  Tensor sizes: [8, 0, 5, 5]
2025-03-05 15:23:07.093366 test begin: paddle.broadcast_to(Tensor([8, 0, 50, 113],"bool"), list[8,8,50,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 50, 113],"bool"), list[8,8,50,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 50, 113].  Tensor sizes: [8, 0, 50, 113]
2025-03-05 15:23:07.093976 test begin: paddle.broadcast_to(Tensor([8, 0, 50, 121],"bool"), list[8,8,50,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 50, 121],"bool"), list[8,8,50,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 50, 121].  Tensor sizes: [8, 0, 50, 121]
2025-03-05 15:23:07.094551 test begin: paddle.broadcast_to(Tensor([8, 0, 50, 33],"bool"), list[8,8,50,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 50, 33],"bool"), list[8,8,50,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 50, 33].  Tensor sizes: [8, 0, 50, 33]
2025-03-05 15:23:07.095143 test begin: paddle.broadcast_to(Tensor([8, 0, 50, 50],"bool"), list[8,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 50, 50],"bool"), list[8,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 50, 50].  Tensor sizes: [8, 0, 50, 50]
2025-03-05 15:23:07.095725 test begin: paddle.broadcast_to(Tensor([8, 0, 51, 113],"bool"), list[8,8,51,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 51, 113],"bool"), list[8,8,51,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 51, 113].  Tensor sizes: [8, 0, 51, 113]
2025-03-05 15:23:07.096293 test begin: paddle.broadcast_to(Tensor([8, 0, 51, 121],"bool"), list[8,8,51,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 51, 121],"bool"), list[8,8,51,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 51, 121].  Tensor sizes: [8, 0, 51, 121]
2025-03-05 15:23:07.096868 test begin: paddle.broadcast_to(Tensor([8, 0, 51, 33],"bool"), list[8,8,51,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 51, 33],"bool"), list[8,8,51,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 51, 33].  Tensor sizes: [8, 0, 51, 33]
2025-03-05 15:23:07.097490 test begin: paddle.broadcast_to(Tensor([8, 0, 51, 51],"bool"), list[8,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 51, 51],"bool"), list[8,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 51, 51].  Tensor sizes: [8, 0, 51, 51]
2025-03-05 15:23:07.098099 test begin: paddle.broadcast_to(Tensor([8, 0, 52, 113],"bool"), list[8,8,52,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 52, 113],"bool"), list[8,8,52,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 52, 113].  Tensor sizes: [8, 0, 52, 113]
2025-03-05 15:23:07.098698 test begin: paddle.broadcast_to(Tensor([8, 0, 52, 121],"bool"), list[8,8,52,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 52, 121],"bool"), list[8,8,52,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 52, 121].  Tensor sizes: [8, 0, 52, 121]
2025-03-05 15:23:07.099276 test begin: paddle.broadcast_to(Tensor([8, 0, 52, 33],"bool"), list[8,8,52,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 52, 33],"bool"), list[8,8,52,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 52, 33].  Tensor sizes: [8, 0, 52, 33]
2025-03-05 15:23:07.099864 test begin: paddle.broadcast_to(Tensor([8, 0, 52, 52],"bool"), list[8,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 52, 52],"bool"), list[8,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 52, 52].  Tensor sizes: [8, 0, 52, 52]
2025-03-05 15:23:07.100513 test begin: paddle.broadcast_to(Tensor([8, 0, 53, 113],"bool"), list[8,8,53,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 53, 113],"bool"), list[8,8,53,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 53, 113].  Tensor sizes: [8, 0, 53, 113]
2025-03-05 15:23:07.101123 test begin: paddle.broadcast_to(Tensor([8, 0, 53, 121],"bool"), list[8,8,53,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 53, 121],"bool"), list[8,8,53,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 53, 121].  Tensor sizes: [8, 0, 53, 121]
2025-03-05 15:23:07.101708 test begin: paddle.broadcast_to(Tensor([8, 0, 53, 33],"bool"), list[8,8,53,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 53, 33],"bool"), list[8,8,53,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 53, 33].  Tensor sizes: [8, 0, 53, 33]
2025-03-05 15:23:07.102283 test begin: paddle.broadcast_to(Tensor([8, 0, 53, 53],"bool"), list[8,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 53, 53],"bool"), list[8,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 53, 53].  Tensor sizes: [8, 0, 53, 53]
2025-03-05 15:23:07.102884 test begin: paddle.broadcast_to(Tensor([8, 0, 54, 113],"bool"), list[8,8,54,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 54, 113],"bool"), list[8,8,54,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 54, 113].  Tensor sizes: [8, 0, 54, 113]
2025-03-05 15:23:07.103473 test begin: paddle.broadcast_to(Tensor([8, 0, 54, 121],"bool"), list[8,8,54,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 54, 121],"bool"), list[8,8,54,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 54, 121].  Tensor sizes: [8, 0, 54, 121]
2025-03-05 15:23:07.104061 test begin: paddle.broadcast_to(Tensor([8, 0, 54, 33],"bool"), list[8,8,54,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 54, 33],"bool"), list[8,8,54,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 54, 33].  Tensor sizes: [8, 0, 54, 33]
2025-03-05 15:23:07.104645 test begin: paddle.broadcast_to(Tensor([8, 0, 54, 54],"bool"), list[8,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 54, 54],"bool"), list[8,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 54, 54].  Tensor sizes: [8, 0, 54, 54]
2025-03-05 15:23:07.105230 test begin: paddle.broadcast_to(Tensor([8, 0, 55, 113],"bool"), list[8,8,55,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 55, 113],"bool"), list[8,8,55,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 55, 113].  Tensor sizes: [8, 0, 55, 113]
2025-03-05 15:23:07.105845 test begin: paddle.broadcast_to(Tensor([8, 0, 55, 121],"bool"), list[8,8,55,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 55, 121],"bool"), list[8,8,55,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 55, 121].  Tensor sizes: [8, 0, 55, 121]
2025-03-05 15:23:07.106465 test begin: paddle.broadcast_to(Tensor([8, 0, 55, 33],"bool"), list[8,8,55,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 55, 33],"bool"), list[8,8,55,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 55, 33].  Tensor sizes: [8, 0, 55, 33]
2025-03-05 15:23:07.107088 test begin: paddle.broadcast_to(Tensor([8, 0, 55, 55],"bool"), list[8,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 55, 55],"bool"), list[8,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 55, 55].  Tensor sizes: [8, 0, 55, 55]
2025-03-05 15:23:07.107691 test begin: paddle.broadcast_to(Tensor([8, 0, 56, 113],"bool"), list[8,8,56,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 56, 113],"bool"), list[8,8,56,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 56, 113].  Tensor sizes: [8, 0, 56, 113]
2025-03-05 15:23:07.108400 test begin: paddle.broadcast_to(Tensor([8, 0, 56, 121],"bool"), list[8,8,56,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 56, 121],"bool"), list[8,8,56,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 56, 121].  Tensor sizes: [8, 0, 56, 121]
2025-03-05 15:23:07.108990 test begin: paddle.broadcast_to(Tensor([8, 0, 56, 33],"bool"), list[8,8,56,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 56, 33],"bool"), list[8,8,56,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 56, 33].  Tensor sizes: [8, 0, 56, 33]
2025-03-05 15:23:07.109562 test begin: paddle.broadcast_to(Tensor([8, 0, 56, 56],"bool"), list[8,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 56, 56],"bool"), list[8,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 56, 56].  Tensor sizes: [8, 0, 56, 56]
2025-03-05 15:23:07.110148 test begin: paddle.broadcast_to(Tensor([8, 0, 57, 113],"bool"), list[8,8,57,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 57, 113],"bool"), list[8,8,57,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 57, 113].  Tensor sizes: [8, 0, 57, 113]
2025-03-05 15:23:07.110767 test begin: paddle.broadcast_to(Tensor([8, 0, 57, 121],"bool"), list[8,8,57,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 57, 121],"bool"), list[8,8,57,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 57, 121].  Tensor sizes: [8, 0, 57, 121]
2025-03-05 15:23:07.111397 test begin: paddle.broadcast_to(Tensor([8, 0, 57, 33],"bool"), list[8,8,57,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 57, 33],"bool"), list[8,8,57,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 57, 33].  Tensor sizes: [8, 0, 57, 33]
2025-03-05 15:23:07.111990 test begin: paddle.broadcast_to(Tensor([8, 0, 57, 57],"bool"), list[8,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 57, 57],"bool"), list[8,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 57, 57].  Tensor sizes: [8, 0, 57, 57]
2025-03-05 15:23:07.112601 test begin: paddle.broadcast_to(Tensor([8, 0, 58, 113],"bool"), list[8,8,58,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 58, 113],"bool"), list[8,8,58,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 58, 113].  Tensor sizes: [8, 0, 58, 113]
2025-03-05 15:23:07.113198 test begin: paddle.broadcast_to(Tensor([8, 0, 58, 121],"bool"), list[8,8,58,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 58, 121],"bool"), list[8,8,58,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 58, 121].  Tensor sizes: [8, 0, 58, 121]
2025-03-05 15:23:07.113802 test begin: paddle.broadcast_to(Tensor([8, 0, 58, 58],"bool"), list[8,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 58, 58],"bool"), list[8,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 58, 58].  Tensor sizes: [8, 0, 58, 58]
2025-03-05 15:23:07.114385 test begin: paddle.broadcast_to(Tensor([8, 0, 59, 113],"bool"), list[8,8,59,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 59, 113],"bool"), list[8,8,59,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 59, 113].  Tensor sizes: [8, 0, 59, 113]
2025-03-05 15:23:07.114979 test begin: paddle.broadcast_to(Tensor([8, 0, 59, 121],"bool"), list[8,8,59,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 59, 121],"bool"), list[8,8,59,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 59, 121].  Tensor sizes: [8, 0, 59, 121]
2025-03-05 15:23:07.115580 test begin: paddle.broadcast_to(Tensor([8, 0, 59, 59],"bool"), list[8,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 59, 59],"bool"), list[8,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 59, 59].  Tensor sizes: [8, 0, 59, 59]
2025-03-05 15:23:07.116168 test begin: paddle.broadcast_to(Tensor([8, 0, 6, 113],"bool"), list[8,8,6,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 6, 113],"bool"), list[8,8,6,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 6, 113].  Tensor sizes: [8, 0, 6, 113]
2025-03-05 15:23:07.116767 test begin: paddle.broadcast_to(Tensor([8, 0, 6, 121],"bool"), list[8,8,6,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 6, 121],"bool"), list[8,8,6,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 6, 121].  Tensor sizes: [8, 0, 6, 121]
2025-03-05 15:23:07.117382 test begin: paddle.broadcast_to(Tensor([8, 0, 6, 33],"bool"), list[8,8,6,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 6, 33],"bool"), list[8,8,6,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 6, 33].  Tensor sizes: [8, 0, 6, 33]
2025-03-05 15:23:07.117978 test begin: paddle.broadcast_to(Tensor([8, 0, 6, 6],"bool"), list[8,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 6, 6],"bool"), list[8,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 6, 6].  Tensor sizes: [8, 0, 6, 6]
2025-03-05 15:23:07.118567 test begin: paddle.broadcast_to(Tensor([8, 0, 60, 113],"bool"), list[8,8,60,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 60, 113],"bool"), list[8,8,60,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 60, 113].  Tensor sizes: [8, 0, 60, 113]
2025-03-05 15:23:07.119198 test begin: paddle.broadcast_to(Tensor([8, 0, 60, 121],"bool"), list[8,8,60,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 60, 121],"bool"), list[8,8,60,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 60, 121].  Tensor sizes: [8, 0, 60, 121]
2025-03-05 15:23:07.119839 test begin: paddle.broadcast_to(Tensor([8, 0, 60, 60],"bool"), list[8,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 60, 60],"bool"), list[8,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 60, 60].  Tensor sizes: [8, 0, 60, 60]
2025-03-05 15:23:07.120466 test begin: paddle.broadcast_to(Tensor([8, 0, 61, 113],"bool"), list[8,8,61,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 61, 113],"bool"), list[8,8,61,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 61, 113].  Tensor sizes: [8, 0, 61, 113]
2025-03-05 15:23:07.121032 test begin: paddle.broadcast_to(Tensor([8, 0, 61, 121],"bool"), list[8,8,61,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 61, 121],"bool"), list[8,8,61,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 61, 121].  Tensor sizes: [8, 0, 61, 121]
2025-03-05 15:23:07.121553 test begin: paddle.broadcast_to(Tensor([8, 0, 61, 61],"bool"), list[8,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 61, 61],"bool"), list[8,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 61, 61].  Tensor sizes: [8, 0, 61, 61]
2025-03-05 15:23:07.122185 test begin: paddle.broadcast_to(Tensor([8, 0, 62, 113],"bool"), list[8,8,62,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 62, 113],"bool"), list[8,8,62,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 62, 113].  Tensor sizes: [8, 0, 62, 113]
2025-03-05 15:23:07.122752 test begin: paddle.broadcast_to(Tensor([8, 0, 62, 121],"bool"), list[8,8,62,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 62, 121],"bool"), list[8,8,62,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 62, 121].  Tensor sizes: [8, 0, 62, 121]
2025-03-05 15:23:07.123275 test begin: paddle.broadcast_to(Tensor([8, 0, 62, 62],"bool"), list[8,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 62, 62],"bool"), list[8,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 62, 62].  Tensor sizes: [8, 0, 62, 62]
2025-03-05 15:23:07.123792 test begin: paddle.broadcast_to(Tensor([8, 0, 63, 113],"bool"), list[8,8,63,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 63, 113],"bool"), list[8,8,63,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 63, 113].  Tensor sizes: [8, 0, 63, 113]
2025-03-05 15:23:07.124309 test begin: paddle.broadcast_to(Tensor([8, 0, 63, 121],"bool"), list[8,8,63,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 63, 121],"bool"), list[8,8,63,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 63, 121].  Tensor sizes: [8, 0, 63, 121]
2025-03-05 15:23:07.124846 test begin: paddle.broadcast_to(Tensor([8, 0, 63, 63],"bool"), list[8,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 63, 63],"bool"), list[8,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 63, 63].  Tensor sizes: [8, 0, 63, 63]
2025-03-05 15:23:07.125369 test begin: paddle.broadcast_to(Tensor([8, 0, 64, 113],"bool"), list[8,8,64,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 64, 113],"bool"), list[8,8,64,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 64, 113].  Tensor sizes: [8, 0, 64, 113]
2025-03-05 15:23:07.125889 test begin: paddle.broadcast_to(Tensor([8, 0, 64, 121],"bool"), list[8,8,64,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 64, 121],"bool"), list[8,8,64,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 64, 121].  Tensor sizes: [8, 0, 64, 121]
2025-03-05 15:23:07.126429 test begin: paddle.broadcast_to(Tensor([8, 0, 64, 64],"bool"), list[8,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 64, 64],"bool"), list[8,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 64, 64].  Tensor sizes: [8, 0, 64, 64]
2025-03-05 15:23:07.126955 test begin: paddle.broadcast_to(Tensor([8, 0, 65, 113],"bool"), list[8,8,65,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 65, 113],"bool"), list[8,8,65,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 65, 113].  Tensor sizes: [8, 0, 65, 113]
2025-03-05 15:23:07.127472 test begin: paddle.broadcast_to(Tensor([8, 0, 65, 121],"bool"), list[8,8,65,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 65, 121],"bool"), list[8,8,65,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 65, 121].  Tensor sizes: [8, 0, 65, 121]
2025-03-05 15:23:07.128005 test begin: paddle.broadcast_to(Tensor([8, 0, 65, 65],"bool"), list[8,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 65, 65],"bool"), list[8,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 65, 65].  Tensor sizes: [8, 0, 65, 65]
2025-03-05 15:23:07.128511 test begin: paddle.broadcast_to(Tensor([8, 0, 66, 113],"bool"), list[8,8,66,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 66, 113],"bool"), list[8,8,66,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 66, 113].  Tensor sizes: [8, 0, 66, 113]
2025-03-05 15:23:07.129027 test begin: paddle.broadcast_to(Tensor([8, 0, 66, 121],"bool"), list[8,8,66,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 66, 121],"bool"), list[8,8,66,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 66, 121].  Tensor sizes: [8, 0, 66, 121]
2025-03-05 15:23:07.129534 test begin: paddle.broadcast_to(Tensor([8, 0, 66, 66],"bool"), list[8,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 66, 66],"bool"), list[8,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 66, 66].  Tensor sizes: [8, 0, 66, 66]
2025-03-05 15:23:07.130063 test begin: paddle.broadcast_to(Tensor([8, 0, 67, 113],"bool"), list[8,8,67,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 67, 113],"bool"), list[8,8,67,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 67, 113].  Tensor sizes: [8, 0, 67, 113]
2025-03-05 15:23:07.130563 test begin: paddle.broadcast_to(Tensor([8, 0, 67, 121],"bool"), list[8,8,67,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 67, 121],"bool"), list[8,8,67,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 67, 121].  Tensor sizes: [8, 0, 67, 121]
2025-03-05 15:23:07.131085 test begin: paddle.broadcast_to(Tensor([8, 0, 67, 67],"bool"), list[8,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 67, 67],"bool"), list[8,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 67, 67].  Tensor sizes: [8, 0, 67, 67]
2025-03-05 15:23:07.131601 test begin: paddle.broadcast_to(Tensor([8, 0, 68, 113],"bool"), list[8,8,68,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 68, 113],"bool"), list[8,8,68,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 68, 113].  Tensor sizes: [8, 0, 68, 113]
2025-03-05 15:23:07.132113 test begin: paddle.broadcast_to(Tensor([8, 0, 68, 121],"bool"), list[8,8,68,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 68, 121],"bool"), list[8,8,68,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 68, 121].  Tensor sizes: [8, 0, 68, 121]
2025-03-05 15:23:07.132636 test begin: paddle.broadcast_to(Tensor([8, 0, 68, 68],"bool"), list[8,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 68, 68],"bool"), list[8,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 68, 68].  Tensor sizes: [8, 0, 68, 68]
2025-03-05 15:23:07.133147 test begin: paddle.broadcast_to(Tensor([8, 0, 69, 113],"bool"), list[8,8,69,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 69, 113],"bool"), list[8,8,69,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 69, 113].  Tensor sizes: [8, 0, 69, 113]
2025-03-05 15:23:07.133656 test begin: paddle.broadcast_to(Tensor([8, 0, 69, 121],"bool"), list[8,8,69,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 69, 121],"bool"), list[8,8,69,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 69, 121].  Tensor sizes: [8, 0, 69, 121]
2025-03-05 15:23:07.134167 test begin: paddle.broadcast_to(Tensor([8, 0, 69, 69],"bool"), list[8,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 69, 69],"bool"), list[8,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 69, 69].  Tensor sizes: [8, 0, 69, 69]
2025-03-05 15:23:07.134676 test begin: paddle.broadcast_to(Tensor([8, 0, 7, 113],"bool"), list[8,8,7,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 7, 113],"bool"), list[8,8,7,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 7, 113].  Tensor sizes: [8, 0, 7, 113]
2025-03-05 15:23:07.135195 test begin: paddle.broadcast_to(Tensor([8, 0, 7, 121],"bool"), list[8,8,7,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 7, 121],"bool"), list[8,8,7,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 7, 121].  Tensor sizes: [8, 0, 7, 121]
2025-03-05 15:23:07.135732 test begin: paddle.broadcast_to(Tensor([8, 0, 7, 33],"bool"), list[8,8,7,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 7, 33],"bool"), list[8,8,7,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 7, 33].  Tensor sizes: [8, 0, 7, 33]
2025-03-05 15:23:07.136238 test begin: paddle.broadcast_to(Tensor([8, 0, 7, 7],"bool"), list[8,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 7, 7],"bool"), list[8,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 7, 7].  Tensor sizes: [8, 0, 7, 7]
2025-03-05 15:23:07.136777 test begin: paddle.broadcast_to(Tensor([8, 0, 70, 113],"bool"), list[8,8,70,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 70, 113],"bool"), list[8,8,70,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 70, 113].  Tensor sizes: [8, 0, 70, 113]
2025-03-05 15:23:07.137399 test begin: paddle.broadcast_to(Tensor([8, 0, 70, 121],"bool"), list[8,8,70,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 70, 121],"bool"), list[8,8,70,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 70, 121].  Tensor sizes: [8, 0, 70, 121]
2025-03-05 15:23:07.138054 test begin: paddle.broadcast_to(Tensor([8, 0, 70, 70],"bool"), list[8,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 70, 70],"bool"), list[8,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 70, 70].  Tensor sizes: [8, 0, 70, 70]
2025-03-05 15:23:07.138693 test begin: paddle.broadcast_to(Tensor([8, 0, 71, 113],"bool"), list[8,8,71,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 71, 113],"bool"), list[8,8,71,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 71, 113].  Tensor sizes: [8, 0, 71, 113]
2025-03-05 15:23:07.139243 test begin: paddle.broadcast_to(Tensor([8, 0, 71, 121],"bool"), list[8,8,71,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 71, 121],"bool"), list[8,8,71,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 71, 121].  Tensor sizes: [8, 0, 71, 121]
2025-03-05 15:23:07.139769 test begin: paddle.broadcast_to(Tensor([8, 0, 71, 71],"bool"), list[8,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 71, 71],"bool"), list[8,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 71, 71].  Tensor sizes: [8, 0, 71, 71]
2025-03-05 15:23:07.140292 test begin: paddle.broadcast_to(Tensor([8, 0, 72, 113],"bool"), list[8,8,72,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 72, 113],"bool"), list[8,8,72,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 72, 113].  Tensor sizes: [8, 0, 72, 113]
2025-03-05 15:23:07.140804 test begin: paddle.broadcast_to(Tensor([8, 0, 72, 121],"bool"), list[8,8,72,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 72, 121],"bool"), list[8,8,72,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 72, 121].  Tensor sizes: [8, 0, 72, 121]
2025-03-05 15:23:07.141304 test begin: paddle.broadcast_to(Tensor([8, 0, 72, 72],"bool"), list[8,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 72, 72],"bool"), list[8,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 72, 72].  Tensor sizes: [8, 0, 72, 72]
2025-03-05 15:23:07.141815 test begin: paddle.broadcast_to(Tensor([8, 0, 73, 113],"bool"), list[8,8,73,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 73, 113],"bool"), list[8,8,73,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 73, 113].  Tensor sizes: [8, 0, 73, 113]
2025-03-05 15:23:07.142324 test begin: paddle.broadcast_to(Tensor([8, 0, 73, 121],"bool"), list[8,8,73,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 73, 121],"bool"), list[8,8,73,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 73, 121].  Tensor sizes: [8, 0, 73, 121]
2025-03-05 15:23:07.142889 test begin: paddle.broadcast_to(Tensor([8, 0, 73, 73],"bool"), list[8,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 73, 73],"bool"), list[8,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 73, 73].  Tensor sizes: [8, 0, 73, 73]
2025-03-05 15:23:07.143464 test begin: paddle.broadcast_to(Tensor([8, 0, 74, 113],"bool"), list[8,8,74,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 74, 113],"bool"), list[8,8,74,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 74, 113].  Tensor sizes: [8, 0, 74, 113]
2025-03-05 15:23:07.144006 test begin: paddle.broadcast_to(Tensor([8, 0, 74, 121],"bool"), list[8,8,74,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 74, 121],"bool"), list[8,8,74,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 74, 121].  Tensor sizes: [8, 0, 74, 121]
2025-03-05 15:23:07.144523 test begin: paddle.broadcast_to(Tensor([8, 0, 74, 74],"bool"), list[8,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 74, 74],"bool"), list[8,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 74, 74].  Tensor sizes: [8, 0, 74, 74]
2025-03-05 15:23:07.145073 test begin: paddle.broadcast_to(Tensor([8, 0, 75, 113],"bool"), list[8,8,75,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 75, 113],"bool"), list[8,8,75,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 75, 113].  Tensor sizes: [8, 0, 75, 113]
2025-03-05 15:23:07.145591 test begin: paddle.broadcast_to(Tensor([8, 0, 75, 121],"bool"), list[8,8,75,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 75, 121],"bool"), list[8,8,75,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 75, 121].  Tensor sizes: [8, 0, 75, 121]
2025-03-05 15:23:07.146112 test begin: paddle.broadcast_to(Tensor([8, 0, 75, 75],"bool"), list[8,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 75, 75],"bool"), list[8,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 75, 75].  Tensor sizes: [8, 0, 75, 75]
2025-03-05 15:23:07.146657 test begin: paddle.broadcast_to(Tensor([8, 0, 76, 113],"bool"), list[8,8,76,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 76, 113],"bool"), list[8,8,76,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 76, 113].  Tensor sizes: [8, 0, 76, 113]
2025-03-05 15:23:07.147165 test begin: paddle.broadcast_to(Tensor([8, 0, 76, 121],"bool"), list[8,8,76,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 76, 121],"bool"), list[8,8,76,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 76, 121].  Tensor sizes: [8, 0, 76, 121]
2025-03-05 15:23:07.147704 test begin: paddle.broadcast_to(Tensor([8, 0, 76, 76],"bool"), list[8,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 76, 76],"bool"), list[8,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 76, 76].  Tensor sizes: [8, 0, 76, 76]
2025-03-05 15:23:07.148286 test begin: paddle.broadcast_to(Tensor([8, 0, 768],"float32"), tuple(8,63,768,), )

[torch error] paddle.broadcast_to(Tensor([8, 0, 768],"float32"), tuple(8,63,768,), ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 63, 768].  Tensor sizes: [8, 0, 768]
2025-03-05 15:23:07.148833 test begin: paddle.broadcast_to(Tensor([8, 0, 768],"int64"), tuple(8,7,768,), )

[torch error] paddle.broadcast_to(Tensor([8, 0, 768],"int64"), tuple(8,7,768,), ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 7, 768].  Tensor sizes: [8, 0, 768]
2025-03-05 15:23:07.149391 test begin: paddle.broadcast_to(Tensor([8, 0, 77, 113],"bool"), list[8,8,77,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 77, 113],"bool"), list[8,8,77,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 77, 113].  Tensor sizes: [8, 0, 77, 113]
2025-03-05 15:23:07.149915 test begin: paddle.broadcast_to(Tensor([8, 0, 77, 121],"bool"), list[8,8,77,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 77, 121],"bool"), list[8,8,77,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 77, 121].  Tensor sizes: [8, 0, 77, 121]
2025-03-05 15:23:07.150432 test begin: paddle.broadcast_to(Tensor([8, 0, 77, 77],"bool"), list[8,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 77, 77],"bool"), list[8,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 77, 77].  Tensor sizes: [8, 0, 77, 77]
2025-03-05 15:23:07.150963 test begin: paddle.broadcast_to(Tensor([8, 0, 78, 113],"bool"), list[8,8,78,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 78, 113],"bool"), list[8,8,78,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 78, 113].  Tensor sizes: [8, 0, 78, 113]
2025-03-05 15:23:07.151475 test begin: paddle.broadcast_to(Tensor([8, 0, 78, 121],"bool"), list[8,8,78,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 78, 121],"bool"), list[8,8,78,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 78, 121].  Tensor sizes: [8, 0, 78, 121]
2025-03-05 15:23:07.151998 test begin: paddle.broadcast_to(Tensor([8, 0, 78, 78],"bool"), list[8,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 78, 78],"bool"), list[8,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 78, 78].  Tensor sizes: [8, 0, 78, 78]
2025-03-05 15:23:07.152500 test begin: paddle.broadcast_to(Tensor([8, 0, 79, 113],"bool"), list[8,8,79,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 79, 113],"bool"), list[8,8,79,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 79, 113].  Tensor sizes: [8, 0, 79, 113]
2025-03-05 15:23:07.153032 test begin: paddle.broadcast_to(Tensor([8, 0, 79, 121],"bool"), list[8,8,79,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 79, 121],"bool"), list[8,8,79,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 79, 121].  Tensor sizes: [8, 0, 79, 121]
2025-03-05 15:23:07.153532 test begin: paddle.broadcast_to(Tensor([8, 0, 79, 79],"bool"), list[8,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 79, 79],"bool"), list[8,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 79, 79].  Tensor sizes: [8, 0, 79, 79]
2025-03-05 15:23:07.154080 test begin: paddle.broadcast_to(Tensor([8, 0, 8, 113],"bool"), list[8,8,8,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 8, 113],"bool"), list[8,8,8,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 8, 113].  Tensor sizes: [8, 0, 8, 113]
2025-03-05 15:23:07.154626 test begin: paddle.broadcast_to(Tensor([8, 0, 8, 121],"bool"), list[8,8,8,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 8, 121],"bool"), list[8,8,8,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 8, 121].  Tensor sizes: [8, 0, 8, 121]
2025-03-05 15:23:07.155157 test begin: paddle.broadcast_to(Tensor([8, 0, 8, 33],"bool"), list[8,8,8,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 8, 33],"bool"), list[8,8,8,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 8, 33].  Tensor sizes: [8, 0, 8, 33]
2025-03-05 15:23:07.155676 test begin: paddle.broadcast_to(Tensor([8, 0, 8, 8],"bool"), list[8,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 8, 8],"bool"), list[8,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 8, 8].  Tensor sizes: [8, 0, 8, 8]
2025-03-05 15:23:07.156185 test begin: paddle.broadcast_to(Tensor([8, 0, 80, 113],"bool"), list[8,8,80,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 80, 113],"bool"), list[8,8,80,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 80, 113].  Tensor sizes: [8, 0, 80, 113]
2025-03-05 15:23:07.156696 test begin: paddle.broadcast_to(Tensor([8, 0, 80, 121],"bool"), list[8,8,80,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 80, 121],"bool"), list[8,8,80,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 80, 121].  Tensor sizes: [8, 0, 80, 121]
2025-03-05 15:23:07.157209 test begin: paddle.broadcast_to(Tensor([8, 0, 80, 80],"bool"), list[8,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 80, 80],"bool"), list[8,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 80, 80].  Tensor sizes: [8, 0, 80, 80]
2025-03-05 15:23:07.157728 test begin: paddle.broadcast_to(Tensor([8, 0, 81, 113],"bool"), list[8,8,81,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 81, 113],"bool"), list[8,8,81,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 81, 113].  Tensor sizes: [8, 0, 81, 113]
2025-03-05 15:23:07.158238 test begin: paddle.broadcast_to(Tensor([8, 0, 81, 121],"bool"), list[8,8,81,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 81, 121],"bool"), list[8,8,81,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 81, 121].  Tensor sizes: [8, 0, 81, 121]
2025-03-05 15:23:07.158749 test begin: paddle.broadcast_to(Tensor([8, 0, 81, 81],"bool"), list[8,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 81, 81],"bool"), list[8,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 81, 81].  Tensor sizes: [8, 0, 81, 81]
2025-03-05 15:23:07.159278 test begin: paddle.broadcast_to(Tensor([8, 0, 82, 113],"bool"), list[8,8,82,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 82, 113],"bool"), list[8,8,82,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 82, 113].  Tensor sizes: [8, 0, 82, 113]
2025-03-05 15:23:07.159800 test begin: paddle.broadcast_to(Tensor([8, 0, 82, 121],"bool"), list[8,8,82,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 82, 121],"bool"), list[8,8,82,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 82, 121].  Tensor sizes: [8, 0, 82, 121]
2025-03-05 15:23:07.160323 test begin: paddle.broadcast_to(Tensor([8, 0, 82, 82],"bool"), list[8,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 82, 82],"bool"), list[8,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 82, 82].  Tensor sizes: [8, 0, 82, 82]
2025-03-05 15:23:07.160838 test begin: paddle.broadcast_to(Tensor([8, 0, 83, 113],"bool"), list[8,8,83,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 83, 113],"bool"), list[8,8,83,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 83, 113].  Tensor sizes: [8, 0, 83, 113]
2025-03-05 15:23:07.161343 test begin: paddle.broadcast_to(Tensor([8, 0, 83, 121],"bool"), list[8,8,83,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 83, 121],"bool"), list[8,8,83,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 83, 121].  Tensor sizes: [8, 0, 83, 121]
2025-03-05 15:23:07.161852 test begin: paddle.broadcast_to(Tensor([8, 0, 83, 83],"bool"), list[8,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 83, 83],"bool"), list[8,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 83, 83].  Tensor sizes: [8, 0, 83, 83]
2025-03-05 15:23:07.162355 test begin: paddle.broadcast_to(Tensor([8, 0, 84, 113],"bool"), list[8,8,84,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 84, 113],"bool"), list[8,8,84,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 84, 113].  Tensor sizes: [8, 0, 84, 113]
2025-03-05 15:23:07.162895 test begin: paddle.broadcast_to(Tensor([8, 0, 84, 121],"bool"), list[8,8,84,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 84, 121],"bool"), list[8,8,84,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 84, 121].  Tensor sizes: [8, 0, 84, 121]
2025-03-05 15:23:07.163511 test begin: paddle.broadcast_to(Tensor([8, 0, 84, 84],"bool"), list[8,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 84, 84],"bool"), list[8,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 84, 84].  Tensor sizes: [8, 0, 84, 84]
2025-03-05 15:23:07.164116 test begin: paddle.broadcast_to(Tensor([8, 0, 85, 113],"bool"), list[8,8,85,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 85, 113],"bool"), list[8,8,85,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 85, 113].  Tensor sizes: [8, 0, 85, 113]
2025-03-05 15:23:07.164647 test begin: paddle.broadcast_to(Tensor([8, 0, 85, 121],"bool"), list[8,8,85,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 85, 121],"bool"), list[8,8,85,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 85, 121].  Tensor sizes: [8, 0, 85, 121]
2025-03-05 15:23:07.165156 test begin: paddle.broadcast_to(Tensor([8, 0, 85, 85],"bool"), list[8,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 85, 85],"bool"), list[8,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 85, 85].  Tensor sizes: [8, 0, 85, 85]
2025-03-05 15:23:07.165684 test begin: paddle.broadcast_to(Tensor([8, 0, 86, 113],"bool"), list[8,8,86,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 86, 113],"bool"), list[8,8,86,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 86, 113].  Tensor sizes: [8, 0, 86, 113]
2025-03-05 15:23:07.166234 test begin: paddle.broadcast_to(Tensor([8, 0, 86, 121],"bool"), list[8,8,86,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 86, 121],"bool"), list[8,8,86,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 86, 121].  Tensor sizes: [8, 0, 86, 121]
2025-03-05 15:23:07.166777 test begin: paddle.broadcast_to(Tensor([8, 0, 86, 86],"bool"), list[8,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 86, 86],"bool"), list[8,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 86, 86].  Tensor sizes: [8, 0, 86, 86]
2025-03-05 15:23:07.167299 test begin: paddle.broadcast_to(Tensor([8, 0, 87, 113],"bool"), list[8,8,87,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 87, 113],"bool"), list[8,8,87,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 87, 113].  Tensor sizes: [8, 0, 87, 113]
2025-03-05 15:23:07.167820 test begin: paddle.broadcast_to(Tensor([8, 0, 87, 121],"bool"), list[8,8,87,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 87, 121],"bool"), list[8,8,87,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 87, 121].  Tensor sizes: [8, 0, 87, 121]
2025-03-05 15:23:07.168334 test begin: paddle.broadcast_to(Tensor([8, 0, 87, 87],"bool"), list[8,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 87, 87],"bool"), list[8,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 87, 87].  Tensor sizes: [8, 0, 87, 87]
2025-03-05 15:23:07.168859 test begin: paddle.broadcast_to(Tensor([8, 0, 88, 113],"bool"), list[8,8,88,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 88, 113],"bool"), list[8,8,88,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 88, 113].  Tensor sizes: [8, 0, 88, 113]
2025-03-05 15:23:07.169371 test begin: paddle.broadcast_to(Tensor([8, 0, 88, 121],"bool"), list[8,8,88,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 88, 121],"bool"), list[8,8,88,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 88, 121].  Tensor sizes: [8, 0, 88, 121]
2025-03-05 15:23:07.169883 test begin: paddle.broadcast_to(Tensor([8, 0, 88, 88],"bool"), list[8,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 88, 88],"bool"), list[8,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 88, 88].  Tensor sizes: [8, 0, 88, 88]
2025-03-05 15:23:07.170401 test begin: paddle.broadcast_to(Tensor([8, 0, 89, 113],"bool"), list[8,8,89,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 89, 113],"bool"), list[8,8,89,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 89, 113].  Tensor sizes: [8, 0, 89, 113]
2025-03-05 15:23:07.170916 test begin: paddle.broadcast_to(Tensor([8, 0, 89, 121],"bool"), list[8,8,89,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 89, 121],"bool"), list[8,8,89,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 89, 121].  Tensor sizes: [8, 0, 89, 121]
2025-03-05 15:23:07.171428 test begin: paddle.broadcast_to(Tensor([8, 0, 89, 89],"bool"), list[8,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 89, 89],"bool"), list[8,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 89, 89].  Tensor sizes: [8, 0, 89, 89]
2025-03-05 15:23:07.172009 test begin: paddle.broadcast_to(Tensor([8, 0, 9, 113],"bool"), list[8,8,9,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 9, 113],"bool"), list[8,8,9,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 9, 113].  Tensor sizes: [8, 0, 9, 113]
2025-03-05 15:23:07.172535 test begin: paddle.broadcast_to(Tensor([8, 0, 9, 121],"bool"), list[8,8,9,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 9, 121],"bool"), list[8,8,9,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 9, 121].  Tensor sizes: [8, 0, 9, 121]
2025-03-05 15:23:07.173057 test begin: paddle.broadcast_to(Tensor([8, 0, 9, 33],"bool"), list[8,8,9,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 9, 33],"bool"), list[8,8,9,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 9, 33].  Tensor sizes: [8, 0, 9, 33]
2025-03-05 15:23:07.173556 test begin: paddle.broadcast_to(Tensor([8, 0, 9, 9],"bool"), list[8,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 9, 9],"bool"), list[8,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 9, 9].  Tensor sizes: [8, 0, 9, 9]
2025-03-05 15:23:07.174079 test begin: paddle.broadcast_to(Tensor([8, 0, 90, 113],"bool"), list[8,8,90,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 90, 113],"bool"), list[8,8,90,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 90, 113].  Tensor sizes: [8, 0, 90, 113]
2025-03-05 15:23:07.174574 test begin: paddle.broadcast_to(Tensor([8, 0, 90, 121],"bool"), list[8,8,90,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 90, 121],"bool"), list[8,8,90,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 90, 121].  Tensor sizes: [8, 0, 90, 121]
2025-03-05 15:23:07.175120 test begin: paddle.broadcast_to(Tensor([8, 0, 90, 90],"bool"), list[8,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 90, 90],"bool"), list[8,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 90, 90].  Tensor sizes: [8, 0, 90, 90]
2025-03-05 15:23:07.175743 test begin: paddle.broadcast_to(Tensor([8, 0, 91, 113],"bool"), list[8,8,91,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 91, 113],"bool"), list[8,8,91,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 91, 113].  Tensor sizes: [8, 0, 91, 113]
2025-03-05 15:23:07.176996 test begin: paddle.broadcast_to(Tensor([8, 0, 91, 121],"bool"), list[8,8,91,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 91, 121],"bool"), list[8,8,91,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 91, 121].  Tensor sizes: [8, 0, 91, 121]
2025-03-05 15:23:07.177783 test begin: paddle.broadcast_to(Tensor([8, 0, 91, 91],"bool"), list[8,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 91, 91],"bool"), list[8,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 91, 91].  Tensor sizes: [8, 0, 91, 91]
2025-03-05 15:23:07.178423 test begin: paddle.broadcast_to(Tensor([8, 0, 92, 113],"bool"), list[8,8,92,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 92, 113],"bool"), list[8,8,92,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 92, 113].  Tensor sizes: [8, 0, 92, 113]
2025-03-05 15:23:07.178976 test begin: paddle.broadcast_to(Tensor([8, 0, 92, 121],"bool"), list[8,8,92,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 92, 121],"bool"), list[8,8,92,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 92, 121].  Tensor sizes: [8, 0, 92, 121]
2025-03-05 15:23:07.179557 test begin: paddle.broadcast_to(Tensor([8, 0, 92, 92],"bool"), list[8,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 92, 92],"bool"), list[8,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 92, 92].  Tensor sizes: [8, 0, 92, 92]
2025-03-05 15:23:07.180110 test begin: paddle.broadcast_to(Tensor([8, 0, 93, 113],"bool"), list[8,8,93,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 93, 113],"bool"), list[8,8,93,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 93, 113].  Tensor sizes: [8, 0, 93, 113]
2025-03-05 15:23:07.180662 test begin: paddle.broadcast_to(Tensor([8, 0, 93, 121],"bool"), list[8,8,93,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 93, 121],"bool"), list[8,8,93,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 93, 121].  Tensor sizes: [8, 0, 93, 121]
2025-03-05 15:23:07.181196 test begin: paddle.broadcast_to(Tensor([8, 0, 93, 93],"bool"), list[8,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 93, 93],"bool"), list[8,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 93, 93].  Tensor sizes: [8, 0, 93, 93]
2025-03-05 15:23:07.181723 test begin: paddle.broadcast_to(Tensor([8, 0, 94, 113],"bool"), list[8,8,94,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 94, 113],"bool"), list[8,8,94,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 94, 113].  Tensor sizes: [8, 0, 94, 113]
2025-03-05 15:23:07.182252 test begin: paddle.broadcast_to(Tensor([8, 0, 94, 121],"bool"), list[8,8,94,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 94, 121],"bool"), list[8,8,94,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 94, 121].  Tensor sizes: [8, 0, 94, 121]
2025-03-05 15:23:07.182774 test begin: paddle.broadcast_to(Tensor([8, 0, 94, 94],"bool"), list[8,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 94, 94],"bool"), list[8,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 94, 94].  Tensor sizes: [8, 0, 94, 94]
2025-03-05 15:23:07.183291 test begin: paddle.broadcast_to(Tensor([8, 0, 95, 113],"bool"), list[8,8,95,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 95, 113],"bool"), list[8,8,95,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 95, 113].  Tensor sizes: [8, 0, 95, 113]
2025-03-05 15:23:07.183805 test begin: paddle.broadcast_to(Tensor([8, 0, 95, 121],"bool"), list[8,8,95,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 95, 121],"bool"), list[8,8,95,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 95, 121].  Tensor sizes: [8, 0, 95, 121]
2025-03-05 15:23:07.184345 test begin: paddle.broadcast_to(Tensor([8, 0, 95, 95],"bool"), list[8,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 95, 95],"bool"), list[8,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 95, 95].  Tensor sizes: [8, 0, 95, 95]
2025-03-05 15:23:07.184873 test begin: paddle.broadcast_to(Tensor([8, 0, 96, 113],"bool"), list[8,8,96,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 96, 113],"bool"), list[8,8,96,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 96, 113].  Tensor sizes: [8, 0, 96, 113]
2025-03-05 15:23:07.185439 test begin: paddle.broadcast_to(Tensor([8, 0, 96, 121],"bool"), list[8,8,96,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 96, 121],"bool"), list[8,8,96,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 96, 121].  Tensor sizes: [8, 0, 96, 121]
2025-03-05 15:23:07.185988 test begin: paddle.broadcast_to(Tensor([8, 0, 96, 96],"bool"), list[8,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 96, 96],"bool"), list[8,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 96, 96].  Tensor sizes: [8, 0, 96, 96]
2025-03-05 15:23:07.186530 test begin: paddle.broadcast_to(Tensor([8, 0, 97, 113],"bool"), list[8,8,97,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 97, 113],"bool"), list[8,8,97,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 97, 113].  Tensor sizes: [8, 0, 97, 113]
2025-03-05 15:23:07.187173 test begin: paddle.broadcast_to(Tensor([8, 0, 97, 121],"bool"), list[8,8,97,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 97, 121],"bool"), list[8,8,97,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 97, 121].  Tensor sizes: [8, 0, 97, 121]
2025-03-05 15:23:07.187720 test begin: paddle.broadcast_to(Tensor([8, 0, 97, 97],"bool"), list[8,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 97, 97],"bool"), list[8,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 97, 97].  Tensor sizes: [8, 0, 97, 97]
2025-03-05 15:23:07.188258 test begin: paddle.broadcast_to(Tensor([8, 0, 98, 113],"bool"), list[8,8,98,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 98, 113],"bool"), list[8,8,98,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 98, 113].  Tensor sizes: [8, 0, 98, 113]
2025-03-05 15:23:07.188784 test begin: paddle.broadcast_to(Tensor([8, 0, 98, 121],"bool"), list[8,8,98,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 98, 121],"bool"), list[8,8,98,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 98, 121].  Tensor sizes: [8, 0, 98, 121]
2025-03-05 15:23:07.189293 test begin: paddle.broadcast_to(Tensor([8, 0, 98, 98],"bool"), list[8,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 98, 98],"bool"), list[8,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 98, 98].  Tensor sizes: [8, 0, 98, 98]
2025-03-05 15:23:07.189821 test begin: paddle.broadcast_to(Tensor([8, 0, 99, 113],"bool"), list[8,8,99,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 99, 113],"bool"), list[8,8,99,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 99, 113].  Tensor sizes: [8, 0, 99, 113]
2025-03-05 15:23:07.190357 test begin: paddle.broadcast_to(Tensor([8, 0, 99, 121],"bool"), list[8,8,99,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 99, 121],"bool"), list[8,8,99,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 99, 121].  Tensor sizes: [8, 0, 99, 121]
2025-03-05 15:23:07.190881 test begin: paddle.broadcast_to(Tensor([8, 0, 99, 99],"bool"), list[8,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([8, 0, 99, 99],"bool"), list[8,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 8, 99, 99].  Tensor sizes: [8, 0, 99, 99]
2025-03-05 15:23:07.191390 test begin: paddle.broadcast_to(Tensor([8, 0],"bool"), list[8,2,], )

[torch error] paddle.broadcast_to(Tensor([8, 0],"bool"), list[8,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 2].  Tensor sizes: [8, 0]
2025-03-05 15:23:07.191893 test begin: paddle.broadcast_to(Tensor([8, 0],"float32"), tuple(8,3,), )

[torch error] paddle.broadcast_to(Tensor([8, 0],"float32"), tuple(8,3,), ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 3].  Tensor sizes: [8, 0]
2025-03-05 15:23:07.193071 test begin: paddle.broadcast_to(Tensor([8, 0],"float32"), tuple(8,799,), )

[torch error] paddle.broadcast_to(Tensor([8, 0],"float32"), tuple(8,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 799].  Tensor sizes: [8, 0]
2025-03-05 15:23:07.193753 test begin: paddle.broadcast_to(Tensor([8, 0],"int64"), shape=list[8,500,], )

[torch error] paddle.broadcast_to(Tensor([8, 0],"int64"), shape=list[8,500,], ) 
 The expanded size of the tensor (500) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 500].  Tensor sizes: [8, 0]
2025-03-05 15:23:07.194463 test begin: paddle.broadcast_to(Tensor([8, 0],"int64"), tuple(8,1,), )

[torch error] paddle.broadcast_to(Tensor([8, 0],"int64"), tuple(8,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 1].  Tensor sizes: [8, 0]
2025-03-05 15:23:07.195120 test begin: paddle.broadcast_to(Tensor([8, 0],"int64"), tuple(8,799,), )

[torch error] paddle.broadcast_to(Tensor([8, 0],"int64"), tuple(8,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [8, 799].  Tensor sizes: [8, 0]
2025-03-05 15:23:07.195680 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 100],"bool"), list[8,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 100],"bool"), list[8,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 100, 100].  Tensor sizes: [8, 1, 0, 100]
2025-03-05 15:23:07.196221 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 101],"bool"), list[8,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 101],"bool"), list[8,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 101, 101].  Tensor sizes: [8, 1, 0, 101]
2025-03-05 15:23:07.196760 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 102],"bool"), list[8,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 102],"bool"), list[8,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 102, 102].  Tensor sizes: [8, 1, 0, 102]
2025-03-05 15:23:07.197286 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 103],"bool"), list[8,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 103],"bool"), list[8,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 103, 103].  Tensor sizes: [8, 1, 0, 103]
2025-03-05 15:23:07.197815 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 104],"bool"), list[8,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 104],"bool"), list[8,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 104, 104].  Tensor sizes: [8, 1, 0, 104]
2025-03-05 15:23:07.198333 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 105],"bool"), list[8,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 105],"bool"), list[8,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 105, 105].  Tensor sizes: [8, 1, 0, 105]
2025-03-05 15:23:07.198862 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 106],"bool"), list[8,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 106],"bool"), list[8,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 106, 106].  Tensor sizes: [8, 1, 0, 106]
2025-03-05 15:23:07.199377 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 107],"bool"), list[8,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 107],"bool"), list[8,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 107, 107].  Tensor sizes: [8, 1, 0, 107]
2025-03-05 15:23:07.199901 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 108],"bool"), list[8,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 108],"bool"), list[8,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 108, 108].  Tensor sizes: [8, 1, 0, 108]
2025-03-05 15:23:07.200404 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 109],"bool"), list[8,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 109],"bool"), list[8,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 109, 109].  Tensor sizes: [8, 1, 0, 109]
2025-03-05 15:23:07.200917 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 10],"bool"), list[8,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 10],"bool"), list[8,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 10, 10].  Tensor sizes: [8, 1, 0, 10]
2025-03-05 15:23:07.201426 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 110],"bool"), list[8,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 110],"bool"), list[8,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 110, 110].  Tensor sizes: [8, 1, 0, 110]
2025-03-05 15:23:07.201961 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 111],"bool"), list[8,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 111],"bool"), list[8,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 111, 111].  Tensor sizes: [8, 1, 0, 111]
2025-03-05 15:23:07.202476 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 112],"bool"), list[8,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 112],"bool"), list[8,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 112, 112].  Tensor sizes: [8, 1, 0, 112]
2025-03-05 15:23:07.203005 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,1,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,1,113,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 1, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.203520 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,10,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,10,113,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 10, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.204084 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,100,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,100,113,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 100, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.204596 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,101,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,101,113,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 101, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.205110 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,102,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,102,113,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 102, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.205623 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,103,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,103,113,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 103, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.206141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,104,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,104,113,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 104, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.206660 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,105,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,105,113,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 105, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.207176 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,106,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,106,113,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 106, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.207704 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,107,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,107,113,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 107, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.208217 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,108,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,108,113,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 108, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.208742 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,109,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,109,113,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 109, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.209248 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,11,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,11,113,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 11, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.209802 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,110,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,110,113,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 110, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.210319 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,111,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,111,113,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 111, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.210840 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,112,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,112,113,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 112, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.211449 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 113, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.211973 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,114,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,114,113,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 114, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.212504 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,115,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,115,113,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 115, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.213027 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,116,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,116,113,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 116, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.213530 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,117,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,117,113,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 117, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.214056 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,118,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,118,113,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 118, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.214553 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,119,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,119,113,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 119, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.215065 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,12,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,12,113,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 12, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.215563 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,120,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,120,113,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 120, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.216083 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,121,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,121,113,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 121, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.216580 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,122,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,122,113,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 122, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.217101 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,123,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,123,113,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 123, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.217623 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,124,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,124,113,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 124, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.218132 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,125,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,125,113,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 125, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.218721 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,126,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,126,113,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 126, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.219288 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,127,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,127,113,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 127, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.219815 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,128,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,128,113,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 128, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.220324 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,129,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,129,113,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 129, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.220858 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,13,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,13,113,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 13, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.221375 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,130,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,130,113,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 130, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.221888 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,131,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,131,113,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 131, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.222407 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,132,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,132,113,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 132, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.222920 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,133,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,133,113,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 133, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.223450 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,134,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,134,113,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 134, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.224022 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,135,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,135,113,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 135, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.224567 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,136,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,136,113,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 136, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.225122 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,137,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,137,113,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 137, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.225677 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,138,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,138,113,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 138, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.226220 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,139,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,139,113,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 139, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.226767 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,14,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,14,113,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 14, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.227313 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,140,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,140,113,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 140, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.227864 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,141,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,141,113,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 141, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.228402 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,142,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,142,113,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 142, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.228970 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,143,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,143,113,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 143, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.229500 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,144,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,144,113,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 144, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.230038 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,145,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,145,113,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 145, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.230561 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,146,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,146,113,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 146, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.231085 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,147,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,147,113,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 147, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.231682 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,148,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,148,113,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 148, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.232233 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,149,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,149,113,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 149, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.232785 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,15,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,15,113,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 15, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.233323 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,150,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,150,113,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 150, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.233855 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,151,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,151,113,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 151, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.234399 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,152,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,152,113,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 152, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.234943 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,153,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,153,113,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 153, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.235479 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,154,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,154,113,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 154, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.236040 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,155,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,155,113,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 155, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.236596 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,156,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,156,113,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 156, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.237140 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,157,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,157,113,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 157, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.237704 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,158,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,158,113,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 158, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.238246 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,159,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,159,113,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 159, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.238811 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,16,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,16,113,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 16, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.239357 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,160,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,160,113,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 160, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.239923 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,161,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,161,113,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 161, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.240465 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,162,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,162,113,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 162, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.241008 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,163,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,163,113,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 163, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.241554 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,164,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,164,113,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 164, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.242104 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,165,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,165,113,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 165, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.242758 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,166,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,166,113,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 166, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.243313 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,167,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,167,113,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 167, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.243918 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,168,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,168,113,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 168, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.244874 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,169,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,169,113,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 169, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.245516 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,17,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,17,113,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 17, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.246141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,170,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,170,113,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 170, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.246772 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,171,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,171,113,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 171, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.247375 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,172,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,172,113,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 172, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.247987 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,173,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,173,113,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 173, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.248705 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,174,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,174,113,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 174, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.249337 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,175,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,175,113,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 175, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.249953 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,176,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,176,113,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 176, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.250556 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,177,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,177,113,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 177, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.251175 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,178,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,178,113,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 178, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.251890 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,179,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,179,113,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 179, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.252500 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,18,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,18,113,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 18, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.253110 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,180,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,180,113,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 180, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.253721 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,181,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,181,113,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 181, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.254319 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,182,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,182,113,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 182, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.254945 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,183,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,183,113,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 183, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.255548 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,184,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,184,113,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 184, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.256163 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,185,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,185,113,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 185, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.256803 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,186,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,186,113,], ) 
 The expanded size of the tensor (186) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 186, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.257548 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,187,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,187,113,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 187, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.258183 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,188,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,188,113,], ) 
 The expanded size of the tensor (188) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 188, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.258784 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,189,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,189,113,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 189, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.259375 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,19,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,19,113,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 19, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.259974 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,190,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,190,113,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 190, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.260637 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,191,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,191,113,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 191, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.261350 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,192,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,192,113,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 192, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.262014 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,193,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,193,113,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 193, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.262611 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,194,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,194,113,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 194, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.263149 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,195,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,195,113,], ) 
 The expanded size of the tensor (195) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 195, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.263669 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,196,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,196,113,], ) 
 The expanded size of the tensor (196) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 196, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.264176 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,197,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,197,113,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 197, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.264687 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,198,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,198,113,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 198, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.265196 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,199,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,199,113,], ) 
 The expanded size of the tensor (199) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 199, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.265706 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,2,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,2,113,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 2, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.266242 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,20,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,20,113,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 20, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.266937 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,200,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,200,113,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 200, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.267560 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,201,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,201,113,], ) 
 The expanded size of the tensor (201) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 201, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.268116 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,202,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,202,113,], ) 
 The expanded size of the tensor (202) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 202, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.268649 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,203,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,203,113,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 203, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.269172 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,204,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,204,113,], ) 
 The expanded size of the tensor (204) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 204, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.269700 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,205,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,205,113,], ) 
 The expanded size of the tensor (205) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 205, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.270211 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,206,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,206,113,], ) 
 The expanded size of the tensor (206) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 206, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.270764 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,207,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,207,113,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 207, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.271317 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,208,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,208,113,], ) 
 The expanded size of the tensor (208) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 208, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.271840 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,209,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,209,113,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 209, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.272357 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,21,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,21,113,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 21, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.272888 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,210,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,210,113,], ) 
 The expanded size of the tensor (210) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 210, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.273418 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,211,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,211,113,], ) 
 The expanded size of the tensor (211) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 211, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.273953 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,212,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,212,113,], ) 
 The expanded size of the tensor (212) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 212, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.274462 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,213,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,213,113,], ) 
 The expanded size of the tensor (213) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 213, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.274983 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,214,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,214,113,], ) 
 The expanded size of the tensor (214) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 214, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.275494 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,215,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,215,113,], ) 
 The expanded size of the tensor (215) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 215, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.276082 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,216,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,216,113,], ) 
 The expanded size of the tensor (216) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 216, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.276607 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,217,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,217,113,], ) 
 The expanded size of the tensor (217) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 217, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.277152 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,218,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,218,113,], ) 
 The expanded size of the tensor (218) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 218, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.277672 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,219,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,219,113,], ) 
 The expanded size of the tensor (219) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 219, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.278179 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,22,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,22,113,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 22, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.278692 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,220,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,220,113,], ) 
 The expanded size of the tensor (220) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 220, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.279194 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,221,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,221,113,], ) 
 The expanded size of the tensor (221) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 221, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.279711 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,222,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,222,113,], ) 
 The expanded size of the tensor (222) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 222, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.280215 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,223,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,223,113,], ) 
 The expanded size of the tensor (223) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 223, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.280724 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,224,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,224,113,], ) 
 The expanded size of the tensor (224) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 224, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.281229 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,225,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,225,113,], ) 
 The expanded size of the tensor (225) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 225, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.281753 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,226,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,226,113,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 226, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.282306 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,227,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,227,113,], ) 
 The expanded size of the tensor (227) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 227, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.283081 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,228,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,228,113,], ) 
 The expanded size of the tensor (228) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 228, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.284508 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,229,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,229,113,], ) 
 The expanded size of the tensor (229) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 229, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.285131 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,23,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,23,113,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 23, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.285736 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,230,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,230,113,], ) 
 The expanded size of the tensor (230) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 230, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.286335 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,231,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,231,113,], ) 
 The expanded size of the tensor (231) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 231, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.286959 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,232,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,232,113,], ) 
 The expanded size of the tensor (232) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 232, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.287556 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,233,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,233,113,], ) 
 The expanded size of the tensor (233) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 233, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.288152 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,234,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,234,113,], ) 
 The expanded size of the tensor (234) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 234, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.288760 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,235,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,235,113,], ) 
 The expanded size of the tensor (235) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 235, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.289344 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,236,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,236,113,], ) 
 The expanded size of the tensor (236) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 236, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.290009 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,237,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,237,113,], ) 
 The expanded size of the tensor (237) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 237, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.290628 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,238,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,238,113,], ) 
 The expanded size of the tensor (238) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 238, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.291262 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,239,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,239,113,], ) 
 The expanded size of the tensor (239) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 239, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.291865 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,24,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,24,113,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 24, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.292391 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,240,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,240,113,], ) 
 The expanded size of the tensor (240) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 240, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.292913 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,241,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,241,113,], ) 
 The expanded size of the tensor (241) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 241, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.293436 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,242,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,242,113,], ) 
 The expanded size of the tensor (242) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 242, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.293955 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,243,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,243,113,], ) 
 The expanded size of the tensor (243) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 243, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.294461 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,244,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,244,113,], ) 
 The expanded size of the tensor (244) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 244, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.294984 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,245,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,245,113,], ) 
 The expanded size of the tensor (245) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 245, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.295588 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,246,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,246,113,], ) 
 The expanded size of the tensor (246) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 246, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.296116 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,247,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,247,113,], ) 
 The expanded size of the tensor (247) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 247, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.296664 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,248,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,248,113,], ) 
 The expanded size of the tensor (248) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 248, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.297215 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,249,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,249,113,], ) 
 The expanded size of the tensor (249) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 249, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.297745 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,25,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,25,113,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 25, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.298261 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,250,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,250,113,], ) 
 The expanded size of the tensor (250) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 250, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.298780 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,251,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,251,113,], ) 
 The expanded size of the tensor (251) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 251, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.299295 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,252,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,252,113,], ) 
 The expanded size of the tensor (252) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 252, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.299842 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,253,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,253,113,], ) 
 The expanded size of the tensor (253) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 253, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.300398 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,254,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,254,113,], ) 
 The expanded size of the tensor (254) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 254, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.300973 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,255,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,255,113,], ) 
 The expanded size of the tensor (255) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 255, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.301954 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,256,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,256,113,], ) 
 The expanded size of the tensor (256) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 256, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.302520 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,257,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,257,113,], ) 
 The expanded size of the tensor (257) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 257, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.303075 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,258,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,258,113,], ) 
 The expanded size of the tensor (258) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 258, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.303617 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,259,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,259,113,], ) 
 The expanded size of the tensor (259) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 259, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.304140 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,26,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,26,113,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 26, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.304674 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,260,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,260,113,], ) 
 The expanded size of the tensor (260) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 260, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.305199 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,261,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,261,113,], ) 
 The expanded size of the tensor (261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 261, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.305726 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,262,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,262,113,], ) 
 The expanded size of the tensor (262) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 262, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.306243 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,263,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,263,113,], ) 
 The expanded size of the tensor (263) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 263, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.306835 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,264,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,264,113,], ) 
 The expanded size of the tensor (264) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 264, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.307424 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,265,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,265,113,], ) 
 The expanded size of the tensor (265) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 265, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.308012 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,266,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,266,113,], ) 
 The expanded size of the tensor (266) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 266, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.308595 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,267,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,267,113,], ) 
 The expanded size of the tensor (267) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 267, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.309159 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,268,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,268,113,], ) 
 The expanded size of the tensor (268) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 268, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.309693 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,269,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,269,113,], ) 
 The expanded size of the tensor (269) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 269, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.310196 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,27,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,27,113,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 27, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.310713 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,270,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,270,113,], ) 
 The expanded size of the tensor (270) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 270, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.311234 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,271,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,271,113,], ) 
 The expanded size of the tensor (271) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 271, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.311844 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,272,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,272,113,], ) 
 The expanded size of the tensor (272) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 272, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.312375 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,273,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,273,113,], ) 
 The expanded size of the tensor (273) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 273, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.312907 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,274,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,274,113,], ) 
 The expanded size of the tensor (274) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 274, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.313411 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,275,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,275,113,], ) 
 The expanded size of the tensor (275) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 275, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.314007 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,276,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,276,113,], ) 
 The expanded size of the tensor (276) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 276, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.314616 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,277,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,277,113,], ) 
 The expanded size of the tensor (277) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 277, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.315141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,278,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,278,113,], ) 
 The expanded size of the tensor (278) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 278, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.315673 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,279,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,279,113,], ) 
 The expanded size of the tensor (279) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 279, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.316178 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,28,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,28,113,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 28, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.316685 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,280,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,280,113,], ) 
 The expanded size of the tensor (280) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 280, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.317192 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,281,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,281,113,], ) 
 The expanded size of the tensor (281) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 281, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.317704 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,282,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,282,113,], ) 
 The expanded size of the tensor (282) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 282, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.318204 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,283,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,283,113,], ) 
 The expanded size of the tensor (283) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 283, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.318720 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,284,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,284,113,], ) 
 The expanded size of the tensor (284) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 284, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.319218 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,285,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,285,113,], ) 
 The expanded size of the tensor (285) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 285, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.319758 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,286,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,286,113,], ) 
 The expanded size of the tensor (286) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 286, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.320265 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,287,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,287,113,], ) 
 The expanded size of the tensor (287) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 287, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.320771 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,288,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,288,113,], ) 
 The expanded size of the tensor (288) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 288, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.321305 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,289,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,289,113,], ) 
 The expanded size of the tensor (289) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 289, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.321822 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,29,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,29,113,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 29, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.322333 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,290,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,290,113,], ) 
 The expanded size of the tensor (290) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 290, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.322846 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,291,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,291,113,], ) 
 The expanded size of the tensor (291) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 291, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.323357 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,292,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,292,113,], ) 
 The expanded size of the tensor (292) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 292, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.323880 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,293,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,293,113,], ) 
 The expanded size of the tensor (293) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 293, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.324386 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,3,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,3,113,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 3, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.324929 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,30,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,30,113,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 30, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.325445 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,31,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,31,113,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 31, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.325983 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,32,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,32,113,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 32, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.326501 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,33,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,33,113,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 33, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.327019 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,34,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,34,113,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 34, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.327965 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,35,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,35,113,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 35, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.328951 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,36,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,36,113,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 36, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.329686 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,37,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,37,113,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 37, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.330409 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,38,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,38,113,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 38, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.331135 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,39,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,39,113,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 39, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.331729 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,4,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,4,113,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 4, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.332276 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,40,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,40,113,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 40, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.340417 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,41,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,41,113,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 41, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.344365 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,42,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,42,113,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 42, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.344968 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,43,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,43,113,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 43, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.345508 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,44,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,44,113,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 44, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.346066 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,45,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,45,113,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 45, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.346610 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,46,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,46,113,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 46, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.347182 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,47,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,47,113,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 47, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.347748 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,48,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,48,113,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 48, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.348292 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,49,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,49,113,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 49, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.348900 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,5,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,5,113,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 5, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.349467 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,50,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,50,113,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 50, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.350006 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,51,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,51,113,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 51, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.350533 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,52,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,52,113,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 52, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.351066 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,53,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,53,113,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 53, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.351594 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,54,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,54,113,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 54, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.352196 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,55,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,55,113,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 55, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.352739 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,56,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,56,113,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 56, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.353263 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,57,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,57,113,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 57, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.353792 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,58,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,58,113,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 58, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.354313 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,59,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,59,113,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 59, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.354837 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,6,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,6,113,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 6, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.355357 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,60,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,60,113,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 60, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.355874 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,61,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,61,113,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 61, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.356389 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,62,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,62,113,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 62, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.356925 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,63,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,63,113,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 63, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.357442 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,64,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,64,113,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 64, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.357974 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,65,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,65,113,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 65, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.358519 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,66,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,66,113,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 66, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.359092 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,67,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,67,113,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 67, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.359926 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,68,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,68,113,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 68, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.360567 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,69,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,69,113,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 69, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.361115 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,7,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,7,113,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 7, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.361727 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,70,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,70,113,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 70, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.362321 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,71,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,71,113,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 71, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.366443 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,72,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,72,113,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 72, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.372239 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,73,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,73,113,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 73, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.373029 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,74,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,74,113,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 74, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.373767 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,75,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,75,113,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 75, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.375022 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,76,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,76,113,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 76, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.377613 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,77,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,77,113,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 77, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.378334 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,78,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,78,113,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 78, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.379062 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,79,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,79,113,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 79, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.379575 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,8,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,8,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 8, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.380093 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,80,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,80,113,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 80, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.382752 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,81,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,81,113,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 81, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.383318 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,82,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,82,113,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 82, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.383850 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,83,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,83,113,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 83, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.384368 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,84,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,84,113,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 84, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.384876 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,85,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,85,113,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 85, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.385446 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,86,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,86,113,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 86, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.385972 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,87,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,87,113,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 87, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.386490 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,88,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,88,113,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 88, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.387020 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,89,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,89,113,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 89, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.387527 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,9,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,9,113,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 9, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.388051 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,90,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,90,113,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 90, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.388556 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,91,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,91,113,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 91, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.389092 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,92,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,92,113,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 92, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.389629 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,93,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,93,113,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 93, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.390147 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,94,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,94,113,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 94, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.390691 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,95,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,95,113,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 95, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.391194 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,96,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,96,113,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 96, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.391724 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,97,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,97,113,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 97, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.392223 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,98,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,98,113,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 98, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.392739 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,99,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 113],"bool"), list[8,8,99,113,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 99, 113].  Tensor sizes: [8, 1, 0, 113]
2025-03-05 15:23:07.393243 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 114],"bool"), list[8,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 114],"bool"), list[8,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 114, 114].  Tensor sizes: [8, 1, 0, 114]
2025-03-05 15:23:07.393858 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 115],"bool"), list[8,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 115],"bool"), list[8,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 115, 115].  Tensor sizes: [8, 1, 0, 115]
2025-03-05 15:23:07.394371 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 116],"bool"), list[8,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 116],"bool"), list[8,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 116, 116].  Tensor sizes: [8, 1, 0, 116]
2025-03-05 15:23:07.394879 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 117],"bool"), list[8,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 117],"bool"), list[8,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 117, 117].  Tensor sizes: [8, 1, 0, 117]
2025-03-05 15:23:07.395518 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 118],"bool"), list[8,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 118],"bool"), list[8,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 118, 118].  Tensor sizes: [8, 1, 0, 118]
2025-03-05 15:23:07.396808 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 119],"bool"), list[8,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 119],"bool"), list[8,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 119, 119].  Tensor sizes: [8, 1, 0, 119]
2025-03-05 15:23:07.397515 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 11],"bool"), list[8,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 11],"bool"), list[8,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 11, 11].  Tensor sizes: [8, 1, 0, 11]
2025-03-05 15:23:07.398141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 120],"bool"), list[8,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 120],"bool"), list[8,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 120, 120].  Tensor sizes: [8, 1, 0, 120]
2025-03-05 15:23:07.398743 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,1,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,1,121,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 1, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.399315 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,10,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,10,121,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 10, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.399870 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,100,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,100,121,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 100, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.400449 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,101,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,101,121,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 101, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.401011 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,102,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,102,121,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 102, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.401605 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,103,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,103,121,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 103, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.402153 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,104,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,104,121,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 104, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.402697 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,105,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,105,121,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 105, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.403255 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,106,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,106,121,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 106, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.403806 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,107,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,107,121,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 107, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.404388 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,108,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,108,121,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 108, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.404994 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,109,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,109,121,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 109, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.405567 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,11,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,11,121,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 11, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.406167 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,110,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,110,121,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 110, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.406744 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,111,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,111,121,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 111, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.407303 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,112,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,112,121,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 112, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.407856 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,113,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,113,121,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 113, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.408397 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,114,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,114,121,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 114, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.408952 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,115,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,115,121,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 115, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.409499 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,116,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,116,121,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 116, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.410040 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,117,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,117,121,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 117, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.410618 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,118,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,118,121,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 118, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.411184 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,119,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,119,121,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 119, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.411754 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,12,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,12,121,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 12, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.412296 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,120,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,120,121,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 120, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.412848 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 121, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.413395 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,122,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,122,121,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 122, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.413940 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,123,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,123,121,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 123, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.414470 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,124,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,124,121,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 124, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.415013 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,125,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,125,121,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 125, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.415556 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,126,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,126,121,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 126, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.416119 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,127,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,127,121,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 127, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.416709 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,128,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,128,121,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 128, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.417275 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,129,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,129,121,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 129, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.417880 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,13,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,13,121,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 13, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.418429 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,130,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,130,121,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 130, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.418999 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,131,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,131,121,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 131, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.419549 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,132,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,132,121,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 132, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.420108 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,133,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,133,121,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 133, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.420650 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,134,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,134,121,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 134, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.421232 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,135,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,135,121,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 135, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.421782 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,136,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,136,121,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 136, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.422318 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,137,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,137,121,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 137, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.422851 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,138,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,138,121,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 138, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.423396 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,139,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,139,121,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 139, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.423975 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,14,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,14,121,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 14, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.424511 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,140,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,140,121,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 140, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.425064 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,141,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,141,121,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 141, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.425632 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,142,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,142,121,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 142, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.426170 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,143,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,143,121,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 143, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.426715 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,144,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,144,121,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 144, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.427260 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,145,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,145,121,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 145, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.427820 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,146,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,146,121,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 146, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.428371 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,147,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,147,121,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 147, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.428977 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,148,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,148,121,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 148, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.429509 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,149,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,149,121,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 149, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.430063 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,15,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,15,121,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 15, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.430603 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,150,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,150,121,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 150, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.431198 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,151,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,151,121,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 151, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.431775 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,152,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,152,121,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 152, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.432321 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,153,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,153,121,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 153, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.432847 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,154,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,154,121,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 154, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.433389 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,155,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,155,121,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 155, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.433951 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,156,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,156,121,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 156, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.434486 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,157,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,157,121,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 157, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.435042 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,158,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,158,121,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 158, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.435578 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,159,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,159,121,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 159, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.436220 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,16,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,16,121,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 16, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.436876 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,17,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,17,121,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 17, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.437504 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,18,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,18,121,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 18, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.438143 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,19,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,19,121,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 19, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.438772 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,2,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,2,121,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 2, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.439388 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,20,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,20,121,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 20, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.440071 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,21,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,21,121,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 21, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.440783 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,22,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,22,121,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 22, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.441432 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,23,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,23,121,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 23, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.442075 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,24,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,24,121,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 24, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.442669 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,25,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,25,121,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 25, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.443216 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,26,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,26,121,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 26, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.443764 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,27,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,27,121,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 27, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.444293 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,28,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,28,121,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 28, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.444835 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,29,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,29,121,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 29, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.445366 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,3,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,3,121,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 3, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.446470 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,30,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,30,121,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 30, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.447227 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,31,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,31,121,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 31, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.447901 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,32,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,32,121,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 32, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.448555 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,33,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,33,121,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 33, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.449200 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,34,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,34,121,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 34, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.449849 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,35,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,35,121,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 35, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.450899 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,36,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,36,121,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 36, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.451673 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,37,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,37,121,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 37, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.452238 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,38,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,38,121,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 38, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.452772 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,39,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,39,121,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 39, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.453290 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,4,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,4,121,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 4, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.453868 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,40,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,40,121,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 40, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.454538 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,41,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,41,121,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 41, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.455175 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,42,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,42,121,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 42, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.455752 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,43,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,43,121,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 43, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.456490 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,44,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,44,121,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 44, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.457153 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,45,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,45,121,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 45, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.457774 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,46,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,46,121,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 46, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.458340 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,47,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,47,121,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 47, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.458898 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,48,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,48,121,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 48, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.459446 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,49,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,49,121,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 49, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.459999 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,5,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,5,121,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 5, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.460559 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,50,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,50,121,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 50, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.461323 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,51,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,51,121,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 51, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.462005 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,52,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,52,121,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 52, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.462643 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,53,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,53,121,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 53, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.463391 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,54,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,54,121,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 54, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.464031 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,55,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,55,121,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 55, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.464561 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,56,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,56,121,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 56, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.465097 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,57,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,57,121,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 57, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.465685 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,58,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,58,121,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 58, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.466437 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,59,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,59,121,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 59, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.467089 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,6,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,6,121,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 6, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.467715 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,60,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,60,121,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 60, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.468353 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,61,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,61,121,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 61, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.468975 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,62,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,62,121,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 62, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.469678 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,63,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,63,121,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 63, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.470268 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,64,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,64,121,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 64, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.471168 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,65,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,65,121,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 65, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.471792 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,66,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,66,121,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 66, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.472354 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,67,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,67,121,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 67, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.472949 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,68,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,68,121,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 68, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.473475 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,69,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,69,121,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 69, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.474012 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,7,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,7,121,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 7, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.474522 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,70,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,70,121,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 70, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.475091 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,71,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,71,121,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 71, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.475625 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,72,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,72,121,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 72, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.476139 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,73,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,73,121,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 73, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.476656 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,74,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,74,121,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 74, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.477187 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,75,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,75,121,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 75, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.477713 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,76,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,76,121,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 76, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.478223 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,77,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,77,121,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 77, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.478751 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,78,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,78,121,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 78, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.479273 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,79,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,79,121,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 79, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.479797 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,8,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,8,121,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 8, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.480305 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,80,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,80,121,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 80, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.480821 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,81,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,81,121,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 81, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.481337 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,82,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,82,121,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 82, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.481847 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,83,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,83,121,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 83, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.482356 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,84,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,84,121,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 84, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.482859 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,85,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,85,121,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 85, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.483359 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,86,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,86,121,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 86, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.483876 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,87,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,87,121,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 87, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.484395 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,88,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,88,121,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 88, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.484901 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,89,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,89,121,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 89, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.485404 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,9,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,9,121,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 9, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.485925 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,90,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,90,121,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 90, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.486455 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,91,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,91,121,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 91, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.487023 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,92,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,92,121,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 92, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.487777 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,93,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,93,121,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 93, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.488385 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,94,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,94,121,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 94, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.488982 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,95,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,95,121,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 95, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.489569 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,96,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,96,121,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 96, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.490189 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,97,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,97,121,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 97, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.490787 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,98,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,98,121,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 98, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.491382 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,99,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 121],"bool"), list[8,8,99,121,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 99, 121].  Tensor sizes: [8, 1, 0, 121]
2025-03-05 15:23:07.491970 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 122],"bool"), list[8,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 122],"bool"), list[8,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 122, 122].  Tensor sizes: [8, 1, 0, 122]
2025-03-05 15:23:07.492609 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 123],"bool"), list[8,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 123],"bool"), list[8,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 123, 123].  Tensor sizes: [8, 1, 0, 123]
2025-03-05 15:23:07.493329 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 124],"bool"), list[8,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 124],"bool"), list[8,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 124, 124].  Tensor sizes: [8, 1, 0, 124]
2025-03-05 15:23:07.493984 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 125],"bool"), list[8,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 125],"bool"), list[8,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 125, 125].  Tensor sizes: [8, 1, 0, 125]
2025-03-05 15:23:07.494520 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 126],"bool"), list[8,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 126],"bool"), list[8,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 126, 126].  Tensor sizes: [8, 1, 0, 126]
2025-03-05 15:23:07.495640 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 127],"bool"), list[8,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 127],"bool"), list[8,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 127, 127].  Tensor sizes: [8, 1, 0, 127]
2025-03-05 15:23:07.496243 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 128],"bool"), list[8,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 128],"bool"), list[8,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 128, 128].  Tensor sizes: [8, 1, 0, 128]
2025-03-05 15:23:07.496764 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 129],"bool"), list[8,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 129],"bool"), list[8,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 129, 129].  Tensor sizes: [8, 1, 0, 129]
2025-03-05 15:23:07.497309 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 12],"bool"), list[8,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 12],"bool"), list[8,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 12, 12].  Tensor sizes: [8, 1, 0, 12]
2025-03-05 15:23:07.497832 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 130],"bool"), list[8,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 130],"bool"), list[8,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 130, 130].  Tensor sizes: [8, 1, 0, 130]
2025-03-05 15:23:07.498358 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 131],"bool"), list[8,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 131],"bool"), list[8,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 131, 131].  Tensor sizes: [8, 1, 0, 131]
2025-03-05 15:23:07.499116 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 132],"bool"), list[8,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 132],"bool"), list[8,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 132, 132].  Tensor sizes: [8, 1, 0, 132]
2025-03-05 15:23:07.499759 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 133],"bool"), list[8,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 133],"bool"), list[8,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 133, 133].  Tensor sizes: [8, 1, 0, 133]
2025-03-05 15:23:07.500635 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 134],"bool"), list[8,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 134],"bool"), list[8,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 134, 134].  Tensor sizes: [8, 1, 0, 134]
2025-03-05 15:23:07.501262 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 135],"bool"), list[8,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 135],"bool"), list[8,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 135, 135].  Tensor sizes: [8, 1, 0, 135]
2025-03-05 15:23:07.501882 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 136],"bool"), list[8,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 136],"bool"), list[8,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 136, 136].  Tensor sizes: [8, 1, 0, 136]
2025-03-05 15:23:07.502495 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 137],"bool"), list[8,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 137],"bool"), list[8,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 137, 137].  Tensor sizes: [8, 1, 0, 137]
2025-03-05 15:23:07.503104 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 138],"bool"), list[8,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 138],"bool"), list[8,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 138, 138].  Tensor sizes: [8, 1, 0, 138]
2025-03-05 15:23:07.503826 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 139],"bool"), list[8,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 139],"bool"), list[8,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 139, 139].  Tensor sizes: [8, 1, 0, 139]
2025-03-05 15:23:07.504480 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 13],"bool"), list[8,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 13],"bool"), list[8,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 13, 13].  Tensor sizes: [8, 1, 0, 13]
2025-03-05 15:23:07.505033 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 140],"bool"), list[8,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 140],"bool"), list[8,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 140, 140].  Tensor sizes: [8, 1, 0, 140]
2025-03-05 15:23:07.505579 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 141],"bool"), list[8,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 141],"bool"), list[8,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 141, 141].  Tensor sizes: [8, 1, 0, 141]
2025-03-05 15:23:07.506124 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 142],"bool"), list[8,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 142],"bool"), list[8,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 142, 142].  Tensor sizes: [8, 1, 0, 142]
2025-03-05 15:23:07.506723 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 143],"bool"), list[8,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 143],"bool"), list[8,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 143, 143].  Tensor sizes: [8, 1, 0, 143]
2025-03-05 15:23:07.507248 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 144],"bool"), list[8,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 144],"bool"), list[8,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 144, 144].  Tensor sizes: [8, 1, 0, 144]
2025-03-05 15:23:07.507786 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 145],"bool"), list[8,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 145],"bool"), list[8,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 145, 145].  Tensor sizes: [8, 1, 0, 145]
2025-03-05 15:23:07.508315 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 146],"bool"), list[8,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 146],"bool"), list[8,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 146, 146].  Tensor sizes: [8, 1, 0, 146]
2025-03-05 15:23:07.508891 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 147],"bool"), list[8,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 147],"bool"), list[8,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 147, 147].  Tensor sizes: [8, 1, 0, 147]
2025-03-05 15:23:07.509413 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 148],"bool"), list[8,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 148],"bool"), list[8,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 148, 148].  Tensor sizes: [8, 1, 0, 148]
2025-03-05 15:23:07.509942 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 149],"bool"), list[8,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 149],"bool"), list[8,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 149, 149].  Tensor sizes: [8, 1, 0, 149]
2025-03-05 15:23:07.510499 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 14],"bool"), list[8,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 14],"bool"), list[8,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 14, 14].  Tensor sizes: [8, 1, 0, 14]
2025-03-05 15:23:07.511090 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 150],"bool"), list[8,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 150],"bool"), list[8,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 150, 150].  Tensor sizes: [8, 1, 0, 150]
2025-03-05 15:23:07.511639 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 151],"bool"), list[8,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 151],"bool"), list[8,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 151, 151].  Tensor sizes: [8, 1, 0, 151]
2025-03-05 15:23:07.512172 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 152],"bool"), list[8,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 152],"bool"), list[8,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 152, 152].  Tensor sizes: [8, 1, 0, 152]
2025-03-05 15:23:07.512704 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 153],"bool"), list[8,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 153],"bool"), list[8,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 153, 153].  Tensor sizes: [8, 1, 0, 153]
2025-03-05 15:23:07.513220 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 154],"bool"), list[8,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 154],"bool"), list[8,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 154, 154].  Tensor sizes: [8, 1, 0, 154]
2025-03-05 15:23:07.513737 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 155],"bool"), list[8,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 155],"bool"), list[8,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 155, 155].  Tensor sizes: [8, 1, 0, 155]
2025-03-05 15:23:07.514242 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 156],"bool"), list[8,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 156],"bool"), list[8,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 156, 156].  Tensor sizes: [8, 1, 0, 156]
2025-03-05 15:23:07.514762 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 157],"bool"), list[8,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 157],"bool"), list[8,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 157, 157].  Tensor sizes: [8, 1, 0, 157]
2025-03-05 15:23:07.515269 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 158],"bool"), list[8,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 158],"bool"), list[8,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 158, 158].  Tensor sizes: [8, 1, 0, 158]
2025-03-05 15:23:07.515803 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 159],"bool"), list[8,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 159],"bool"), list[8,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 159, 159].  Tensor sizes: [8, 1, 0, 159]
2025-03-05 15:23:07.516317 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 15],"bool"), list[8,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 15],"bool"), list[8,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 15, 15].  Tensor sizes: [8, 1, 0, 15]
2025-03-05 15:23:07.516859 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 160],"bool"), list[8,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 160],"bool"), list[8,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 160, 160].  Tensor sizes: [8, 1, 0, 160]
2025-03-05 15:23:07.517387 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 161],"bool"), list[8,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 161],"bool"), list[8,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 161, 161].  Tensor sizes: [8, 1, 0, 161]
2025-03-05 15:23:07.517924 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 162],"bool"), list[8,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 162],"bool"), list[8,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 162, 162].  Tensor sizes: [8, 1, 0, 162]
2025-03-05 15:23:07.518436 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 163],"bool"), list[8,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 163],"bool"), list[8,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 163, 163].  Tensor sizes: [8, 1, 0, 163]
2025-03-05 15:23:07.519048 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 164],"bool"), list[8,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 164],"bool"), list[8,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 164, 164].  Tensor sizes: [8, 1, 0, 164]
2025-03-05 15:23:07.519778 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 165],"bool"), list[8,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 165],"bool"), list[8,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 165, 165].  Tensor sizes: [8, 1, 0, 165]
2025-03-05 15:23:07.520443 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 166],"bool"), list[8,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 166],"bool"), list[8,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 166, 166].  Tensor sizes: [8, 1, 0, 166]
2025-03-05 15:23:07.521067 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 167],"bool"), list[8,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 167],"bool"), list[8,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 167, 167].  Tensor sizes: [8, 1, 0, 167]
2025-03-05 15:23:07.521734 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 168],"bool"), list[8,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 168],"bool"), list[8,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 168, 168].  Tensor sizes: [8, 1, 0, 168]
2025-03-05 15:23:07.522363 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 169],"bool"), list[8,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 169],"bool"), list[8,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 169, 169].  Tensor sizes: [8, 1, 0, 169]
2025-03-05 15:23:07.523026 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 16],"bool"), list[8,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 16],"bool"), list[8,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 16, 16].  Tensor sizes: [8, 1, 0, 16]
2025-03-05 15:23:07.523687 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 170],"bool"), list[8,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 170],"bool"), list[8,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 170, 170].  Tensor sizes: [8, 1, 0, 170]
2025-03-05 15:23:07.524341 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 171],"bool"), list[8,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 171],"bool"), list[8,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 171, 171].  Tensor sizes: [8, 1, 0, 171]
2025-03-05 15:23:07.524907 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 172],"bool"), list[8,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 172],"bool"), list[8,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 172, 172].  Tensor sizes: [8, 1, 0, 172]
2025-03-05 15:23:07.525436 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 173],"bool"), list[8,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 173],"bool"), list[8,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 173, 173].  Tensor sizes: [8, 1, 0, 173]
2025-03-05 15:23:07.525971 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 174],"bool"), list[8,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 174],"bool"), list[8,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 174, 174].  Tensor sizes: [8, 1, 0, 174]
2025-03-05 15:23:07.526491 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 175],"bool"), list[8,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 175],"bool"), list[8,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 175, 175].  Tensor sizes: [8, 1, 0, 175]
2025-03-05 15:23:07.527072 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 176],"bool"), list[8,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 176],"bool"), list[8,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 176, 176].  Tensor sizes: [8, 1, 0, 176]
2025-03-05 15:23:07.527602 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 177],"bool"), list[8,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 177],"bool"), list[8,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 177, 177].  Tensor sizes: [8, 1, 0, 177]
2025-03-05 15:23:07.528112 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 178],"bool"), list[8,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 178],"bool"), list[8,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 178, 178].  Tensor sizes: [8, 1, 0, 178]
2025-03-05 15:23:07.528632 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 179],"bool"), list[8,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 179],"bool"), list[8,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 179, 179].  Tensor sizes: [8, 1, 0, 179]
2025-03-05 15:23:07.529141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 17],"bool"), list[8,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 17],"bool"), list[8,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 17, 17].  Tensor sizes: [8, 1, 0, 17]
2025-03-05 15:23:07.529662 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 180],"bool"), list[8,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 180],"bool"), list[8,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 180, 180].  Tensor sizes: [8, 1, 0, 180]
2025-03-05 15:23:07.530170 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 181],"bool"), list[8,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 181],"bool"), list[8,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 181, 181].  Tensor sizes: [8, 1, 0, 181]
2025-03-05 15:23:07.530699 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 182],"bool"), list[8,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 182],"bool"), list[8,8,182,182,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 182, 182].  Tensor sizes: [8, 1, 0, 182]
2025-03-05 15:23:07.531249 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 183],"bool"), list[8,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 183],"bool"), list[8,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 183, 183].  Tensor sizes: [8, 1, 0, 183]
2025-03-05 15:23:07.531826 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 184],"bool"), list[8,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 184],"bool"), list[8,8,184,184,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 184, 184].  Tensor sizes: [8, 1, 0, 184]
2025-03-05 15:23:07.532345 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 185],"bool"), list[8,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 185],"bool"), list[8,8,185,185,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 185, 185].  Tensor sizes: [8, 1, 0, 185]
2025-03-05 15:23:07.532871 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 186],"bool"), list[8,8,186,186,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 186],"bool"), list[8,8,186,186,], ) 
 The expanded size of the tensor (186) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 186, 186].  Tensor sizes: [8, 1, 0, 186]
2025-03-05 15:23:07.533382 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 187],"bool"), list[8,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 187],"bool"), list[8,8,187,187,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 187, 187].  Tensor sizes: [8, 1, 0, 187]
2025-03-05 15:23:07.533903 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 188],"bool"), list[8,8,188,188,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 188],"bool"), list[8,8,188,188,], ) 
 The expanded size of the tensor (188) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 188, 188].  Tensor sizes: [8, 1, 0, 188]
2025-03-05 15:23:07.534405 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 189],"bool"), list[8,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 189],"bool"), list[8,8,189,189,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 189, 189].  Tensor sizes: [8, 1, 0, 189]
2025-03-05 15:23:07.534923 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 18],"bool"), list[8,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 18],"bool"), list[8,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 18, 18].  Tensor sizes: [8, 1, 0, 18]
2025-03-05 15:23:07.535427 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 190],"bool"), list[8,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 190],"bool"), list[8,8,190,190,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 190, 190].  Tensor sizes: [8, 1, 0, 190]
2025-03-05 15:23:07.535952 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 191],"bool"), list[8,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 191],"bool"), list[8,8,191,191,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 191, 191].  Tensor sizes: [8, 1, 0, 191]
2025-03-05 15:23:07.536461 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 192],"bool"), list[8,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 192],"bool"), list[8,8,192,192,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 192, 192].  Tensor sizes: [8, 1, 0, 192]
2025-03-05 15:23:07.536974 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 193],"bool"), list[8,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 193],"bool"), list[8,8,193,193,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 193, 193].  Tensor sizes: [8, 1, 0, 193]
2025-03-05 15:23:07.537536 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 194],"bool"), list[8,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 194],"bool"), list[8,8,194,194,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 194, 194].  Tensor sizes: [8, 1, 0, 194]
2025-03-05 15:23:07.538063 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 195],"bool"), list[8,8,195,195,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 195],"bool"), list[8,8,195,195,], ) 
 The expanded size of the tensor (195) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 195, 195].  Tensor sizes: [8, 1, 0, 195]
2025-03-05 15:23:07.538709 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 196],"bool"), list[8,8,196,196,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 196],"bool"), list[8,8,196,196,], ) 
 The expanded size of the tensor (196) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 196, 196].  Tensor sizes: [8, 1, 0, 196]
2025-03-05 15:23:07.539322 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 197],"bool"), list[8,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 197],"bool"), list[8,8,197,197,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 197, 197].  Tensor sizes: [8, 1, 0, 197]
2025-03-05 15:23:07.539952 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 198],"bool"), list[8,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 198],"bool"), list[8,8,198,198,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 198, 198].  Tensor sizes: [8, 1, 0, 198]
2025-03-05 15:23:07.540684 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 199],"bool"), list[8,8,199,199,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 199],"bool"), list[8,8,199,199,], ) 
 The expanded size of the tensor (199) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 199, 199].  Tensor sizes: [8, 1, 0, 199]
2025-03-05 15:23:07.541366 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 19],"bool"), list[8,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 19],"bool"), list[8,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 19, 19].  Tensor sizes: [8, 1, 0, 19]
2025-03-05 15:23:07.544177 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 1],"bool"), list[8,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 1],"bool"), list[8,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 1, 1].  Tensor sizes: [8, 1, 0, 1]
2025-03-05 15:23:07.546063 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 200],"bool"), list[8,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 200],"bool"), list[8,8,200,200,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 200, 200].  Tensor sizes: [8, 1, 0, 200]
2025-03-05 15:23:07.546789 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 201],"bool"), list[8,8,201,201,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 201],"bool"), list[8,8,201,201,], ) 
 The expanded size of the tensor (201) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 201, 201].  Tensor sizes: [8, 1, 0, 201]
2025-03-05 15:23:07.547412 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 202],"bool"), list[8,8,202,202,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 202],"bool"), list[8,8,202,202,], ) 
 The expanded size of the tensor (202) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 202, 202].  Tensor sizes: [8, 1, 0, 202]
2025-03-05 15:23:07.548043 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 203],"bool"), list[8,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 203],"bool"), list[8,8,203,203,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 203, 203].  Tensor sizes: [8, 1, 0, 203]
2025-03-05 15:23:07.548610 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 204],"bool"), list[8,8,204,204,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 204],"bool"), list[8,8,204,204,], ) 
 The expanded size of the tensor (204) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 204, 204].  Tensor sizes: [8, 1, 0, 204]
2025-03-05 15:23:07.549126 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 205],"bool"), list[8,8,205,205,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 205],"bool"), list[8,8,205,205,], ) 
 The expanded size of the tensor (205) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 205, 205].  Tensor sizes: [8, 1, 0, 205]
2025-03-05 15:23:07.549647 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 206],"bool"), list[8,8,206,206,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 206],"bool"), list[8,8,206,206,], ) 
 The expanded size of the tensor (206) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 206, 206].  Tensor sizes: [8, 1, 0, 206]
2025-03-05 15:23:07.550176 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 207],"bool"), list[8,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 207],"bool"), list[8,8,207,207,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 207, 207].  Tensor sizes: [8, 1, 0, 207]
2025-03-05 15:23:07.550692 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 208],"bool"), list[8,8,208,208,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 208],"bool"), list[8,8,208,208,], ) 
 The expanded size of the tensor (208) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 208, 208].  Tensor sizes: [8, 1, 0, 208]
2025-03-05 15:23:07.551243 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 209],"bool"), list[8,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 209],"bool"), list[8,8,209,209,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 209, 209].  Tensor sizes: [8, 1, 0, 209]
2025-03-05 15:23:07.551770 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 20],"bool"), list[8,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 20],"bool"), list[8,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 20, 20].  Tensor sizes: [8, 1, 0, 20]
2025-03-05 15:23:07.552276 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 210],"bool"), list[8,8,210,210,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 210],"bool"), list[8,8,210,210,], ) 
 The expanded size of the tensor (210) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 210, 210].  Tensor sizes: [8, 1, 0, 210]
2025-03-05 15:23:07.552787 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 211],"bool"), list[8,8,211,211,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 211],"bool"), list[8,8,211,211,], ) 
 The expanded size of the tensor (211) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 211, 211].  Tensor sizes: [8, 1, 0, 211]
2025-03-05 15:23:07.553316 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 212],"bool"), list[8,8,212,212,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 212],"bool"), list[8,8,212,212,], ) 
 The expanded size of the tensor (212) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 212, 212].  Tensor sizes: [8, 1, 0, 212]
2025-03-05 15:23:07.553831 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 213],"bool"), list[8,8,213,213,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 213],"bool"), list[8,8,213,213,], ) 
 The expanded size of the tensor (213) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 213, 213].  Tensor sizes: [8, 1, 0, 213]
2025-03-05 15:23:07.554351 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 214],"bool"), list[8,8,214,214,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 214],"bool"), list[8,8,214,214,], ) 
 The expanded size of the tensor (214) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 214, 214].  Tensor sizes: [8, 1, 0, 214]
2025-03-05 15:23:07.554898 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 215],"bool"), list[8,8,215,215,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 215],"bool"), list[8,8,215,215,], ) 
 The expanded size of the tensor (215) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 215, 215].  Tensor sizes: [8, 1, 0, 215]
2025-03-05 15:23:07.555624 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 216],"bool"), list[8,8,216,216,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 216],"bool"), list[8,8,216,216,], ) 
 The expanded size of the tensor (216) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 216, 216].  Tensor sizes: [8, 1, 0, 216]
2025-03-05 15:23:07.556246 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 217],"bool"), list[8,8,217,217,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 217],"bool"), list[8,8,217,217,], ) 
 The expanded size of the tensor (217) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 217, 217].  Tensor sizes: [8, 1, 0, 217]
2025-03-05 15:23:07.556833 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 218],"bool"), list[8,8,218,218,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 218],"bool"), list[8,8,218,218,], ) 
 The expanded size of the tensor (218) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 218, 218].  Tensor sizes: [8, 1, 0, 218]
2025-03-05 15:23:07.557411 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 219],"bool"), list[8,8,219,219,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 219],"bool"), list[8,8,219,219,], ) 
 The expanded size of the tensor (219) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 219, 219].  Tensor sizes: [8, 1, 0, 219]
2025-03-05 15:23:07.558022 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 21],"bool"), list[8,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 21],"bool"), list[8,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 21, 21].  Tensor sizes: [8, 1, 0, 21]
2025-03-05 15:23:07.558632 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 220],"bool"), list[8,8,220,220,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 220],"bool"), list[8,8,220,220,], ) 
 The expanded size of the tensor (220) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 220, 220].  Tensor sizes: [8, 1, 0, 220]
2025-03-05 15:23:07.559220 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 221],"bool"), list[8,8,221,221,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 221],"bool"), list[8,8,221,221,], ) 
 The expanded size of the tensor (221) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 221, 221].  Tensor sizes: [8, 1, 0, 221]
2025-03-05 15:23:07.559956 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 222],"bool"), list[8,8,222,222,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 222],"bool"), list[8,8,222,222,], ) 
 The expanded size of the tensor (222) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 222, 222].  Tensor sizes: [8, 1, 0, 222]
2025-03-05 15:23:07.560539 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 223],"bool"), list[8,8,223,223,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 223],"bool"), list[8,8,223,223,], ) 
 The expanded size of the tensor (223) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 223, 223].  Tensor sizes: [8, 1, 0, 223]
2025-03-05 15:23:07.561186 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 224],"bool"), list[8,8,224,224,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 224],"bool"), list[8,8,224,224,], ) 
 The expanded size of the tensor (224) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 224, 224].  Tensor sizes: [8, 1, 0, 224]
2025-03-05 15:23:07.561837 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 225],"bool"), list[8,8,225,225,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 225],"bool"), list[8,8,225,225,], ) 
 The expanded size of the tensor (225) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 225, 225].  Tensor sizes: [8, 1, 0, 225]
2025-03-05 15:23:07.562397 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 226],"bool"), list[8,8,226,226,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 226],"bool"), list[8,8,226,226,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 226, 226].  Tensor sizes: [8, 1, 0, 226]
2025-03-05 15:23:07.562943 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 227],"bool"), list[8,8,227,227,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 227],"bool"), list[8,8,227,227,], ) 
 The expanded size of the tensor (227) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 227, 227].  Tensor sizes: [8, 1, 0, 227]
2025-03-05 15:23:07.563465 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 228],"bool"), list[8,8,228,228,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 228],"bool"), list[8,8,228,228,], ) 
 The expanded size of the tensor (228) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 228, 228].  Tensor sizes: [8, 1, 0, 228]
2025-03-05 15:23:07.563993 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 229],"bool"), list[8,8,229,229,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 229],"bool"), list[8,8,229,229,], ) 
 The expanded size of the tensor (229) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 229, 229].  Tensor sizes: [8, 1, 0, 229]
2025-03-05 15:23:07.564512 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 22],"bool"), list[8,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 22],"bool"), list[8,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 22, 22].  Tensor sizes: [8, 1, 0, 22]
2025-03-05 15:23:07.565088 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 230],"bool"), list[8,8,230,230,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 230],"bool"), list[8,8,230,230,], ) 
 The expanded size of the tensor (230) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 230, 230].  Tensor sizes: [8, 1, 0, 230]
2025-03-05 15:23:07.565680 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 231],"bool"), list[8,8,231,231,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 231],"bool"), list[8,8,231,231,], ) 
 The expanded size of the tensor (231) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 231, 231].  Tensor sizes: [8, 1, 0, 231]
2025-03-05 15:23:07.566224 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 232],"bool"), list[8,8,232,232,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 232],"bool"), list[8,8,232,232,], ) 
 The expanded size of the tensor (232) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 232, 232].  Tensor sizes: [8, 1, 0, 232]
2025-03-05 15:23:07.566764 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 233],"bool"), list[8,8,233,233,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 233],"bool"), list[8,8,233,233,], ) 
 The expanded size of the tensor (233) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 233, 233].  Tensor sizes: [8, 1, 0, 233]
2025-03-05 15:23:07.567380 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 234],"bool"), list[8,8,234,234,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 234],"bool"), list[8,8,234,234,], ) 
 The expanded size of the tensor (234) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 234, 234].  Tensor sizes: [8, 1, 0, 234]
2025-03-05 15:23:07.567941 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 235],"bool"), list[8,8,235,235,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 235],"bool"), list[8,8,235,235,], ) 
 The expanded size of the tensor (235) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 235, 235].  Tensor sizes: [8, 1, 0, 235]
2025-03-05 15:23:07.568596 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 236],"bool"), list[8,8,236,236,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 236],"bool"), list[8,8,236,236,], ) 
 The expanded size of the tensor (236) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 236, 236].  Tensor sizes: [8, 1, 0, 236]
2025-03-05 15:23:07.569231 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 237],"bool"), list[8,8,237,237,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 237],"bool"), list[8,8,237,237,], ) 
 The expanded size of the tensor (237) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 237, 237].  Tensor sizes: [8, 1, 0, 237]
2025-03-05 15:23:07.569785 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 238],"bool"), list[8,8,238,238,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 238],"bool"), list[8,8,238,238,], ) 
 The expanded size of the tensor (238) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 238, 238].  Tensor sizes: [8, 1, 0, 238]
2025-03-05 15:23:07.570320 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 239],"bool"), list[8,8,239,239,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 239],"bool"), list[8,8,239,239,], ) 
 The expanded size of the tensor (239) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 239, 239].  Tensor sizes: [8, 1, 0, 239]
2025-03-05 15:23:07.570887 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 23],"bool"), list[8,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 23],"bool"), list[8,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 23, 23].  Tensor sizes: [8, 1, 0, 23]
2025-03-05 15:23:07.571412 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 240],"bool"), list[8,8,240,240,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 240],"bool"), list[8,8,240,240,], ) 
 The expanded size of the tensor (240) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 240, 240].  Tensor sizes: [8, 1, 0, 240]
2025-03-05 15:23:07.571955 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 241],"bool"), list[8,8,241,241,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 241],"bool"), list[8,8,241,241,], ) 
 The expanded size of the tensor (241) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 241, 241].  Tensor sizes: [8, 1, 0, 241]
2025-03-05 15:23:07.572506 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 242],"bool"), list[8,8,242,242,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 242],"bool"), list[8,8,242,242,], ) 
 The expanded size of the tensor (242) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 242, 242].  Tensor sizes: [8, 1, 0, 242]
2025-03-05 15:23:07.573066 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 243],"bool"), list[8,8,243,243,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 243],"bool"), list[8,8,243,243,], ) 
 The expanded size of the tensor (243) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 243, 243].  Tensor sizes: [8, 1, 0, 243]
2025-03-05 15:23:07.573579 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 244],"bool"), list[8,8,244,244,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 244],"bool"), list[8,8,244,244,], ) 
 The expanded size of the tensor (244) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 244, 244].  Tensor sizes: [8, 1, 0, 244]
2025-03-05 15:23:07.574109 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 245],"bool"), list[8,8,245,245,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 245],"bool"), list[8,8,245,245,], ) 
 The expanded size of the tensor (245) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 245, 245].  Tensor sizes: [8, 1, 0, 245]
2025-03-05 15:23:07.574622 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 246],"bool"), list[8,8,246,246,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 246],"bool"), list[8,8,246,246,], ) 
 The expanded size of the tensor (246) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 246, 246].  Tensor sizes: [8, 1, 0, 246]
2025-03-05 15:23:07.575141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 247],"bool"), list[8,8,247,247,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 247],"bool"), list[8,8,247,247,], ) 
 The expanded size of the tensor (247) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 247, 247].  Tensor sizes: [8, 1, 0, 247]
2025-03-05 15:23:07.575669 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 248],"bool"), list[8,8,248,248,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 248],"bool"), list[8,8,248,248,], ) 
 The expanded size of the tensor (248) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 248, 248].  Tensor sizes: [8, 1, 0, 248]
2025-03-05 15:23:07.576186 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 249],"bool"), list[8,8,249,249,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 249],"bool"), list[8,8,249,249,], ) 
 The expanded size of the tensor (249) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 249, 249].  Tensor sizes: [8, 1, 0, 249]
2025-03-05 15:23:07.576704 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 24],"bool"), list[8,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 24],"bool"), list[8,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 24, 24].  Tensor sizes: [8, 1, 0, 24]
2025-03-05 15:23:07.577213 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 250],"bool"), list[8,8,250,250,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 250],"bool"), list[8,8,250,250,], ) 
 The expanded size of the tensor (250) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 250, 250].  Tensor sizes: [8, 1, 0, 250]
2025-03-05 15:23:07.577725 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 251],"bool"), list[8,8,251,251,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 251],"bool"), list[8,8,251,251,], ) 
 The expanded size of the tensor (251) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 251, 251].  Tensor sizes: [8, 1, 0, 251]
2025-03-05 15:23:07.578225 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 252],"bool"), list[8,8,252,252,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 252],"bool"), list[8,8,252,252,], ) 
 The expanded size of the tensor (252) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 252, 252].  Tensor sizes: [8, 1, 0, 252]
2025-03-05 15:23:07.578747 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 253],"bool"), list[8,8,253,253,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 253],"bool"), list[8,8,253,253,], ) 
 The expanded size of the tensor (253) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 253, 253].  Tensor sizes: [8, 1, 0, 253]
2025-03-05 15:23:07.579250 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 254],"bool"), list[8,8,254,254,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 254],"bool"), list[8,8,254,254,], ) 
 The expanded size of the tensor (254) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 254, 254].  Tensor sizes: [8, 1, 0, 254]
2025-03-05 15:23:07.579775 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 255],"bool"), list[8,8,255,255,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 255],"bool"), list[8,8,255,255,], ) 
 The expanded size of the tensor (255) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 255, 255].  Tensor sizes: [8, 1, 0, 255]
2025-03-05 15:23:07.580288 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 256],"bool"), list[8,8,256,256,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 256],"bool"), list[8,8,256,256,], ) 
 The expanded size of the tensor (256) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 256, 256].  Tensor sizes: [8, 1, 0, 256]
2025-03-05 15:23:07.580818 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 257],"bool"), list[8,8,257,257,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 257],"bool"), list[8,8,257,257,], ) 
 The expanded size of the tensor (257) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 257, 257].  Tensor sizes: [8, 1, 0, 257]
2025-03-05 15:23:07.581415 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 258],"bool"), list[8,8,258,258,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 258],"bool"), list[8,8,258,258,], ) 
 The expanded size of the tensor (258) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 258, 258].  Tensor sizes: [8, 1, 0, 258]
2025-03-05 15:23:07.582040 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 259],"bool"), list[8,8,259,259,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 259],"bool"), list[8,8,259,259,], ) 
 The expanded size of the tensor (259) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 259, 259].  Tensor sizes: [8, 1, 0, 259]
2025-03-05 15:23:07.582564 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 25],"bool"), list[8,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 25],"bool"), list[8,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 25, 25].  Tensor sizes: [8, 1, 0, 25]
2025-03-05 15:23:07.583095 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 260],"bool"), list[8,8,260,260,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 260],"bool"), list[8,8,260,260,], ) 
 The expanded size of the tensor (260) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 260, 260].  Tensor sizes: [8, 1, 0, 260]
2025-03-05 15:23:07.584351 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 261],"bool"), list[8,8,261,261,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 261],"bool"), list[8,8,261,261,], ) 
 The expanded size of the tensor (261) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 261, 261].  Tensor sizes: [8, 1, 0, 261]
2025-03-05 15:23:07.585306 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 262],"bool"), list[8,8,262,262,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 262],"bool"), list[8,8,262,262,], ) 
 The expanded size of the tensor (262) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 262, 262].  Tensor sizes: [8, 1, 0, 262]
2025-03-05 15:23:07.586438 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 263],"bool"), list[8,8,263,263,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 263],"bool"), list[8,8,263,263,], ) 
 The expanded size of the tensor (263) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 263, 263].  Tensor sizes: [8, 1, 0, 263]
2025-03-05 15:23:07.587134 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 264],"bool"), list[8,8,264,264,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 264],"bool"), list[8,8,264,264,], ) 
 The expanded size of the tensor (264) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 264, 264].  Tensor sizes: [8, 1, 0, 264]
2025-03-05 15:23:07.587703 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 265],"bool"), list[8,8,265,265,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 265],"bool"), list[8,8,265,265,], ) 
 The expanded size of the tensor (265) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 265, 265].  Tensor sizes: [8, 1, 0, 265]
2025-03-05 15:23:07.588245 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 266],"bool"), list[8,8,266,266,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 266],"bool"), list[8,8,266,266,], ) 
 The expanded size of the tensor (266) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 266, 266].  Tensor sizes: [8, 1, 0, 266]
2025-03-05 15:23:07.588791 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 267],"bool"), list[8,8,267,267,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 267],"bool"), list[8,8,267,267,], ) 
 The expanded size of the tensor (267) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 267, 267].  Tensor sizes: [8, 1, 0, 267]
2025-03-05 15:23:07.589320 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 268],"bool"), list[8,8,268,268,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 268],"bool"), list[8,8,268,268,], ) 
 The expanded size of the tensor (268) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 268, 268].  Tensor sizes: [8, 1, 0, 268]
2025-03-05 15:23:07.589860 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 269],"bool"), list[8,8,269,269,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 269],"bool"), list[8,8,269,269,], ) 
 The expanded size of the tensor (269) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 269, 269].  Tensor sizes: [8, 1, 0, 269]
2025-03-05 15:23:07.590393 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 26],"bool"), list[8,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 26],"bool"), list[8,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 26, 26].  Tensor sizes: [8, 1, 0, 26]
2025-03-05 15:23:07.590933 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 270],"bool"), list[8,8,270,270,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 270],"bool"), list[8,8,270,270,], ) 
 The expanded size of the tensor (270) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 270, 270].  Tensor sizes: [8, 1, 0, 270]
2025-03-05 15:23:07.591449 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 271],"bool"), list[8,8,271,271,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 271],"bool"), list[8,8,271,271,], ) 
 The expanded size of the tensor (271) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 271, 271].  Tensor sizes: [8, 1, 0, 271]
2025-03-05 15:23:07.591978 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 272],"bool"), list[8,8,272,272,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 272],"bool"), list[8,8,272,272,], ) 
 The expanded size of the tensor (272) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 272, 272].  Tensor sizes: [8, 1, 0, 272]
2025-03-05 15:23:07.592519 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 273],"bool"), list[8,8,273,273,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 273],"bool"), list[8,8,273,273,], ) 
 The expanded size of the tensor (273) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 273, 273].  Tensor sizes: [8, 1, 0, 273]
2025-03-05 15:23:07.593127 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 274],"bool"), list[8,8,274,274,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 274],"bool"), list[8,8,274,274,], ) 
 The expanded size of the tensor (274) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 274, 274].  Tensor sizes: [8, 1, 0, 274]
2025-03-05 15:23:07.593663 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 275],"bool"), list[8,8,275,275,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 275],"bool"), list[8,8,275,275,], ) 
 The expanded size of the tensor (275) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 275, 275].  Tensor sizes: [8, 1, 0, 275]
2025-03-05 15:23:07.594182 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 276],"bool"), list[8,8,276,276,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 276],"bool"), list[8,8,276,276,], ) 
 The expanded size of the tensor (276) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 276, 276].  Tensor sizes: [8, 1, 0, 276]
2025-03-05 15:23:07.594751 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 277],"bool"), list[8,8,277,277,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 277],"bool"), list[8,8,277,277,], ) 
 The expanded size of the tensor (277) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 277, 277].  Tensor sizes: [8, 1, 0, 277]
2025-03-05 15:23:07.595267 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 278],"bool"), list[8,8,278,278,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 278],"bool"), list[8,8,278,278,], ) 
 The expanded size of the tensor (278) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 278, 278].  Tensor sizes: [8, 1, 0, 278]
2025-03-05 15:23:07.595789 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 279],"bool"), list[8,8,279,279,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 279],"bool"), list[8,8,279,279,], ) 
 The expanded size of the tensor (279) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 279, 279].  Tensor sizes: [8, 1, 0, 279]
2025-03-05 15:23:07.596358 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 27],"bool"), list[8,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 27],"bool"), list[8,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 27, 27].  Tensor sizes: [8, 1, 0, 27]
2025-03-05 15:23:07.596896 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 280],"bool"), list[8,8,280,280,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 280],"bool"), list[8,8,280,280,], ) 
 The expanded size of the tensor (280) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 280, 280].  Tensor sizes: [8, 1, 0, 280]
2025-03-05 15:23:07.597645 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 281],"bool"), list[8,8,281,281,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 281],"bool"), list[8,8,281,281,], ) 
 The expanded size of the tensor (281) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 281, 281].  Tensor sizes: [8, 1, 0, 281]
2025-03-05 15:23:07.598264 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 282],"bool"), list[8,8,282,282,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 282],"bool"), list[8,8,282,282,], ) 
 The expanded size of the tensor (282) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 282, 282].  Tensor sizes: [8, 1, 0, 282]
2025-03-05 15:23:07.598878 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 283],"bool"), list[8,8,283,283,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 283],"bool"), list[8,8,283,283,], ) 
 The expanded size of the tensor (283) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 283, 283].  Tensor sizes: [8, 1, 0, 283]
2025-03-05 15:23:07.599672 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 284],"bool"), list[8,8,284,284,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 284],"bool"), list[8,8,284,284,], ) 
 The expanded size of the tensor (284) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 284, 284].  Tensor sizes: [8, 1, 0, 284]
2025-03-05 15:23:07.600336 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 285],"bool"), list[8,8,285,285,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 285],"bool"), list[8,8,285,285,], ) 
 The expanded size of the tensor (285) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 285, 285].  Tensor sizes: [8, 1, 0, 285]
2025-03-05 15:23:07.600957 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 286],"bool"), list[8,8,286,286,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 286],"bool"), list[8,8,286,286,], ) 
 The expanded size of the tensor (286) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 286, 286].  Tensor sizes: [8, 1, 0, 286]
2025-03-05 15:23:07.601546 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 287],"bool"), list[8,8,287,287,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 287],"bool"), list[8,8,287,287,], ) 
 The expanded size of the tensor (287) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 287, 287].  Tensor sizes: [8, 1, 0, 287]
2025-03-05 15:23:07.602078 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 288],"bool"), list[8,8,288,288,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 288],"bool"), list[8,8,288,288,], ) 
 The expanded size of the tensor (288) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 288, 288].  Tensor sizes: [8, 1, 0, 288]
2025-03-05 15:23:07.602605 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 289],"bool"), list[8,8,289,289,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 289],"bool"), list[8,8,289,289,], ) 
 The expanded size of the tensor (289) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 289, 289].  Tensor sizes: [8, 1, 0, 289]
2025-03-05 15:23:07.603170 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 28],"bool"), list[8,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 28],"bool"), list[8,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 28, 28].  Tensor sizes: [8, 1, 0, 28]
2025-03-05 15:23:07.603694 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 290],"bool"), list[8,8,290,290,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 290],"bool"), list[8,8,290,290,], ) 
 The expanded size of the tensor (290) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 290, 290].  Tensor sizes: [8, 1, 0, 290]
2025-03-05 15:23:07.604225 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 291],"bool"), list[8,8,291,291,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 291],"bool"), list[8,8,291,291,], ) 
 The expanded size of the tensor (291) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 291, 291].  Tensor sizes: [8, 1, 0, 291]
2025-03-05 15:23:07.604759 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 292],"bool"), list[8,8,292,292,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 292],"bool"), list[8,8,292,292,], ) 
 The expanded size of the tensor (292) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 292, 292].  Tensor sizes: [8, 1, 0, 292]
2025-03-05 15:23:07.605285 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 293],"bool"), list[8,8,293,293,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 293],"bool"), list[8,8,293,293,], ) 
 The expanded size of the tensor (293) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 293, 293].  Tensor sizes: [8, 1, 0, 293]
2025-03-05 15:23:07.605816 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 29],"bool"), list[8,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 29],"bool"), list[8,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 29, 29].  Tensor sizes: [8, 1, 0, 29]
2025-03-05 15:23:07.606330 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 2],"bool"), list[8,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 2],"bool"), list[8,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 2, 2].  Tensor sizes: [8, 1, 0, 2]
2025-03-05 15:23:07.606843 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 30],"bool"), list[8,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 30],"bool"), list[8,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 30, 30].  Tensor sizes: [8, 1, 0, 30]
2025-03-05 15:23:07.607353 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 31],"bool"), list[8,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 31],"bool"), list[8,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 31, 31].  Tensor sizes: [8, 1, 0, 31]
2025-03-05 15:23:07.607877 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 32],"bool"), list[8,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 32],"bool"), list[8,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 32, 32].  Tensor sizes: [8, 1, 0, 32]
2025-03-05 15:23:07.608405 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,1,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,1,33,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 1, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.608927 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,10,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,10,33,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 10, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.609446 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,11,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,11,33,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 11, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.609964 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,12,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,12,33,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 12, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.610469 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,13,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,13,33,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 13, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.611006 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,14,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,14,33,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 14, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.611526 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,15,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,15,33,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 15, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.612056 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,16,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,16,33,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 16, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.612560 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,17,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,17,33,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 17, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.613110 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,18,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,18,33,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 18, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.613633 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,19,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,19,33,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 19, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.614153 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,2,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,2,33,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 2, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.614664 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,20,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,20,33,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 20, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.615176 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,21,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,21,33,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 21, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.615686 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,22,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,22,33,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 22, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.616670 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,23,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,23,33,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 23, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.617455 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,24,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,24,33,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 24, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.618022 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,25,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,25,33,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 25, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.618561 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,26,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,26,33,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 26, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.619090 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,27,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,27,33,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 27, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.619612 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,28,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,28,33,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 28, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.620128 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,29,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,29,33,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 29, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.620712 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,3,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,3,33,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 3, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.621228 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,30,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,30,33,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 30, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.621742 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,31,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,31,33,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 31, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.622247 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,32,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,32,33,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 32, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.622766 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 33, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.623269 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,34,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,34,33,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 34, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.623784 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,35,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,35,33,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 35, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.624296 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,36,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,36,33,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 36, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.624806 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,37,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,37,33,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 37, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.625364 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,38,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,38,33,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 38, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.625896 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,39,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,39,33,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 39, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.626414 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,4,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,4,33,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 4, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.626938 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,40,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,40,33,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 40, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.627459 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,41,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,41,33,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 41, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.628004 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,42,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,42,33,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 42, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.628574 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,43,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,43,33,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 43, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.629139 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,44,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,44,33,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 44, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.633017 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,45,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,45,33,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 45, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.634373 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,46,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,46,33,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 46, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.634943 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,47,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,47,33,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 47, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.635464 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,48,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,48,33,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 48, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.635995 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,49,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,49,33,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 49, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.636508 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,5,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,5,33,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 5, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.637029 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,50,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,50,33,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 50, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.637564 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,51,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,51,33,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 51, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.638147 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,52,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,52,33,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 52, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.638686 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,53,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,53,33,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 53, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.639204 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,54,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,54,33,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 54, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.639727 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,55,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,55,33,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 55, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.640244 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,56,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,56,33,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 56, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.640784 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,57,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,57,33,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 57, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.641311 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,6,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,6,33,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 6, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.641825 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,7,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,7,33,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 7, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.642336 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,8,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,8,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 8, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.642853 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,9,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 33],"bool"), list[8,8,9,33,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 9, 33].  Tensor sizes: [8, 1, 0, 33]
2025-03-05 15:23:07.643367 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 34],"bool"), list[8,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 34],"bool"), list[8,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 34, 34].  Tensor sizes: [8, 1, 0, 34]
2025-03-05 15:23:07.643932 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 35],"bool"), list[8,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 35],"bool"), list[8,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 35, 35].  Tensor sizes: [8, 1, 0, 35]
2025-03-05 15:23:07.644449 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 36],"bool"), list[8,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 36],"bool"), list[8,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 36, 36].  Tensor sizes: [8, 1, 0, 36]
2025-03-05 15:23:07.644962 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 37],"bool"), list[8,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 37],"bool"), list[8,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 37, 37].  Tensor sizes: [8, 1, 0, 37]
2025-03-05 15:23:07.645472 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 38],"bool"), list[8,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 38],"bool"), list[8,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 38, 38].  Tensor sizes: [8, 1, 0, 38]
2025-03-05 15:23:07.645987 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 39],"bool"), list[8,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 39],"bool"), list[8,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 39, 39].  Tensor sizes: [8, 1, 0, 39]
2025-03-05 15:23:07.646492 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 3],"bool"), list[8,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 3],"bool"), list[8,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 3, 3].  Tensor sizes: [8, 1, 0, 3]
2025-03-05 15:23:07.647019 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 40],"bool"), list[8,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 40],"bool"), list[8,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 40, 40].  Tensor sizes: [8, 1, 0, 40]
2025-03-05 15:23:07.647522 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 41],"bool"), list[8,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 41],"bool"), list[8,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 41, 41].  Tensor sizes: [8, 1, 0, 41]
2025-03-05 15:23:07.648055 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 42],"bool"), list[8,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 42],"bool"), list[8,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 42, 42].  Tensor sizes: [8, 1, 0, 42]
2025-03-05 15:23:07.648565 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 43],"bool"), list[8,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 43],"bool"), list[8,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 43, 43].  Tensor sizes: [8, 1, 0, 43]
2025-03-05 15:23:07.649095 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 44],"bool"), list[8,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 44],"bool"), list[8,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 44, 44].  Tensor sizes: [8, 1, 0, 44]
2025-03-05 15:23:07.649613 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 45],"bool"), list[8,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 45],"bool"), list[8,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 45, 45].  Tensor sizes: [8, 1, 0, 45]
2025-03-05 15:23:07.650134 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 46],"bool"), list[8,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 46],"bool"), list[8,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 46, 46].  Tensor sizes: [8, 1, 0, 46]
2025-03-05 15:23:07.650645 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 47],"bool"), list[8,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 47],"bool"), list[8,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 47, 47].  Tensor sizes: [8, 1, 0, 47]
2025-03-05 15:23:07.651152 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 48],"bool"), list[8,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 48],"bool"), list[8,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 48, 48].  Tensor sizes: [8, 1, 0, 48]
2025-03-05 15:23:07.651760 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 49],"bool"), list[8,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 49],"bool"), list[8,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 49, 49].  Tensor sizes: [8, 1, 0, 49]
2025-03-05 15:23:07.652303 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 4],"bool"), list[8,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 4],"bool"), list[8,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 4, 4].  Tensor sizes: [8, 1, 0, 4]
2025-03-05 15:23:07.652886 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 50],"bool"), list[8,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 50],"bool"), list[8,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 50, 50].  Tensor sizes: [8, 1, 0, 50]
2025-03-05 15:23:07.653397 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 51],"bool"), list[8,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 51],"bool"), list[8,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 51, 51].  Tensor sizes: [8, 1, 0, 51]
2025-03-05 15:23:07.653938 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 52],"bool"), list[8,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 52],"bool"), list[8,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 52, 52].  Tensor sizes: [8, 1, 0, 52]
2025-03-05 15:23:07.654470 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 53],"bool"), list[8,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 53],"bool"), list[8,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 53, 53].  Tensor sizes: [8, 1, 0, 53]
2025-03-05 15:23:07.655061 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 54],"bool"), list[8,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 54],"bool"), list[8,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 54, 54].  Tensor sizes: [8, 1, 0, 54]
2025-03-05 15:23:07.655574 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 55],"bool"), list[8,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 55],"bool"), list[8,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 55, 55].  Tensor sizes: [8, 1, 0, 55]
2025-03-05 15:23:07.656095 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 56],"bool"), list[8,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 56],"bool"), list[8,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 56, 56].  Tensor sizes: [8, 1, 0, 56]
2025-03-05 15:23:07.660913 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 57],"bool"), list[8,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 57],"bool"), list[8,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 57, 57].  Tensor sizes: [8, 1, 0, 57]
2025-03-05 15:23:07.661453 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 58],"bool"), list[8,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 58],"bool"), list[8,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 58, 58].  Tensor sizes: [8, 1, 0, 58]
2025-03-05 15:23:07.661979 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 59],"bool"), list[8,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 59],"bool"), list[8,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 59, 59].  Tensor sizes: [8, 1, 0, 59]
2025-03-05 15:23:07.662486 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 5],"bool"), list[8,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 5],"bool"), list[8,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 5, 5].  Tensor sizes: [8, 1, 0, 5]
2025-03-05 15:23:07.662997 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 60],"bool"), list[8,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 60],"bool"), list[8,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 60, 60].  Tensor sizes: [8, 1, 0, 60]
2025-03-05 15:23:07.663507 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 61],"bool"), list[8,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 61],"bool"), list[8,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 61, 61].  Tensor sizes: [8, 1, 0, 61]
2025-03-05 15:23:07.664022 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 62],"bool"), list[8,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 62],"bool"), list[8,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 62, 62].  Tensor sizes: [8, 1, 0, 62]
2025-03-05 15:23:07.664520 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 63],"bool"), list[8,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 63],"bool"), list[8,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 63, 63].  Tensor sizes: [8, 1, 0, 63]
2025-03-05 15:23:07.665028 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 64],"bool"), list[8,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 64],"bool"), list[8,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 64, 64].  Tensor sizes: [8, 1, 0, 64]
2025-03-05 15:23:07.665536 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 65],"bool"), list[8,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 65],"bool"), list[8,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 65, 65].  Tensor sizes: [8, 1, 0, 65]
2025-03-05 15:23:07.666053 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 66],"bool"), list[8,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 66],"bool"), list[8,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 66, 66].  Tensor sizes: [8, 1, 0, 66]
2025-03-05 15:23:07.666551 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 67],"bool"), list[8,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 67],"bool"), list[8,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 67, 67].  Tensor sizes: [8, 1, 0, 67]
2025-03-05 15:23:07.667075 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 68],"bool"), list[8,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 68],"bool"), list[8,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 68, 68].  Tensor sizes: [8, 1, 0, 68]
2025-03-05 15:23:07.667592 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 69],"bool"), list[8,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 69],"bool"), list[8,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 69, 69].  Tensor sizes: [8, 1, 0, 69]
2025-03-05 15:23:07.668100 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 6],"bool"), list[8,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 6],"bool"), list[8,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 6, 6].  Tensor sizes: [8, 1, 0, 6]
2025-03-05 15:23:07.668614 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 70],"bool"), list[8,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 70],"bool"), list[8,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 70, 70].  Tensor sizes: [8, 1, 0, 70]
2025-03-05 15:23:07.669129 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 71],"bool"), list[8,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 71],"bool"), list[8,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 71, 71].  Tensor sizes: [8, 1, 0, 71]
2025-03-05 15:23:07.669639 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 72],"bool"), list[8,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 72],"bool"), list[8,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 72, 72].  Tensor sizes: [8, 1, 0, 72]
2025-03-05 15:23:07.670141 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 73],"bool"), list[8,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 73],"bool"), list[8,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 73, 73].  Tensor sizes: [8, 1, 0, 73]
2025-03-05 15:23:07.670650 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 74],"bool"), list[8,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 74],"bool"), list[8,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 74, 74].  Tensor sizes: [8, 1, 0, 74]
2025-03-05 15:23:07.671150 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 75],"bool"), list[8,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 75],"bool"), list[8,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 75, 75].  Tensor sizes: [8, 1, 0, 75]
2025-03-05 15:23:07.671691 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 76],"bool"), list[8,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 76],"bool"), list[8,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 76, 76].  Tensor sizes: [8, 1, 0, 76]
2025-03-05 15:23:07.672186 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 77],"bool"), list[8,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 77],"bool"), list[8,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 77, 77].  Tensor sizes: [8, 1, 0, 77]
2025-03-05 15:23:07.672718 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 78],"bool"), list[8,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 78],"bool"), list[8,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 78, 78].  Tensor sizes: [8, 1, 0, 78]
2025-03-05 15:23:07.673225 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 79],"bool"), list[8,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 79],"bool"), list[8,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 79, 79].  Tensor sizes: [8, 1, 0, 79]
2025-03-05 15:23:07.673798 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 7],"bool"), list[8,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 7],"bool"), list[8,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 7, 7].  Tensor sizes: [8, 1, 0, 7]
2025-03-05 15:23:07.674350 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 80],"bool"), list[8,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 80],"bool"), list[8,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 80, 80].  Tensor sizes: [8, 1, 0, 80]
2025-03-05 15:23:07.674875 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 81],"bool"), list[8,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 81],"bool"), list[8,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 81, 81].  Tensor sizes: [8, 1, 0, 81]
2025-03-05 15:23:07.675391 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 82],"bool"), list[8,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 82],"bool"), list[8,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 82, 82].  Tensor sizes: [8, 1, 0, 82]
2025-03-05 15:23:07.675921 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 83],"bool"), list[8,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 83],"bool"), list[8,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 83, 83].  Tensor sizes: [8, 1, 0, 83]
2025-03-05 15:23:07.676431 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 84],"bool"), list[8,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 84],"bool"), list[8,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 84, 84].  Tensor sizes: [8, 1, 0, 84]
2025-03-05 15:23:07.676942 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 85],"bool"), list[8,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 85],"bool"), list[8,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 85, 85].  Tensor sizes: [8, 1, 0, 85]
2025-03-05 15:23:07.677454 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 86],"bool"), list[8,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 86],"bool"), list[8,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 86, 86].  Tensor sizes: [8, 1, 0, 86]
2025-03-05 15:23:07.677983 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 87],"bool"), list[8,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 87],"bool"), list[8,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 87, 87].  Tensor sizes: [8, 1, 0, 87]
2025-03-05 15:23:07.678488 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 88],"bool"), list[8,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 88],"bool"), list[8,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 88, 88].  Tensor sizes: [8, 1, 0, 88]
2025-03-05 15:23:07.679026 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 89],"bool"), list[8,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 89],"bool"), list[8,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 89, 89].  Tensor sizes: [8, 1, 0, 89]
2025-03-05 15:23:07.679535 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 8],"bool"), list[8,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 8],"bool"), list[8,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 8, 8].  Tensor sizes: [8, 1, 0, 8]
2025-03-05 15:23:07.680046 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 90],"bool"), list[8,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 90],"bool"), list[8,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 90, 90].  Tensor sizes: [8, 1, 0, 90]
2025-03-05 15:23:07.680549 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 91],"bool"), list[8,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 91],"bool"), list[8,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 91, 91].  Tensor sizes: [8, 1, 0, 91]
2025-03-05 15:23:07.681082 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 92],"bool"), list[8,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 92],"bool"), list[8,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 92, 92].  Tensor sizes: [8, 1, 0, 92]
2025-03-05 15:23:07.681593 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 93],"bool"), list[8,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 93],"bool"), list[8,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 93, 93].  Tensor sizes: [8, 1, 0, 93]
2025-03-05 15:23:07.682109 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 94],"bool"), list[8,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 94],"bool"), list[8,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 94, 94].  Tensor sizes: [8, 1, 0, 94]
2025-03-05 15:23:07.682627 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 95],"bool"), list[8,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 95],"bool"), list[8,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 95, 95].  Tensor sizes: [8, 1, 0, 95]
2025-03-05 15:23:07.683156 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 96],"bool"), list[8,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 96],"bool"), list[8,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 96, 96].  Tensor sizes: [8, 1, 0, 96]
2025-03-05 15:23:07.683674 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 97],"bool"), list[8,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 97],"bool"), list[8,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 97, 97].  Tensor sizes: [8, 1, 0, 97]
2025-03-05 15:23:07.684185 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 98],"bool"), list[8,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 98],"bool"), list[8,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 98, 98].  Tensor sizes: [8, 1, 0, 98]
2025-03-05 15:23:07.684742 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 99],"bool"), list[8,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 99],"bool"), list[8,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 99, 99].  Tensor sizes: [8, 1, 0, 99]
2025-03-05 15:23:07.685250 test begin: paddle.broadcast_to(Tensor([8, 1, 0, 9],"bool"), list[8,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 0, 9],"bool"), list[8,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 8, 9, 9].  Tensor sizes: [8, 1, 0, 9]
2025-03-05 15:23:07.685763 test begin: paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 1, 1].  Tensor sizes: [8, 1, 1, 0]
2025-03-05 15:23:07.686296 test begin: paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 1, 113].  Tensor sizes: [8, 1, 1, 0]
2025-03-05 15:23:07.686911 test begin: paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 1, 121].  Tensor sizes: [8, 1, 1, 0]
2025-03-05 15:23:07.687536 test begin: paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 1, 0],"bool"), list[8,8,1,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 1, 33].  Tensor sizes: [8, 1, 1, 0]
2025-03-05 15:23:07.688171 test begin: paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 10, 10].  Tensor sizes: [8, 1, 10, 0]
2025-03-05 15:23:07.688792 test begin: paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 10, 113].  Tensor sizes: [8, 1, 10, 0]
2025-03-05 15:23:07.689441 test begin: paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 10, 121].  Tensor sizes: [8, 1, 10, 0]
2025-03-05 15:23:07.690082 test begin: paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 10, 0],"bool"), list[8,8,10,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 10, 33].  Tensor sizes: [8, 1, 10, 0]
2025-03-05 15:23:07.690718 test begin: paddle.broadcast_to(Tensor([8, 1, 100, 0],"bool"), list[8,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 100, 0],"bool"), list[8,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 100, 100].  Tensor sizes: [8, 1, 100, 0]
2025-03-05 15:23:07.691358 test begin: paddle.broadcast_to(Tensor([8, 1, 100, 0],"bool"), list[8,8,100,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 100, 0],"bool"), list[8,8,100,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 100, 113].  Tensor sizes: [8, 1, 100, 0]
2025-03-05 15:23:07.692092 test begin: paddle.broadcast_to(Tensor([8, 1, 100, 0],"bool"), list[8,8,100,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 100, 0],"bool"), list[8,8,100,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 100, 121].  Tensor sizes: [8, 1, 100, 0]
2025-03-05 15:23:07.693038 test begin: paddle.broadcast_to(Tensor([8, 1, 101, 0],"bool"), list[8,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 101, 0],"bool"), list[8,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 101, 101].  Tensor sizes: [8, 1, 101, 0]
2025-03-05 15:23:07.693702 test begin: paddle.broadcast_to(Tensor([8, 1, 101, 0],"bool"), list[8,8,101,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 101, 0],"bool"), list[8,8,101,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 101, 113].  Tensor sizes: [8, 1, 101, 0]
2025-03-05 15:23:07.694325 test begin: paddle.broadcast_to(Tensor([8, 1, 101, 0],"bool"), list[8,8,101,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 101, 0],"bool"), list[8,8,101,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 101, 121].  Tensor sizes: [8, 1, 101, 0]
2025-03-05 15:23:07.694962 test begin: paddle.broadcast_to(Tensor([8, 1, 102, 0],"bool"), list[8,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 102, 0],"bool"), list[8,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 102, 102].  Tensor sizes: [8, 1, 102, 0]
2025-03-05 15:23:07.695762 test begin: paddle.broadcast_to(Tensor([8, 1, 102, 0],"bool"), list[8,8,102,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 102, 0],"bool"), list[8,8,102,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 102, 113].  Tensor sizes: [8, 1, 102, 0]
2025-03-05 15:23:07.696550 test begin: paddle.broadcast_to(Tensor([8, 1, 102, 0],"bool"), list[8,8,102,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 102, 0],"bool"), list[8,8,102,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 102, 121].  Tensor sizes: [8, 1, 102, 0]
2025-03-05 15:23:07.697266 test begin: paddle.broadcast_to(Tensor([8, 1, 103, 0],"bool"), list[8,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 103, 0],"bool"), list[8,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 103, 103].  Tensor sizes: [8, 1, 103, 0]
2025-03-05 15:23:07.697966 test begin: paddle.broadcast_to(Tensor([8, 1, 103, 0],"bool"), list[8,8,103,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 103, 0],"bool"), list[8,8,103,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 103, 113].  Tensor sizes: [8, 1, 103, 0]
2025-03-05 15:23:07.698771 test begin: paddle.broadcast_to(Tensor([8, 1, 103, 0],"bool"), list[8,8,103,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 103, 0],"bool"), list[8,8,103,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 103, 121].  Tensor sizes: [8, 1, 103, 0]
2025-03-05 15:23:07.699402 test begin: paddle.broadcast_to(Tensor([8, 1, 104, 0],"bool"), list[8,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 104, 0],"bool"), list[8,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 104, 104].  Tensor sizes: [8, 1, 104, 0]
2025-03-05 15:23:07.700111 test begin: paddle.broadcast_to(Tensor([8, 1, 104, 0],"bool"), list[8,8,104,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 104, 0],"bool"), list[8,8,104,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 104, 113].  Tensor sizes: [8, 1, 104, 0]
2025-03-05 15:23:07.700725 test begin: paddle.broadcast_to(Tensor([8, 1, 104, 0],"bool"), list[8,8,104,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 104, 0],"bool"), list[8,8,104,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 104, 121].  Tensor sizes: [8, 1, 104, 0]
2025-03-05 15:23:07.701251 test begin: paddle.broadcast_to(Tensor([8, 1, 105, 0],"bool"), list[8,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 105, 0],"bool"), list[8,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 105, 105].  Tensor sizes: [8, 1, 105, 0]
2025-03-05 15:23:07.701764 test begin: paddle.broadcast_to(Tensor([8, 1, 105, 0],"bool"), list[8,8,105,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 105, 0],"bool"), list[8,8,105,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 105, 113].  Tensor sizes: [8, 1, 105, 0]
2025-03-05 15:23:07.702270 test begin: paddle.broadcast_to(Tensor([8, 1, 105, 0],"bool"), list[8,8,105,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 105, 0],"bool"), list[8,8,105,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 105, 121].  Tensor sizes: [8, 1, 105, 0]
2025-03-05 15:23:07.702790 test begin: paddle.broadcast_to(Tensor([8, 1, 106, 0],"bool"), list[8,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 106, 0],"bool"), list[8,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 106, 106].  Tensor sizes: [8, 1, 106, 0]
2025-03-05 15:23:07.703293 test begin: paddle.broadcast_to(Tensor([8, 1, 106, 0],"bool"), list[8,8,106,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 106, 0],"bool"), list[8,8,106,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 106, 113].  Tensor sizes: [8, 1, 106, 0]
2025-03-05 15:23:07.703814 test begin: paddle.broadcast_to(Tensor([8, 1, 106, 0],"bool"), list[8,8,106,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 106, 0],"bool"), list[8,8,106,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 106, 121].  Tensor sizes: [8, 1, 106, 0]
2025-03-05 15:23:07.704336 test begin: paddle.broadcast_to(Tensor([8, 1, 107, 0],"bool"), list[8,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 107, 0],"bool"), list[8,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 107, 107].  Tensor sizes: [8, 1, 107, 0]
2025-03-05 15:23:07.704846 test begin: paddle.broadcast_to(Tensor([8, 1, 107, 0],"bool"), list[8,8,107,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 107, 0],"bool"), list[8,8,107,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 107, 113].  Tensor sizes: [8, 1, 107, 0]
2025-03-05 15:23:07.705354 test begin: paddle.broadcast_to(Tensor([8, 1, 107, 0],"bool"), list[8,8,107,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 107, 0],"bool"), list[8,8,107,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 107, 121].  Tensor sizes: [8, 1, 107, 0]
2025-03-05 15:23:07.705865 test begin: paddle.broadcast_to(Tensor([8, 1, 108, 0],"bool"), list[8,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 108, 0],"bool"), list[8,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 108, 108].  Tensor sizes: [8, 1, 108, 0]
2025-03-05 15:23:07.706373 test begin: paddle.broadcast_to(Tensor([8, 1, 108, 0],"bool"), list[8,8,108,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 108, 0],"bool"), list[8,8,108,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 108, 113].  Tensor sizes: [8, 1, 108, 0]
2025-03-05 15:23:07.706882 test begin: paddle.broadcast_to(Tensor([8, 1, 108, 0],"bool"), list[8,8,108,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 108, 0],"bool"), list[8,8,108,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 108, 121].  Tensor sizes: [8, 1, 108, 0]
2025-03-05 15:23:07.707383 test begin: paddle.broadcast_to(Tensor([8, 1, 109, 0],"bool"), list[8,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 109, 0],"bool"), list[8,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 109, 109].  Tensor sizes: [8, 1, 109, 0]
2025-03-05 15:23:07.707909 test begin: paddle.broadcast_to(Tensor([8, 1, 109, 0],"bool"), list[8,8,109,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 109, 0],"bool"), list[8,8,109,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 109, 113].  Tensor sizes: [8, 1, 109, 0]
2025-03-05 15:23:07.708468 test begin: paddle.broadcast_to(Tensor([8, 1, 109, 0],"bool"), list[8,8,109,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 109, 0],"bool"), list[8,8,109,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 109, 121].  Tensor sizes: [8, 1, 109, 0]
2025-03-05 15:23:07.708997 test begin: paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 11, 11].  Tensor sizes: [8, 1, 11, 0]
2025-03-05 15:23:07.709508 test begin: paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 11, 113].  Tensor sizes: [8, 1, 11, 0]
2025-03-05 15:23:07.710026 test begin: paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 11, 121].  Tensor sizes: [8, 1, 11, 0]
2025-03-05 15:23:07.710662 test begin: paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 11, 0],"bool"), list[8,8,11,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 11, 33].  Tensor sizes: [8, 1, 11, 0]
2025-03-05 15:23:07.711513 test begin: paddle.broadcast_to(Tensor([8, 1, 110, 0],"bool"), list[8,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 110, 0],"bool"), list[8,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 110, 110].  Tensor sizes: [8, 1, 110, 0]
2025-03-05 15:23:07.712137 test begin: paddle.broadcast_to(Tensor([8, 1, 110, 0],"bool"), list[8,8,110,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 110, 0],"bool"), list[8,8,110,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 110, 113].  Tensor sizes: [8, 1, 110, 0]
2025-03-05 15:23:07.712856 test begin: paddle.broadcast_to(Tensor([8, 1, 110, 0],"bool"), list[8,8,110,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 110, 0],"bool"), list[8,8,110,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 110, 121].  Tensor sizes: [8, 1, 110, 0]
2025-03-05 15:23:07.713579 test begin: paddle.broadcast_to(Tensor([8, 1, 111, 0],"bool"), list[8,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 111, 0],"bool"), list[8,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 111, 111].  Tensor sizes: [8, 1, 111, 0]
2025-03-05 15:23:07.714206 test begin: paddle.broadcast_to(Tensor([8, 1, 111, 0],"bool"), list[8,8,111,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 111, 0],"bool"), list[8,8,111,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 111, 113].  Tensor sizes: [8, 1, 111, 0]
2025-03-05 15:23:07.714815 test begin: paddle.broadcast_to(Tensor([8, 1, 111, 0],"bool"), list[8,8,111,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 111, 0],"bool"), list[8,8,111,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 111, 121].  Tensor sizes: [8, 1, 111, 0]
2025-03-05 15:23:07.715415 test begin: paddle.broadcast_to(Tensor([8, 1, 112, 0],"bool"), list[8,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 112, 0],"bool"), list[8,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 112, 112].  Tensor sizes: [8, 1, 112, 0]
2025-03-05 15:23:07.716057 test begin: paddle.broadcast_to(Tensor([8, 1, 112, 0],"bool"), list[8,8,112,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 112, 0],"bool"), list[8,8,112,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 112, 113].  Tensor sizes: [8, 1, 112, 0]
2025-03-05 15:23:07.716665 test begin: paddle.broadcast_to(Tensor([8, 1, 112, 0],"bool"), list[8,8,112,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 112, 0],"bool"), list[8,8,112,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 112, 121].  Tensor sizes: [8, 1, 112, 0]
2025-03-05 15:23:07.717285 test begin: paddle.broadcast_to(Tensor([8, 1, 113, 0],"bool"), list[8,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 113, 0],"bool"), list[8,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 113, 113].  Tensor sizes: [8, 1, 113, 0]
2025-03-05 15:23:07.717875 test begin: paddle.broadcast_to(Tensor([8, 1, 113, 0],"bool"), list[8,8,113,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 113, 0],"bool"), list[8,8,113,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 113, 121].  Tensor sizes: [8, 1, 113, 0]
2025-03-05 15:23:07.718420 test begin: paddle.broadcast_to(Tensor([8, 1, 114, 0],"bool"), list[8,8,114,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 114, 0],"bool"), list[8,8,114,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 114, 113].  Tensor sizes: [8, 1, 114, 0]
2025-03-05 15:23:07.718971 test begin: paddle.broadcast_to(Tensor([8, 1, 114, 0],"bool"), list[8,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 114, 0],"bool"), list[8,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 114, 114].  Tensor sizes: [8, 1, 114, 0]
2025-03-05 15:23:07.719486 test begin: paddle.broadcast_to(Tensor([8, 1, 114, 0],"bool"), list[8,8,114,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 114, 0],"bool"), list[8,8,114,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 114, 121].  Tensor sizes: [8, 1, 114, 0]
2025-03-05 15:23:07.720002 test begin: paddle.broadcast_to(Tensor([8, 1, 115, 0],"bool"), list[8,8,115,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 115, 0],"bool"), list[8,8,115,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 115, 113].  Tensor sizes: [8, 1, 115, 0]
2025-03-05 15:23:07.720501 test begin: paddle.broadcast_to(Tensor([8, 1, 115, 0],"bool"), list[8,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 115, 0],"bool"), list[8,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 115, 115].  Tensor sizes: [8, 1, 115, 0]
2025-03-05 15:23:07.721025 test begin: paddle.broadcast_to(Tensor([8, 1, 115, 0],"bool"), list[8,8,115,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 115, 0],"bool"), list[8,8,115,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 115, 121].  Tensor sizes: [8, 1, 115, 0]
2025-03-05 15:23:07.721546 test begin: paddle.broadcast_to(Tensor([8, 1, 116, 0],"bool"), list[8,8,116,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 116, 0],"bool"), list[8,8,116,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 116, 113].  Tensor sizes: [8, 1, 116, 0]
2025-03-05 15:23:07.722061 test begin: paddle.broadcast_to(Tensor([8, 1, 116, 0],"bool"), list[8,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 116, 0],"bool"), list[8,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 116, 116].  Tensor sizes: [8, 1, 116, 0]
2025-03-05 15:23:07.722558 test begin: paddle.broadcast_to(Tensor([8, 1, 116, 0],"bool"), list[8,8,116,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 116, 0],"bool"), list[8,8,116,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 116, 121].  Tensor sizes: [8, 1, 116, 0]
2025-03-05 15:23:07.723079 test begin: paddle.broadcast_to(Tensor([8, 1, 117, 0],"bool"), list[8,8,117,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 117, 0],"bool"), list[8,8,117,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 117, 113].  Tensor sizes: [8, 1, 117, 0]
2025-03-05 15:23:07.723572 test begin: paddle.broadcast_to(Tensor([8, 1, 117, 0],"bool"), list[8,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 117, 0],"bool"), list[8,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 117, 117].  Tensor sizes: [8, 1, 117, 0]
2025-03-05 15:23:07.724081 test begin: paddle.broadcast_to(Tensor([8, 1, 117, 0],"bool"), list[8,8,117,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 117, 0],"bool"), list[8,8,117,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 117, 121].  Tensor sizes: [8, 1, 117, 0]
2025-03-05 15:23:07.724572 test begin: paddle.broadcast_to(Tensor([8, 1, 118, 0],"bool"), list[8,8,118,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 118, 0],"bool"), list[8,8,118,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 118, 113].  Tensor sizes: [8, 1, 118, 0]
2025-03-05 15:23:07.725089 test begin: paddle.broadcast_to(Tensor([8, 1, 118, 0],"bool"), list[8,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 118, 0],"bool"), list[8,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 118, 118].  Tensor sizes: [8, 1, 118, 0]
2025-03-05 15:23:07.725606 test begin: paddle.broadcast_to(Tensor([8, 1, 118, 0],"bool"), list[8,8,118,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 118, 0],"bool"), list[8,8,118,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 118, 121].  Tensor sizes: [8, 1, 118, 0]
2025-03-05 15:23:07.726116 test begin: paddle.broadcast_to(Tensor([8, 1, 119, 0],"bool"), list[8,8,119,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 119, 0],"bool"), list[8,8,119,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 119, 113].  Tensor sizes: [8, 1, 119, 0]
2025-03-05 15:23:07.726619 test begin: paddle.broadcast_to(Tensor([8, 1, 119, 0],"bool"), list[8,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 119, 0],"bool"), list[8,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 119, 119].  Tensor sizes: [8, 1, 119, 0]
2025-03-05 15:23:07.727151 test begin: paddle.broadcast_to(Tensor([8, 1, 119, 0],"bool"), list[8,8,119,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 119, 0],"bool"), list[8,8,119,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 119, 121].  Tensor sizes: [8, 1, 119, 0]
2025-03-05 15:23:07.727663 test begin: paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 12, 113].  Tensor sizes: [8, 1, 12, 0]
2025-03-05 15:23:07.728252 test begin: paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 12, 12].  Tensor sizes: [8, 1, 12, 0]
2025-03-05 15:23:07.728994 test begin: paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 12, 121].  Tensor sizes: [8, 1, 12, 0]
2025-03-05 15:23:07.729610 test begin: paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 12, 0],"bool"), list[8,8,12,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 12, 33].  Tensor sizes: [8, 1, 12, 0]
2025-03-05 15:23:07.730195 test begin: paddle.broadcast_to(Tensor([8, 1, 120, 0],"bool"), list[8,8,120,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 120, 0],"bool"), list[8,8,120,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 120, 113].  Tensor sizes: [8, 1, 120, 0]
2025-03-05 15:23:07.730782 test begin: paddle.broadcast_to(Tensor([8, 1, 120, 0],"bool"), list[8,8,120,120,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 120, 0],"bool"), list[8,8,120,120,], ) 
 The expanded size of the tensor (120) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 120, 120].  Tensor sizes: [8, 1, 120, 0]
2025-03-05 15:23:07.731426 test begin: paddle.broadcast_to(Tensor([8, 1, 120, 0],"bool"), list[8,8,120,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 120, 0],"bool"), list[8,8,120,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 120, 121].  Tensor sizes: [8, 1, 120, 0]
2025-03-05 15:23:07.732142 test begin: paddle.broadcast_to(Tensor([8, 1, 121, 0],"bool"), list[8,8,121,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 121, 0],"bool"), list[8,8,121,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 121, 113].  Tensor sizes: [8, 1, 121, 0]
2025-03-05 15:23:07.732704 test begin: paddle.broadcast_to(Tensor([8, 1, 121, 0],"bool"), list[8,8,121,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 121, 0],"bool"), list[8,8,121,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 121, 121].  Tensor sizes: [8, 1, 121, 0]
2025-03-05 15:23:07.733210 test begin: paddle.broadcast_to(Tensor([8, 1, 122, 0],"bool"), list[8,8,122,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 122, 0],"bool"), list[8,8,122,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 122, 113].  Tensor sizes: [8, 1, 122, 0]
2025-03-05 15:23:07.733771 test begin: paddle.broadcast_to(Tensor([8, 1, 122, 0],"bool"), list[8,8,122,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 122, 0],"bool"), list[8,8,122,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 122, 121].  Tensor sizes: [8, 1, 122, 0]
2025-03-05 15:23:07.734308 test begin: paddle.broadcast_to(Tensor([8, 1, 122, 0],"bool"), list[8,8,122,122,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 122, 0],"bool"), list[8,8,122,122,], ) 
 The expanded size of the tensor (122) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 122, 122].  Tensor sizes: [8, 1, 122, 0]
2025-03-05 15:23:07.734926 test begin: paddle.broadcast_to(Tensor([8, 1, 123, 0],"bool"), list[8,8,123,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 123, 0],"bool"), list[8,8,123,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 123, 113].  Tensor sizes: [8, 1, 123, 0]
2025-03-05 15:23:07.735446 test begin: paddle.broadcast_to(Tensor([8, 1, 123, 0],"bool"), list[8,8,123,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 123, 0],"bool"), list[8,8,123,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 123, 121].  Tensor sizes: [8, 1, 123, 0]
2025-03-05 15:23:07.735963 test begin: paddle.broadcast_to(Tensor([8, 1, 123, 0],"bool"), list[8,8,123,123,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 123, 0],"bool"), list[8,8,123,123,], ) 
 The expanded size of the tensor (123) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 123, 123].  Tensor sizes: [8, 1, 123, 0]
2025-03-05 15:23:07.736475 test begin: paddle.broadcast_to(Tensor([8, 1, 124, 0],"bool"), list[8,8,124,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 124, 0],"bool"), list[8,8,124,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 124, 113].  Tensor sizes: [8, 1, 124, 0]
2025-03-05 15:23:07.736995 test begin: paddle.broadcast_to(Tensor([8, 1, 124, 0],"bool"), list[8,8,124,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 124, 0],"bool"), list[8,8,124,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 124, 121].  Tensor sizes: [8, 1, 124, 0]
2025-03-05 15:23:07.737499 test begin: paddle.broadcast_to(Tensor([8, 1, 124, 0],"bool"), list[8,8,124,124,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 124, 0],"bool"), list[8,8,124,124,], ) 
 The expanded size of the tensor (124) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 124, 124].  Tensor sizes: [8, 1, 124, 0]
2025-03-05 15:23:07.740697 test begin: paddle.broadcast_to(Tensor([8, 1, 125, 0],"bool"), list[8,8,125,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 125, 0],"bool"), list[8,8,125,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 125, 113].  Tensor sizes: [8, 1, 125, 0]
2025-03-05 15:23:07.741316 test begin: paddle.broadcast_to(Tensor([8, 1, 125, 0],"bool"), list[8,8,125,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 125, 0],"bool"), list[8,8,125,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 125, 121].  Tensor sizes: [8, 1, 125, 0]
2025-03-05 15:23:07.741846 test begin: paddle.broadcast_to(Tensor([8, 1, 125, 0],"bool"), list[8,8,125,125,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 125, 0],"bool"), list[8,8,125,125,], ) 
 The expanded size of the tensor (125) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 125, 125].  Tensor sizes: [8, 1, 125, 0]
2025-03-05 15:23:07.742433 test begin: paddle.broadcast_to(Tensor([8, 1, 126, 0],"bool"), list[8,8,126,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 126, 0],"bool"), list[8,8,126,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 126, 113].  Tensor sizes: [8, 1, 126, 0]
2025-03-05 15:23:07.742981 test begin: paddle.broadcast_to(Tensor([8, 1, 126, 0],"bool"), list[8,8,126,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 126, 0],"bool"), list[8,8,126,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 126, 121].  Tensor sizes: [8, 1, 126, 0]
2025-03-05 15:23:07.743501 test begin: paddle.broadcast_to(Tensor([8, 1, 126, 0],"bool"), list[8,8,126,126,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 126, 0],"bool"), list[8,8,126,126,], ) 
 The expanded size of the tensor (126) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 126, 126].  Tensor sizes: [8, 1, 126, 0]
2025-03-05 15:23:07.744039 test begin: paddle.broadcast_to(Tensor([8, 1, 127, 0],"bool"), list[8,8,127,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 127, 0],"bool"), list[8,8,127,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 127, 113].  Tensor sizes: [8, 1, 127, 0]
2025-03-05 15:23:07.744552 test begin: paddle.broadcast_to(Tensor([8, 1, 127, 0],"bool"), list[8,8,127,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 127, 0],"bool"), list[8,8,127,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 127, 121].  Tensor sizes: [8, 1, 127, 0]
2025-03-05 15:23:07.745068 test begin: paddle.broadcast_to(Tensor([8, 1, 127, 0],"bool"), list[8,8,127,127,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 127, 0],"bool"), list[8,8,127,127,], ) 
 The expanded size of the tensor (127) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 127, 127].  Tensor sizes: [8, 1, 127, 0]
2025-03-05 15:23:07.745566 test begin: paddle.broadcast_to(Tensor([8, 1, 128, 0],"bool"), list[8,8,128,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 128, 0],"bool"), list[8,8,128,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 128, 113].  Tensor sizes: [8, 1, 128, 0]
2025-03-05 15:23:07.746084 test begin: paddle.broadcast_to(Tensor([8, 1, 128, 0],"bool"), list[8,8,128,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 128, 0],"bool"), list[8,8,128,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 128, 121].  Tensor sizes: [8, 1, 128, 0]
2025-03-05 15:23:07.746571 test begin: paddle.broadcast_to(Tensor([8, 1, 128, 0],"bool"), list[8,8,128,128,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 128, 0],"bool"), list[8,8,128,128,], ) 
 The expanded size of the tensor (128) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 128, 128].  Tensor sizes: [8, 1, 128, 0]
2025-03-05 15:23:07.747101 test begin: paddle.broadcast_to(Tensor([8, 1, 129, 0],"bool"), list[8,8,129,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 129, 0],"bool"), list[8,8,129,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 129, 113].  Tensor sizes: [8, 1, 129, 0]
2025-03-05 15:23:07.747616 test begin: paddle.broadcast_to(Tensor([8, 1, 129, 0],"bool"), list[8,8,129,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 129, 0],"bool"), list[8,8,129,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 129, 121].  Tensor sizes: [8, 1, 129, 0]
2025-03-05 15:23:07.748170 test begin: paddle.broadcast_to(Tensor([8, 1, 129, 0],"bool"), list[8,8,129,129,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 129, 0],"bool"), list[8,8,129,129,], ) 
 The expanded size of the tensor (129) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 129, 129].  Tensor sizes: [8, 1, 129, 0]
2025-03-05 15:23:07.748917 test begin: paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 13, 113].  Tensor sizes: [8, 1, 13, 0]
2025-03-05 15:23:07.749522 test begin: paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 13, 121].  Tensor sizes: [8, 1, 13, 0]
2025-03-05 15:23:07.750136 test begin: paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 13, 13].  Tensor sizes: [8, 1, 13, 0]
2025-03-05 15:23:07.750751 test begin: paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 13, 0],"bool"), list[8,8,13,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 13, 33].  Tensor sizes: [8, 1, 13, 0]
2025-03-05 15:23:07.751343 test begin: paddle.broadcast_to(Tensor([8, 1, 130, 0],"bool"), list[8,8,130,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 130, 0],"bool"), list[8,8,130,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 130, 113].  Tensor sizes: [8, 1, 130, 0]
2025-03-05 15:23:07.752038 test begin: paddle.broadcast_to(Tensor([8, 1, 130, 0],"bool"), list[8,8,130,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 130, 0],"bool"), list[8,8,130,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 130, 121].  Tensor sizes: [8, 1, 130, 0]
2025-03-05 15:23:07.752744 test begin: paddle.broadcast_to(Tensor([8, 1, 130, 0],"bool"), list[8,8,130,130,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 130, 0],"bool"), list[8,8,130,130,], ) 
 The expanded size of the tensor (130) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 130, 130].  Tensor sizes: [8, 1, 130, 0]
2025-03-05 15:23:07.753476 test begin: paddle.broadcast_to(Tensor([8, 1, 131, 0],"bool"), list[8,8,131,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 131, 0],"bool"), list[8,8,131,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 131, 113].  Tensor sizes: [8, 1, 131, 0]
2025-03-05 15:23:07.754114 test begin: paddle.broadcast_to(Tensor([8, 1, 131, 0],"bool"), list[8,8,131,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 131, 0],"bool"), list[8,8,131,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 131, 121].  Tensor sizes: [8, 1, 131, 0]
2025-03-05 15:23:07.754724 test begin: paddle.broadcast_to(Tensor([8, 1, 131, 0],"bool"), list[8,8,131,131,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 131, 0],"bool"), list[8,8,131,131,], ) 
 The expanded size of the tensor (131) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 131, 131].  Tensor sizes: [8, 1, 131, 0]
2025-03-05 15:23:07.755314 test begin: paddle.broadcast_to(Tensor([8, 1, 132, 0],"bool"), list[8,8,132,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 132, 0],"bool"), list[8,8,132,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 132, 113].  Tensor sizes: [8, 1, 132, 0]
2025-03-05 15:23:07.755905 test begin: paddle.broadcast_to(Tensor([8, 1, 132, 0],"bool"), list[8,8,132,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 132, 0],"bool"), list[8,8,132,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 132, 121].  Tensor sizes: [8, 1, 132, 0]
2025-03-05 15:23:07.756810 test begin: paddle.broadcast_to(Tensor([8, 1, 132, 0],"bool"), list[8,8,132,132,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 132, 0],"bool"), list[8,8,132,132,], ) 
 The expanded size of the tensor (132) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 132, 132].  Tensor sizes: [8, 1, 132, 0]
2025-03-05 15:23:07.757379 test begin: paddle.broadcast_to(Tensor([8, 1, 133, 0],"bool"), list[8,8,133,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 133, 0],"bool"), list[8,8,133,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 133, 113].  Tensor sizes: [8, 1, 133, 0]
2025-03-05 15:23:07.757924 test begin: paddle.broadcast_to(Tensor([8, 1, 133, 0],"bool"), list[8,8,133,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 133, 0],"bool"), list[8,8,133,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 133, 121].  Tensor sizes: [8, 1, 133, 0]
2025-03-05 15:23:07.758470 test begin: paddle.broadcast_to(Tensor([8, 1, 133, 0],"bool"), list[8,8,133,133,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 133, 0],"bool"), list[8,8,133,133,], ) 
 The expanded size of the tensor (133) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 133, 133].  Tensor sizes: [8, 1, 133, 0]
2025-03-05 15:23:07.759137 test begin: paddle.broadcast_to(Tensor([8, 1, 134, 0],"bool"), list[8,8,134,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 134, 0],"bool"), list[8,8,134,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 134, 113].  Tensor sizes: [8, 1, 134, 0]
2025-03-05 15:23:07.759789 test begin: paddle.broadcast_to(Tensor([8, 1, 134, 0],"bool"), list[8,8,134,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 134, 0],"bool"), list[8,8,134,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 134, 121].  Tensor sizes: [8, 1, 134, 0]
2025-03-05 15:23:07.760358 test begin: paddle.broadcast_to(Tensor([8, 1, 134, 0],"bool"), list[8,8,134,134,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 134, 0],"bool"), list[8,8,134,134,], ) 
 The expanded size of the tensor (134) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 134, 134].  Tensor sizes: [8, 1, 134, 0]
2025-03-05 15:23:07.760895 test begin: paddle.broadcast_to(Tensor([8, 1, 135, 0],"bool"), list[8,8,135,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 135, 0],"bool"), list[8,8,135,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 135, 113].  Tensor sizes: [8, 1, 135, 0]
2025-03-05 15:23:07.761422 test begin: paddle.broadcast_to(Tensor([8, 1, 135, 0],"bool"), list[8,8,135,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 135, 0],"bool"), list[8,8,135,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 135, 121].  Tensor sizes: [8, 1, 135, 0]
2025-03-05 15:23:07.761956 test begin: paddle.broadcast_to(Tensor([8, 1, 135, 0],"bool"), list[8,8,135,135,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 135, 0],"bool"), list[8,8,135,135,], ) 
 The expanded size of the tensor (135) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 135, 135].  Tensor sizes: [8, 1, 135, 0]
2025-03-05 15:23:07.762580 test begin: paddle.broadcast_to(Tensor([8, 1, 136, 0],"bool"), list[8,8,136,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 136, 0],"bool"), list[8,8,136,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 136, 113].  Tensor sizes: [8, 1, 136, 0]
2025-03-05 15:23:07.763234 test begin: paddle.broadcast_to(Tensor([8, 1, 136, 0],"bool"), list[8,8,136,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 136, 0],"bool"), list[8,8,136,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 136, 121].  Tensor sizes: [8, 1, 136, 0]
2025-03-05 15:23:07.763877 test begin: paddle.broadcast_to(Tensor([8, 1, 136, 0],"bool"), list[8,8,136,136,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 136, 0],"bool"), list[8,8,136,136,], ) 
 The expanded size of the tensor (136) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 136, 136].  Tensor sizes: [8, 1, 136, 0]
2025-03-05 15:23:07.764475 test begin: paddle.broadcast_to(Tensor([8, 1, 137, 0],"bool"), list[8,8,137,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 137, 0],"bool"), list[8,8,137,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 137, 113].  Tensor sizes: [8, 1, 137, 0]
2025-03-05 15:23:07.765087 test begin: paddle.broadcast_to(Tensor([8, 1, 137, 0],"bool"), list[8,8,137,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 137, 0],"bool"), list[8,8,137,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 137, 121].  Tensor sizes: [8, 1, 137, 0]
2025-03-05 15:23:07.765683 test begin: paddle.broadcast_to(Tensor([8, 1, 137, 0],"bool"), list[8,8,137,137,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 137, 0],"bool"), list[8,8,137,137,], ) 
 The expanded size of the tensor (137) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 137, 137].  Tensor sizes: [8, 1, 137, 0]
2025-03-05 15:23:07.766306 test begin: paddle.broadcast_to(Tensor([8, 1, 138, 0],"bool"), list[8,8,138,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 138, 0],"bool"), list[8,8,138,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 138, 113].  Tensor sizes: [8, 1, 138, 0]
2025-03-05 15:23:07.766905 test begin: paddle.broadcast_to(Tensor([8, 1, 138, 0],"bool"), list[8,8,138,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 138, 0],"bool"), list[8,8,138,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 138, 121].  Tensor sizes: [8, 1, 138, 0]
2025-03-05 15:23:07.767499 test begin: paddle.broadcast_to(Tensor([8, 1, 138, 0],"bool"), list[8,8,138,138,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 138, 0],"bool"), list[8,8,138,138,], ) 
 The expanded size of the tensor (138) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 138, 138].  Tensor sizes: [8, 1, 138, 0]
2025-03-05 15:23:07.768464 test begin: paddle.broadcast_to(Tensor([8, 1, 139, 0],"bool"), list[8,8,139,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 139, 0],"bool"), list[8,8,139,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 139, 113].  Tensor sizes: [8, 1, 139, 0]
2025-03-05 15:23:07.769269 test begin: paddle.broadcast_to(Tensor([8, 1, 139, 0],"bool"), list[8,8,139,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 139, 0],"bool"), list[8,8,139,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 139, 121].  Tensor sizes: [8, 1, 139, 0]
2025-03-05 15:23:07.769965 test begin: paddle.broadcast_to(Tensor([8, 1, 139, 0],"bool"), list[8,8,139,139,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 139, 0],"bool"), list[8,8,139,139,], ) 
 The expanded size of the tensor (139) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 139, 139].  Tensor sizes: [8, 1, 139, 0]
2025-03-05 15:23:07.770530 test begin: paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 14, 113].  Tensor sizes: [8, 1, 14, 0]
2025-03-05 15:23:07.771074 test begin: paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 14, 121].  Tensor sizes: [8, 1, 14, 0]
2025-03-05 15:23:07.771716 test begin: paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 14, 14].  Tensor sizes: [8, 1, 14, 0]
2025-03-05 15:23:07.772241 test begin: paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 14, 0],"bool"), list[8,8,14,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 14, 33].  Tensor sizes: [8, 1, 14, 0]
2025-03-05 15:23:07.772778 test begin: paddle.broadcast_to(Tensor([8, 1, 140, 0],"bool"), list[8,8,140,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 140, 0],"bool"), list[8,8,140,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 140, 113].  Tensor sizes: [8, 1, 140, 0]
2025-03-05 15:23:07.773296 test begin: paddle.broadcast_to(Tensor([8, 1, 140, 0],"bool"), list[8,8,140,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 140, 0],"bool"), list[8,8,140,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 140, 121].  Tensor sizes: [8, 1, 140, 0]
2025-03-05 15:23:07.773819 test begin: paddle.broadcast_to(Tensor([8, 1, 140, 0],"bool"), list[8,8,140,140,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 140, 0],"bool"), list[8,8,140,140,], ) 
 The expanded size of the tensor (140) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 140, 140].  Tensor sizes: [8, 1, 140, 0]
2025-03-05 15:23:07.774376 test begin: paddle.broadcast_to(Tensor([8, 1, 141, 0],"bool"), list[8,8,141,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 141, 0],"bool"), list[8,8,141,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 141, 113].  Tensor sizes: [8, 1, 141, 0]
2025-03-05 15:23:07.774912 test begin: paddle.broadcast_to(Tensor([8, 1, 141, 0],"bool"), list[8,8,141,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 141, 0],"bool"), list[8,8,141,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 141, 121].  Tensor sizes: [8, 1, 141, 0]
2025-03-05 15:23:07.775429 test begin: paddle.broadcast_to(Tensor([8, 1, 141, 0],"bool"), list[8,8,141,141,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 141, 0],"bool"), list[8,8,141,141,], ) 
 The expanded size of the tensor (141) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 141, 141].  Tensor sizes: [8, 1, 141, 0]
2025-03-05 15:23:07.775961 test begin: paddle.broadcast_to(Tensor([8, 1, 142, 0],"bool"), list[8,8,142,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 142, 0],"bool"), list[8,8,142,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 142, 113].  Tensor sizes: [8, 1, 142, 0]
2025-03-05 15:23:07.776497 test begin: paddle.broadcast_to(Tensor([8, 1, 142, 0],"bool"), list[8,8,142,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 142, 0],"bool"), list[8,8,142,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 142, 121].  Tensor sizes: [8, 1, 142, 0]
2025-03-05 15:23:07.777040 test begin: paddle.broadcast_to(Tensor([8, 1, 142, 0],"bool"), list[8,8,142,142,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 142, 0],"bool"), list[8,8,142,142,], ) 
 The expanded size of the tensor (142) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 142, 142].  Tensor sizes: [8, 1, 142, 0]
2025-03-05 15:23:07.777557 test begin: paddle.broadcast_to(Tensor([8, 1, 143, 0],"bool"), list[8,8,143,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 143, 0],"bool"), list[8,8,143,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 143, 113].  Tensor sizes: [8, 1, 143, 0]
2025-03-05 15:23:07.778140 test begin: paddle.broadcast_to(Tensor([8, 1, 143, 0],"bool"), list[8,8,143,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 143, 0],"bool"), list[8,8,143,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 143, 121].  Tensor sizes: [8, 1, 143, 0]
2025-03-05 15:23:07.778668 test begin: paddle.broadcast_to(Tensor([8, 1, 143, 0],"bool"), list[8,8,143,143,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 143, 0],"bool"), list[8,8,143,143,], ) 
 The expanded size of the tensor (143) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 143, 143].  Tensor sizes: [8, 1, 143, 0]
2025-03-05 15:23:07.779187 test begin: paddle.broadcast_to(Tensor([8, 1, 144, 0],"bool"), list[8,8,144,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 144, 0],"bool"), list[8,8,144,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 144, 113].  Tensor sizes: [8, 1, 144, 0]
2025-03-05 15:23:07.779718 test begin: paddle.broadcast_to(Tensor([8, 1, 144, 0],"bool"), list[8,8,144,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 144, 0],"bool"), list[8,8,144,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 144, 121].  Tensor sizes: [8, 1, 144, 0]
2025-03-05 15:23:07.780232 test begin: paddle.broadcast_to(Tensor([8, 1, 144, 0],"bool"), list[8,8,144,144,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 144, 0],"bool"), list[8,8,144,144,], ) 
 The expanded size of the tensor (144) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 144, 144].  Tensor sizes: [8, 1, 144, 0]
2025-03-05 15:23:07.780766 test begin: paddle.broadcast_to(Tensor([8, 1, 145, 0],"bool"), list[8,8,145,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 145, 0],"bool"), list[8,8,145,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 145, 113].  Tensor sizes: [8, 1, 145, 0]
2025-03-05 15:23:07.781281 test begin: paddle.broadcast_to(Tensor([8, 1, 145, 0],"bool"), list[8,8,145,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 145, 0],"bool"), list[8,8,145,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 145, 121].  Tensor sizes: [8, 1, 145, 0]
2025-03-05 15:23:07.781796 test begin: paddle.broadcast_to(Tensor([8, 1, 145, 0],"bool"), list[8,8,145,145,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 145, 0],"bool"), list[8,8,145,145,], ) 
 The expanded size of the tensor (145) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 145, 145].  Tensor sizes: [8, 1, 145, 0]
2025-03-05 15:23:07.782330 test begin: paddle.broadcast_to(Tensor([8, 1, 146, 0],"bool"), list[8,8,146,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 146, 0],"bool"), list[8,8,146,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 146, 113].  Tensor sizes: [8, 1, 146, 0]
2025-03-05 15:23:07.782849 test begin: paddle.broadcast_to(Tensor([8, 1, 146, 0],"bool"), list[8,8,146,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 146, 0],"bool"), list[8,8,146,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 146, 121].  Tensor sizes: [8, 1, 146, 0]
2025-03-05 15:23:07.783372 test begin: paddle.broadcast_to(Tensor([8, 1, 146, 0],"bool"), list[8,8,146,146,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 146, 0],"bool"), list[8,8,146,146,], ) 
 The expanded size of the tensor (146) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 146, 146].  Tensor sizes: [8, 1, 146, 0]
2025-03-05 15:23:07.783944 test begin: paddle.broadcast_to(Tensor([8, 1, 147, 0],"bool"), list[8,8,147,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 147, 0],"bool"), list[8,8,147,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 147, 113].  Tensor sizes: [8, 1, 147, 0]
2025-03-05 15:23:07.784485 test begin: paddle.broadcast_to(Tensor([8, 1, 147, 0],"bool"), list[8,8,147,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 147, 0],"bool"), list[8,8,147,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 147, 121].  Tensor sizes: [8, 1, 147, 0]
2025-03-05 15:23:07.785058 test begin: paddle.broadcast_to(Tensor([8, 1, 147, 0],"bool"), list[8,8,147,147,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 147, 0],"bool"), list[8,8,147,147,], ) 
 The expanded size of the tensor (147) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 147, 147].  Tensor sizes: [8, 1, 147, 0]
2025-03-05 15:23:07.785591 test begin: paddle.broadcast_to(Tensor([8, 1, 148, 0],"bool"), list[8,8,148,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 148, 0],"bool"), list[8,8,148,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 148, 113].  Tensor sizes: [8, 1, 148, 0]
2025-03-05 15:23:07.786096 test begin: paddle.broadcast_to(Tensor([8, 1, 148, 0],"bool"), list[8,8,148,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 148, 0],"bool"), list[8,8,148,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 148, 121].  Tensor sizes: [8, 1, 148, 0]
2025-03-05 15:23:07.786612 test begin: paddle.broadcast_to(Tensor([8, 1, 148, 0],"bool"), list[8,8,148,148,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 148, 0],"bool"), list[8,8,148,148,], ) 
 The expanded size of the tensor (148) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 148, 148].  Tensor sizes: [8, 1, 148, 0]
2025-03-05 15:23:07.787123 test begin: paddle.broadcast_to(Tensor([8, 1, 149, 0],"bool"), list[8,8,149,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 149, 0],"bool"), list[8,8,149,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 149, 113].  Tensor sizes: [8, 1, 149, 0]
2025-03-05 15:23:07.787652 test begin: paddle.broadcast_to(Tensor([8, 1, 149, 0],"bool"), list[8,8,149,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 149, 0],"bool"), list[8,8,149,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 149, 121].  Tensor sizes: [8, 1, 149, 0]
2025-03-05 15:23:07.788187 test begin: paddle.broadcast_to(Tensor([8, 1, 149, 0],"bool"), list[8,8,149,149,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 149, 0],"bool"), list[8,8,149,149,], ) 
 The expanded size of the tensor (149) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 149, 149].  Tensor sizes: [8, 1, 149, 0]
2025-03-05 15:23:07.788708 test begin: paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 15, 113].  Tensor sizes: [8, 1, 15, 0]
2025-03-05 15:23:07.789249 test begin: paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 15, 121].  Tensor sizes: [8, 1, 15, 0]
2025-03-05 15:23:07.789782 test begin: paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 15, 15].  Tensor sizes: [8, 1, 15, 0]
2025-03-05 15:23:07.790316 test begin: paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 15, 0],"bool"), list[8,8,15,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 15, 33].  Tensor sizes: [8, 1, 15, 0]
2025-03-05 15:23:07.790847 test begin: paddle.broadcast_to(Tensor([8, 1, 150, 0],"bool"), list[8,8,150,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 150, 0],"bool"), list[8,8,150,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 150, 113].  Tensor sizes: [8, 1, 150, 0]
2025-03-05 15:23:07.791369 test begin: paddle.broadcast_to(Tensor([8, 1, 150, 0],"bool"), list[8,8,150,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 150, 0],"bool"), list[8,8,150,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 150, 121].  Tensor sizes: [8, 1, 150, 0]
2025-03-05 15:23:07.791909 test begin: paddle.broadcast_to(Tensor([8, 1, 150, 0],"bool"), list[8,8,150,150,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 150, 0],"bool"), list[8,8,150,150,], ) 
 The expanded size of the tensor (150) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 150, 150].  Tensor sizes: [8, 1, 150, 0]
2025-03-05 15:23:07.792423 test begin: paddle.broadcast_to(Tensor([8, 1, 151, 0],"bool"), list[8,8,151,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 151, 0],"bool"), list[8,8,151,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 151, 113].  Tensor sizes: [8, 1, 151, 0]
2025-03-05 15:23:07.792954 test begin: paddle.broadcast_to(Tensor([8, 1, 151, 0],"bool"), list[8,8,151,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 151, 0],"bool"), list[8,8,151,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 151, 121].  Tensor sizes: [8, 1, 151, 0]
2025-03-05 15:23:07.793472 test begin: paddle.broadcast_to(Tensor([8, 1, 151, 0],"bool"), list[8,8,151,151,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 151, 0],"bool"), list[8,8,151,151,], ) 
 The expanded size of the tensor (151) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 151, 151].  Tensor sizes: [8, 1, 151, 0]
2025-03-05 15:23:07.794012 test begin: paddle.broadcast_to(Tensor([8, 1, 152, 0],"bool"), list[8,8,152,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 152, 0],"bool"), list[8,8,152,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 152, 113].  Tensor sizes: [8, 1, 152, 0]
2025-03-05 15:23:07.794545 test begin: paddle.broadcast_to(Tensor([8, 1, 152, 0],"bool"), list[8,8,152,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 152, 0],"bool"), list[8,8,152,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 152, 121].  Tensor sizes: [8, 1, 152, 0]
2025-03-05 15:23:07.795066 test begin: paddle.broadcast_to(Tensor([8, 1, 152, 0],"bool"), list[8,8,152,152,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 152, 0],"bool"), list[8,8,152,152,], ) 
 The expanded size of the tensor (152) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 152, 152].  Tensor sizes: [8, 1, 152, 0]
2025-03-05 15:23:07.795592 test begin: paddle.broadcast_to(Tensor([8, 1, 153, 0],"bool"), list[8,8,153,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 153, 0],"bool"), list[8,8,153,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 153, 113].  Tensor sizes: [8, 1, 153, 0]
2025-03-05 15:23:07.796115 test begin: paddle.broadcast_to(Tensor([8, 1, 153, 0],"bool"), list[8,8,153,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 153, 0],"bool"), list[8,8,153,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 153, 121].  Tensor sizes: [8, 1, 153, 0]
2025-03-05 15:23:07.796643 test begin: paddle.broadcast_to(Tensor([8, 1, 153, 0],"bool"), list[8,8,153,153,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 153, 0],"bool"), list[8,8,153,153,], ) 
 The expanded size of the tensor (153) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 153, 153].  Tensor sizes: [8, 1, 153, 0]
2025-03-05 15:23:07.797254 test begin: paddle.broadcast_to(Tensor([8, 1, 154, 0],"bool"), list[8,8,154,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 154, 0],"bool"), list[8,8,154,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 154, 113].  Tensor sizes: [8, 1, 154, 0]
2025-03-05 15:23:07.797797 test begin: paddle.broadcast_to(Tensor([8, 1, 154, 0],"bool"), list[8,8,154,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 154, 0],"bool"), list[8,8,154,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 154, 121].  Tensor sizes: [8, 1, 154, 0]
2025-03-05 15:23:07.798325 test begin: paddle.broadcast_to(Tensor([8, 1, 154, 0],"bool"), list[8,8,154,154,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 154, 0],"bool"), list[8,8,154,154,], ) 
 The expanded size of the tensor (154) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 154, 154].  Tensor sizes: [8, 1, 154, 0]
2025-03-05 15:23:07.798866 test begin: paddle.broadcast_to(Tensor([8, 1, 155, 0],"bool"), list[8,8,155,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 155, 0],"bool"), list[8,8,155,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 155, 113].  Tensor sizes: [8, 1, 155, 0]
2025-03-05 15:23:07.799375 test begin: paddle.broadcast_to(Tensor([8, 1, 155, 0],"bool"), list[8,8,155,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 155, 0],"bool"), list[8,8,155,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 155, 121].  Tensor sizes: [8, 1, 155, 0]
2025-03-05 15:23:07.799904 test begin: paddle.broadcast_to(Tensor([8, 1, 155, 0],"bool"), list[8,8,155,155,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 155, 0],"bool"), list[8,8,155,155,], ) 
 The expanded size of the tensor (155) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 155, 155].  Tensor sizes: [8, 1, 155, 0]
2025-03-05 15:23:07.800438 test begin: paddle.broadcast_to(Tensor([8, 1, 156, 0],"bool"), list[8,8,156,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 156, 0],"bool"), list[8,8,156,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 156, 113].  Tensor sizes: [8, 1, 156, 0]
2025-03-05 15:23:07.800975 test begin: paddle.broadcast_to(Tensor([8, 1, 156, 0],"bool"), list[8,8,156,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 156, 0],"bool"), list[8,8,156,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 156, 121].  Tensor sizes: [8, 1, 156, 0]
2025-03-05 15:23:07.801571 test begin: paddle.broadcast_to(Tensor([8, 1, 156, 0],"bool"), list[8,8,156,156,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 156, 0],"bool"), list[8,8,156,156,], ) 
 The expanded size of the tensor (156) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 156, 156].  Tensor sizes: [8, 1, 156, 0]
2025-03-05 15:23:07.802440 test begin: paddle.broadcast_to(Tensor([8, 1, 157, 0],"bool"), list[8,8,157,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 157, 0],"bool"), list[8,8,157,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 157, 113].  Tensor sizes: [8, 1, 157, 0]
2025-03-05 15:23:07.803115 test begin: paddle.broadcast_to(Tensor([8, 1, 157, 0],"bool"), list[8,8,157,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 157, 0],"bool"), list[8,8,157,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 157, 121].  Tensor sizes: [8, 1, 157, 0]
2025-03-05 15:23:07.803800 test begin: paddle.broadcast_to(Tensor([8, 1, 157, 0],"bool"), list[8,8,157,157,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 157, 0],"bool"), list[8,8,157,157,], ) 
 The expanded size of the tensor (157) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 157, 157].  Tensor sizes: [8, 1, 157, 0]
2025-03-05 15:23:07.804418 test begin: paddle.broadcast_to(Tensor([8, 1, 158, 0],"bool"), list[8,8,158,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 158, 0],"bool"), list[8,8,158,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 158, 113].  Tensor sizes: [8, 1, 158, 0]
2025-03-05 15:23:07.805034 test begin: paddle.broadcast_to(Tensor([8, 1, 158, 0],"bool"), list[8,8,158,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 158, 0],"bool"), list[8,8,158,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 158, 121].  Tensor sizes: [8, 1, 158, 0]
2025-03-05 15:23:07.805709 test begin: paddle.broadcast_to(Tensor([8, 1, 158, 0],"bool"), list[8,8,158,158,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 158, 0],"bool"), list[8,8,158,158,], ) 
 The expanded size of the tensor (158) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 158, 158].  Tensor sizes: [8, 1, 158, 0]
2025-03-05 15:23:07.806253 test begin: paddle.broadcast_to(Tensor([8, 1, 159, 0],"bool"), list[8,8,159,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 159, 0],"bool"), list[8,8,159,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 159, 113].  Tensor sizes: [8, 1, 159, 0]
2025-03-05 15:23:07.806778 test begin: paddle.broadcast_to(Tensor([8, 1, 159, 0],"bool"), list[8,8,159,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 159, 0],"bool"), list[8,8,159,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 159, 121].  Tensor sizes: [8, 1, 159, 0]
2025-03-05 15:23:07.807307 test begin: paddle.broadcast_to(Tensor([8, 1, 159, 0],"bool"), list[8,8,159,159,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 159, 0],"bool"), list[8,8,159,159,], ) 
 The expanded size of the tensor (159) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 159, 159].  Tensor sizes: [8, 1, 159, 0]
2025-03-05 15:23:07.807846 test begin: paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 16, 113].  Tensor sizes: [8, 1, 16, 0]
2025-03-05 15:23:07.808599 test begin: paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 16, 121].  Tensor sizes: [8, 1, 16, 0]
2025-03-05 15:23:07.809223 test begin: paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 16, 16].  Tensor sizes: [8, 1, 16, 0]
2025-03-05 15:23:07.809848 test begin: paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 16, 0],"bool"), list[8,8,16,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 16, 33].  Tensor sizes: [8, 1, 16, 0]
2025-03-05 15:23:07.810466 test begin: paddle.broadcast_to(Tensor([8, 1, 160, 0],"bool"), list[8,8,160,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 160, 0],"bool"), list[8,8,160,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 160, 113].  Tensor sizes: [8, 1, 160, 0]
2025-03-05 15:23:07.811073 test begin: paddle.broadcast_to(Tensor([8, 1, 160, 0],"bool"), list[8,8,160,160,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 160, 0],"bool"), list[8,8,160,160,], ) 
 The expanded size of the tensor (160) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 160, 160].  Tensor sizes: [8, 1, 160, 0]
2025-03-05 15:23:07.811697 test begin: paddle.broadcast_to(Tensor([8, 1, 161, 0],"bool"), list[8,8,161,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 161, 0],"bool"), list[8,8,161,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 161, 113].  Tensor sizes: [8, 1, 161, 0]
2025-03-05 15:23:07.812356 test begin: paddle.broadcast_to(Tensor([8, 1, 161, 0],"bool"), list[8,8,161,161,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 161, 0],"bool"), list[8,8,161,161,], ) 
 The expanded size of the tensor (161) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 161, 161].  Tensor sizes: [8, 1, 161, 0]
2025-03-05 15:23:07.812938 test begin: paddle.broadcast_to(Tensor([8, 1, 162, 0],"bool"), list[8,8,162,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 162, 0],"bool"), list[8,8,162,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 162, 113].  Tensor sizes: [8, 1, 162, 0]
2025-03-05 15:23:07.813503 test begin: paddle.broadcast_to(Tensor([8, 1, 162, 0],"bool"), list[8,8,162,162,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 162, 0],"bool"), list[8,8,162,162,], ) 
 The expanded size of the tensor (162) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 162, 162].  Tensor sizes: [8, 1, 162, 0]
2025-03-05 15:23:07.814119 test begin: paddle.broadcast_to(Tensor([8, 1, 163, 0],"bool"), list[8,8,163,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 163, 0],"bool"), list[8,8,163,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 163, 113].  Tensor sizes: [8, 1, 163, 0]
2025-03-05 15:23:07.814670 test begin: paddle.broadcast_to(Tensor([8, 1, 163, 0],"bool"), list[8,8,163,163,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 163, 0],"bool"), list[8,8,163,163,], ) 
 The expanded size of the tensor (163) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 163, 163].  Tensor sizes: [8, 1, 163, 0]
2025-03-05 15:23:07.815220 test begin: paddle.broadcast_to(Tensor([8, 1, 164, 0],"bool"), list[8,8,164,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 164, 0],"bool"), list[8,8,164,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 164, 113].  Tensor sizes: [8, 1, 164, 0]
2025-03-05 15:23:07.815769 test begin: paddle.broadcast_to(Tensor([8, 1, 164, 0],"bool"), list[8,8,164,164,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 164, 0],"bool"), list[8,8,164,164,], ) 
 The expanded size of the tensor (164) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 164, 164].  Tensor sizes: [8, 1, 164, 0]
2025-03-05 15:23:07.816304 test begin: paddle.broadcast_to(Tensor([8, 1, 165, 0],"bool"), list[8,8,165,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 165, 0],"bool"), list[8,8,165,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 165, 113].  Tensor sizes: [8, 1, 165, 0]
2025-03-05 15:23:07.816831 test begin: paddle.broadcast_to(Tensor([8, 1, 165, 0],"bool"), list[8,8,165,165,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 165, 0],"bool"), list[8,8,165,165,], ) 
 The expanded size of the tensor (165) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 165, 165].  Tensor sizes: [8, 1, 165, 0]
2025-03-05 15:23:07.817339 test begin: paddle.broadcast_to(Tensor([8, 1, 166, 0],"bool"), list[8,8,166,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 166, 0],"bool"), list[8,8,166,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 166, 113].  Tensor sizes: [8, 1, 166, 0]
2025-03-05 15:23:07.818023 test begin: paddle.broadcast_to(Tensor([8, 1, 166, 0],"bool"), list[8,8,166,166,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 166, 0],"bool"), list[8,8,166,166,], ) 
 The expanded size of the tensor (166) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 166, 166].  Tensor sizes: [8, 1, 166, 0]
2025-03-05 15:23:07.818654 test begin: paddle.broadcast_to(Tensor([8, 1, 167, 0],"bool"), list[8,8,167,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 167, 0],"bool"), list[8,8,167,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 167, 113].  Tensor sizes: [8, 1, 167, 0]
2025-03-05 15:23:07.819372 test begin: paddle.broadcast_to(Tensor([8, 1, 167, 0],"bool"), list[8,8,167,167,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 167, 0],"bool"), list[8,8,167,167,], ) 
 The expanded size of the tensor (167) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 167, 167].  Tensor sizes: [8, 1, 167, 0]
2025-03-05 15:23:07.820055 test begin: paddle.broadcast_to(Tensor([8, 1, 168, 0],"bool"), list[8,8,168,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 168, 0],"bool"), list[8,8,168,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 168, 113].  Tensor sizes: [8, 1, 168, 0]
2025-03-05 15:23:07.820656 test begin: paddle.broadcast_to(Tensor([8, 1, 168, 0],"bool"), list[8,8,168,168,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 168, 0],"bool"), list[8,8,168,168,], ) 
 The expanded size of the tensor (168) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 168, 168].  Tensor sizes: [8, 1, 168, 0]
2025-03-05 15:23:07.821399 test begin: paddle.broadcast_to(Tensor([8, 1, 169, 0],"bool"), list[8,8,169,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 169, 0],"bool"), list[8,8,169,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 169, 113].  Tensor sizes: [8, 1, 169, 0]
2025-03-05 15:23:07.822041 test begin: paddle.broadcast_to(Tensor([8, 1, 169, 0],"bool"), list[8,8,169,169,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 169, 0],"bool"), list[8,8,169,169,], ) 
 The expanded size of the tensor (169) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 169, 169].  Tensor sizes: [8, 1, 169, 0]
2025-03-05 15:23:07.822653 test begin: paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 17, 113].  Tensor sizes: [8, 1, 17, 0]
2025-03-05 15:23:07.823273 test begin: paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 17, 121].  Tensor sizes: [8, 1, 17, 0]
2025-03-05 15:23:07.823915 test begin: paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 17, 17].  Tensor sizes: [8, 1, 17, 0]
2025-03-05 15:23:07.824432 test begin: paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 17, 0],"bool"), list[8,8,17,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 17, 33].  Tensor sizes: [8, 1, 17, 0]
2025-03-05 15:23:07.824991 test begin: paddle.broadcast_to(Tensor([8, 1, 170, 0],"bool"), list[8,8,170,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 170, 0],"bool"), list[8,8,170,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 170, 113].  Tensor sizes: [8, 1, 170, 0]
2025-03-05 15:23:07.825519 test begin: paddle.broadcast_to(Tensor([8, 1, 170, 0],"bool"), list[8,8,170,170,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 170, 0],"bool"), list[8,8,170,170,], ) 
 The expanded size of the tensor (170) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 170, 170].  Tensor sizes: [8, 1, 170, 0]
2025-03-05 15:23:07.826066 test begin: paddle.broadcast_to(Tensor([8, 1, 171, 0],"bool"), list[8,8,171,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 171, 0],"bool"), list[8,8,171,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 171, 113].  Tensor sizes: [8, 1, 171, 0]
2025-03-05 15:23:07.826575 test begin: paddle.broadcast_to(Tensor([8, 1, 171, 0],"bool"), list[8,8,171,171,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 171, 0],"bool"), list[8,8,171,171,], ) 
 The expanded size of the tensor (171) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 171, 171].  Tensor sizes: [8, 1, 171, 0]
2025-03-05 15:23:07.827102 test begin: paddle.broadcast_to(Tensor([8, 1, 172, 0],"bool"), list[8,8,172,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 172, 0],"bool"), list[8,8,172,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 172, 113].  Tensor sizes: [8, 1, 172, 0]
2025-03-05 15:23:07.827638 test begin: paddle.broadcast_to(Tensor([8, 1, 172, 0],"bool"), list[8,8,172,172,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 172, 0],"bool"), list[8,8,172,172,], ) 
 The expanded size of the tensor (172) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 172, 172].  Tensor sizes: [8, 1, 172, 0]
2025-03-05 15:23:07.828157 test begin: paddle.broadcast_to(Tensor([8, 1, 173, 0],"bool"), list[8,8,173,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 173, 0],"bool"), list[8,8,173,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 173, 113].  Tensor sizes: [8, 1, 173, 0]
2025-03-05 15:23:07.828685 test begin: paddle.broadcast_to(Tensor([8, 1, 173, 0],"bool"), list[8,8,173,173,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 173, 0],"bool"), list[8,8,173,173,], ) 
 The expanded size of the tensor (173) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 173, 173].  Tensor sizes: [8, 1, 173, 0]
2025-03-05 15:23:07.829226 test begin: paddle.broadcast_to(Tensor([8, 1, 174, 0],"bool"), list[8,8,174,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 174, 0],"bool"), list[8,8,174,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 174, 113].  Tensor sizes: [8, 1, 174, 0]
2025-03-05 15:23:07.829737 test begin: paddle.broadcast_to(Tensor([8, 1, 174, 0],"bool"), list[8,8,174,174,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 174, 0],"bool"), list[8,8,174,174,], ) 
 The expanded size of the tensor (174) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 174, 174].  Tensor sizes: [8, 1, 174, 0]
2025-03-05 15:23:07.830249 test begin: paddle.broadcast_to(Tensor([8, 1, 175, 0],"bool"), list[8,8,175,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 175, 0],"bool"), list[8,8,175,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 175, 113].  Tensor sizes: [8, 1, 175, 0]
2025-03-05 15:23:07.830785 test begin: paddle.broadcast_to(Tensor([8, 1, 175, 0],"bool"), list[8,8,175,175,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 175, 0],"bool"), list[8,8,175,175,], ) 
 The expanded size of the tensor (175) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 175, 175].  Tensor sizes: [8, 1, 175, 0]
2025-03-05 15:23:07.831305 test begin: paddle.broadcast_to(Tensor([8, 1, 176, 0],"bool"), list[8,8,176,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 176, 0],"bool"), list[8,8,176,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 176, 113].  Tensor sizes: [8, 1, 176, 0]
2025-03-05 15:23:07.831821 test begin: paddle.broadcast_to(Tensor([8, 1, 176, 0],"bool"), list[8,8,176,176,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 176, 0],"bool"), list[8,8,176,176,], ) 
 The expanded size of the tensor (176) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 176, 176].  Tensor sizes: [8, 1, 176, 0]
2025-03-05 15:23:07.832334 test begin: paddle.broadcast_to(Tensor([8, 1, 177, 0],"bool"), list[8,8,177,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 177, 0],"bool"), list[8,8,177,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 177, 113].  Tensor sizes: [8, 1, 177, 0]
2025-03-05 15:23:07.832858 test begin: paddle.broadcast_to(Tensor([8, 1, 177, 0],"bool"), list[8,8,177,177,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 177, 0],"bool"), list[8,8,177,177,], ) 
 The expanded size of the tensor (177) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 177, 177].  Tensor sizes: [8, 1, 177, 0]
2025-03-05 15:23:07.840157 test begin: paddle.broadcast_to(Tensor([8, 1, 178, 0],"bool"), list[8,8,178,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 178, 0],"bool"), list[8,8,178,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 178, 113].  Tensor sizes: [8, 1, 178, 0]
2025-03-05 15:23:07.840728 test begin: paddle.broadcast_to(Tensor([8, 1, 178, 0],"bool"), list[8,8,178,178,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 178, 0],"bool"), list[8,8,178,178,], ) 
 The expanded size of the tensor (178) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 178, 178].  Tensor sizes: [8, 1, 178, 0]
2025-03-05 15:23:07.841261 test begin: paddle.broadcast_to(Tensor([8, 1, 179, 0],"bool"), list[8,8,179,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 179, 0],"bool"), list[8,8,179,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 179, 113].  Tensor sizes: [8, 1, 179, 0]
2025-03-05 15:23:07.841797 test begin: paddle.broadcast_to(Tensor([8, 1, 179, 0],"bool"), list[8,8,179,179,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 179, 0],"bool"), list[8,8,179,179,], ) 
 The expanded size of the tensor (179) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 179, 179].  Tensor sizes: [8, 1, 179, 0]
2025-03-05 15:23:07.842354 test begin: paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 18, 113].  Tensor sizes: [8, 1, 18, 0]
2025-03-05 15:23:07.843389 test begin: paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 18, 121].  Tensor sizes: [8, 1, 18, 0]
2025-03-05 15:23:07.844040 test begin: paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 18, 18].  Tensor sizes: [8, 1, 18, 0]
2025-03-05 15:23:07.844706 test begin: paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 18, 0],"bool"), list[8,8,18,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 18, 33].  Tensor sizes: [8, 1, 18, 0]
2025-03-05 15:23:07.845487 test begin: paddle.broadcast_to(Tensor([8, 1, 180, 0],"bool"), list[8,8,180,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 180, 0],"bool"), list[8,8,180,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 180, 113].  Tensor sizes: [8, 1, 180, 0]
2025-03-05 15:23:07.846418 test begin: paddle.broadcast_to(Tensor([8, 1, 180, 0],"bool"), list[8,8,180,180,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 180, 0],"bool"), list[8,8,180,180,], ) 
 The expanded size of the tensor (180) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 180, 180].  Tensor sizes: [8, 1, 180, 0]
2025-03-05 15:23:07.847396 test begin: paddle.broadcast_to(Tensor([8, 1, 181, 0],"bool"), list[8,8,181,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 181, 0],"bool"), list[8,8,181,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 181, 113].  Tensor sizes: [8, 1, 181, 0]
2025-03-05 15:23:07.848219 test begin: paddle.broadcast_to(Tensor([8, 1, 181, 0],"bool"), list[8,8,181,181,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 181, 0],"bool"), list[8,8,181,181,], ) 
 The expanded size of the tensor (181) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 181, 181].  Tensor sizes: [8, 1, 181, 0]
2025-03-05 15:23:07.848836 test begin: paddle.broadcast_to(Tensor([8, 1, 182, 0],"bool"), list[8,8,182,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 182, 0],"bool"), list[8,8,182,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 182, 113].  Tensor sizes: [8, 1, 182, 0]
2025-03-05 15:23:07.849428 test begin: paddle.broadcast_to(Tensor([8, 1, 182, 0],"bool"), list[8,8,182,182,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 182, 0],"bool"), list[8,8,182,182,], ) 
 The expanded size of the tensor (182) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 182, 182].  Tensor sizes: [8, 1, 182, 0]
2025-03-05 15:23:07.850411 test begin: paddle.broadcast_to(Tensor([8, 1, 183, 0],"bool"), list[8,8,183,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 183, 0],"bool"), list[8,8,183,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 183, 113].  Tensor sizes: [8, 1, 183, 0]
2025-03-05 15:23:07.851010 test begin: paddle.broadcast_to(Tensor([8, 1, 183, 0],"bool"), list[8,8,183,183,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 183, 0],"bool"), list[8,8,183,183,], ) 
 The expanded size of the tensor (183) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 183, 183].  Tensor sizes: [8, 1, 183, 0]
2025-03-05 15:23:07.851619 test begin: paddle.broadcast_to(Tensor([8, 1, 184, 0],"bool"), list[8,8,184,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 184, 0],"bool"), list[8,8,184,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 184, 113].  Tensor sizes: [8, 1, 184, 0]
2025-03-05 15:23:07.852314 test begin: paddle.broadcast_to(Tensor([8, 1, 184, 0],"bool"), list[8,8,184,184,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 184, 0],"bool"), list[8,8,184,184,], ) 
 The expanded size of the tensor (184) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 184, 184].  Tensor sizes: [8, 1, 184, 0]
2025-03-05 15:23:07.852963 test begin: paddle.broadcast_to(Tensor([8, 1, 185, 0],"bool"), list[8,8,185,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 185, 0],"bool"), list[8,8,185,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 185, 113].  Tensor sizes: [8, 1, 185, 0]
2025-03-05 15:23:07.853614 test begin: paddle.broadcast_to(Tensor([8, 1, 185, 0],"bool"), list[8,8,185,185,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 185, 0],"bool"), list[8,8,185,185,], ) 
 The expanded size of the tensor (185) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 185, 185].  Tensor sizes: [8, 1, 185, 0]
2025-03-05 15:23:07.854236 test begin: paddle.broadcast_to(Tensor([8, 1, 186, 0],"bool"), list[8,8,186,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 186, 0],"bool"), list[8,8,186,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 186, 113].  Tensor sizes: [8, 1, 186, 0]
2025-03-05 15:23:07.854879 test begin: paddle.broadcast_to(Tensor([8, 1, 186, 0],"bool"), list[8,8,186,186,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 186, 0],"bool"), list[8,8,186,186,], ) 
 The expanded size of the tensor (186) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 186, 186].  Tensor sizes: [8, 1, 186, 0]
2025-03-05 15:23:07.855507 test begin: paddle.broadcast_to(Tensor([8, 1, 187, 0],"bool"), list[8,8,187,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 187, 0],"bool"), list[8,8,187,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 187, 113].  Tensor sizes: [8, 1, 187, 0]
2025-03-05 15:23:07.856127 test begin: paddle.broadcast_to(Tensor([8, 1, 187, 0],"bool"), list[8,8,187,187,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 187, 0],"bool"), list[8,8,187,187,], ) 
 The expanded size of the tensor (187) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 187, 187].  Tensor sizes: [8, 1, 187, 0]
2025-03-05 15:23:07.856762 test begin: paddle.broadcast_to(Tensor([8, 1, 188, 0],"bool"), list[8,8,188,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 188, 0],"bool"), list[8,8,188,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 188, 113].  Tensor sizes: [8, 1, 188, 0]
2025-03-05 15:23:07.857511 test begin: paddle.broadcast_to(Tensor([8, 1, 188, 0],"bool"), list[8,8,188,188,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 188, 0],"bool"), list[8,8,188,188,], ) 
 The expanded size of the tensor (188) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 188, 188].  Tensor sizes: [8, 1, 188, 0]
2025-03-05 15:23:07.858299 test begin: paddle.broadcast_to(Tensor([8, 1, 189, 0],"bool"), list[8,8,189,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 189, 0],"bool"), list[8,8,189,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 189, 113].  Tensor sizes: [8, 1, 189, 0]
2025-03-05 15:23:07.859058 test begin: paddle.broadcast_to(Tensor([8, 1, 189, 0],"bool"), list[8,8,189,189,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 189, 0],"bool"), list[8,8,189,189,], ) 
 The expanded size of the tensor (189) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 189, 189].  Tensor sizes: [8, 1, 189, 0]
2025-03-05 15:23:07.859858 test begin: paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 19, 113].  Tensor sizes: [8, 1, 19, 0]
2025-03-05 15:23:07.860601 test begin: paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 19, 121].  Tensor sizes: [8, 1, 19, 0]
2025-03-05 15:23:07.861362 test begin: paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 19, 19].  Tensor sizes: [8, 1, 19, 0]
2025-03-05 15:23:07.862145 test begin: paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 19, 0],"bool"), list[8,8,19,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 19, 33].  Tensor sizes: [8, 1, 19, 0]
2025-03-05 15:23:07.862921 test begin: paddle.broadcast_to(Tensor([8, 1, 190, 0],"bool"), list[8,8,190,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 190, 0],"bool"), list[8,8,190,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 190, 113].  Tensor sizes: [8, 1, 190, 0]
2025-03-05 15:23:07.863476 test begin: paddle.broadcast_to(Tensor([8, 1, 190, 0],"bool"), list[8,8,190,190,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 190, 0],"bool"), list[8,8,190,190,], ) 
 The expanded size of the tensor (190) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 190, 190].  Tensor sizes: [8, 1, 190, 0]
2025-03-05 15:23:07.864162 test begin: paddle.broadcast_to(Tensor([8, 1, 191, 0],"bool"), list[8,8,191,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 191, 0],"bool"), list[8,8,191,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 191, 113].  Tensor sizes: [8, 1, 191, 0]
2025-03-05 15:23:07.864796 test begin: paddle.broadcast_to(Tensor([8, 1, 191, 0],"bool"), list[8,8,191,191,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 191, 0],"bool"), list[8,8,191,191,], ) 
 The expanded size of the tensor (191) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 191, 191].  Tensor sizes: [8, 1, 191, 0]
2025-03-05 15:23:07.865401 test begin: paddle.broadcast_to(Tensor([8, 1, 192, 0],"bool"), list[8,8,192,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 192, 0],"bool"), list[8,8,192,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 192, 113].  Tensor sizes: [8, 1, 192, 0]
2025-03-05 15:23:07.866113 test begin: paddle.broadcast_to(Tensor([8, 1, 192, 0],"bool"), list[8,8,192,192,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 192, 0],"bool"), list[8,8,192,192,], ) 
 The expanded size of the tensor (192) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 192, 192].  Tensor sizes: [8, 1, 192, 0]
2025-03-05 15:23:07.866683 test begin: paddle.broadcast_to(Tensor([8, 1, 193, 0],"bool"), list[8,8,193,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 193, 0],"bool"), list[8,8,193,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 193, 113].  Tensor sizes: [8, 1, 193, 0]
2025-03-05 15:23:07.867338 test begin: paddle.broadcast_to(Tensor([8, 1, 193, 0],"bool"), list[8,8,193,193,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 193, 0],"bool"), list[8,8,193,193,], ) 
 The expanded size of the tensor (193) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 193, 193].  Tensor sizes: [8, 1, 193, 0]
2025-03-05 15:23:07.868013 test begin: paddle.broadcast_to(Tensor([8, 1, 194, 0],"bool"), list[8,8,194,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 194, 0],"bool"), list[8,8,194,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 194, 113].  Tensor sizes: [8, 1, 194, 0]
2025-03-05 15:23:07.868695 test begin: paddle.broadcast_to(Tensor([8, 1, 194, 0],"bool"), list[8,8,194,194,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 194, 0],"bool"), list[8,8,194,194,], ) 
 The expanded size of the tensor (194) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 194, 194].  Tensor sizes: [8, 1, 194, 0]
2025-03-05 15:23:07.869262 test begin: paddle.broadcast_to(Tensor([8, 1, 195, 0],"bool"), list[8,8,195,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 195, 0],"bool"), list[8,8,195,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 195, 113].  Tensor sizes: [8, 1, 195, 0]
2025-03-05 15:23:07.869817 test begin: paddle.broadcast_to(Tensor([8, 1, 195, 0],"bool"), list[8,8,195,195,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 195, 0],"bool"), list[8,8,195,195,], ) 
 The expanded size of the tensor (195) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 195, 195].  Tensor sizes: [8, 1, 195, 0]
2025-03-05 15:23:07.870375 test begin: paddle.broadcast_to(Tensor([8, 1, 196, 0],"bool"), list[8,8,196,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 196, 0],"bool"), list[8,8,196,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 196, 113].  Tensor sizes: [8, 1, 196, 0]
2025-03-05 15:23:07.870919 test begin: paddle.broadcast_to(Tensor([8, 1, 196, 0],"bool"), list[8,8,196,196,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 196, 0],"bool"), list[8,8,196,196,], ) 
 The expanded size of the tensor (196) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 196, 196].  Tensor sizes: [8, 1, 196, 0]
2025-03-05 15:23:07.871444 test begin: paddle.broadcast_to(Tensor([8, 1, 197, 0],"bool"), list[8,8,197,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 197, 0],"bool"), list[8,8,197,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 197, 113].  Tensor sizes: [8, 1, 197, 0]
2025-03-05 15:23:07.871984 test begin: paddle.broadcast_to(Tensor([8, 1, 197, 0],"bool"), list[8,8,197,197,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 197, 0],"bool"), list[8,8,197,197,], ) 
 The expanded size of the tensor (197) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 197, 197].  Tensor sizes: [8, 1, 197, 0]
2025-03-05 15:23:07.872503 test begin: paddle.broadcast_to(Tensor([8, 1, 198, 0],"bool"), list[8,8,198,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 198, 0],"bool"), list[8,8,198,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 198, 113].  Tensor sizes: [8, 1, 198, 0]
2025-03-05 15:23:07.873080 test begin: paddle.broadcast_to(Tensor([8, 1, 198, 0],"bool"), list[8,8,198,198,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 198, 0],"bool"), list[8,8,198,198,], ) 
 The expanded size of the tensor (198) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 198, 198].  Tensor sizes: [8, 1, 198, 0]
2025-03-05 15:23:07.873622 test begin: paddle.broadcast_to(Tensor([8, 1, 199, 0],"bool"), list[8,8,199,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 199, 0],"bool"), list[8,8,199,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 199, 113].  Tensor sizes: [8, 1, 199, 0]
2025-03-05 15:23:07.874148 test begin: paddle.broadcast_to(Tensor([8, 1, 199, 0],"bool"), list[8,8,199,199,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 199, 0],"bool"), list[8,8,199,199,], ) 
 The expanded size of the tensor (199) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 199, 199].  Tensor sizes: [8, 1, 199, 0]
2025-03-05 15:23:07.874727 test begin: paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 2, 113].  Tensor sizes: [8, 1, 2, 0]
2025-03-05 15:23:07.875261 test begin: paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 2, 121].  Tensor sizes: [8, 1, 2, 0]
2025-03-05 15:23:07.875807 test begin: paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 2, 2].  Tensor sizes: [8, 1, 2, 0]
2025-03-05 15:23:07.876340 test begin: paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 2, 0],"bool"), list[8,8,2,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 2, 33].  Tensor sizes: [8, 1, 2, 0]
2025-03-05 15:23:07.876872 test begin: paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 20, 113].  Tensor sizes: [8, 1, 20, 0]
2025-03-05 15:23:07.877394 test begin: paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 20, 121].  Tensor sizes: [8, 1, 20, 0]
2025-03-05 15:23:07.877930 test begin: paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 20, 20].  Tensor sizes: [8, 1, 20, 0]
2025-03-05 15:23:07.878458 test begin: paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 20, 0],"bool"), list[8,8,20,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 20, 33].  Tensor sizes: [8, 1, 20, 0]
2025-03-05 15:23:07.878989 test begin: paddle.broadcast_to(Tensor([8, 1, 200, 0],"bool"), list[8,8,200,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 200, 0],"bool"), list[8,8,200,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 200, 113].  Tensor sizes: [8, 1, 200, 0]
2025-03-05 15:23:07.879525 test begin: paddle.broadcast_to(Tensor([8, 1, 200, 0],"bool"), list[8,8,200,200,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 200, 0],"bool"), list[8,8,200,200,], ) 
 The expanded size of the tensor (200) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 200, 200].  Tensor sizes: [8, 1, 200, 0]
2025-03-05 15:23:07.880056 test begin: paddle.broadcast_to(Tensor([8, 1, 201, 0],"bool"), list[8,8,201,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 201, 0],"bool"), list[8,8,201,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 201, 113].  Tensor sizes: [8, 1, 201, 0]
2025-03-05 15:23:07.880593 test begin: paddle.broadcast_to(Tensor([8, 1, 201, 0],"bool"), list[8,8,201,201,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 201, 0],"bool"), list[8,8,201,201,], ) 
 The expanded size of the tensor (201) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 201, 201].  Tensor sizes: [8, 1, 201, 0]
2025-03-05 15:23:07.881123 test begin: paddle.broadcast_to(Tensor([8, 1, 202, 0],"bool"), list[8,8,202,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 202, 0],"bool"), list[8,8,202,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 202, 113].  Tensor sizes: [8, 1, 202, 0]
2025-03-05 15:23:07.881655 test begin: paddle.broadcast_to(Tensor([8, 1, 202, 0],"bool"), list[8,8,202,202,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 202, 0],"bool"), list[8,8,202,202,], ) 
 The expanded size of the tensor (202) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 202, 202].  Tensor sizes: [8, 1, 202, 0]
2025-03-05 15:23:07.882187 test begin: paddle.broadcast_to(Tensor([8, 1, 203, 0],"bool"), list[8,8,203,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 203, 0],"bool"), list[8,8,203,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 203, 113].  Tensor sizes: [8, 1, 203, 0]
2025-03-05 15:23:07.882723 test begin: paddle.broadcast_to(Tensor([8, 1, 203, 0],"bool"), list[8,8,203,203,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 203, 0],"bool"), list[8,8,203,203,], ) 
 The expanded size of the tensor (203) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 203, 203].  Tensor sizes: [8, 1, 203, 0]
2025-03-05 15:23:07.883323 test begin: paddle.broadcast_to(Tensor([8, 1, 204, 0],"bool"), list[8,8,204,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 204, 0],"bool"), list[8,8,204,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 204, 113].  Tensor sizes: [8, 1, 204, 0]
2025-03-05 15:23:07.883889 test begin: paddle.broadcast_to(Tensor([8, 1, 204, 0],"bool"), list[8,8,204,204,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 204, 0],"bool"), list[8,8,204,204,], ) 
 The expanded size of the tensor (204) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 204, 204].  Tensor sizes: [8, 1, 204, 0]
2025-03-05 15:23:07.884427 test begin: paddle.broadcast_to(Tensor([8, 1, 205, 0],"bool"), list[8,8,205,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 205, 0],"bool"), list[8,8,205,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 205, 113].  Tensor sizes: [8, 1, 205, 0]
2025-03-05 15:23:07.884969 test begin: paddle.broadcast_to(Tensor([8, 1, 205, 0],"bool"), list[8,8,205,205,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 205, 0],"bool"), list[8,8,205,205,], ) 
 The expanded size of the tensor (205) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 205, 205].  Tensor sizes: [8, 1, 205, 0]
2025-03-05 15:23:07.885493 test begin: paddle.broadcast_to(Tensor([8, 1, 206, 0],"bool"), list[8,8,206,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 206, 0],"bool"), list[8,8,206,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 206, 113].  Tensor sizes: [8, 1, 206, 0]
2025-03-05 15:23:07.886107 test begin: paddle.broadcast_to(Tensor([8, 1, 206, 0],"bool"), list[8,8,206,206,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 206, 0],"bool"), list[8,8,206,206,], ) 
 The expanded size of the tensor (206) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 206, 206].  Tensor sizes: [8, 1, 206, 0]
2025-03-05 15:23:07.886636 test begin: paddle.broadcast_to(Tensor([8, 1, 207, 0],"bool"), list[8,8,207,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 207, 0],"bool"), list[8,8,207,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 207, 113].  Tensor sizes: [8, 1, 207, 0]
2025-03-05 15:23:07.887160 test begin: paddle.broadcast_to(Tensor([8, 1, 207, 0],"bool"), list[8,8,207,207,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 207, 0],"bool"), list[8,8,207,207,], ) 
 The expanded size of the tensor (207) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 207, 207].  Tensor sizes: [8, 1, 207, 0]
2025-03-05 15:23:07.887679 test begin: paddle.broadcast_to(Tensor([8, 1, 208, 0],"bool"), list[8,8,208,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 208, 0],"bool"), list[8,8,208,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 208, 113].  Tensor sizes: [8, 1, 208, 0]
2025-03-05 15:23:07.888201 test begin: paddle.broadcast_to(Tensor([8, 1, 208, 0],"bool"), list[8,8,208,208,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 208, 0],"bool"), list[8,8,208,208,], ) 
 The expanded size of the tensor (208) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 208, 208].  Tensor sizes: [8, 1, 208, 0]
2025-03-05 15:23:07.888725 test begin: paddle.broadcast_to(Tensor([8, 1, 209, 0],"bool"), list[8,8,209,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 209, 0],"bool"), list[8,8,209,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 209, 113].  Tensor sizes: [8, 1, 209, 0]
2025-03-05 15:23:07.889258 test begin: paddle.broadcast_to(Tensor([8, 1, 209, 0],"bool"), list[8,8,209,209,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 209, 0],"bool"), list[8,8,209,209,], ) 
 The expanded size of the tensor (209) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 209, 209].  Tensor sizes: [8, 1, 209, 0]
2025-03-05 15:23:07.889857 test begin: paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 21, 113].  Tensor sizes: [8, 1, 21, 0]
2025-03-05 15:23:07.890381 test begin: paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 21, 121].  Tensor sizes: [8, 1, 21, 0]
2025-03-05 15:23:07.890922 test begin: paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 21, 21].  Tensor sizes: [8, 1, 21, 0]
2025-03-05 15:23:07.891453 test begin: paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 21, 0],"bool"), list[8,8,21,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 21, 33].  Tensor sizes: [8, 1, 21, 0]
2025-03-05 15:23:07.891975 test begin: paddle.broadcast_to(Tensor([8, 1, 210, 0],"bool"), list[8,8,210,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 210, 0],"bool"), list[8,8,210,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 210, 113].  Tensor sizes: [8, 1, 210, 0]
2025-03-05 15:23:07.892492 test begin: paddle.broadcast_to(Tensor([8, 1, 210, 0],"bool"), list[8,8,210,210,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 210, 0],"bool"), list[8,8,210,210,], ) 
 The expanded size of the tensor (210) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 210, 210].  Tensor sizes: [8, 1, 210, 0]
2025-03-05 15:23:07.893022 test begin: paddle.broadcast_to(Tensor([8, 1, 211, 0],"bool"), list[8,8,211,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 211, 0],"bool"), list[8,8,211,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 211, 113].  Tensor sizes: [8, 1, 211, 0]
2025-03-05 15:23:07.893538 test begin: paddle.broadcast_to(Tensor([8, 1, 211, 0],"bool"), list[8,8,211,211,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 211, 0],"bool"), list[8,8,211,211,], ) 
 The expanded size of the tensor (211) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 211, 211].  Tensor sizes: [8, 1, 211, 0]
2025-03-05 15:23:07.894600 test begin: paddle.broadcast_to(Tensor([8, 1, 212, 0],"bool"), list[8,8,212,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 212, 0],"bool"), list[8,8,212,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 212, 113].  Tensor sizes: [8, 1, 212, 0]
2025-03-05 15:23:07.895300 test begin: paddle.broadcast_to(Tensor([8, 1, 212, 0],"bool"), list[8,8,212,212,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 212, 0],"bool"), list[8,8,212,212,], ) 
 The expanded size of the tensor (212) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 212, 212].  Tensor sizes: [8, 1, 212, 0]
2025-03-05 15:23:07.895951 test begin: paddle.broadcast_to(Tensor([8, 1, 213, 0],"bool"), list[8,8,213,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 213, 0],"bool"), list[8,8,213,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 213, 113].  Tensor sizes: [8, 1, 213, 0]
2025-03-05 15:23:07.896556 test begin: paddle.broadcast_to(Tensor([8, 1, 213, 0],"bool"), list[8,8,213,213,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 213, 0],"bool"), list[8,8,213,213,], ) 
 The expanded size of the tensor (213) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 213, 213].  Tensor sizes: [8, 1, 213, 0]
2025-03-05 15:23:07.897199 test begin: paddle.broadcast_to(Tensor([8, 1, 214, 0],"bool"), list[8,8,214,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 214, 0],"bool"), list[8,8,214,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 214, 113].  Tensor sizes: [8, 1, 214, 0]
2025-03-05 15:23:07.897760 test begin: paddle.broadcast_to(Tensor([8, 1, 214, 0],"bool"), list[8,8,214,214,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 214, 0],"bool"), list[8,8,214,214,], ) 
 The expanded size of the tensor (214) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 214, 214].  Tensor sizes: [8, 1, 214, 0]
2025-03-05 15:23:07.898535 test begin: paddle.broadcast_to(Tensor([8, 1, 215, 0],"bool"), list[8,8,215,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 215, 0],"bool"), list[8,8,215,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 215, 113].  Tensor sizes: [8, 1, 215, 0]
2025-03-05 15:23:07.899177 test begin: paddle.broadcast_to(Tensor([8, 1, 215, 0],"bool"), list[8,8,215,215,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 215, 0],"bool"), list[8,8,215,215,], ) 
 The expanded size of the tensor (215) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 215, 215].  Tensor sizes: [8, 1, 215, 0]
2025-03-05 15:23:07.899735 test begin: paddle.broadcast_to(Tensor([8, 1, 216, 0],"bool"), list[8,8,216,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 216, 0],"bool"), list[8,8,216,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 216, 113].  Tensor sizes: [8, 1, 216, 0]
2025-03-05 15:23:07.900287 test begin: paddle.broadcast_to(Tensor([8, 1, 216, 0],"bool"), list[8,8,216,216,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 216, 0],"bool"), list[8,8,216,216,], ) 
 The expanded size of the tensor (216) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 216, 216].  Tensor sizes: [8, 1, 216, 0]
2025-03-05 15:23:07.900917 test begin: paddle.broadcast_to(Tensor([8, 1, 217, 0],"bool"), list[8,8,217,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 217, 0],"bool"), list[8,8,217,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 217, 113].  Tensor sizes: [8, 1, 217, 0]
2025-03-05 15:23:07.901702 test begin: paddle.broadcast_to(Tensor([8, 1, 217, 0],"bool"), list[8,8,217,217,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 217, 0],"bool"), list[8,8,217,217,], ) 
 The expanded size of the tensor (217) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 217, 217].  Tensor sizes: [8, 1, 217, 0]
2025-03-05 15:23:07.902363 test begin: paddle.broadcast_to(Tensor([8, 1, 218, 0],"bool"), list[8,8,218,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 218, 0],"bool"), list[8,8,218,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 218, 113].  Tensor sizes: [8, 1, 218, 0]
2025-03-05 15:23:07.902946 test begin: paddle.broadcast_to(Tensor([8, 1, 218, 0],"bool"), list[8,8,218,218,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 218, 0],"bool"), list[8,8,218,218,], ) 
 The expanded size of the tensor (218) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 218, 218].  Tensor sizes: [8, 1, 218, 0]
2025-03-05 15:23:07.903493 test begin: paddle.broadcast_to(Tensor([8, 1, 219, 0],"bool"), list[8,8,219,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 219, 0],"bool"), list[8,8,219,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 219, 113].  Tensor sizes: [8, 1, 219, 0]
2025-03-05 15:23:07.904031 test begin: paddle.broadcast_to(Tensor([8, 1, 219, 0],"bool"), list[8,8,219,219,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 219, 0],"bool"), list[8,8,219,219,], ) 
 The expanded size of the tensor (219) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 219, 219].  Tensor sizes: [8, 1, 219, 0]
2025-03-05 15:23:07.904543 test begin: paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 22, 113].  Tensor sizes: [8, 1, 22, 0]
2025-03-05 15:23:07.905066 test begin: paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 22, 121].  Tensor sizes: [8, 1, 22, 0]
2025-03-05 15:23:07.905577 test begin: paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 22, 22].  Tensor sizes: [8, 1, 22, 0]
2025-03-05 15:23:07.906098 test begin: paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 22, 0],"bool"), list[8,8,22,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 22, 33].  Tensor sizes: [8, 1, 22, 0]
2025-03-05 15:23:07.906614 test begin: paddle.broadcast_to(Tensor([8, 1, 220, 0],"bool"), list[8,8,220,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 220, 0],"bool"), list[8,8,220,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 220, 113].  Tensor sizes: [8, 1, 220, 0]
2025-03-05 15:23:07.907127 test begin: paddle.broadcast_to(Tensor([8, 1, 220, 0],"bool"), list[8,8,220,220,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 220, 0],"bool"), list[8,8,220,220,], ) 
 The expanded size of the tensor (220) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 220, 220].  Tensor sizes: [8, 1, 220, 0]
2025-03-05 15:23:07.907723 test begin: paddle.broadcast_to(Tensor([8, 1, 221, 0],"bool"), list[8,8,221,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 221, 0],"bool"), list[8,8,221,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 221, 113].  Tensor sizes: [8, 1, 221, 0]
2025-03-05 15:23:07.908264 test begin: paddle.broadcast_to(Tensor([8, 1, 221, 0],"bool"), list[8,8,221,221,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 221, 0],"bool"), list[8,8,221,221,], ) 
 The expanded size of the tensor (221) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 221, 221].  Tensor sizes: [8, 1, 221, 0]
2025-03-05 15:23:07.908787 test begin: paddle.broadcast_to(Tensor([8, 1, 222, 0],"bool"), list[8,8,222,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 222, 0],"bool"), list[8,8,222,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 222, 113].  Tensor sizes: [8, 1, 222, 0]
2025-03-05 15:23:07.909304 test begin: paddle.broadcast_to(Tensor([8, 1, 222, 0],"bool"), list[8,8,222,222,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 222, 0],"bool"), list[8,8,222,222,], ) 
 The expanded size of the tensor (222) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 222, 222].  Tensor sizes: [8, 1, 222, 0]
2025-03-05 15:23:07.909830 test begin: paddle.broadcast_to(Tensor([8, 1, 223, 0],"bool"), list[8,8,223,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 223, 0],"bool"), list[8,8,223,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 223, 113].  Tensor sizes: [8, 1, 223, 0]
2025-03-05 15:23:07.910343 test begin: paddle.broadcast_to(Tensor([8, 1, 223, 0],"bool"), list[8,8,223,223,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 223, 0],"bool"), list[8,8,223,223,], ) 
 The expanded size of the tensor (223) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 223, 223].  Tensor sizes: [8, 1, 223, 0]
2025-03-05 15:23:07.910861 test begin: paddle.broadcast_to(Tensor([8, 1, 224, 0],"bool"), list[8,8,224,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 224, 0],"bool"), list[8,8,224,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 224, 113].  Tensor sizes: [8, 1, 224, 0]
2025-03-05 15:23:07.911385 test begin: paddle.broadcast_to(Tensor([8, 1, 224, 0],"bool"), list[8,8,224,224,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 224, 0],"bool"), list[8,8,224,224,], ) 
 The expanded size of the tensor (224) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 224, 224].  Tensor sizes: [8, 1, 224, 0]
2025-03-05 15:23:07.911923 test begin: paddle.broadcast_to(Tensor([8, 1, 225, 0],"bool"), list[8,8,225,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 225, 0],"bool"), list[8,8,225,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 225, 113].  Tensor sizes: [8, 1, 225, 0]
2025-03-05 15:23:07.912461 test begin: paddle.broadcast_to(Tensor([8, 1, 225, 0],"bool"), list[8,8,225,225,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 225, 0],"bool"), list[8,8,225,225,], ) 
 The expanded size of the tensor (225) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 225, 225].  Tensor sizes: [8, 1, 225, 0]
2025-03-05 15:23:07.913015 test begin: paddle.broadcast_to(Tensor([8, 1, 226, 0],"bool"), list[8,8,226,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 226, 0],"bool"), list[8,8,226,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 226, 113].  Tensor sizes: [8, 1, 226, 0]
2025-03-05 15:23:07.913540 test begin: paddle.broadcast_to(Tensor([8, 1, 226, 0],"bool"), list[8,8,226,226,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 226, 0],"bool"), list[8,8,226,226,], ) 
 The expanded size of the tensor (226) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 226, 226].  Tensor sizes: [8, 1, 226, 0]
2025-03-05 15:23:07.914071 test begin: paddle.broadcast_to(Tensor([8, 1, 227, 0],"bool"), list[8,8,227,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 227, 0],"bool"), list[8,8,227,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 227, 113].  Tensor sizes: [8, 1, 227, 0]
2025-03-05 15:23:07.914612 test begin: paddle.broadcast_to(Tensor([8, 1, 227, 0],"bool"), list[8,8,227,227,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 227, 0],"bool"), list[8,8,227,227,], ) 
 The expanded size of the tensor (227) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 227, 227].  Tensor sizes: [8, 1, 227, 0]
2025-03-05 15:23:07.915159 test begin: paddle.broadcast_to(Tensor([8, 1, 228, 0],"bool"), list[8,8,228,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 228, 0],"bool"), list[8,8,228,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 228, 113].  Tensor sizes: [8, 1, 228, 0]
2025-03-05 15:23:07.915707 test begin: paddle.broadcast_to(Tensor([8, 1, 228, 0],"bool"), list[8,8,228,228,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 228, 0],"bool"), list[8,8,228,228,], ) 
 The expanded size of the tensor (228) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 228, 228].  Tensor sizes: [8, 1, 228, 0]
2025-03-05 15:23:07.916294 test begin: paddle.broadcast_to(Tensor([8, 1, 229, 0],"bool"), list[8,8,229,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 229, 0],"bool"), list[8,8,229,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 229, 113].  Tensor sizes: [8, 1, 229, 0]
2025-03-05 15:23:07.916846 test begin: paddle.broadcast_to(Tensor([8, 1, 229, 0],"bool"), list[8,8,229,229,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 229, 0],"bool"), list[8,8,229,229,], ) 
 The expanded size of the tensor (229) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 229, 229].  Tensor sizes: [8, 1, 229, 0]
2025-03-05 15:23:07.917364 test begin: paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 23, 113].  Tensor sizes: [8, 1, 23, 0]
2025-03-05 15:23:07.917890 test begin: paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 23, 121].  Tensor sizes: [8, 1, 23, 0]
2025-03-05 15:23:07.918414 test begin: paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 23, 23].  Tensor sizes: [8, 1, 23, 0]
2025-03-05 15:23:07.918943 test begin: paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 23, 0],"bool"), list[8,8,23,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 23, 33].  Tensor sizes: [8, 1, 23, 0]
2025-03-05 15:23:07.919486 test begin: paddle.broadcast_to(Tensor([8, 1, 230, 0],"bool"), list[8,8,230,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 230, 0],"bool"), list[8,8,230,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 230, 113].  Tensor sizes: [8, 1, 230, 0]
2025-03-05 15:23:07.920055 test begin: paddle.broadcast_to(Tensor([8, 1, 230, 0],"bool"), list[8,8,230,230,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 230, 0],"bool"), list[8,8,230,230,], ) 
 The expanded size of the tensor (230) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 230, 230].  Tensor sizes: [8, 1, 230, 0]
2025-03-05 15:23:07.920592 test begin: paddle.broadcast_to(Tensor([8, 1, 231, 0],"bool"), list[8,8,231,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 231, 0],"bool"), list[8,8,231,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 231, 113].  Tensor sizes: [8, 1, 231, 0]
2025-03-05 15:23:07.921125 test begin: paddle.broadcast_to(Tensor([8, 1, 231, 0],"bool"), list[8,8,231,231,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 231, 0],"bool"), list[8,8,231,231,], ) 
 The expanded size of the tensor (231) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 231, 231].  Tensor sizes: [8, 1, 231, 0]
2025-03-05 15:23:07.921666 test begin: paddle.broadcast_to(Tensor([8, 1, 232, 0],"bool"), list[8,8,232,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 232, 0],"bool"), list[8,8,232,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 232, 113].  Tensor sizes: [8, 1, 232, 0]
2025-03-05 15:23:07.922234 test begin: paddle.broadcast_to(Tensor([8, 1, 232, 0],"bool"), list[8,8,232,232,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 232, 0],"bool"), list[8,8,232,232,], ) 
 The expanded size of the tensor (232) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 232, 232].  Tensor sizes: [8, 1, 232, 0]
2025-03-05 15:23:07.922775 test begin: paddle.broadcast_to(Tensor([8, 1, 233, 0],"bool"), list[8,8,233,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 233, 0],"bool"), list[8,8,233,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 233, 113].  Tensor sizes: [8, 1, 233, 0]
2025-03-05 15:23:07.923302 test begin: paddle.broadcast_to(Tensor([8, 1, 233, 0],"bool"), list[8,8,233,233,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 233, 0],"bool"), list[8,8,233,233,], ) 
 The expanded size of the tensor (233) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 233, 233].  Tensor sizes: [8, 1, 233, 0]
2025-03-05 15:23:07.923831 test begin: paddle.broadcast_to(Tensor([8, 1, 234, 0],"bool"), list[8,8,234,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 234, 0],"bool"), list[8,8,234,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 234, 113].  Tensor sizes: [8, 1, 234, 0]
2025-03-05 15:23:07.924346 test begin: paddle.broadcast_to(Tensor([8, 1, 234, 0],"bool"), list[8,8,234,234,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 234, 0],"bool"), list[8,8,234,234,], ) 
 The expanded size of the tensor (234) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 234, 234].  Tensor sizes: [8, 1, 234, 0]
2025-03-05 15:23:07.924917 test begin: paddle.broadcast_to(Tensor([8, 1, 235, 0],"bool"), list[8,8,235,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 235, 0],"bool"), list[8,8,235,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 235, 113].  Tensor sizes: [8, 1, 235, 0]
2025-03-05 15:23:07.925495 test begin: paddle.broadcast_to(Tensor([8, 1, 235, 0],"bool"), list[8,8,235,235,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 235, 0],"bool"), list[8,8,235,235,], ) 
 The expanded size of the tensor (235) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 235, 235].  Tensor sizes: [8, 1, 235, 0]
2025-03-05 15:23:07.926039 test begin: paddle.broadcast_to(Tensor([8, 1, 236, 0],"bool"), list[8,8,236,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 236, 0],"bool"), list[8,8,236,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 236, 113].  Tensor sizes: [8, 1, 236, 0]
2025-03-05 15:23:07.926561 test begin: paddle.broadcast_to(Tensor([8, 1, 236, 0],"bool"), list[8,8,236,236,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 236, 0],"bool"), list[8,8,236,236,], ) 
 The expanded size of the tensor (236) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 236, 236].  Tensor sizes: [8, 1, 236, 0]
2025-03-05 15:23:07.927094 test begin: paddle.broadcast_to(Tensor([8, 1, 237, 0],"bool"), list[8,8,237,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 237, 0],"bool"), list[8,8,237,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 237, 113].  Tensor sizes: [8, 1, 237, 0]
2025-03-05 15:23:07.927607 test begin: paddle.broadcast_to(Tensor([8, 1, 237, 0],"bool"), list[8,8,237,237,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 237, 0],"bool"), list[8,8,237,237,], ) 
 The expanded size of the tensor (237) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 237, 237].  Tensor sizes: [8, 1, 237, 0]
2025-03-05 15:23:07.928122 test begin: paddle.broadcast_to(Tensor([8, 1, 238, 0],"bool"), list[8,8,238,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 238, 0],"bool"), list[8,8,238,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 238, 113].  Tensor sizes: [8, 1, 238, 0]
2025-03-05 15:23:07.928684 test begin: paddle.broadcast_to(Tensor([8, 1, 238, 0],"bool"), list[8,8,238,238,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 238, 0],"bool"), list[8,8,238,238,], ) 
 The expanded size of the tensor (238) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 238, 238].  Tensor sizes: [8, 1, 238, 0]
2025-03-05 15:23:07.929207 test begin: paddle.broadcast_to(Tensor([8, 1, 239, 0],"bool"), list[8,8,239,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 239, 0],"bool"), list[8,8,239,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 239, 113].  Tensor sizes: [8, 1, 239, 0]
2025-03-05 15:23:07.929733 test begin: paddle.broadcast_to(Tensor([8, 1, 239, 0],"bool"), list[8,8,239,239,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 239, 0],"bool"), list[8,8,239,239,], ) 
 The expanded size of the tensor (239) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 239, 239].  Tensor sizes: [8, 1, 239, 0]
2025-03-05 15:23:07.930477 test begin: paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 24, 113].  Tensor sizes: [8, 1, 24, 0]
2025-03-05 15:23:07.931076 test begin: paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 24, 121].  Tensor sizes: [8, 1, 24, 0]
2025-03-05 15:23:07.931619 test begin: paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 24, 24].  Tensor sizes: [8, 1, 24, 0]
2025-03-05 15:23:07.932148 test begin: paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 24, 0],"bool"), list[8,8,24,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 24, 33].  Tensor sizes: [8, 1, 24, 0]
2025-03-05 15:23:07.932696 test begin: paddle.broadcast_to(Tensor([8, 1, 240, 0],"bool"), list[8,8,240,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 240, 0],"bool"), list[8,8,240,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 240, 113].  Tensor sizes: [8, 1, 240, 0]
2025-03-05 15:23:07.933705 test begin: paddle.broadcast_to(Tensor([8, 1, 240, 0],"bool"), list[8,8,240,240,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 240, 0],"bool"), list[8,8,240,240,], ) 
 The expanded size of the tensor (240) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 240, 240].  Tensor sizes: [8, 1, 240, 0]
2025-03-05 15:23:07.934346 test begin: paddle.broadcast_to(Tensor([8, 1, 241, 0],"bool"), list[8,8,241,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 241, 0],"bool"), list[8,8,241,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 241, 113].  Tensor sizes: [8, 1, 241, 0]
2025-03-05 15:23:07.934985 test begin: paddle.broadcast_to(Tensor([8, 1, 241, 0],"bool"), list[8,8,241,241,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 241, 0],"bool"), list[8,8,241,241,], ) 
 The expanded size of the tensor (241) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 241, 241].  Tensor sizes: [8, 1, 241, 0]
2025-03-05 15:23:07.935614 test begin: paddle.broadcast_to(Tensor([8, 1, 242, 0],"bool"), list[8,8,242,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 242, 0],"bool"), list[8,8,242,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 242, 113].  Tensor sizes: [8, 1, 242, 0]
2025-03-05 15:23:07.936249 test begin: paddle.broadcast_to(Tensor([8, 1, 242, 0],"bool"), list[8,8,242,242,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 242, 0],"bool"), list[8,8,242,242,], ) 
 The expanded size of the tensor (242) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 242, 242].  Tensor sizes: [8, 1, 242, 0]
2025-03-05 15:23:07.936879 test begin: paddle.broadcast_to(Tensor([8, 1, 243, 0],"bool"), list[8,8,243,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 243, 0],"bool"), list[8,8,243,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 243, 113].  Tensor sizes: [8, 1, 243, 0]
2025-03-05 15:23:07.937555 test begin: paddle.broadcast_to(Tensor([8, 1, 243, 0],"bool"), list[8,8,243,243,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 243, 0],"bool"), list[8,8,243,243,], ) 
 The expanded size of the tensor (243) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 243, 243].  Tensor sizes: [8, 1, 243, 0]
2025-03-05 15:23:07.938367 test begin: paddle.broadcast_to(Tensor([8, 1, 244, 0],"bool"), list[8,8,244,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 244, 0],"bool"), list[8,8,244,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 244, 113].  Tensor sizes: [8, 1, 244, 0]
2025-03-05 15:23:07.938933 test begin: paddle.broadcast_to(Tensor([8, 1, 244, 0],"bool"), list[8,8,244,244,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 244, 0],"bool"), list[8,8,244,244,], ) 
 The expanded size of the tensor (244) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 244, 244].  Tensor sizes: [8, 1, 244, 0]
2025-03-05 15:23:07.939502 test begin: paddle.broadcast_to(Tensor([8, 1, 245, 0],"bool"), list[8,8,245,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 245, 0],"bool"), list[8,8,245,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 245, 113].  Tensor sizes: [8, 1, 245, 0]
2025-03-05 15:23:07.940086 test begin: paddle.broadcast_to(Tensor([8, 1, 245, 0],"bool"), list[8,8,245,245,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 245, 0],"bool"), list[8,8,245,245,], ) 
 The expanded size of the tensor (245) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 245, 245].  Tensor sizes: [8, 1, 245, 0]
2025-03-05 15:23:07.940619 test begin: paddle.broadcast_to(Tensor([8, 1, 246, 0],"bool"), list[8,8,246,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 246, 0],"bool"), list[8,8,246,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 246, 113].  Tensor sizes: [8, 1, 246, 0]
2025-03-05 15:23:07.941159 test begin: paddle.broadcast_to(Tensor([8, 1, 246, 0],"bool"), list[8,8,246,246,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 246, 0],"bool"), list[8,8,246,246,], ) 
 The expanded size of the tensor (246) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 246, 246].  Tensor sizes: [8, 1, 246, 0]
2025-03-05 15:23:07.941686 test begin: paddle.broadcast_to(Tensor([8, 1, 247, 0],"bool"), list[8,8,247,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 247, 0],"bool"), list[8,8,247,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 247, 113].  Tensor sizes: [8, 1, 247, 0]
2025-03-05 15:23:07.942201 test begin: paddle.broadcast_to(Tensor([8, 1, 247, 0],"bool"), list[8,8,247,247,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 247, 0],"bool"), list[8,8,247,247,], ) 
 The expanded size of the tensor (247) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 247, 247].  Tensor sizes: [8, 1, 247, 0]
2025-03-05 15:23:07.942748 test begin: paddle.broadcast_to(Tensor([8, 1, 248, 0],"bool"), list[8,8,248,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 248, 0],"bool"), list[8,8,248,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 248, 113].  Tensor sizes: [8, 1, 248, 0]
2025-03-05 15:23:07.943390 test begin: paddle.broadcast_to(Tensor([8, 1, 248, 0],"bool"), list[8,8,248,248,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 248, 0],"bool"), list[8,8,248,248,], ) 
 The expanded size of the tensor (248) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 248, 248].  Tensor sizes: [8, 1, 248, 0]
2025-03-05 15:23:07.944103 test begin: paddle.broadcast_to(Tensor([8, 1, 249, 0],"bool"), list[8,8,249,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 249, 0],"bool"), list[8,8,249,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 249, 113].  Tensor sizes: [8, 1, 249, 0]
2025-03-05 15:23:07.945237 test begin: paddle.broadcast_to(Tensor([8, 1, 249, 0],"bool"), list[8,8,249,249,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 249, 0],"bool"), list[8,8,249,249,], ) 
 The expanded size of the tensor (249) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 249, 249].  Tensor sizes: [8, 1, 249, 0]
2025-03-05 15:23:07.945968 test begin: paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 25, 113].  Tensor sizes: [8, 1, 25, 0]
2025-03-05 15:23:07.946546 test begin: paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 25, 121].  Tensor sizes: [8, 1, 25, 0]
2025-03-05 15:23:07.947119 test begin: paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 25, 25].  Tensor sizes: [8, 1, 25, 0]
2025-03-05 15:23:07.947657 test begin: paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 25, 0],"bool"), list[8,8,25,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 25, 33].  Tensor sizes: [8, 1, 25, 0]
2025-03-05 15:23:07.948205 test begin: paddle.broadcast_to(Tensor([8, 1, 250, 0],"bool"), list[8,8,250,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 250, 0],"bool"), list[8,8,250,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 250, 113].  Tensor sizes: [8, 1, 250, 0]
2025-03-05 15:23:07.948752 test begin: paddle.broadcast_to(Tensor([8, 1, 250, 0],"bool"), list[8,8,250,250,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 250, 0],"bool"), list[8,8,250,250,], ) 
 The expanded size of the tensor (250) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 250, 250].  Tensor sizes: [8, 1, 250, 0]
2025-03-05 15:23:07.949273 test begin: paddle.broadcast_to(Tensor([8, 1, 251, 0],"bool"), list[8,8,251,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 251, 0],"bool"), list[8,8,251,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 251, 113].  Tensor sizes: [8, 1, 251, 0]
2025-03-05 15:23:07.949845 test begin: paddle.broadcast_to(Tensor([8, 1, 251, 0],"bool"), list[8,8,251,251,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 251, 0],"bool"), list[8,8,251,251,], ) 
 The expanded size of the tensor (251) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 251, 251].  Tensor sizes: [8, 1, 251, 0]
2025-03-05 15:23:07.950372 test begin: paddle.broadcast_to(Tensor([8, 1, 252, 0],"bool"), list[8,8,252,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 252, 0],"bool"), list[8,8,252,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 252, 113].  Tensor sizes: [8, 1, 252, 0]
2025-03-05 15:23:07.950906 test begin: paddle.broadcast_to(Tensor([8, 1, 252, 0],"bool"), list[8,8,252,252,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 252, 0],"bool"), list[8,8,252,252,], ) 
 The expanded size of the tensor (252) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 252, 252].  Tensor sizes: [8, 1, 252, 0]
2025-03-05 15:23:07.951429 test begin: paddle.broadcast_to(Tensor([8, 1, 253, 0],"bool"), list[8,8,253,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 253, 0],"bool"), list[8,8,253,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 253, 113].  Tensor sizes: [8, 1, 253, 0]
2025-03-05 15:23:07.951962 test begin: paddle.broadcast_to(Tensor([8, 1, 253, 0],"bool"), list[8,8,253,253,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 253, 0],"bool"), list[8,8,253,253,], ) 
 The expanded size of the tensor (253) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 253, 253].  Tensor sizes: [8, 1, 253, 0]
2025-03-05 15:23:07.952488 test begin: paddle.broadcast_to(Tensor([8, 1, 254, 0],"bool"), list[8,8,254,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 254, 0],"bool"), list[8,8,254,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 254, 113].  Tensor sizes: [8, 1, 254, 0]
2025-03-05 15:23:07.953096 test begin: paddle.broadcast_to(Tensor([8, 1, 254, 0],"bool"), list[8,8,254,254,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 254, 0],"bool"), list[8,8,254,254,], ) 
 The expanded size of the tensor (254) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 254, 254].  Tensor sizes: [8, 1, 254, 0]
2025-03-05 15:23:07.953629 test begin: paddle.broadcast_to(Tensor([8, 1, 255, 0],"bool"), list[8,8,255,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 255, 0],"bool"), list[8,8,255,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 255, 113].  Tensor sizes: [8, 1, 255, 0]
2025-03-05 15:23:07.954165 test begin: paddle.broadcast_to(Tensor([8, 1, 255, 0],"bool"), list[8,8,255,255,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 255, 0],"bool"), list[8,8,255,255,], ) 
 The expanded size of the tensor (255) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 255, 255].  Tensor sizes: [8, 1, 255, 0]
2025-03-05 15:23:07.954713 test begin: paddle.broadcast_to(Tensor([8, 1, 256, 0],"bool"), list[8,8,256,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 256, 0],"bool"), list[8,8,256,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 256, 113].  Tensor sizes: [8, 1, 256, 0]
2025-03-05 15:23:07.955250 test begin: paddle.broadcast_to(Tensor([8, 1, 256, 0],"bool"), list[8,8,256,256,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 256, 0],"bool"), list[8,8,256,256,], ) 
 The expanded size of the tensor (256) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 256, 256].  Tensor sizes: [8, 1, 256, 0]
2025-03-05 15:23:07.955810 test begin: paddle.broadcast_to(Tensor([8, 1, 257, 0],"bool"), list[8,8,257,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 257, 0],"bool"), list[8,8,257,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 257, 113].  Tensor sizes: [8, 1, 257, 0]
2025-03-05 15:23:07.956334 test begin: paddle.broadcast_to(Tensor([8, 1, 257, 0],"bool"), list[8,8,257,257,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 257, 0],"bool"), list[8,8,257,257,], ) 
 The expanded size of the tensor (257) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 257, 257].  Tensor sizes: [8, 1, 257, 0]
2025-03-05 15:23:07.956855 test begin: paddle.broadcast_to(Tensor([8, 1, 258, 0],"bool"), list[8,8,258,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 258, 0],"bool"), list[8,8,258,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 258, 113].  Tensor sizes: [8, 1, 258, 0]
2025-03-05 15:23:07.957361 test begin: paddle.broadcast_to(Tensor([8, 1, 258, 0],"bool"), list[8,8,258,258,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 258, 0],"bool"), list[8,8,258,258,], ) 
 The expanded size of the tensor (258) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 258, 258].  Tensor sizes: [8, 1, 258, 0]
2025-03-05 15:23:07.957975 test begin: paddle.broadcast_to(Tensor([8, 1, 259, 0],"bool"), list[8,8,259,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 259, 0],"bool"), list[8,8,259,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 259, 113].  Tensor sizes: [8, 1, 259, 0]
2025-03-05 15:23:07.958503 test begin: paddle.broadcast_to(Tensor([8, 1, 259, 0],"bool"), list[8,8,259,259,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 259, 0],"bool"), list[8,8,259,259,], ) 
 The expanded size of the tensor (259) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 259, 259].  Tensor sizes: [8, 1, 259, 0]
2025-03-05 15:23:07.959026 test begin: paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 26, 113].  Tensor sizes: [8, 1, 26, 0]
2025-03-05 15:23:07.959539 test begin: paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 26, 121].  Tensor sizes: [8, 1, 26, 0]
2025-03-05 15:23:07.960076 test begin: paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 26, 26].  Tensor sizes: [8, 1, 26, 0]
2025-03-05 15:23:07.960605 test begin: paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 26, 0],"bool"), list[8,8,26,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 26, 33].  Tensor sizes: [8, 1, 26, 0]
2025-03-05 15:23:07.961118 test begin: paddle.broadcast_to(Tensor([8, 1, 260, 0],"bool"), list[8,8,260,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 260, 0],"bool"), list[8,8,260,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 260, 113].  Tensor sizes: [8, 1, 260, 0]
2025-03-05 15:23:07.961632 test begin: paddle.broadcast_to(Tensor([8, 1, 260, 0],"bool"), list[8,8,260,260,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 260, 0],"bool"), list[8,8,260,260,], ) 
 The expanded size of the tensor (260) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 260, 260].  Tensor sizes: [8, 1, 260, 0]
2025-03-05 15:23:07.962144 test begin: paddle.broadcast_to(Tensor([8, 1, 261, 0],"bool"), list[8,8,261,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 261, 0],"bool"), list[8,8,261,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 261, 113].  Tensor sizes: [8, 1, 261, 0]
2025-03-05 15:23:07.962663 test begin: paddle.broadcast_to(Tensor([8, 1, 261, 0],"bool"), list[8,8,261,261,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 261, 0],"bool"), list[8,8,261,261,], ) 
 The expanded size of the tensor (261) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 261, 261].  Tensor sizes: [8, 1, 261, 0]
2025-03-05 15:23:07.963165 test begin: paddle.broadcast_to(Tensor([8, 1, 262, 0],"bool"), list[8,8,262,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 262, 0],"bool"), list[8,8,262,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 262, 113].  Tensor sizes: [8, 1, 262, 0]
2025-03-05 15:23:07.963688 test begin: paddle.broadcast_to(Tensor([8, 1, 262, 0],"bool"), list[8,8,262,262,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 262, 0],"bool"), list[8,8,262,262,], ) 
 The expanded size of the tensor (262) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 262, 262].  Tensor sizes: [8, 1, 262, 0]
2025-03-05 15:23:07.964198 test begin: paddle.broadcast_to(Tensor([8, 1, 263, 0],"bool"), list[8,8,263,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 263, 0],"bool"), list[8,8,263,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 263, 113].  Tensor sizes: [8, 1, 263, 0]
2025-03-05 15:23:07.964759 test begin: paddle.broadcast_to(Tensor([8, 1, 263, 0],"bool"), list[8,8,263,263,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 263, 0],"bool"), list[8,8,263,263,], ) 
 The expanded size of the tensor (263) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 263, 263].  Tensor sizes: [8, 1, 263, 0]
2025-03-05 15:23:07.965277 test begin: paddle.broadcast_to(Tensor([8, 1, 264, 0],"bool"), list[8,8,264,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 264, 0],"bool"), list[8,8,264,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 264, 113].  Tensor sizes: [8, 1, 264, 0]
2025-03-05 15:23:07.965802 test begin: paddle.broadcast_to(Tensor([8, 1, 264, 0],"bool"), list[8,8,264,264,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 264, 0],"bool"), list[8,8,264,264,], ) 
 The expanded size of the tensor (264) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 264, 264].  Tensor sizes: [8, 1, 264, 0]
2025-03-05 15:23:07.966331 test begin: paddle.broadcast_to(Tensor([8, 1, 265, 0],"bool"), list[8,8,265,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 265, 0],"bool"), list[8,8,265,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 265, 113].  Tensor sizes: [8, 1, 265, 0]
2025-03-05 15:23:07.966857 test begin: paddle.broadcast_to(Tensor([8, 1, 265, 0],"bool"), list[8,8,265,265,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 265, 0],"bool"), list[8,8,265,265,], ) 
 The expanded size of the tensor (265) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 265, 265].  Tensor sizes: [8, 1, 265, 0]
2025-03-05 15:23:07.967366 test begin: paddle.broadcast_to(Tensor([8, 1, 266, 0],"bool"), list[8,8,266,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 266, 0],"bool"), list[8,8,266,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 266, 113].  Tensor sizes: [8, 1, 266, 0]
2025-03-05 15:23:07.967884 test begin: paddle.broadcast_to(Tensor([8, 1, 266, 0],"bool"), list[8,8,266,266,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 266, 0],"bool"), list[8,8,266,266,], ) 
 The expanded size of the tensor (266) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 266, 266].  Tensor sizes: [8, 1, 266, 0]
2025-03-05 15:23:07.968391 test begin: paddle.broadcast_to(Tensor([8, 1, 267, 0],"bool"), list[8,8,267,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 267, 0],"bool"), list[8,8,267,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 267, 113].  Tensor sizes: [8, 1, 267, 0]
2025-03-05 15:23:07.968917 test begin: paddle.broadcast_to(Tensor([8, 1, 267, 0],"bool"), list[8,8,267,267,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 267, 0],"bool"), list[8,8,267,267,], ) 
 The expanded size of the tensor (267) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 267, 267].  Tensor sizes: [8, 1, 267, 0]
2025-03-05 15:23:07.969430 test begin: paddle.broadcast_to(Tensor([8, 1, 268, 0],"bool"), list[8,8,268,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 268, 0],"bool"), list[8,8,268,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 268, 113].  Tensor sizes: [8, 1, 268, 0]
2025-03-05 15:23:07.969963 test begin: paddle.broadcast_to(Tensor([8, 1, 268, 0],"bool"), list[8,8,268,268,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 268, 0],"bool"), list[8,8,268,268,], ) 
 The expanded size of the tensor (268) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 268, 268].  Tensor sizes: [8, 1, 268, 0]
2025-03-05 15:23:07.970525 test begin: paddle.broadcast_to(Tensor([8, 1, 269, 0],"bool"), list[8,8,269,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 269, 0],"bool"), list[8,8,269,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 269, 113].  Tensor sizes: [8, 1, 269, 0]
2025-03-05 15:23:07.971087 test begin: paddle.broadcast_to(Tensor([8, 1, 269, 0],"bool"), list[8,8,269,269,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 269, 0],"bool"), list[8,8,269,269,], ) 
 The expanded size of the tensor (269) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 269, 269].  Tensor sizes: [8, 1, 269, 0]
2025-03-05 15:23:07.971611 test begin: paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 27, 113].  Tensor sizes: [8, 1, 27, 0]
2025-03-05 15:23:07.972235 test begin: paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 27, 121].  Tensor sizes: [8, 1, 27, 0]
2025-03-05 15:23:07.973180 test begin: paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 27, 27].  Tensor sizes: [8, 1, 27, 0]
2025-03-05 15:23:07.973869 test begin: paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 27, 0],"bool"), list[8,8,27,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 27, 33].  Tensor sizes: [8, 1, 27, 0]
2025-03-05 15:23:07.974524 test begin: paddle.broadcast_to(Tensor([8, 1, 270, 0],"bool"), list[8,8,270,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 270, 0],"bool"), list[8,8,270,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 270, 113].  Tensor sizes: [8, 1, 270, 0]
2025-03-05 15:23:07.975699 test begin: paddle.broadcast_to(Tensor([8, 1, 270, 0],"bool"), list[8,8,270,270,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 270, 0],"bool"), list[8,8,270,270,], ) 
 The expanded size of the tensor (270) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 270, 270].  Tensor sizes: [8, 1, 270, 0]
2025-03-05 15:23:07.976446 test begin: paddle.broadcast_to(Tensor([8, 1, 271, 0],"bool"), list[8,8,271,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 271, 0],"bool"), list[8,8,271,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 271, 113].  Tensor sizes: [8, 1, 271, 0]
2025-03-05 15:23:07.977027 test begin: paddle.broadcast_to(Tensor([8, 1, 271, 0],"bool"), list[8,8,271,271,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 271, 0],"bool"), list[8,8,271,271,], ) 
 The expanded size of the tensor (271) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 271, 271].  Tensor sizes: [8, 1, 271, 0]
2025-03-05 15:23:07.977573 test begin: paddle.broadcast_to(Tensor([8, 1, 272, 0],"bool"), list[8,8,272,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 272, 0],"bool"), list[8,8,272,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 272, 113].  Tensor sizes: [8, 1, 272, 0]
2025-03-05 15:23:07.978120 test begin: paddle.broadcast_to(Tensor([8, 1, 272, 0],"bool"), list[8,8,272,272,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 272, 0],"bool"), list[8,8,272,272,], ) 
 The expanded size of the tensor (272) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 272, 272].  Tensor sizes: [8, 1, 272, 0]
2025-03-05 15:23:07.978644 test begin: paddle.broadcast_to(Tensor([8, 1, 273, 0],"bool"), list[8,8,273,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 273, 0],"bool"), list[8,8,273,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 273, 113].  Tensor sizes: [8, 1, 273, 0]
2025-03-05 15:23:07.979157 test begin: paddle.broadcast_to(Tensor([8, 1, 273, 0],"bool"), list[8,8,273,273,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 273, 0],"bool"), list[8,8,273,273,], ) 
 The expanded size of the tensor (273) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 273, 273].  Tensor sizes: [8, 1, 273, 0]
2025-03-05 15:23:07.979721 test begin: paddle.broadcast_to(Tensor([8, 1, 274, 0],"bool"), list[8,8,274,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 274, 0],"bool"), list[8,8,274,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 274, 113].  Tensor sizes: [8, 1, 274, 0]
2025-03-05 15:23:07.980404 test begin: paddle.broadcast_to(Tensor([8, 1, 274, 0],"bool"), list[8,8,274,274,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 274, 0],"bool"), list[8,8,274,274,], ) 
 The expanded size of the tensor (274) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 274, 274].  Tensor sizes: [8, 1, 274, 0]
2025-03-05 15:23:07.981037 test begin: paddle.broadcast_to(Tensor([8, 1, 275, 0],"bool"), list[8,8,275,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 275, 0],"bool"), list[8,8,275,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 275, 113].  Tensor sizes: [8, 1, 275, 0]
2025-03-05 15:23:07.981642 test begin: paddle.broadcast_to(Tensor([8, 1, 275, 0],"bool"), list[8,8,275,275,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 275, 0],"bool"), list[8,8,275,275,], ) 
 The expanded size of the tensor (275) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 275, 275].  Tensor sizes: [8, 1, 275, 0]
2025-03-05 15:23:07.982326 test begin: paddle.broadcast_to(Tensor([8, 1, 276, 0],"bool"), list[8,8,276,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 276, 0],"bool"), list[8,8,276,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 276, 113].  Tensor sizes: [8, 1, 276, 0]
2025-03-05 15:23:07.982968 test begin: paddle.broadcast_to(Tensor([8, 1, 276, 0],"bool"), list[8,8,276,276,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 276, 0],"bool"), list[8,8,276,276,], ) 
 The expanded size of the tensor (276) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 276, 276].  Tensor sizes: [8, 1, 276, 0]
2025-03-05 15:23:07.983570 test begin: paddle.broadcast_to(Tensor([8, 1, 277, 0],"bool"), list[8,8,277,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 277, 0],"bool"), list[8,8,277,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 277, 113].  Tensor sizes: [8, 1, 277, 0]
2025-03-05 15:23:07.984180 test begin: paddle.broadcast_to(Tensor([8, 1, 277, 0],"bool"), list[8,8,277,277,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 277, 0],"bool"), list[8,8,277,277,], ) 
 The expanded size of the tensor (277) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 277, 277].  Tensor sizes: [8, 1, 277, 0]
2025-03-05 15:23:07.984877 test begin: paddle.broadcast_to(Tensor([8, 1, 278, 0],"bool"), list[8,8,278,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 278, 0],"bool"), list[8,8,278,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 278, 113].  Tensor sizes: [8, 1, 278, 0]
2025-03-05 15:23:07.985486 test begin: paddle.broadcast_to(Tensor([8, 1, 278, 0],"bool"), list[8,8,278,278,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 278, 0],"bool"), list[8,8,278,278,], ) 
 The expanded size of the tensor (278) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 278, 278].  Tensor sizes: [8, 1, 278, 0]
2025-03-05 15:23:07.986109 test begin: paddle.broadcast_to(Tensor([8, 1, 279, 0],"bool"), list[8,8,279,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 279, 0],"bool"), list[8,8,279,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 279, 113].  Tensor sizes: [8, 1, 279, 0]
2025-03-05 15:23:07.986735 test begin: paddle.broadcast_to(Tensor([8, 1, 279, 0],"bool"), list[8,8,279,279,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 279, 0],"bool"), list[8,8,279,279,], ) 
 The expanded size of the tensor (279) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 279, 279].  Tensor sizes: [8, 1, 279, 0]
2025-03-05 15:23:07.987334 test begin: paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 28, 113].  Tensor sizes: [8, 1, 28, 0]
2025-03-05 15:23:07.987942 test begin: paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 28, 121].  Tensor sizes: [8, 1, 28, 0]
2025-03-05 15:23:07.988531 test begin: paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 28, 28].  Tensor sizes: [8, 1, 28, 0]
2025-03-05 15:23:07.989144 test begin: paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 28, 0],"bool"), list[8,8,28,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 28, 33].  Tensor sizes: [8, 1, 28, 0]
2025-03-05 15:23:07.989746 test begin: paddle.broadcast_to(Tensor([8, 1, 280, 0],"bool"), list[8,8,280,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 280, 0],"bool"), list[8,8,280,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 280, 113].  Tensor sizes: [8, 1, 280, 0]
2025-03-05 15:23:07.990342 test begin: paddle.broadcast_to(Tensor([8, 1, 280, 0],"bool"), list[8,8,280,280,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 280, 0],"bool"), list[8,8,280,280,], ) 
 The expanded size of the tensor (280) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 280, 280].  Tensor sizes: [8, 1, 280, 0]
2025-03-05 15:23:07.990957 test begin: paddle.broadcast_to(Tensor([8, 1, 281, 0],"bool"), list[8,8,281,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 281, 0],"bool"), list[8,8,281,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 281, 113].  Tensor sizes: [8, 1, 281, 0]
2025-03-05 15:23:07.991594 test begin: paddle.broadcast_to(Tensor([8, 1, 281, 0],"bool"), list[8,8,281,281,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 281, 0],"bool"), list[8,8,281,281,], ) 
 The expanded size of the tensor (281) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 281, 281].  Tensor sizes: [8, 1, 281, 0]
2025-03-05 15:23:07.992254 test begin: paddle.broadcast_to(Tensor([8, 1, 282, 0],"bool"), list[8,8,282,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 282, 0],"bool"), list[8,8,282,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 282, 113].  Tensor sizes: [8, 1, 282, 0]
2025-03-05 15:23:07.993119 test begin: paddle.broadcast_to(Tensor([8, 1, 282, 0],"bool"), list[8,8,282,282,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 282, 0],"bool"), list[8,8,282,282,], ) 
 The expanded size of the tensor (282) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 282, 282].  Tensor sizes: [8, 1, 282, 0]
2025-03-05 15:23:07.993747 test begin: paddle.broadcast_to(Tensor([8, 1, 283, 0],"bool"), list[8,8,283,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 283, 0],"bool"), list[8,8,283,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 283, 113].  Tensor sizes: [8, 1, 283, 0]
2025-03-05 15:23:07.994387 test begin: paddle.broadcast_to(Tensor([8, 1, 283, 0],"bool"), list[8,8,283,283,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 283, 0],"bool"), list[8,8,283,283,], ) 
 The expanded size of the tensor (283) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 283, 283].  Tensor sizes: [8, 1, 283, 0]
2025-03-05 15:23:07.995015 test begin: paddle.broadcast_to(Tensor([8, 1, 284, 0],"bool"), list[8,8,284,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 284, 0],"bool"), list[8,8,284,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 284, 113].  Tensor sizes: [8, 1, 284, 0]
2025-03-05 15:23:07.995613 test begin: paddle.broadcast_to(Tensor([8, 1, 284, 0],"bool"), list[8,8,284,284,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 284, 0],"bool"), list[8,8,284,284,], ) 
 The expanded size of the tensor (284) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 284, 284].  Tensor sizes: [8, 1, 284, 0]
2025-03-05 15:23:07.996204 test begin: paddle.broadcast_to(Tensor([8, 1, 285, 0],"bool"), list[8,8,285,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 285, 0],"bool"), list[8,8,285,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 285, 113].  Tensor sizes: [8, 1, 285, 0]
2025-03-05 15:23:07.996801 test begin: paddle.broadcast_to(Tensor([8, 1, 285, 0],"bool"), list[8,8,285,285,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 285, 0],"bool"), list[8,8,285,285,], ) 
 The expanded size of the tensor (285) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 285, 285].  Tensor sizes: [8, 1, 285, 0]
2025-03-05 15:23:07.997391 test begin: paddle.broadcast_to(Tensor([8, 1, 286, 0],"bool"), list[8,8,286,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 286, 0],"bool"), list[8,8,286,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 286, 113].  Tensor sizes: [8, 1, 286, 0]
2025-03-05 15:23:07.997992 test begin: paddle.broadcast_to(Tensor([8, 1, 286, 0],"bool"), list[8,8,286,286,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 286, 0],"bool"), list[8,8,286,286,], ) 
 The expanded size of the tensor (286) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 286, 286].  Tensor sizes: [8, 1, 286, 0]
2025-03-05 15:23:07.998592 test begin: paddle.broadcast_to(Tensor([8, 1, 287, 0],"bool"), list[8,8,287,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 287, 0],"bool"), list[8,8,287,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 287, 113].  Tensor sizes: [8, 1, 287, 0]
2025-03-05 15:23:07.999177 test begin: paddle.broadcast_to(Tensor([8, 1, 287, 0],"bool"), list[8,8,287,287,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 287, 0],"bool"), list[8,8,287,287,], ) 
 The expanded size of the tensor (287) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 287, 287].  Tensor sizes: [8, 1, 287, 0]
2025-03-05 15:23:07.999793 test begin: paddle.broadcast_to(Tensor([8, 1, 288, 0],"bool"), list[8,8,288,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 288, 0],"bool"), list[8,8,288,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 288, 113].  Tensor sizes: [8, 1, 288, 0]
2025-03-05 15:23:08.000565 test begin: paddle.broadcast_to(Tensor([8, 1, 288, 0],"bool"), list[8,8,288,288,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 288, 0],"bool"), list[8,8,288,288,], ) 
 The expanded size of the tensor (288) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 288, 288].  Tensor sizes: [8, 1, 288, 0]
2025-03-05 15:23:08.001324 test begin: paddle.broadcast_to(Tensor([8, 1, 289, 0],"bool"), list[8,8,289,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 289, 0],"bool"), list[8,8,289,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 289, 113].  Tensor sizes: [8, 1, 289, 0]
2025-03-05 15:23:08.002113 test begin: paddle.broadcast_to(Tensor([8, 1, 289, 0],"bool"), list[8,8,289,289,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 289, 0],"bool"), list[8,8,289,289,], ) 
 The expanded size of the tensor (289) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 289, 289].  Tensor sizes: [8, 1, 289, 0]
2025-03-05 15:23:08.002819 test begin: paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 29, 113].  Tensor sizes: [8, 1, 29, 0]
2025-03-05 15:23:08.003377 test begin: paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 29, 121].  Tensor sizes: [8, 1, 29, 0]
2025-03-05 15:23:08.003935 test begin: paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 29, 29].  Tensor sizes: [8, 1, 29, 0]
2025-03-05 15:23:08.004566 test begin: paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 29, 0],"bool"), list[8,8,29,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 29, 33].  Tensor sizes: [8, 1, 29, 0]
2025-03-05 15:23:08.005151 test begin: paddle.broadcast_to(Tensor([8, 1, 290, 0],"bool"), list[8,8,290,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 290, 0],"bool"), list[8,8,290,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 290, 113].  Tensor sizes: [8, 1, 290, 0]
2025-03-05 15:23:08.005717 test begin: paddle.broadcast_to(Tensor([8, 1, 290, 0],"bool"), list[8,8,290,290,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 290, 0],"bool"), list[8,8,290,290,], ) 
 The expanded size of the tensor (290) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 290, 290].  Tensor sizes: [8, 1, 290, 0]
2025-03-05 15:23:08.006264 test begin: paddle.broadcast_to(Tensor([8, 1, 291, 0],"bool"), list[8,8,291,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 291, 0],"bool"), list[8,8,291,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 291, 113].  Tensor sizes: [8, 1, 291, 0]
2025-03-05 15:23:08.006869 test begin: paddle.broadcast_to(Tensor([8, 1, 291, 0],"bool"), list[8,8,291,291,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 291, 0],"bool"), list[8,8,291,291,], ) 
 The expanded size of the tensor (291) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 291, 291].  Tensor sizes: [8, 1, 291, 0]
2025-03-05 15:23:08.007440 test begin: paddle.broadcast_to(Tensor([8, 1, 292, 0],"bool"), list[8,8,292,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 292, 0],"bool"), list[8,8,292,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 292, 113].  Tensor sizes: [8, 1, 292, 0]
2025-03-05 15:23:08.008040 test begin: paddle.broadcast_to(Tensor([8, 1, 292, 0],"bool"), list[8,8,292,292,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 292, 0],"bool"), list[8,8,292,292,], ) 
 The expanded size of the tensor (292) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 292, 292].  Tensor sizes: [8, 1, 292, 0]
2025-03-05 15:23:08.008616 test begin: paddle.broadcast_to(Tensor([8, 1, 293, 0],"bool"), list[8,8,293,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 293, 0],"bool"), list[8,8,293,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 293, 113].  Tensor sizes: [8, 1, 293, 0]
2025-03-05 15:23:08.009167 test begin: paddle.broadcast_to(Tensor([8, 1, 293, 0],"bool"), list[8,8,293,293,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 293, 0],"bool"), list[8,8,293,293,], ) 
 The expanded size of the tensor (293) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 293, 293].  Tensor sizes: [8, 1, 293, 0]
2025-03-05 15:23:08.009721 test begin: paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 3, 113].  Tensor sizes: [8, 1, 3, 0]
2025-03-05 15:23:08.010270 test begin: paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 3, 121].  Tensor sizes: [8, 1, 3, 0]
2025-03-05 15:23:08.010825 test begin: paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 3, 3].  Tensor sizes: [8, 1, 3, 0]
2025-03-05 15:23:08.011429 test begin: paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 3, 0],"bool"), list[8,8,3,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 3, 33].  Tensor sizes: [8, 1, 3, 0]
2025-03-05 15:23:08.012573 test begin: paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 30, 113].  Tensor sizes: [8, 1, 30, 0]
2025-03-05 15:23:08.013313 test begin: paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 30, 121].  Tensor sizes: [8, 1, 30, 0]
2025-03-05 15:23:08.013903 test begin: paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 30, 30].  Tensor sizes: [8, 1, 30, 0]
2025-03-05 15:23:08.014463 test begin: paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 30, 0],"bool"), list[8,8,30,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 30, 33].  Tensor sizes: [8, 1, 30, 0]
2025-03-05 15:23:08.015030 test begin: paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 31, 113].  Tensor sizes: [8, 1, 31, 0]
2025-03-05 15:23:08.015567 test begin: paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 31, 121].  Tensor sizes: [8, 1, 31, 0]
2025-03-05 15:23:08.016105 test begin: paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 31, 31].  Tensor sizes: [8, 1, 31, 0]
2025-03-05 15:23:08.016683 test begin: paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 31, 0],"bool"), list[8,8,31,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 31, 33].  Tensor sizes: [8, 1, 31, 0]
2025-03-05 15:23:08.017326 test begin: paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 32, 113].  Tensor sizes: [8, 1, 32, 0]
2025-03-05 15:23:08.017872 test begin: paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 32, 121].  Tensor sizes: [8, 1, 32, 0]
2025-03-05 15:23:08.018396 test begin: paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 32, 32].  Tensor sizes: [8, 1, 32, 0]
2025-03-05 15:23:08.018919 test begin: paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 32, 0],"bool"), list[8,8,32,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 32, 33].  Tensor sizes: [8, 1, 32, 0]
2025-03-05 15:23:08.019432 test begin: paddle.broadcast_to(Tensor([8, 1, 33, 0],"bool"), list[8,8,33,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 33, 0],"bool"), list[8,8,33,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 33, 113].  Tensor sizes: [8, 1, 33, 0]
2025-03-05 15:23:08.019961 test begin: paddle.broadcast_to(Tensor([8, 1, 33, 0],"bool"), list[8,8,33,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 33, 0],"bool"), list[8,8,33,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 33, 121].  Tensor sizes: [8, 1, 33, 0]
2025-03-05 15:23:08.020480 test begin: paddle.broadcast_to(Tensor([8, 1, 33, 0],"bool"), list[8,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 33, 0],"bool"), list[8,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 33, 33].  Tensor sizes: [8, 1, 33, 0]
2025-03-05 15:23:08.021005 test begin: paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 34, 113].  Tensor sizes: [8, 1, 34, 0]
2025-03-05 15:23:08.021549 test begin: paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 34, 121].  Tensor sizes: [8, 1, 34, 0]
2025-03-05 15:23:08.022073 test begin: paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 34, 33].  Tensor sizes: [8, 1, 34, 0]
2025-03-05 15:23:08.022626 test begin: paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 34, 0],"bool"), list[8,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 34, 34].  Tensor sizes: [8, 1, 34, 0]
2025-03-05 15:23:08.023181 test begin: paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 35, 113].  Tensor sizes: [8, 1, 35, 0]
2025-03-05 15:23:08.023716 test begin: paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 35, 121].  Tensor sizes: [8, 1, 35, 0]
2025-03-05 15:23:08.024229 test begin: paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 35, 33].  Tensor sizes: [8, 1, 35, 0]
2025-03-05 15:23:08.024742 test begin: paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 35, 0],"bool"), list[8,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 35, 35].  Tensor sizes: [8, 1, 35, 0]
2025-03-05 15:23:08.025275 test begin: paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 36, 113].  Tensor sizes: [8, 1, 36, 0]
2025-03-05 15:23:08.025800 test begin: paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 36, 121].  Tensor sizes: [8, 1, 36, 0]
2025-03-05 15:23:08.026314 test begin: paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 36, 33].  Tensor sizes: [8, 1, 36, 0]
2025-03-05 15:23:08.026833 test begin: paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 36, 0],"bool"), list[8,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 36, 36].  Tensor sizes: [8, 1, 36, 0]
2025-03-05 15:23:08.027344 test begin: paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 37, 113].  Tensor sizes: [8, 1, 37, 0]
2025-03-05 15:23:08.027869 test begin: paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 37, 121].  Tensor sizes: [8, 1, 37, 0]
2025-03-05 15:23:08.028373 test begin: paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 37, 33].  Tensor sizes: [8, 1, 37, 0]
2025-03-05 15:23:08.028915 test begin: paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 37, 0],"bool"), list[8,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 37, 37].  Tensor sizes: [8, 1, 37, 0]
2025-03-05 15:23:08.029448 test begin: paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 38, 113].  Tensor sizes: [8, 1, 38, 0]
2025-03-05 15:23:08.029977 test begin: paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 38, 121].  Tensor sizes: [8, 1, 38, 0]
2025-03-05 15:23:08.030497 test begin: paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 38, 33].  Tensor sizes: [8, 1, 38, 0]
2025-03-05 15:23:08.031029 test begin: paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 38, 0],"bool"), list[8,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 38, 38].  Tensor sizes: [8, 1, 38, 0]
2025-03-05 15:23:08.031751 test begin: paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 39, 113].  Tensor sizes: [8, 1, 39, 0]
2025-03-05 15:23:08.032427 test begin: paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 39, 121].  Tensor sizes: [8, 1, 39, 0]
2025-03-05 15:23:08.033101 test begin: paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 39, 33].  Tensor sizes: [8, 1, 39, 0]
2025-03-05 15:23:08.033640 test begin: paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 39, 0],"bool"), list[8,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 39, 39].  Tensor sizes: [8, 1, 39, 0]
2025-03-05 15:23:08.034173 test begin: paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 4, 113].  Tensor sizes: [8, 1, 4, 0]
2025-03-05 15:23:08.034708 test begin: paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 4, 121].  Tensor sizes: [8, 1, 4, 0]
2025-03-05 15:23:08.035245 test begin: paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 4, 33].  Tensor sizes: [8, 1, 4, 0]
2025-03-05 15:23:08.035785 test begin: paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 4, 0],"bool"), list[8,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 4, 4].  Tensor sizes: [8, 1, 4, 0]
2025-03-05 15:23:08.036302 test begin: paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 40, 113].  Tensor sizes: [8, 1, 40, 0]
2025-03-05 15:23:08.036834 test begin: paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 40, 121].  Tensor sizes: [8, 1, 40, 0]
2025-03-05 15:23:08.037353 test begin: paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 40, 33].  Tensor sizes: [8, 1, 40, 0]
2025-03-05 15:23:08.037918 test begin: paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 40, 0],"bool"), list[8,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 40, 40].  Tensor sizes: [8, 1, 40, 0]
2025-03-05 15:23:08.038444 test begin: paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 41, 113].  Tensor sizes: [8, 1, 41, 0]
2025-03-05 15:23:08.038973 test begin: paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 41, 121].  Tensor sizes: [8, 1, 41, 0]
2025-03-05 15:23:08.039484 test begin: paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 41, 33].  Tensor sizes: [8, 1, 41, 0]
2025-03-05 15:23:08.040027 test begin: paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 41, 0],"bool"), list[8,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 41, 41].  Tensor sizes: [8, 1, 41, 0]
2025-03-05 15:23:08.040544 test begin: paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 42, 113].  Tensor sizes: [8, 1, 42, 0]
2025-03-05 15:23:08.041067 test begin: paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 42, 121].  Tensor sizes: [8, 1, 42, 0]
2025-03-05 15:23:08.041576 test begin: paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 42, 33].  Tensor sizes: [8, 1, 42, 0]
2025-03-05 15:23:08.042105 test begin: paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 42, 0],"bool"), list[8,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 42, 42].  Tensor sizes: [8, 1, 42, 0]
2025-03-05 15:23:08.042669 test begin: paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 43, 113].  Tensor sizes: [8, 1, 43, 0]
2025-03-05 15:23:08.043179 test begin: paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 43, 121].  Tensor sizes: [8, 1, 43, 0]
2025-03-05 15:23:08.043697 test begin: paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 43, 33].  Tensor sizes: [8, 1, 43, 0]
2025-03-05 15:23:08.044207 test begin: paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 43, 0],"bool"), list[8,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 43, 43].  Tensor sizes: [8, 1, 43, 0]
2025-03-05 15:23:08.044727 test begin: paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 44, 113].  Tensor sizes: [8, 1, 44, 0]
2025-03-05 15:23:08.045246 test begin: paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 44, 121].  Tensor sizes: [8, 1, 44, 0]
2025-03-05 15:23:08.045779 test begin: paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 44, 33].  Tensor sizes: [8, 1, 44, 0]
2025-03-05 15:23:08.046381 test begin: paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 44, 0],"bool"), list[8,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 44, 44].  Tensor sizes: [8, 1, 44, 0]
2025-03-05 15:23:08.046944 test begin: paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 45, 113].  Tensor sizes: [8, 1, 45, 0]
2025-03-05 15:23:08.047490 test begin: paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 45, 121].  Tensor sizes: [8, 1, 45, 0]
2025-03-05 15:23:08.048035 test begin: paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 45, 33].  Tensor sizes: [8, 1, 45, 0]
2025-03-05 15:23:08.048576 test begin: paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 45, 0],"bool"), list[8,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 45, 45].  Tensor sizes: [8, 1, 45, 0]
2025-03-05 15:23:08.049134 test begin: paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 46, 113].  Tensor sizes: [8, 1, 46, 0]
2025-03-05 15:23:08.049707 test begin: paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 46, 121].  Tensor sizes: [8, 1, 46, 0]
2025-03-05 15:23:08.050218 test begin: paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 46, 33].  Tensor sizes: [8, 1, 46, 0]
2025-03-05 15:23:08.050765 test begin: paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 46, 0],"bool"), list[8,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 46, 46].  Tensor sizes: [8, 1, 46, 0]
2025-03-05 15:23:08.051300 test begin: paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 47, 113].  Tensor sizes: [8, 1, 47, 0]
2025-03-05 15:23:08.051846 test begin: paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 47, 121].  Tensor sizes: [8, 1, 47, 0]
2025-03-05 15:23:08.052379 test begin: paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 47, 33].  Tensor sizes: [8, 1, 47, 0]
2025-03-05 15:23:08.052902 test begin: paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 47, 0],"bool"), list[8,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 47, 47].  Tensor sizes: [8, 1, 47, 0]
2025-03-05 15:23:08.053407 test begin: paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 48, 113].  Tensor sizes: [8, 1, 48, 0]
2025-03-05 15:23:08.053929 test begin: paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 48, 121].  Tensor sizes: [8, 1, 48, 0]
2025-03-05 15:23:08.054483 test begin: paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 48, 33].  Tensor sizes: [8, 1, 48, 0]
2025-03-05 15:23:08.055031 test begin: paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 48, 0],"bool"), list[8,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 48, 48].  Tensor sizes: [8, 1, 48, 0]
2025-03-05 15:23:08.055560 test begin: paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 49, 113].  Tensor sizes: [8, 1, 49, 0]
2025-03-05 15:23:08.056122 test begin: paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 49, 121].  Tensor sizes: [8, 1, 49, 0]
2025-03-05 15:23:08.056639 test begin: paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 49, 33].  Tensor sizes: [8, 1, 49, 0]
2025-03-05 15:23:08.057158 test begin: paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 49, 0],"bool"), list[8,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 49, 49].  Tensor sizes: [8, 1, 49, 0]
2025-03-05 15:23:08.057686 test begin: paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 5, 113].  Tensor sizes: [8, 1, 5, 0]
2025-03-05 15:23:08.058258 test begin: paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 5, 121].  Tensor sizes: [8, 1, 5, 0]
2025-03-05 15:23:08.058811 test begin: paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 5, 33].  Tensor sizes: [8, 1, 5, 0]
2025-03-05 15:23:08.059335 test begin: paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 5, 0],"bool"), list[8,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 5, 5].  Tensor sizes: [8, 1, 5, 0]
2025-03-05 15:23:08.059847 test begin: paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 50, 113].  Tensor sizes: [8, 1, 50, 0]
2025-03-05 15:23:08.060345 test begin: paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 50, 121].  Tensor sizes: [8, 1, 50, 0]
2025-03-05 15:23:08.060876 test begin: paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 50, 33].  Tensor sizes: [8, 1, 50, 0]
2025-03-05 15:23:08.061425 test begin: paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 50, 0],"bool"), list[8,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 50, 50].  Tensor sizes: [8, 1, 50, 0]
2025-03-05 15:23:08.061983 test begin: paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 51, 113].  Tensor sizes: [8, 1, 51, 0]
2025-03-05 15:23:08.062549 test begin: paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 51, 121].  Tensor sizes: [8, 1, 51, 0]
2025-03-05 15:23:08.063100 test begin: paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 51, 33].  Tensor sizes: [8, 1, 51, 0]
2025-03-05 15:23:08.063677 test begin: paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 51, 0],"bool"), list[8,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 51, 51].  Tensor sizes: [8, 1, 51, 0]
2025-03-05 15:23:08.064199 test begin: paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 52, 113].  Tensor sizes: [8, 1, 52, 0]
2025-03-05 15:23:08.064727 test begin: paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 52, 121].  Tensor sizes: [8, 1, 52, 0]
2025-03-05 15:23:08.065250 test begin: paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 52, 33].  Tensor sizes: [8, 1, 52, 0]
2025-03-05 15:23:08.065771 test begin: paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 52, 0],"bool"), list[8,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 52, 52].  Tensor sizes: [8, 1, 52, 0]
2025-03-05 15:23:08.066290 test begin: paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 53, 113].  Tensor sizes: [8, 1, 53, 0]
2025-03-05 15:23:08.066816 test begin: paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 53, 121].  Tensor sizes: [8, 1, 53, 0]
2025-03-05 15:23:08.067348 test begin: paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 53, 33].  Tensor sizes: [8, 1, 53, 0]
2025-03-05 15:23:08.067909 test begin: paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 53, 0],"bool"), list[8,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 53, 53].  Tensor sizes: [8, 1, 53, 0]
2025-03-05 15:23:08.068450 test begin: paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 54, 113].  Tensor sizes: [8, 1, 54, 0]
2025-03-05 15:23:08.068988 test begin: paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 54, 121].  Tensor sizes: [8, 1, 54, 0]
2025-03-05 15:23:08.069508 test begin: paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 54, 33].  Tensor sizes: [8, 1, 54, 0]
2025-03-05 15:23:08.070037 test begin: paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 54, 0],"bool"), list[8,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 54, 54].  Tensor sizes: [8, 1, 54, 0]
2025-03-05 15:23:08.070561 test begin: paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 55, 113].  Tensor sizes: [8, 1, 55, 0]
2025-03-05 15:23:08.071115 test begin: paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 55, 121].  Tensor sizes: [8, 1, 55, 0]
2025-03-05 15:23:08.071640 test begin: paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 55, 33].  Tensor sizes: [8, 1, 55, 0]
2025-03-05 15:23:08.072158 test begin: paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 55, 0],"bool"), list[8,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 55, 55].  Tensor sizes: [8, 1, 55, 0]
2025-03-05 15:23:08.072688 test begin: paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 56, 113].  Tensor sizes: [8, 1, 56, 0]
2025-03-05 15:23:08.073211 test begin: paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 56, 121].  Tensor sizes: [8, 1, 56, 0]
2025-03-05 15:23:08.073735 test begin: paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 56, 33].  Tensor sizes: [8, 1, 56, 0]
2025-03-05 15:23:08.074289 test begin: paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 56, 0],"bool"), list[8,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 56, 56].  Tensor sizes: [8, 1, 56, 0]
2025-03-05 15:23:08.074834 test begin: paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 57, 113].  Tensor sizes: [8, 1, 57, 0]
2025-03-05 15:23:08.075380 test begin: paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 57, 121].  Tensor sizes: [8, 1, 57, 0]
2025-03-05 15:23:08.075928 test begin: paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 57, 33].  Tensor sizes: [8, 1, 57, 0]
2025-03-05 15:23:08.076474 test begin: paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 57, 0],"bool"), list[8,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 57, 57].  Tensor sizes: [8, 1, 57, 0]
2025-03-05 15:23:08.077026 test begin: paddle.broadcast_to(Tensor([8, 1, 58, 0],"bool"), list[8,8,58,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 58, 0],"bool"), list[8,8,58,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 58, 113].  Tensor sizes: [8, 1, 58, 0]
2025-03-05 15:23:08.077568 test begin: paddle.broadcast_to(Tensor([8, 1, 58, 0],"bool"), list[8,8,58,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 58, 0],"bool"), list[8,8,58,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 58, 121].  Tensor sizes: [8, 1, 58, 0]
2025-03-05 15:23:08.078128 test begin: paddle.broadcast_to(Tensor([8, 1, 58, 0],"bool"), list[8,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 58, 0],"bool"), list[8,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 58, 58].  Tensor sizes: [8, 1, 58, 0]
2025-03-05 15:23:08.078686 test begin: paddle.broadcast_to(Tensor([8, 1, 59, 0],"bool"), list[8,8,59,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 59, 0],"bool"), list[8,8,59,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 59, 113].  Tensor sizes: [8, 1, 59, 0]
2025-03-05 15:23:08.079254 test begin: paddle.broadcast_to(Tensor([8, 1, 59, 0],"bool"), list[8,8,59,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 59, 0],"bool"), list[8,8,59,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 59, 121].  Tensor sizes: [8, 1, 59, 0]
2025-03-05 15:23:08.079812 test begin: paddle.broadcast_to(Tensor([8, 1, 59, 0],"bool"), list[8,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 59, 0],"bool"), list[8,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 59, 59].  Tensor sizes: [8, 1, 59, 0]
2025-03-05 15:23:08.080340 test begin: paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 6, 113].  Tensor sizes: [8, 1, 6, 0]
2025-03-05 15:23:08.080869 test begin: paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 6, 121].  Tensor sizes: [8, 1, 6, 0]
2025-03-05 15:23:08.081379 test begin: paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 6, 33].  Tensor sizes: [8, 1, 6, 0]
2025-03-05 15:23:08.081929 test begin: paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 6, 0],"bool"), list[8,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 6, 6].  Tensor sizes: [8, 1, 6, 0]
2025-03-05 15:23:08.082485 test begin: paddle.broadcast_to(Tensor([8, 1, 60, 0],"bool"), list[8,8,60,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 60, 0],"bool"), list[8,8,60,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 60, 113].  Tensor sizes: [8, 1, 60, 0]
2025-03-05 15:23:08.083037 test begin: paddle.broadcast_to(Tensor([8, 1, 60, 0],"bool"), list[8,8,60,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 60, 0],"bool"), list[8,8,60,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 60, 121].  Tensor sizes: [8, 1, 60, 0]
2025-03-05 15:23:08.083551 test begin: paddle.broadcast_to(Tensor([8, 1, 60, 0],"bool"), list[8,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 60, 0],"bool"), list[8,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 60, 60].  Tensor sizes: [8, 1, 60, 0]
2025-03-05 15:23:08.084088 test begin: paddle.broadcast_to(Tensor([8, 1, 61, 0],"bool"), list[8,8,61,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 61, 0],"bool"), list[8,8,61,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 61, 113].  Tensor sizes: [8, 1, 61, 0]
2025-03-05 15:23:08.084609 test begin: paddle.broadcast_to(Tensor([8, 1, 61, 0],"bool"), list[8,8,61,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 61, 0],"bool"), list[8,8,61,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 61, 121].  Tensor sizes: [8, 1, 61, 0]
2025-03-05 15:23:08.085160 test begin: paddle.broadcast_to(Tensor([8, 1, 61, 0],"bool"), list[8,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 61, 0],"bool"), list[8,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 61, 61].  Tensor sizes: [8, 1, 61, 0]
2025-03-05 15:23:08.085710 test begin: paddle.broadcast_to(Tensor([8, 1, 62, 0],"bool"), list[8,8,62,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 62, 0],"bool"), list[8,8,62,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 62, 113].  Tensor sizes: [8, 1, 62, 0]
2025-03-05 15:23:08.086250 test begin: paddle.broadcast_to(Tensor([8, 1, 62, 0],"bool"), list[8,8,62,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 62, 0],"bool"), list[8,8,62,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 62, 121].  Tensor sizes: [8, 1, 62, 0]
2025-03-05 15:23:08.086798 test begin: paddle.broadcast_to(Tensor([8, 1, 62, 0],"bool"), list[8,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 62, 0],"bool"), list[8,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 62, 62].  Tensor sizes: [8, 1, 62, 0]
2025-03-05 15:23:08.087326 test begin: paddle.broadcast_to(Tensor([8, 1, 63, 0],"bool"), list[8,8,63,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 63, 0],"bool"), list[8,8,63,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 63, 113].  Tensor sizes: [8, 1, 63, 0]
2025-03-05 15:23:08.087861 test begin: paddle.broadcast_to(Tensor([8, 1, 63, 0],"bool"), list[8,8,63,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 63, 0],"bool"), list[8,8,63,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 63, 121].  Tensor sizes: [8, 1, 63, 0]
2025-03-05 15:23:08.088384 test begin: paddle.broadcast_to(Tensor([8, 1, 63, 0],"bool"), list[8,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 63, 0],"bool"), list[8,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 63, 63].  Tensor sizes: [8, 1, 63, 0]
2025-03-05 15:23:08.088915 test begin: paddle.broadcast_to(Tensor([8, 1, 64, 0],"bool"), list[8,8,64,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 64, 0],"bool"), list[8,8,64,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 64, 113].  Tensor sizes: [8, 1, 64, 0]
2025-03-05 15:23:08.089447 test begin: paddle.broadcast_to(Tensor([8, 1, 64, 0],"bool"), list[8,8,64,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 64, 0],"bool"), list[8,8,64,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 64, 121].  Tensor sizes: [8, 1, 64, 0]
2025-03-05 15:23:08.089973 test begin: paddle.broadcast_to(Tensor([8, 1, 64, 0],"bool"), list[8,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 64, 0],"bool"), list[8,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 64, 64].  Tensor sizes: [8, 1, 64, 0]
2025-03-05 15:23:08.090489 test begin: paddle.broadcast_to(Tensor([8, 1, 65, 0],"bool"), list[8,8,65,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 65, 0],"bool"), list[8,8,65,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 65, 113].  Tensor sizes: [8, 1, 65, 0]
2025-03-05 15:23:08.091017 test begin: paddle.broadcast_to(Tensor([8, 1, 65, 0],"bool"), list[8,8,65,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 65, 0],"bool"), list[8,8,65,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 65, 121].  Tensor sizes: [8, 1, 65, 0]
2025-03-05 15:23:08.091530 test begin: paddle.broadcast_to(Tensor([8, 1, 65, 0],"bool"), list[8,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 65, 0],"bool"), list[8,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 65, 65].  Tensor sizes: [8, 1, 65, 0]
2025-03-05 15:23:08.092058 test begin: paddle.broadcast_to(Tensor([8, 1, 66, 0],"bool"), list[8,8,66,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 66, 0],"bool"), list[8,8,66,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 66, 113].  Tensor sizes: [8, 1, 66, 0]
2025-03-05 15:23:08.092570 test begin: paddle.broadcast_to(Tensor([8, 1, 66, 0],"bool"), list[8,8,66,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 66, 0],"bool"), list[8,8,66,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 66, 121].  Tensor sizes: [8, 1, 66, 0]
2025-03-05 15:23:08.093145 test begin: paddle.broadcast_to(Tensor([8, 1, 66, 0],"bool"), list[8,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 66, 0],"bool"), list[8,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 66, 66].  Tensor sizes: [8, 1, 66, 0]
2025-03-05 15:23:08.093709 test begin: paddle.broadcast_to(Tensor([8, 1, 67, 0],"bool"), list[8,8,67,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 67, 0],"bool"), list[8,8,67,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 67, 113].  Tensor sizes: [8, 1, 67, 0]
2025-03-05 15:23:08.094260 test begin: paddle.broadcast_to(Tensor([8, 1, 67, 0],"bool"), list[8,8,67,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 67, 0],"bool"), list[8,8,67,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 67, 121].  Tensor sizes: [8, 1, 67, 0]
2025-03-05 15:23:08.094817 test begin: paddle.broadcast_to(Tensor([8, 1, 67, 0],"bool"), list[8,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 67, 0],"bool"), list[8,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 67, 67].  Tensor sizes: [8, 1, 67, 0]
2025-03-05 15:23:08.095369 test begin: paddle.broadcast_to(Tensor([8, 1, 68, 0],"bool"), list[8,8,68,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 68, 0],"bool"), list[8,8,68,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 68, 113].  Tensor sizes: [8, 1, 68, 0]
2025-03-05 15:23:08.095997 test begin: paddle.broadcast_to(Tensor([8, 1, 68, 0],"bool"), list[8,8,68,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 68, 0],"bool"), list[8,8,68,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 68, 121].  Tensor sizes: [8, 1, 68, 0]
2025-03-05 15:23:08.096892 test begin: paddle.broadcast_to(Tensor([8, 1, 68, 0],"bool"), list[8,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 68, 0],"bool"), list[8,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 68, 68].  Tensor sizes: [8, 1, 68, 0]
2025-03-05 15:23:08.098070 test begin: paddle.broadcast_to(Tensor([8, 1, 69, 0],"bool"), list[8,8,69,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 69, 0],"bool"), list[8,8,69,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 69, 113].  Tensor sizes: [8, 1, 69, 0]
2025-03-05 15:23:08.098848 test begin: paddle.broadcast_to(Tensor([8, 1, 69, 0],"bool"), list[8,8,69,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 69, 0],"bool"), list[8,8,69,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 69, 121].  Tensor sizes: [8, 1, 69, 0]
2025-03-05 15:23:08.099388 test begin: paddle.broadcast_to(Tensor([8, 1, 69, 0],"bool"), list[8,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 69, 0],"bool"), list[8,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 69, 69].  Tensor sizes: [8, 1, 69, 0]
2025-03-05 15:23:08.099937 test begin: paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 7, 113].  Tensor sizes: [8, 1, 7, 0]
2025-03-05 15:23:08.100541 test begin: paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 7, 121].  Tensor sizes: [8, 1, 7, 0]
2025-03-05 15:23:08.101093 test begin: paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 7, 33].  Tensor sizes: [8, 1, 7, 0]
2025-03-05 15:23:08.101616 test begin: paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 7, 0],"bool"), list[8,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 7, 7].  Tensor sizes: [8, 1, 7, 0]
2025-03-05 15:23:08.102141 test begin: paddle.broadcast_to(Tensor([8, 1, 70, 0],"bool"), list[8,8,70,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 70, 0],"bool"), list[8,8,70,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 70, 113].  Tensor sizes: [8, 1, 70, 0]
2025-03-05 15:23:08.102662 test begin: paddle.broadcast_to(Tensor([8, 1, 70, 0],"bool"), list[8,8,70,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 70, 0],"bool"), list[8,8,70,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 70, 121].  Tensor sizes: [8, 1, 70, 0]
2025-03-05 15:23:08.103186 test begin: paddle.broadcast_to(Tensor([8, 1, 70, 0],"bool"), list[8,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 70, 0],"bool"), list[8,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 70, 70].  Tensor sizes: [8, 1, 70, 0]
2025-03-05 15:23:08.103725 test begin: paddle.broadcast_to(Tensor([8, 1, 71, 0],"bool"), list[8,8,71,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 71, 0],"bool"), list[8,8,71,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 71, 113].  Tensor sizes: [8, 1, 71, 0]
2025-03-05 15:23:08.104245 test begin: paddle.broadcast_to(Tensor([8, 1, 71, 0],"bool"), list[8,8,71,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 71, 0],"bool"), list[8,8,71,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 71, 121].  Tensor sizes: [8, 1, 71, 0]
2025-03-05 15:23:08.104773 test begin: paddle.broadcast_to(Tensor([8, 1, 71, 0],"bool"), list[8,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 71, 0],"bool"), list[8,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 71, 71].  Tensor sizes: [8, 1, 71, 0]
2025-03-05 15:23:08.105286 test begin: paddle.broadcast_to(Tensor([8, 1, 72, 0],"bool"), list[8,8,72,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 72, 0],"bool"), list[8,8,72,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 72, 113].  Tensor sizes: [8, 1, 72, 0]
2025-03-05 15:23:08.105810 test begin: paddle.broadcast_to(Tensor([8, 1, 72, 0],"bool"), list[8,8,72,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 72, 0],"bool"), list[8,8,72,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 72, 121].  Tensor sizes: [8, 1, 72, 0]
2025-03-05 15:23:08.106330 test begin: paddle.broadcast_to(Tensor([8, 1, 72, 0],"bool"), list[8,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 72, 0],"bool"), list[8,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 72, 72].  Tensor sizes: [8, 1, 72, 0]
2025-03-05 15:23:08.106850 test begin: paddle.broadcast_to(Tensor([8, 1, 73, 0],"bool"), list[8,8,73,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 73, 0],"bool"), list[8,8,73,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 73, 113].  Tensor sizes: [8, 1, 73, 0]
2025-03-05 15:23:08.107363 test begin: paddle.broadcast_to(Tensor([8, 1, 73, 0],"bool"), list[8,8,73,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 73, 0],"bool"), list[8,8,73,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 73, 121].  Tensor sizes: [8, 1, 73, 0]
2025-03-05 15:23:08.107881 test begin: paddle.broadcast_to(Tensor([8, 1, 73, 0],"bool"), list[8,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 73, 0],"bool"), list[8,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 73, 73].  Tensor sizes: [8, 1, 73, 0]
2025-03-05 15:23:08.108396 test begin: paddle.broadcast_to(Tensor([8, 1, 74, 0],"bool"), list[8,8,74,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 74, 0],"bool"), list[8,8,74,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 74, 113].  Tensor sizes: [8, 1, 74, 0]
2025-03-05 15:23:08.108918 test begin: paddle.broadcast_to(Tensor([8, 1, 74, 0],"bool"), list[8,8,74,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 74, 0],"bool"), list[8,8,74,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 74, 121].  Tensor sizes: [8, 1, 74, 0]
2025-03-05 15:23:08.109420 test begin: paddle.broadcast_to(Tensor([8, 1, 74, 0],"bool"), list[8,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 74, 0],"bool"), list[8,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 74, 74].  Tensor sizes: [8, 1, 74, 0]
2025-03-05 15:23:08.109933 test begin: paddle.broadcast_to(Tensor([8, 1, 75, 0],"bool"), list[8,8,75,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 75, 0],"bool"), list[8,8,75,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 75, 113].  Tensor sizes: [8, 1, 75, 0]
2025-03-05 15:23:08.110448 test begin: paddle.broadcast_to(Tensor([8, 1, 75, 0],"bool"), list[8,8,75,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 75, 0],"bool"), list[8,8,75,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 75, 121].  Tensor sizes: [8, 1, 75, 0]
2025-03-05 15:23:08.110985 test begin: paddle.broadcast_to(Tensor([8, 1, 75, 0],"bool"), list[8,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 75, 0],"bool"), list[8,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 75, 75].  Tensor sizes: [8, 1, 75, 0]
2025-03-05 15:23:08.111501 test begin: paddle.broadcast_to(Tensor([8, 1, 76, 0],"bool"), list[8,8,76,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 76, 0],"bool"), list[8,8,76,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 76, 113].  Tensor sizes: [8, 1, 76, 0]
2025-03-05 15:23:08.112028 test begin: paddle.broadcast_to(Tensor([8, 1, 76, 0],"bool"), list[8,8,76,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 76, 0],"bool"), list[8,8,76,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 76, 121].  Tensor sizes: [8, 1, 76, 0]
2025-03-05 15:23:08.112554 test begin: paddle.broadcast_to(Tensor([8, 1, 76, 0],"bool"), list[8,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 76, 0],"bool"), list[8,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 76, 76].  Tensor sizes: [8, 1, 76, 0]
2025-03-05 15:23:08.113089 test begin: paddle.broadcast_to(Tensor([8, 1, 77, 0],"bool"), list[8,8,77,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 77, 0],"bool"), list[8,8,77,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 77, 113].  Tensor sizes: [8, 1, 77, 0]
2025-03-05 15:23:08.113647 test begin: paddle.broadcast_to(Tensor([8, 1, 77, 0],"bool"), list[8,8,77,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 77, 0],"bool"), list[8,8,77,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 77, 121].  Tensor sizes: [8, 1, 77, 0]
2025-03-05 15:23:08.117158 test begin: paddle.broadcast_to(Tensor([8, 1, 77, 0],"bool"), list[8,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 77, 0],"bool"), list[8,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 77, 77].  Tensor sizes: [8, 1, 77, 0]
2025-03-05 15:23:08.117843 test begin: paddle.broadcast_to(Tensor([8, 1, 78, 0],"bool"), list[8,8,78,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 78, 0],"bool"), list[8,8,78,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 78, 113].  Tensor sizes: [8, 1, 78, 0]
2025-03-05 15:23:08.118449 test begin: paddle.broadcast_to(Tensor([8, 1, 78, 0],"bool"), list[8,8,78,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 78, 0],"bool"), list[8,8,78,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 78, 121].  Tensor sizes: [8, 1, 78, 0]
2025-03-05 15:23:08.119044 test begin: paddle.broadcast_to(Tensor([8, 1, 78, 0],"bool"), list[8,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 78, 0],"bool"), list[8,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 78, 78].  Tensor sizes: [8, 1, 78, 0]
2025-03-05 15:23:08.119636 test begin: paddle.broadcast_to(Tensor([8, 1, 79, 0],"bool"), list[8,8,79,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 79, 0],"bool"), list[8,8,79,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 79, 113].  Tensor sizes: [8, 1, 79, 0]
2025-03-05 15:23:08.120218 test begin: paddle.broadcast_to(Tensor([8, 1, 79, 0],"bool"), list[8,8,79,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 79, 0],"bool"), list[8,8,79,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 79, 121].  Tensor sizes: [8, 1, 79, 0]
2025-03-05 15:23:08.120808 test begin: paddle.broadcast_to(Tensor([8, 1, 79, 0],"bool"), list[8,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 79, 0],"bool"), list[8,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 79, 79].  Tensor sizes: [8, 1, 79, 0]
2025-03-05 15:23:08.121403 test begin: paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 8, 113].  Tensor sizes: [8, 1, 8, 0]
2025-03-05 15:23:08.122041 test begin: paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 8, 121].  Tensor sizes: [8, 1, 8, 0]
2025-03-05 15:23:08.122645 test begin: paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 8, 33].  Tensor sizes: [8, 1, 8, 0]
2025-03-05 15:23:08.123232 test begin: paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 8, 0],"bool"), list[8,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 8, 8].  Tensor sizes: [8, 1, 8, 0]
2025-03-05 15:23:08.123820 test begin: paddle.broadcast_to(Tensor([8, 1, 80, 0],"bool"), list[8,8,80,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 80, 0],"bool"), list[8,8,80,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 80, 113].  Tensor sizes: [8, 1, 80, 0]
2025-03-05 15:23:08.124397 test begin: paddle.broadcast_to(Tensor([8, 1, 80, 0],"bool"), list[8,8,80,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 80, 0],"bool"), list[8,8,80,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 80, 121].  Tensor sizes: [8, 1, 80, 0]
2025-03-05 15:23:08.125162 test begin: paddle.broadcast_to(Tensor([8, 1, 80, 0],"bool"), list[8,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 80, 0],"bool"), list[8,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 80, 80].  Tensor sizes: [8, 1, 80, 0]
2025-03-05 15:23:08.125805 test begin: paddle.broadcast_to(Tensor([8, 1, 81, 0],"bool"), list[8,8,81,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 81, 0],"bool"), list[8,8,81,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 81, 113].  Tensor sizes: [8, 1, 81, 0]
2025-03-05 15:23:08.126400 test begin: paddle.broadcast_to(Tensor([8, 1, 81, 0],"bool"), list[8,8,81,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 81, 0],"bool"), list[8,8,81,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 81, 121].  Tensor sizes: [8, 1, 81, 0]
2025-03-05 15:23:08.127608 test begin: paddle.broadcast_to(Tensor([8, 1, 81, 0],"bool"), list[8,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 81, 0],"bool"), list[8,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 81, 81].  Tensor sizes: [8, 1, 81, 0]
2025-03-05 15:23:08.128240 test begin: paddle.broadcast_to(Tensor([8, 1, 82, 0],"bool"), list[8,8,82,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 82, 0],"bool"), list[8,8,82,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 82, 113].  Tensor sizes: [8, 1, 82, 0]
2025-03-05 15:23:08.128847 test begin: paddle.broadcast_to(Tensor([8, 1, 82, 0],"bool"), list[8,8,82,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 82, 0],"bool"), list[8,8,82,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 82, 121].  Tensor sizes: [8, 1, 82, 0]
2025-03-05 15:23:08.129437 test begin: paddle.broadcast_to(Tensor([8, 1, 82, 0],"bool"), list[8,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 82, 0],"bool"), list[8,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 82, 82].  Tensor sizes: [8, 1, 82, 0]
2025-03-05 15:23:08.130526 test begin: paddle.broadcast_to(Tensor([8, 1, 83, 0],"bool"), list[8,8,83,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 83, 0],"bool"), list[8,8,83,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 83, 113].  Tensor sizes: [8, 1, 83, 0]
2025-03-05 15:23:08.131215 test begin: paddle.broadcast_to(Tensor([8, 1, 83, 0],"bool"), list[8,8,83,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 83, 0],"bool"), list[8,8,83,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 83, 121].  Tensor sizes: [8, 1, 83, 0]
2025-03-05 15:23:08.131767 test begin: paddle.broadcast_to(Tensor([8, 1, 83, 0],"bool"), list[8,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 83, 0],"bool"), list[8,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 83, 83].  Tensor sizes: [8, 1, 83, 0]
2025-03-05 15:23:08.132289 test begin: paddle.broadcast_to(Tensor([8, 1, 84, 0],"bool"), list[8,8,84,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 84, 0],"bool"), list[8,8,84,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 84, 113].  Tensor sizes: [8, 1, 84, 0]
2025-03-05 15:23:08.132874 test begin: paddle.broadcast_to(Tensor([8, 1, 84, 0],"bool"), list[8,8,84,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 84, 0],"bool"), list[8,8,84,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 84, 121].  Tensor sizes: [8, 1, 84, 0]
2025-03-05 15:23:08.133978 test begin: paddle.broadcast_to(Tensor([8, 1, 84, 0],"bool"), list[8,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 84, 0],"bool"), list[8,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 84, 84].  Tensor sizes: [8, 1, 84, 0]
2025-03-05 15:23:08.134656 test begin: paddle.broadcast_to(Tensor([8, 1, 85, 0],"bool"), list[8,8,85,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 85, 0],"bool"), list[8,8,85,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 85, 113].  Tensor sizes: [8, 1, 85, 0]
2025-03-05 15:23:08.135285 test begin: paddle.broadcast_to(Tensor([8, 1, 85, 0],"bool"), list[8,8,85,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 85, 0],"bool"), list[8,8,85,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 85, 121].  Tensor sizes: [8, 1, 85, 0]
2025-03-05 15:23:08.135923 test begin: paddle.broadcast_to(Tensor([8, 1, 85, 0],"bool"), list[8,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 85, 0],"bool"), list[8,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 85, 85].  Tensor sizes: [8, 1, 85, 0]
2025-03-05 15:23:08.136539 test begin: paddle.broadcast_to(Tensor([8, 1, 86, 0],"bool"), list[8,8,86,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 86, 0],"bool"), list[8,8,86,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 86, 113].  Tensor sizes: [8, 1, 86, 0]
2025-03-05 15:23:08.137173 test begin: paddle.broadcast_to(Tensor([8, 1, 86, 0],"bool"), list[8,8,86,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 86, 0],"bool"), list[8,8,86,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 86, 121].  Tensor sizes: [8, 1, 86, 0]
2025-03-05 15:23:08.137790 test begin: paddle.broadcast_to(Tensor([8, 1, 86, 0],"bool"), list[8,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 86, 0],"bool"), list[8,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 86, 86].  Tensor sizes: [8, 1, 86, 0]
2025-03-05 15:23:08.138395 test begin: paddle.broadcast_to(Tensor([8, 1, 87, 0],"bool"), list[8,8,87,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 87, 0],"bool"), list[8,8,87,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 87, 113].  Tensor sizes: [8, 1, 87, 0]
2025-03-05 15:23:08.139165 test begin: paddle.broadcast_to(Tensor([8, 1, 87, 0],"bool"), list[8,8,87,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 87, 0],"bool"), list[8,8,87,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 87, 121].  Tensor sizes: [8, 1, 87, 0]
2025-03-05 15:23:08.139804 test begin: paddle.broadcast_to(Tensor([8, 1, 87, 0],"bool"), list[8,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 87, 0],"bool"), list[8,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 87, 87].  Tensor sizes: [8, 1, 87, 0]
2025-03-05 15:23:08.140426 test begin: paddle.broadcast_to(Tensor([8, 1, 88, 0],"bool"), list[8,8,88,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 88, 0],"bool"), list[8,8,88,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 88, 113].  Tensor sizes: [8, 1, 88, 0]
2025-03-05 15:23:08.141083 test begin: paddle.broadcast_to(Tensor([8, 1, 88, 0],"bool"), list[8,8,88,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 88, 0],"bool"), list[8,8,88,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 88, 121].  Tensor sizes: [8, 1, 88, 0]
2025-03-05 15:23:08.141728 test begin: paddle.broadcast_to(Tensor([8, 1, 88, 0],"bool"), list[8,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 88, 0],"bool"), list[8,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 88, 88].  Tensor sizes: [8, 1, 88, 0]
2025-03-05 15:23:08.142348 test begin: paddle.broadcast_to(Tensor([8, 1, 89, 0],"bool"), list[8,8,89,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 89, 0],"bool"), list[8,8,89,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 89, 113].  Tensor sizes: [8, 1, 89, 0]
2025-03-05 15:23:08.142977 test begin: paddle.broadcast_to(Tensor([8, 1, 89, 0],"bool"), list[8,8,89,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 89, 0],"bool"), list[8,8,89,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 89, 121].  Tensor sizes: [8, 1, 89, 0]
2025-03-05 15:23:08.143596 test begin: paddle.broadcast_to(Tensor([8, 1, 89, 0],"bool"), list[8,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 89, 0],"bool"), list[8,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 89, 89].  Tensor sizes: [8, 1, 89, 0]
2025-03-05 15:23:08.144210 test begin: paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 9, 113].  Tensor sizes: [8, 1, 9, 0]
2025-03-05 15:23:08.144837 test begin: paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 9, 121].  Tensor sizes: [8, 1, 9, 0]
2025-03-05 15:23:08.145438 test begin: paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,33,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 9, 33].  Tensor sizes: [8, 1, 9, 0]
2025-03-05 15:23:08.146059 test begin: paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 9, 0],"bool"), list[8,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 9, 9].  Tensor sizes: [8, 1, 9, 0]
2025-03-05 15:23:08.146671 test begin: paddle.broadcast_to(Tensor([8, 1, 90, 0],"bool"), list[8,8,90,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 90, 0],"bool"), list[8,8,90,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 90, 113].  Tensor sizes: [8, 1, 90, 0]
2025-03-05 15:23:08.147421 test begin: paddle.broadcast_to(Tensor([8, 1, 90, 0],"bool"), list[8,8,90,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 90, 0],"bool"), list[8,8,90,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 90, 121].  Tensor sizes: [8, 1, 90, 0]
2025-03-05 15:23:08.148059 test begin: paddle.broadcast_to(Tensor([8, 1, 90, 0],"bool"), list[8,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 90, 0],"bool"), list[8,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 90, 90].  Tensor sizes: [8, 1, 90, 0]
2025-03-05 15:23:08.148678 test begin: paddle.broadcast_to(Tensor([8, 1, 91, 0],"bool"), list[8,8,91,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 91, 0],"bool"), list[8,8,91,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 91, 113].  Tensor sizes: [8, 1, 91, 0]
2025-03-05 15:23:08.149316 test begin: paddle.broadcast_to(Tensor([8, 1, 91, 0],"bool"), list[8,8,91,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 91, 0],"bool"), list[8,8,91,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 91, 121].  Tensor sizes: [8, 1, 91, 0]
2025-03-05 15:23:08.150011 test begin: paddle.broadcast_to(Tensor([8, 1, 91, 0],"bool"), list[8,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 91, 0],"bool"), list[8,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 91, 91].  Tensor sizes: [8, 1, 91, 0]
2025-03-05 15:23:08.150716 test begin: paddle.broadcast_to(Tensor([8, 1, 92, 0],"bool"), list[8,8,92,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 92, 0],"bool"), list[8,8,92,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 92, 113].  Tensor sizes: [8, 1, 92, 0]
2025-03-05 15:23:08.151389 test begin: paddle.broadcast_to(Tensor([8, 1, 92, 0],"bool"), list[8,8,92,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 92, 0],"bool"), list[8,8,92,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 92, 121].  Tensor sizes: [8, 1, 92, 0]
2025-03-05 15:23:08.152071 test begin: paddle.broadcast_to(Tensor([8, 1, 92, 0],"bool"), list[8,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 92, 0],"bool"), list[8,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 92, 92].  Tensor sizes: [8, 1, 92, 0]
2025-03-05 15:23:08.152712 test begin: paddle.broadcast_to(Tensor([8, 1, 93, 0],"bool"), list[8,8,93,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 93, 0],"bool"), list[8,8,93,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 93, 113].  Tensor sizes: [8, 1, 93, 0]
2025-03-05 15:23:08.153359 test begin: paddle.broadcast_to(Tensor([8, 1, 93, 0],"bool"), list[8,8,93,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 93, 0],"bool"), list[8,8,93,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 93, 121].  Tensor sizes: [8, 1, 93, 0]
2025-03-05 15:23:08.153980 test begin: paddle.broadcast_to(Tensor([8, 1, 93, 0],"bool"), list[8,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 93, 0],"bool"), list[8,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 93, 93].  Tensor sizes: [8, 1, 93, 0]
2025-03-05 15:23:08.154621 test begin: paddle.broadcast_to(Tensor([8, 1, 94, 0],"bool"), list[8,8,94,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 94, 0],"bool"), list[8,8,94,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 94, 113].  Tensor sizes: [8, 1, 94, 0]
2025-03-05 15:23:08.155403 test begin: paddle.broadcast_to(Tensor([8, 1, 94, 0],"bool"), list[8,8,94,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 94, 0],"bool"), list[8,8,94,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 94, 121].  Tensor sizes: [8, 1, 94, 0]
2025-03-05 15:23:08.156146 test begin: paddle.broadcast_to(Tensor([8, 1, 94, 0],"bool"), list[8,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 94, 0],"bool"), list[8,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 94, 94].  Tensor sizes: [8, 1, 94, 0]
2025-03-05 15:23:08.157105 test begin: paddle.broadcast_to(Tensor([8, 1, 95, 0],"bool"), list[8,8,95,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 95, 0],"bool"), list[8,8,95,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 95, 113].  Tensor sizes: [8, 1, 95, 0]
2025-03-05 15:23:08.157914 test begin: paddle.broadcast_to(Tensor([8, 1, 95, 0],"bool"), list[8,8,95,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 95, 0],"bool"), list[8,8,95,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 95, 121].  Tensor sizes: [8, 1, 95, 0]
2025-03-05 15:23:08.158770 test begin: paddle.broadcast_to(Tensor([8, 1, 95, 0],"bool"), list[8,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 95, 0],"bool"), list[8,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 95, 95].  Tensor sizes: [8, 1, 95, 0]
2025-03-05 15:23:08.159455 test begin: paddle.broadcast_to(Tensor([8, 1, 96, 0],"bool"), list[8,8,96,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 96, 0],"bool"), list[8,8,96,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 96, 113].  Tensor sizes: [8, 1, 96, 0]
2025-03-05 15:23:08.164111 test begin: paddle.broadcast_to(Tensor([8, 1, 96, 0],"bool"), list[8,8,96,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 96, 0],"bool"), list[8,8,96,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 96, 121].  Tensor sizes: [8, 1, 96, 0]
2025-03-05 15:23:08.164804 test begin: paddle.broadcast_to(Tensor([8, 1, 96, 0],"bool"), list[8,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 96, 0],"bool"), list[8,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 96, 96].  Tensor sizes: [8, 1, 96, 0]
2025-03-05 15:23:08.165354 test begin: paddle.broadcast_to(Tensor([8, 1, 97, 0],"bool"), list[8,8,97,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 97, 0],"bool"), list[8,8,97,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 97, 113].  Tensor sizes: [8, 1, 97, 0]
2025-03-05 15:23:08.165890 test begin: paddle.broadcast_to(Tensor([8, 1, 97, 0],"bool"), list[8,8,97,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 97, 0],"bool"), list[8,8,97,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 97, 121].  Tensor sizes: [8, 1, 97, 0]
2025-03-05 15:23:08.166408 test begin: paddle.broadcast_to(Tensor([8, 1, 97, 0],"bool"), list[8,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 97, 0],"bool"), list[8,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 97, 97].  Tensor sizes: [8, 1, 97, 0]
2025-03-05 15:23:08.166933 test begin: paddle.broadcast_to(Tensor([8, 1, 98, 0],"bool"), list[8,8,98,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 98, 0],"bool"), list[8,8,98,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 98, 113].  Tensor sizes: [8, 1, 98, 0]
2025-03-05 15:23:08.167472 test begin: paddle.broadcast_to(Tensor([8, 1, 98, 0],"bool"), list[8,8,98,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 98, 0],"bool"), list[8,8,98,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 98, 121].  Tensor sizes: [8, 1, 98, 0]
2025-03-05 15:23:08.168071 test begin: paddle.broadcast_to(Tensor([8, 1, 98, 0],"bool"), list[8,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 98, 0],"bool"), list[8,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 98, 98].  Tensor sizes: [8, 1, 98, 0]
2025-03-05 15:23:08.168610 test begin: paddle.broadcast_to(Tensor([8, 1, 99, 0],"bool"), list[8,8,99,113,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 99, 0],"bool"), list[8,8,99,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 99, 113].  Tensor sizes: [8, 1, 99, 0]
2025-03-05 15:23:08.169147 test begin: paddle.broadcast_to(Tensor([8, 1, 99, 0],"bool"), list[8,8,99,121,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 99, 0],"bool"), list[8,8,99,121,], ) 
 The expanded size of the tensor (121) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 99, 121].  Tensor sizes: [8, 1, 99, 0]
2025-03-05 15:23:08.169693 test begin: paddle.broadcast_to(Tensor([8, 1, 99, 0],"bool"), list[8,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([8, 1, 99, 0],"bool"), list[8,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [8, 8, 99, 99].  Tensor sizes: [8, 1, 99, 0]
2025-03-05 15:23:08.170223 test begin: paddle.broadcast_to(Tensor([8, 63, 0],"float32"), tuple(8,63,768,), )

[torch error] paddle.broadcast_to(Tensor([8, 63, 0],"float32"), tuple(8,63,768,), ) 
 The expanded size of the tensor (768) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 63, 768].  Tensor sizes: [8, 63, 0]
2025-03-05 15:23:08.171202 test begin: paddle.broadcast_to(Tensor([8, 7, 0],"int64"), tuple(8,7,768,), )

[torch error] paddle.broadcast_to(Tensor([8, 7, 0],"int64"), tuple(8,7,768,), ) 
 The expanded size of the tensor (768) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [8, 7, 768].  Tensor sizes: [8, 7, 0]
2025-03-05 15:23:08.171950 test begin: paddle.broadcast_to(Tensor([80, 0],"float32"), tuple(80,1000,), )

[torch error] paddle.broadcast_to(Tensor([80, 0],"float32"), tuple(80,1000,), ) 
 The expanded size of the tensor (1000) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [80, 1000].  Tensor sizes: [80, 0]
2025-03-05 15:23:08.172542 test begin: paddle.broadcast_to(Tensor([80, 0],"int32"), tuple(80,1,), )

[torch error] paddle.broadcast_to(Tensor([80, 0],"int32"), tuple(80,1,), ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [80, 1].  Tensor sizes: [80, 0]
2025-03-05 15:23:08.173180 test begin: paddle.broadcast_to(Tensor([9, 0, 1, 1],"bool"), list[9,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 1, 1],"bool"), list[9,8,1,1,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 1, 1].  Tensor sizes: [9, 0, 1, 1]
2025-03-05 15:23:08.173845 test begin: paddle.broadcast_to(Tensor([9, 0, 1, 53],"bool"), list[9,8,1,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 1, 53],"bool"), list[9,8,1,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 1, 53].  Tensor sizes: [9, 0, 1, 53]
2025-03-05 15:23:08.174443 test begin: paddle.broadcast_to(Tensor([9, 0, 1, 89],"bool"), list[9,8,1,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 1, 89],"bool"), list[9,8,1,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 1, 89].  Tensor sizes: [9, 0, 1, 89]
2025-03-05 15:23:08.175047 test begin: paddle.broadcast_to(Tensor([9, 0, 10, 10],"bool"), list[9,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 10, 10],"bool"), list[9,8,10,10,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 10, 10].  Tensor sizes: [9, 0, 10, 10]
2025-03-05 15:23:08.175635 test begin: paddle.broadcast_to(Tensor([9, 0, 10, 53],"bool"), list[9,8,10,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 10, 53],"bool"), list[9,8,10,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 10, 53].  Tensor sizes: [9, 0, 10, 53]
2025-03-05 15:23:08.176216 test begin: paddle.broadcast_to(Tensor([9, 0, 10, 89],"bool"), list[9,8,10,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 10, 89],"bool"), list[9,8,10,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 10, 89].  Tensor sizes: [9, 0, 10, 89]
2025-03-05 15:23:08.176807 test begin: paddle.broadcast_to(Tensor([9, 0, 100, 100],"bool"), list[9,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 100, 100],"bool"), list[9,8,100,100,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 100, 100].  Tensor sizes: [9, 0, 100, 100]
2025-03-05 15:23:08.177387 test begin: paddle.broadcast_to(Tensor([9, 0, 100, 53],"bool"), list[9,8,100,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 100, 53],"bool"), list[9,8,100,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 100, 53].  Tensor sizes: [9, 0, 100, 53]
2025-03-05 15:23:08.177970 test begin: paddle.broadcast_to(Tensor([9, 0, 100, 89],"bool"), list[9,8,100,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 100, 89],"bool"), list[9,8,100,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 100, 89].  Tensor sizes: [9, 0, 100, 89]
2025-03-05 15:23:08.178553 test begin: paddle.broadcast_to(Tensor([9, 0, 101, 101],"bool"), list[9,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 101, 101],"bool"), list[9,8,101,101,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 101, 101].  Tensor sizes: [9, 0, 101, 101]
2025-03-05 15:23:08.179138 test begin: paddle.broadcast_to(Tensor([9, 0, 101, 53],"bool"), list[9,8,101,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 101, 53],"bool"), list[9,8,101,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 101, 53].  Tensor sizes: [9, 0, 101, 53]
2025-03-05 15:23:08.179724 test begin: paddle.broadcast_to(Tensor([9, 0, 101, 89],"bool"), list[9,8,101,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 101, 89],"bool"), list[9,8,101,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 101, 89].  Tensor sizes: [9, 0, 101, 89]
2025-03-05 15:23:08.180296 test begin: paddle.broadcast_to(Tensor([9, 0, 102, 102],"bool"), list[9,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 102, 102],"bool"), list[9,8,102,102,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 102, 102].  Tensor sizes: [9, 0, 102, 102]
2025-03-05 15:23:08.180876 test begin: paddle.broadcast_to(Tensor([9, 0, 102, 53],"bool"), list[9,8,102,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 102, 53],"bool"), list[9,8,102,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 102, 53].  Tensor sizes: [9, 0, 102, 53]
2025-03-05 15:23:08.181470 test begin: paddle.broadcast_to(Tensor([9, 0, 102, 89],"bool"), list[9,8,102,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 102, 89],"bool"), list[9,8,102,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 102, 89].  Tensor sizes: [9, 0, 102, 89]
2025-03-05 15:23:08.182060 test begin: paddle.broadcast_to(Tensor([9, 0, 103, 103],"bool"), list[9,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 103, 103],"bool"), list[9,8,103,103,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 103, 103].  Tensor sizes: [9, 0, 103, 103]
2025-03-05 15:23:08.182643 test begin: paddle.broadcast_to(Tensor([9, 0, 103, 53],"bool"), list[9,8,103,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 103, 53],"bool"), list[9,8,103,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 103, 53].  Tensor sizes: [9, 0, 103, 53]
2025-03-05 15:23:08.183233 test begin: paddle.broadcast_to(Tensor([9, 0, 103, 89],"bool"), list[9,8,103,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 103, 89],"bool"), list[9,8,103,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 103, 89].  Tensor sizes: [9, 0, 103, 89]
2025-03-05 15:23:08.183814 test begin: paddle.broadcast_to(Tensor([9, 0, 104, 104],"bool"), list[9,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 104, 104],"bool"), list[9,8,104,104,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 104, 104].  Tensor sizes: [9, 0, 104, 104]
2025-03-05 15:23:08.184389 test begin: paddle.broadcast_to(Tensor([9, 0, 104, 53],"bool"), list[9,8,104,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 104, 53],"bool"), list[9,8,104,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 104, 53].  Tensor sizes: [9, 0, 104, 53]
2025-03-05 15:23:08.184967 test begin: paddle.broadcast_to(Tensor([9, 0, 104, 89],"bool"), list[9,8,104,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 104, 89],"bool"), list[9,8,104,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 104, 89].  Tensor sizes: [9, 0, 104, 89]
2025-03-05 15:23:08.185540 test begin: paddle.broadcast_to(Tensor([9, 0, 105, 105],"bool"), list[9,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 105, 105],"bool"), list[9,8,105,105,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 105, 105].  Tensor sizes: [9, 0, 105, 105]
2025-03-05 15:23:08.186128 test begin: paddle.broadcast_to(Tensor([9, 0, 105, 53],"bool"), list[9,8,105,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 105, 53],"bool"), list[9,8,105,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 105, 53].  Tensor sizes: [9, 0, 105, 53]
2025-03-05 15:23:08.186783 test begin: paddle.broadcast_to(Tensor([9, 0, 105, 89],"bool"), list[9,8,105,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 105, 89],"bool"), list[9,8,105,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 105, 89].  Tensor sizes: [9, 0, 105, 89]
2025-03-05 15:23:08.187365 test begin: paddle.broadcast_to(Tensor([9, 0, 106, 106],"bool"), list[9,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 106, 106],"bool"), list[9,8,106,106,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 106, 106].  Tensor sizes: [9, 0, 106, 106]
2025-03-05 15:23:08.187950 test begin: paddle.broadcast_to(Tensor([9, 0, 106, 53],"bool"), list[9,8,106,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 106, 53],"bool"), list[9,8,106,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 106, 53].  Tensor sizes: [9, 0, 106, 53]
2025-03-05 15:23:08.188541 test begin: paddle.broadcast_to(Tensor([9, 0, 106, 89],"bool"), list[9,8,106,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 106, 89],"bool"), list[9,8,106,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 106, 89].  Tensor sizes: [9, 0, 106, 89]
2025-03-05 15:23:08.189139 test begin: paddle.broadcast_to(Tensor([9, 0, 107, 107],"bool"), list[9,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 107, 107],"bool"), list[9,8,107,107,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 107, 107].  Tensor sizes: [9, 0, 107, 107]
2025-03-05 15:23:08.189725 test begin: paddle.broadcast_to(Tensor([9, 0, 107, 53],"bool"), list[9,8,107,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 107, 53],"bool"), list[9,8,107,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 107, 53].  Tensor sizes: [9, 0, 107, 53]
2025-03-05 15:23:08.190308 test begin: paddle.broadcast_to(Tensor([9, 0, 107, 89],"bool"), list[9,8,107,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 107, 89],"bool"), list[9,8,107,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 107, 89].  Tensor sizes: [9, 0, 107, 89]
2025-03-05 15:23:08.190893 test begin: paddle.broadcast_to(Tensor([9, 0, 108, 108],"bool"), list[9,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 108, 108],"bool"), list[9,8,108,108,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 108, 108].  Tensor sizes: [9, 0, 108, 108]
2025-03-05 15:23:08.191499 test begin: paddle.broadcast_to(Tensor([9, 0, 108, 53],"bool"), list[9,8,108,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 108, 53],"bool"), list[9,8,108,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 108, 53].  Tensor sizes: [9, 0, 108, 53]
2025-03-05 15:23:08.192098 test begin: paddle.broadcast_to(Tensor([9, 0, 108, 89],"bool"), list[9,8,108,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 108, 89],"bool"), list[9,8,108,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 108, 89].  Tensor sizes: [9, 0, 108, 89]
2025-03-05 15:23:08.192714 test begin: paddle.broadcast_to(Tensor([9, 0, 109, 109],"bool"), list[9,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 109, 109],"bool"), list[9,8,109,109,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 109, 109].  Tensor sizes: [9, 0, 109, 109]
2025-03-05 15:23:08.193319 test begin: paddle.broadcast_to(Tensor([9, 0, 109, 53],"bool"), list[9,8,109,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 109, 53],"bool"), list[9,8,109,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 109, 53].  Tensor sizes: [9, 0, 109, 53]
2025-03-05 15:23:08.194007 test begin: paddle.broadcast_to(Tensor([9, 0, 109, 89],"bool"), list[9,8,109,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 109, 89],"bool"), list[9,8,109,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 109, 89].  Tensor sizes: [9, 0, 109, 89]
2025-03-05 15:23:08.194681 test begin: paddle.broadcast_to(Tensor([9, 0, 11, 11],"bool"), list[9,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 11, 11],"bool"), list[9,8,11,11,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 11, 11].  Tensor sizes: [9, 0, 11, 11]
2025-03-05 15:23:08.195248 test begin: paddle.broadcast_to(Tensor([9, 0, 11, 53],"bool"), list[9,8,11,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 11, 53],"bool"), list[9,8,11,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 11, 53].  Tensor sizes: [9, 0, 11, 53]
2025-03-05 15:23:08.195793 test begin: paddle.broadcast_to(Tensor([9, 0, 11, 89],"bool"), list[9,8,11,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 11, 89],"bool"), list[9,8,11,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 11, 89].  Tensor sizes: [9, 0, 11, 89]
2025-03-05 15:23:08.196361 test begin: paddle.broadcast_to(Tensor([9, 0, 110, 110],"bool"), list[9,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 110, 110],"bool"), list[9,8,110,110,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 110, 110].  Tensor sizes: [9, 0, 110, 110]
2025-03-05 15:23:08.196889 test begin: paddle.broadcast_to(Tensor([9, 0, 110, 53],"bool"), list[9,8,110,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 110, 53],"bool"), list[9,8,110,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 110, 53].  Tensor sizes: [9, 0, 110, 53]
2025-03-05 15:23:08.197406 test begin: paddle.broadcast_to(Tensor([9, 0, 110, 89],"bool"), list[9,8,110,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 110, 89],"bool"), list[9,8,110,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 110, 89].  Tensor sizes: [9, 0, 110, 89]
2025-03-05 15:23:08.197925 test begin: paddle.broadcast_to(Tensor([9, 0, 111, 111],"bool"), list[9,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 111, 111],"bool"), list[9,8,111,111,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 111, 111].  Tensor sizes: [9, 0, 111, 111]
2025-03-05 15:23:08.198435 test begin: paddle.broadcast_to(Tensor([9, 0, 111, 53],"bool"), list[9,8,111,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 111, 53],"bool"), list[9,8,111,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 111, 53].  Tensor sizes: [9, 0, 111, 53]
2025-03-05 15:23:08.198957 test begin: paddle.broadcast_to(Tensor([9, 0, 111, 89],"bool"), list[9,8,111,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 111, 89],"bool"), list[9,8,111,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 111, 89].  Tensor sizes: [9, 0, 111, 89]
2025-03-05 15:23:08.199513 test begin: paddle.broadcast_to(Tensor([9, 0, 112, 112],"bool"), list[9,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 112, 112],"bool"), list[9,8,112,112,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 112, 112].  Tensor sizes: [9, 0, 112, 112]
2025-03-05 15:23:08.200204 test begin: paddle.broadcast_to(Tensor([9, 0, 112, 53],"bool"), list[9,8,112,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 112, 53],"bool"), list[9,8,112,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 112, 53].  Tensor sizes: [9, 0, 112, 53]
2025-03-05 15:23:08.200813 test begin: paddle.broadcast_to(Tensor([9, 0, 112, 89],"bool"), list[9,8,112,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 112, 89],"bool"), list[9,8,112,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 112, 89].  Tensor sizes: [9, 0, 112, 89]
2025-03-05 15:23:08.201877 test begin: paddle.broadcast_to(Tensor([9, 0, 113, 113],"bool"), list[9,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 113, 113],"bool"), list[9,8,113,113,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 113, 113].  Tensor sizes: [9, 0, 113, 113]
2025-03-05 15:23:08.202637 test begin: paddle.broadcast_to(Tensor([9, 0, 113, 53],"bool"), list[9,8,113,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 113, 53],"bool"), list[9,8,113,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 113, 53].  Tensor sizes: [9, 0, 113, 53]
2025-03-05 15:23:08.203306 test begin: paddle.broadcast_to(Tensor([9, 0, 113, 89],"bool"), list[9,8,113,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 113, 89],"bool"), list[9,8,113,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 113, 89].  Tensor sizes: [9, 0, 113, 89]
2025-03-05 15:23:08.203854 test begin: paddle.broadcast_to(Tensor([9, 0, 114, 114],"bool"), list[9,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 114, 114],"bool"), list[9,8,114,114,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 114, 114].  Tensor sizes: [9, 0, 114, 114]
2025-03-05 15:23:08.204370 test begin: paddle.broadcast_to(Tensor([9, 0, 114, 53],"bool"), list[9,8,114,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 114, 53],"bool"), list[9,8,114,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 114, 53].  Tensor sizes: [9, 0, 114, 53]
2025-03-05 15:23:08.204890 test begin: paddle.broadcast_to(Tensor([9, 0, 114, 89],"bool"), list[9,8,114,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 114, 89],"bool"), list[9,8,114,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 114, 89].  Tensor sizes: [9, 0, 114, 89]
2025-03-05 15:23:08.205406 test begin: paddle.broadcast_to(Tensor([9, 0, 115, 115],"bool"), list[9,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 115, 115],"bool"), list[9,8,115,115,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 115, 115].  Tensor sizes: [9, 0, 115, 115]
2025-03-05 15:23:08.205951 test begin: paddle.broadcast_to(Tensor([9, 0, 115, 53],"bool"), list[9,8,115,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 115, 53],"bool"), list[9,8,115,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 115, 53].  Tensor sizes: [9, 0, 115, 53]
2025-03-05 15:23:08.206494 test begin: paddle.broadcast_to(Tensor([9, 0, 115, 89],"bool"), list[9,8,115,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 115, 89],"bool"), list[9,8,115,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 115, 89].  Tensor sizes: [9, 0, 115, 89]
2025-03-05 15:23:08.207030 test begin: paddle.broadcast_to(Tensor([9, 0, 116, 116],"bool"), list[9,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 116, 116],"bool"), list[9,8,116,116,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 116, 116].  Tensor sizes: [9, 0, 116, 116]
2025-03-05 15:23:08.207551 test begin: paddle.broadcast_to(Tensor([9, 0, 116, 53],"bool"), list[9,8,116,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 116, 53],"bool"), list[9,8,116,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 116, 53].  Tensor sizes: [9, 0, 116, 53]
2025-03-05 15:23:08.208121 test begin: paddle.broadcast_to(Tensor([9, 0, 117, 117],"bool"), list[9,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 117, 117],"bool"), list[9,8,117,117,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 117, 117].  Tensor sizes: [9, 0, 117, 117]
2025-03-05 15:23:08.208648 test begin: paddle.broadcast_to(Tensor([9, 0, 117, 53],"bool"), list[9,8,117,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 117, 53],"bool"), list[9,8,117,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 117, 53].  Tensor sizes: [9, 0, 117, 53]
2025-03-05 15:23:08.209167 test begin: paddle.broadcast_to(Tensor([9, 0, 118, 118],"bool"), list[9,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 118, 118],"bool"), list[9,8,118,118,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 118, 118].  Tensor sizes: [9, 0, 118, 118]
2025-03-05 15:23:08.209765 test begin: paddle.broadcast_to(Tensor([9, 0, 118, 53],"bool"), list[9,8,118,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 118, 53],"bool"), list[9,8,118,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 118, 53].  Tensor sizes: [9, 0, 118, 53]
2025-03-05 15:23:08.210741 test begin: paddle.broadcast_to(Tensor([9, 0, 119, 119],"bool"), list[9,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 119, 119],"bool"), list[9,8,119,119,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 119, 119].  Tensor sizes: [9, 0, 119, 119]
2025-03-05 15:23:08.211500 test begin: paddle.broadcast_to(Tensor([9, 0, 119, 53],"bool"), list[9,8,119,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 119, 53],"bool"), list[9,8,119,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 119, 53].  Tensor sizes: [9, 0, 119, 53]
2025-03-05 15:23:08.212170 test begin: paddle.broadcast_to(Tensor([9, 0, 12, 12],"bool"), list[9,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 12, 12],"bool"), list[9,8,12,12,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 12, 12].  Tensor sizes: [9, 0, 12, 12]
2025-03-05 15:23:08.212731 test begin: paddle.broadcast_to(Tensor([9, 0, 12, 53],"bool"), list[9,8,12,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 12, 53],"bool"), list[9,8,12,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 12, 53].  Tensor sizes: [9, 0, 12, 53]
2025-03-05 15:23:08.213263 test begin: paddle.broadcast_to(Tensor([9, 0, 12, 89],"bool"), list[9,8,12,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 12, 89],"bool"), list[9,8,12,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 12, 89].  Tensor sizes: [9, 0, 12, 89]
2025-03-05 15:23:08.213799 test begin: paddle.broadcast_to(Tensor([9, 0, 13, 13],"bool"), list[9,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 13, 13],"bool"), list[9,8,13,13,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 13, 13].  Tensor sizes: [9, 0, 13, 13]
2025-03-05 15:23:08.214346 test begin: paddle.broadcast_to(Tensor([9, 0, 13, 53],"bool"), list[9,8,13,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 13, 53],"bool"), list[9,8,13,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 13, 53].  Tensor sizes: [9, 0, 13, 53]
2025-03-05 15:23:08.214907 test begin: paddle.broadcast_to(Tensor([9, 0, 13, 89],"bool"), list[9,8,13,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 13, 89],"bool"), list[9,8,13,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 13, 89].  Tensor sizes: [9, 0, 13, 89]
2025-03-05 15:23:08.215434 test begin: paddle.broadcast_to(Tensor([9, 0, 14, 14],"bool"), list[9,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 14, 14],"bool"), list[9,8,14,14,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 14, 14].  Tensor sizes: [9, 0, 14, 14]
2025-03-05 15:23:08.215962 test begin: paddle.broadcast_to(Tensor([9, 0, 14, 53],"bool"), list[9,8,14,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 14, 53],"bool"), list[9,8,14,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 14, 53].  Tensor sizes: [9, 0, 14, 53]
2025-03-05 15:23:08.216633 test begin: paddle.broadcast_to(Tensor([9, 0, 14, 89],"bool"), list[9,8,14,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 14, 89],"bool"), list[9,8,14,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 14, 89].  Tensor sizes: [9, 0, 14, 89]
2025-03-05 15:23:08.217257 test begin: paddle.broadcast_to(Tensor([9, 0, 15, 15],"bool"), list[9,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 15, 15],"bool"), list[9,8,15,15,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 15, 15].  Tensor sizes: [9, 0, 15, 15]
2025-03-05 15:23:08.217860 test begin: paddle.broadcast_to(Tensor([9, 0, 15, 53],"bool"), list[9,8,15,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 15, 53],"bool"), list[9,8,15,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 15, 53].  Tensor sizes: [9, 0, 15, 53]
2025-03-05 15:23:08.219016 test begin: paddle.broadcast_to(Tensor([9, 0, 15, 89],"bool"), list[9,8,15,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 15, 89],"bool"), list[9,8,15,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 15, 89].  Tensor sizes: [9, 0, 15, 89]
2025-03-05 15:23:08.219823 test begin: paddle.broadcast_to(Tensor([9, 0, 16, 16],"bool"), list[9,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 16, 16],"bool"), list[9,8,16,16,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 16, 16].  Tensor sizes: [9, 0, 16, 16]
2025-03-05 15:23:08.220490 test begin: paddle.broadcast_to(Tensor([9, 0, 16, 53],"bool"), list[9,8,16,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 16, 53],"bool"), list[9,8,16,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 16, 53].  Tensor sizes: [9, 0, 16, 53]
2025-03-05 15:23:08.221037 test begin: paddle.broadcast_to(Tensor([9, 0, 16, 89],"bool"), list[9,8,16,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 16, 89],"bool"), list[9,8,16,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 16, 89].  Tensor sizes: [9, 0, 16, 89]
2025-03-05 15:23:08.221563 test begin: paddle.broadcast_to(Tensor([9, 0, 17, 17],"bool"), list[9,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 17, 17],"bool"), list[9,8,17,17,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 17, 17].  Tensor sizes: [9, 0, 17, 17]
2025-03-05 15:23:08.222096 test begin: paddle.broadcast_to(Tensor([9, 0, 17, 53],"bool"), list[9,8,17,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 17, 53],"bool"), list[9,8,17,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 17, 53].  Tensor sizes: [9, 0, 17, 53]
2025-03-05 15:23:08.222644 test begin: paddle.broadcast_to(Tensor([9, 0, 17, 89],"bool"), list[9,8,17,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 17, 89],"bool"), list[9,8,17,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 17, 89].  Tensor sizes: [9, 0, 17, 89]
2025-03-05 15:23:08.223173 test begin: paddle.broadcast_to(Tensor([9, 0, 18, 18],"bool"), list[9,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 18, 18],"bool"), list[9,8,18,18,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 18, 18].  Tensor sizes: [9, 0, 18, 18]
2025-03-05 15:23:08.223698 test begin: paddle.broadcast_to(Tensor([9, 0, 18, 53],"bool"), list[9,8,18,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 18, 53],"bool"), list[9,8,18,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 18, 53].  Tensor sizes: [9, 0, 18, 53]
2025-03-05 15:23:08.224215 test begin: paddle.broadcast_to(Tensor([9, 0, 18, 89],"bool"), list[9,8,18,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 18, 89],"bool"), list[9,8,18,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 18, 89].  Tensor sizes: [9, 0, 18, 89]
2025-03-05 15:23:08.224758 test begin: paddle.broadcast_to(Tensor([9, 0, 19, 19],"bool"), list[9,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 19, 19],"bool"), list[9,8,19,19,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 19, 19].  Tensor sizes: [9, 0, 19, 19]
2025-03-05 15:23:08.225278 test begin: paddle.broadcast_to(Tensor([9, 0, 19, 53],"bool"), list[9,8,19,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 19, 53],"bool"), list[9,8,19,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 19, 53].  Tensor sizes: [9, 0, 19, 53]
2025-03-05 15:23:08.225868 test begin: paddle.broadcast_to(Tensor([9, 0, 19, 89],"bool"), list[9,8,19,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 19, 89],"bool"), list[9,8,19,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 19, 89].  Tensor sizes: [9, 0, 19, 89]
2025-03-05 15:23:08.226717 test begin: paddle.broadcast_to(Tensor([9, 0, 2, 2],"bool"), list[9,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 2, 2],"bool"), list[9,8,2,2,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 2, 2].  Tensor sizes: [9, 0, 2, 2]
2025-03-05 15:23:08.227396 test begin: paddle.broadcast_to(Tensor([9, 0, 2, 53],"bool"), list[9,8,2,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 2, 53],"bool"), list[9,8,2,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 2, 53].  Tensor sizes: [9, 0, 2, 53]
2025-03-05 15:23:08.228035 test begin: paddle.broadcast_to(Tensor([9, 0, 2, 89],"bool"), list[9,8,2,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 2, 89],"bool"), list[9,8,2,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 2, 89].  Tensor sizes: [9, 0, 2, 89]
2025-03-05 15:23:08.228748 test begin: paddle.broadcast_to(Tensor([9, 0, 20, 20],"bool"), list[9,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 20, 20],"bool"), list[9,8,20,20,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 20, 20].  Tensor sizes: [9, 0, 20, 20]
2025-03-05 15:23:08.229403 test begin: paddle.broadcast_to(Tensor([9, 0, 20, 53],"bool"), list[9,8,20,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 20, 53],"bool"), list[9,8,20,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 20, 53].  Tensor sizes: [9, 0, 20, 53]
2025-03-05 15:23:08.230007 test begin: paddle.broadcast_to(Tensor([9, 0, 20, 89],"bool"), list[9,8,20,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 20, 89],"bool"), list[9,8,20,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 20, 89].  Tensor sizes: [9, 0, 20, 89]
2025-03-05 15:23:08.230674 test begin: paddle.broadcast_to(Tensor([9, 0, 21, 21],"bool"), list[9,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 21, 21],"bool"), list[9,8,21,21,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 21, 21].  Tensor sizes: [9, 0, 21, 21]
2025-03-05 15:23:08.231321 test begin: paddle.broadcast_to(Tensor([9, 0, 21, 53],"bool"), list[9,8,21,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 21, 53],"bool"), list[9,8,21,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 21, 53].  Tensor sizes: [9, 0, 21, 53]
2025-03-05 15:23:08.231927 test begin: paddle.broadcast_to(Tensor([9, 0, 21, 89],"bool"), list[9,8,21,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 21, 89],"bool"), list[9,8,21,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 21, 89].  Tensor sizes: [9, 0, 21, 89]
2025-03-05 15:23:08.232537 test begin: paddle.broadcast_to(Tensor([9, 0, 22, 22],"bool"), list[9,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 22, 22],"bool"), list[9,8,22,22,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 22, 22].  Tensor sizes: [9, 0, 22, 22]
2025-03-05 15:23:08.233093 test begin: paddle.broadcast_to(Tensor([9, 0, 22, 53],"bool"), list[9,8,22,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 22, 53],"bool"), list[9,8,22,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 22, 53].  Tensor sizes: [9, 0, 22, 53]
2025-03-05 15:23:08.233608 test begin: paddle.broadcast_to(Tensor([9, 0, 22, 89],"bool"), list[9,8,22,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 22, 89],"bool"), list[9,8,22,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 22, 89].  Tensor sizes: [9, 0, 22, 89]
2025-03-05 15:23:08.234130 test begin: paddle.broadcast_to(Tensor([9, 0, 23, 23],"bool"), list[9,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 23, 23],"bool"), list[9,8,23,23,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 23, 23].  Tensor sizes: [9, 0, 23, 23]
2025-03-05 15:23:08.234643 test begin: paddle.broadcast_to(Tensor([9, 0, 23, 53],"bool"), list[9,8,23,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 23, 53],"bool"), list[9,8,23,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 23, 53].  Tensor sizes: [9, 0, 23, 53]
2025-03-05 15:23:08.235154 test begin: paddle.broadcast_to(Tensor([9, 0, 23, 89],"bool"), list[9,8,23,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 23, 89],"bool"), list[9,8,23,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 23, 89].  Tensor sizes: [9, 0, 23, 89]
2025-03-05 15:23:08.235669 test begin: paddle.broadcast_to(Tensor([9, 0, 24, 24],"bool"), list[9,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 24, 24],"bool"), list[9,8,24,24,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 24, 24].  Tensor sizes: [9, 0, 24, 24]
2025-03-05 15:23:08.236185 test begin: paddle.broadcast_to(Tensor([9, 0, 24, 53],"bool"), list[9,8,24,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 24, 53],"bool"), list[9,8,24,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 24, 53].  Tensor sizes: [9, 0, 24, 53]
2025-03-05 15:23:08.236708 test begin: paddle.broadcast_to(Tensor([9, 0, 24, 89],"bool"), list[9,8,24,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 24, 89],"bool"), list[9,8,24,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 24, 89].  Tensor sizes: [9, 0, 24, 89]
2025-03-05 15:23:08.237326 test begin: paddle.broadcast_to(Tensor([9, 0, 25, 25],"bool"), list[9,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 25, 25],"bool"), list[9,8,25,25,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 25, 25].  Tensor sizes: [9, 0, 25, 25]
2025-03-05 15:23:08.238457 test begin: paddle.broadcast_to(Tensor([9, 0, 25, 53],"bool"), list[9,8,25,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 25, 53],"bool"), list[9,8,25,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 25, 53].  Tensor sizes: [9, 0, 25, 53]
2025-03-05 15:23:08.239104 test begin: paddle.broadcast_to(Tensor([9, 0, 25, 89],"bool"), list[9,8,25,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 25, 89],"bool"), list[9,8,25,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 25, 89].  Tensor sizes: [9, 0, 25, 89]
2025-03-05 15:23:08.239726 test begin: paddle.broadcast_to(Tensor([9, 0, 26, 26],"bool"), list[9,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 26, 26],"bool"), list[9,8,26,26,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 26, 26].  Tensor sizes: [9, 0, 26, 26]
2025-03-05 15:23:08.240287 test begin: paddle.broadcast_to(Tensor([9, 0, 26, 53],"bool"), list[9,8,26,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 26, 53],"bool"), list[9,8,26,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 26, 53].  Tensor sizes: [9, 0, 26, 53]
2025-03-05 15:23:08.240847 test begin: paddle.broadcast_to(Tensor([9, 0, 26, 89],"bool"), list[9,8,26,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 26, 89],"bool"), list[9,8,26,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 26, 89].  Tensor sizes: [9, 0, 26, 89]
2025-03-05 15:23:08.241411 test begin: paddle.broadcast_to(Tensor([9, 0, 27, 27],"bool"), list[9,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 27, 27],"bool"), list[9,8,27,27,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 27, 27].  Tensor sizes: [9, 0, 27, 27]
2025-03-05 15:23:08.241974 test begin: paddle.broadcast_to(Tensor([9, 0, 27, 53],"bool"), list[9,8,27,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 27, 53],"bool"), list[9,8,27,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 27, 53].  Tensor sizes: [9, 0, 27, 53]
2025-03-05 15:23:08.242520 test begin: paddle.broadcast_to(Tensor([9, 0, 27, 89],"bool"), list[9,8,27,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 27, 89],"bool"), list[9,8,27,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 27, 89].  Tensor sizes: [9, 0, 27, 89]
2025-03-05 15:23:08.243095 test begin: paddle.broadcast_to(Tensor([9, 0, 28, 28],"bool"), list[9,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 28, 28],"bool"), list[9,8,28,28,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 28, 28].  Tensor sizes: [9, 0, 28, 28]
2025-03-05 15:23:08.243746 test begin: paddle.broadcast_to(Tensor([9, 0, 28, 53],"bool"), list[9,8,28,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 28, 53],"bool"), list[9,8,28,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 28, 53].  Tensor sizes: [9, 0, 28, 53]
2025-03-05 15:23:08.244299 test begin: paddle.broadcast_to(Tensor([9, 0, 28, 89],"bool"), list[9,8,28,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 28, 89],"bool"), list[9,8,28,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 28, 89].  Tensor sizes: [9, 0, 28, 89]
2025-03-05 15:23:08.244874 test begin: paddle.broadcast_to(Tensor([9, 0, 29, 29],"bool"), list[9,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 29, 29],"bool"), list[9,8,29,29,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 29, 29].  Tensor sizes: [9, 0, 29, 29]
2025-03-05 15:23:08.245420 test begin: paddle.broadcast_to(Tensor([9, 0, 29, 53],"bool"), list[9,8,29,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 29, 53],"bool"), list[9,8,29,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 29, 53].  Tensor sizes: [9, 0, 29, 53]
2025-03-05 15:23:08.245963 test begin: paddle.broadcast_to(Tensor([9, 0, 29, 89],"bool"), list[9,8,29,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 29, 89],"bool"), list[9,8,29,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 29, 89].  Tensor sizes: [9, 0, 29, 89]
2025-03-05 15:23:08.246500 test begin: paddle.broadcast_to(Tensor([9, 0, 3, 3],"bool"), list[9,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 3, 3],"bool"), list[9,8,3,3,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 3, 3].  Tensor sizes: [9, 0, 3, 3]
2025-03-05 15:23:08.247045 test begin: paddle.broadcast_to(Tensor([9, 0, 3, 53],"bool"), list[9,8,3,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 3, 53],"bool"), list[9,8,3,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 3, 53].  Tensor sizes: [9, 0, 3, 53]
2025-03-05 15:23:08.247575 test begin: paddle.broadcast_to(Tensor([9, 0, 3, 89],"bool"), list[9,8,3,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 3, 89],"bool"), list[9,8,3,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 3, 89].  Tensor sizes: [9, 0, 3, 89]
2025-03-05 15:23:08.248128 test begin: paddle.broadcast_to(Tensor([9, 0, 30, 30],"bool"), list[9,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 30, 30],"bool"), list[9,8,30,30,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 30, 30].  Tensor sizes: [9, 0, 30, 30]
2025-03-05 15:23:08.248724 test begin: paddle.broadcast_to(Tensor([9, 0, 30, 53],"bool"), list[9,8,30,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 30, 53],"bool"), list[9,8,30,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 30, 53].  Tensor sizes: [9, 0, 30, 53]
2025-03-05 15:23:08.249284 test begin: paddle.broadcast_to(Tensor([9, 0, 30, 89],"bool"), list[9,8,30,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 30, 89],"bool"), list[9,8,30,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 30, 89].  Tensor sizes: [9, 0, 30, 89]
2025-03-05 15:23:08.249852 test begin: paddle.broadcast_to(Tensor([9, 0, 31, 31],"bool"), list[9,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 31, 31],"bool"), list[9,8,31,31,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 31, 31].  Tensor sizes: [9, 0, 31, 31]
2025-03-05 15:23:08.250401 test begin: paddle.broadcast_to(Tensor([9, 0, 31, 53],"bool"), list[9,8,31,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 31, 53],"bool"), list[9,8,31,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 31, 53].  Tensor sizes: [9, 0, 31, 53]
2025-03-05 15:23:08.250958 test begin: paddle.broadcast_to(Tensor([9, 0, 31, 89],"bool"), list[9,8,31,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 31, 89],"bool"), list[9,8,31,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 31, 89].  Tensor sizes: [9, 0, 31, 89]
2025-03-05 15:23:08.251507 test begin: paddle.broadcast_to(Tensor([9, 0, 32, 32],"bool"), list[9,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 32, 32],"bool"), list[9,8,32,32,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 32, 32].  Tensor sizes: [9, 0, 32, 32]
2025-03-05 15:23:08.252053 test begin: paddle.broadcast_to(Tensor([9, 0, 32, 53],"bool"), list[9,8,32,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 32, 53],"bool"), list[9,8,32,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 32, 53].  Tensor sizes: [9, 0, 32, 53]
2025-03-05 15:23:08.252606 test begin: paddle.broadcast_to(Tensor([9, 0, 32, 89],"bool"), list[9,8,32,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 32, 89],"bool"), list[9,8,32,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 32, 89].  Tensor sizes: [9, 0, 32, 89]
2025-03-05 15:23:08.253149 test begin: paddle.broadcast_to(Tensor([9, 0, 33, 33],"bool"), list[9,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 33, 33],"bool"), list[9,8,33,33,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 33, 33].  Tensor sizes: [9, 0, 33, 33]
2025-03-05 15:23:08.253699 test begin: paddle.broadcast_to(Tensor([9, 0, 33, 53],"bool"), list[9,8,33,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 33, 53],"bool"), list[9,8,33,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 33, 53].  Tensor sizes: [9, 0, 33, 53]
2025-03-05 15:23:08.254251 test begin: paddle.broadcast_to(Tensor([9, 0, 33, 89],"bool"), list[9,8,33,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 33, 89],"bool"), list[9,8,33,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 33, 89].  Tensor sizes: [9, 0, 33, 89]
2025-03-05 15:23:08.254801 test begin: paddle.broadcast_to(Tensor([9, 0, 34, 34],"bool"), list[9,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 34, 34],"bool"), list[9,8,34,34,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 34, 34].  Tensor sizes: [9, 0, 34, 34]
2025-03-05 15:23:08.255358 test begin: paddle.broadcast_to(Tensor([9, 0, 34, 53],"bool"), list[9,8,34,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 34, 53],"bool"), list[9,8,34,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 34, 53].  Tensor sizes: [9, 0, 34, 53]
2025-03-05 15:23:08.255920 test begin: paddle.broadcast_to(Tensor([9, 0, 34, 89],"bool"), list[9,8,34,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 34, 89],"bool"), list[9,8,34,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 34, 89].  Tensor sizes: [9, 0, 34, 89]
2025-03-05 15:23:08.256451 test begin: paddle.broadcast_to(Tensor([9, 0, 35, 35],"bool"), list[9,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 35, 35],"bool"), list[9,8,35,35,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 35, 35].  Tensor sizes: [9, 0, 35, 35]
2025-03-05 15:23:08.256997 test begin: paddle.broadcast_to(Tensor([9, 0, 35, 53],"bool"), list[9,8,35,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 35, 53],"bool"), list[9,8,35,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 35, 53].  Tensor sizes: [9, 0, 35, 53]
2025-03-05 15:23:08.257534 test begin: paddle.broadcast_to(Tensor([9, 0, 35, 89],"bool"), list[9,8,35,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 35, 89],"bool"), list[9,8,35,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 35, 89].  Tensor sizes: [9, 0, 35, 89]
2025-03-05 15:23:08.258103 test begin: paddle.broadcast_to(Tensor([9, 0, 36, 36],"bool"), list[9,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 36, 36],"bool"), list[9,8,36,36,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 36, 36].  Tensor sizes: [9, 0, 36, 36]
2025-03-05 15:23:08.258648 test begin: paddle.broadcast_to(Tensor([9, 0, 36, 53],"bool"), list[9,8,36,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 36, 53],"bool"), list[9,8,36,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 36, 53].  Tensor sizes: [9, 0, 36, 53]
2025-03-05 15:23:08.259200 test begin: paddle.broadcast_to(Tensor([9, 0, 36, 89],"bool"), list[9,8,36,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 36, 89],"bool"), list[9,8,36,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 36, 89].  Tensor sizes: [9, 0, 36, 89]
2025-03-05 15:23:08.260136 test begin: paddle.broadcast_to(Tensor([9, 0, 37, 37],"bool"), list[9,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 37, 37],"bool"), list[9,8,37,37,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 37, 37].  Tensor sizes: [9, 0, 37, 37]
2025-03-05 15:23:08.260879 test begin: paddle.broadcast_to(Tensor([9, 0, 37, 53],"bool"), list[9,8,37,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 37, 53],"bool"), list[9,8,37,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 37, 53].  Tensor sizes: [9, 0, 37, 53]
2025-03-05 15:23:08.261544 test begin: paddle.broadcast_to(Tensor([9, 0, 37, 89],"bool"), list[9,8,37,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 37, 89],"bool"), list[9,8,37,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 37, 89].  Tensor sizes: [9, 0, 37, 89]
2025-03-05 15:23:08.262263 test begin: paddle.broadcast_to(Tensor([9, 0, 38, 38],"bool"), list[9,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 38, 38],"bool"), list[9,8,38,38,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 38, 38].  Tensor sizes: [9, 0, 38, 38]
2025-03-05 15:23:08.262916 test begin: paddle.broadcast_to(Tensor([9, 0, 38, 53],"bool"), list[9,8,38,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 38, 53],"bool"), list[9,8,38,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 38, 53].  Tensor sizes: [9, 0, 38, 53]
2025-03-05 15:23:08.263567 test begin: paddle.broadcast_to(Tensor([9, 0, 38, 89],"bool"), list[9,8,38,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 38, 89],"bool"), list[9,8,38,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 38, 89].  Tensor sizes: [9, 0, 38, 89]
2025-03-05 15:23:08.264215 test begin: paddle.broadcast_to(Tensor([9, 0, 39, 39],"bool"), list[9,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 39, 39],"bool"), list[9,8,39,39,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 39, 39].  Tensor sizes: [9, 0, 39, 39]
2025-03-05 15:23:08.264855 test begin: paddle.broadcast_to(Tensor([9, 0, 39, 53],"bool"), list[9,8,39,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 39, 53],"bool"), list[9,8,39,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 39, 53].  Tensor sizes: [9, 0, 39, 53]
2025-03-05 15:23:08.265472 test begin: paddle.broadcast_to(Tensor([9, 0, 39, 89],"bool"), list[9,8,39,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 39, 89],"bool"), list[9,8,39,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 39, 89].  Tensor sizes: [9, 0, 39, 89]
2025-03-05 15:23:08.266127 test begin: paddle.broadcast_to(Tensor([9, 0, 4, 4],"bool"), list[9,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 4, 4],"bool"), list[9,8,4,4,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 4, 4].  Tensor sizes: [9, 0, 4, 4]
2025-03-05 15:23:08.266889 test begin: paddle.broadcast_to(Tensor([9, 0, 4, 53],"bool"), list[9,8,4,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 4, 53],"bool"), list[9,8,4,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 4, 53].  Tensor sizes: [9, 0, 4, 53]
2025-03-05 15:23:08.267467 test begin: paddle.broadcast_to(Tensor([9, 0, 4, 89],"bool"), list[9,8,4,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 4, 89],"bool"), list[9,8,4,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 4, 89].  Tensor sizes: [9, 0, 4, 89]
2025-03-05 15:23:08.268021 test begin: paddle.broadcast_to(Tensor([9, 0, 40, 40],"bool"), list[9,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 40, 40],"bool"), list[9,8,40,40,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 40, 40].  Tensor sizes: [9, 0, 40, 40]
2025-03-05 15:23:08.268557 test begin: paddle.broadcast_to(Tensor([9, 0, 40, 53],"bool"), list[9,8,40,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 40, 53],"bool"), list[9,8,40,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 40, 53].  Tensor sizes: [9, 0, 40, 53]
2025-03-05 15:23:08.269096 test begin: paddle.broadcast_to(Tensor([9, 0, 40, 89],"bool"), list[9,8,40,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 40, 89],"bool"), list[9,8,40,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 40, 89].  Tensor sizes: [9, 0, 40, 89]
2025-03-05 15:23:08.269635 test begin: paddle.broadcast_to(Tensor([9, 0, 41, 41],"bool"), list[9,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 41, 41],"bool"), list[9,8,41,41,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 41, 41].  Tensor sizes: [9, 0, 41, 41]
2025-03-05 15:23:08.270193 test begin: paddle.broadcast_to(Tensor([9, 0, 41, 53],"bool"), list[9,8,41,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 41, 53],"bool"), list[9,8,41,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 41, 53].  Tensor sizes: [9, 0, 41, 53]
2025-03-05 15:23:08.270748 test begin: paddle.broadcast_to(Tensor([9, 0, 41, 89],"bool"), list[9,8,41,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 41, 89],"bool"), list[9,8,41,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 41, 89].  Tensor sizes: [9, 0, 41, 89]
2025-03-05 15:23:08.271291 test begin: paddle.broadcast_to(Tensor([9, 0, 42, 42],"bool"), list[9,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 42, 42],"bool"), list[9,8,42,42,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 42, 42].  Tensor sizes: [9, 0, 42, 42]
2025-03-05 15:23:08.271848 test begin: paddle.broadcast_to(Tensor([9, 0, 42, 53],"bool"), list[9,8,42,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 42, 53],"bool"), list[9,8,42,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 42, 53].  Tensor sizes: [9, 0, 42, 53]
2025-03-05 15:23:08.272389 test begin: paddle.broadcast_to(Tensor([9, 0, 42, 89],"bool"), list[9,8,42,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 42, 89],"bool"), list[9,8,42,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 42, 89].  Tensor sizes: [9, 0, 42, 89]
2025-03-05 15:23:08.272957 test begin: paddle.broadcast_to(Tensor([9, 0, 43, 43],"bool"), list[9,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 43, 43],"bool"), list[9,8,43,43,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 43, 43].  Tensor sizes: [9, 0, 43, 43]
2025-03-05 15:23:08.273492 test begin: paddle.broadcast_to(Tensor([9, 0, 43, 53],"bool"), list[9,8,43,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 43, 53],"bool"), list[9,8,43,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 43, 53].  Tensor sizes: [9, 0, 43, 53]
2025-03-05 15:23:08.274061 test begin: paddle.broadcast_to(Tensor([9, 0, 43, 89],"bool"), list[9,8,43,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 43, 89],"bool"), list[9,8,43,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 43, 89].  Tensor sizes: [9, 0, 43, 89]
2025-03-05 15:23:08.274628 test begin: paddle.broadcast_to(Tensor([9, 0, 44, 44],"bool"), list[9,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 44, 44],"bool"), list[9,8,44,44,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 44, 44].  Tensor sizes: [9, 0, 44, 44]
2025-03-05 15:23:08.275177 test begin: paddle.broadcast_to(Tensor([9, 0, 44, 53],"bool"), list[9,8,44,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 44, 53],"bool"), list[9,8,44,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 44, 53].  Tensor sizes: [9, 0, 44, 53]
2025-03-05 15:23:08.275747 test begin: paddle.broadcast_to(Tensor([9, 0, 44, 89],"bool"), list[9,8,44,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 44, 89],"bool"), list[9,8,44,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 44, 89].  Tensor sizes: [9, 0, 44, 89]
2025-03-05 15:23:08.276305 test begin: paddle.broadcast_to(Tensor([9, 0, 45, 45],"bool"), list[9,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 45, 45],"bool"), list[9,8,45,45,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 45, 45].  Tensor sizes: [9, 0, 45, 45]
2025-03-05 15:23:08.276883 test begin: paddle.broadcast_to(Tensor([9, 0, 45, 53],"bool"), list[9,8,45,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 45, 53],"bool"), list[9,8,45,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 45, 53].  Tensor sizes: [9, 0, 45, 53]
2025-03-05 15:23:08.277423 test begin: paddle.broadcast_to(Tensor([9, 0, 45, 89],"bool"), list[9,8,45,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 45, 89],"bool"), list[9,8,45,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 45, 89].  Tensor sizes: [9, 0, 45, 89]
2025-03-05 15:23:08.277988 test begin: paddle.broadcast_to(Tensor([9, 0, 46, 46],"bool"), list[9,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 46, 46],"bool"), list[9,8,46,46,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 46, 46].  Tensor sizes: [9, 0, 46, 46]
2025-03-05 15:23:08.278543 test begin: paddle.broadcast_to(Tensor([9, 0, 46, 53],"bool"), list[9,8,46,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 46, 53],"bool"), list[9,8,46,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 46, 53].  Tensor sizes: [9, 0, 46, 53]
2025-03-05 15:23:08.279110 test begin: paddle.broadcast_to(Tensor([9, 0, 46, 89],"bool"), list[9,8,46,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 46, 89],"bool"), list[9,8,46,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 46, 89].  Tensor sizes: [9, 0, 46, 89]
2025-03-05 15:23:08.279688 test begin: paddle.broadcast_to(Tensor([9, 0, 47, 47],"bool"), list[9,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 47, 47],"bool"), list[9,8,47,47,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 47, 47].  Tensor sizes: [9, 0, 47, 47]
2025-03-05 15:23:08.280248 test begin: paddle.broadcast_to(Tensor([9, 0, 47, 53],"bool"), list[9,8,47,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 47, 53],"bool"), list[9,8,47,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 47, 53].  Tensor sizes: [9, 0, 47, 53]
2025-03-05 15:23:08.280799 test begin: paddle.broadcast_to(Tensor([9, 0, 47, 89],"bool"), list[9,8,47,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 47, 89],"bool"), list[9,8,47,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 47, 89].  Tensor sizes: [9, 0, 47, 89]
2025-03-05 15:23:08.281332 test begin: paddle.broadcast_to(Tensor([9, 0, 48, 48],"bool"), list[9,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 48, 48],"bool"), list[9,8,48,48,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 48, 48].  Tensor sizes: [9, 0, 48, 48]
2025-03-05 15:23:08.281888 test begin: paddle.broadcast_to(Tensor([9, 0, 48, 53],"bool"), list[9,8,48,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 48, 53],"bool"), list[9,8,48,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 48, 53].  Tensor sizes: [9, 0, 48, 53]
2025-03-05 15:23:08.282424 test begin: paddle.broadcast_to(Tensor([9, 0, 48, 89],"bool"), list[9,8,48,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 48, 89],"bool"), list[9,8,48,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 48, 89].  Tensor sizes: [9, 0, 48, 89]
2025-03-05 15:23:08.282993 test begin: paddle.broadcast_to(Tensor([9, 0, 49, 49],"bool"), list[9,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 49, 49],"bool"), list[9,8,49,49,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 49, 49].  Tensor sizes: [9, 0, 49, 49]
2025-03-05 15:23:08.283557 test begin: paddle.broadcast_to(Tensor([9, 0, 49, 53],"bool"), list[9,8,49,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 49, 53],"bool"), list[9,8,49,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 49, 53].  Tensor sizes: [9, 0, 49, 53]
2025-03-05 15:23:08.284102 test begin: paddle.broadcast_to(Tensor([9, 0, 49, 89],"bool"), list[9,8,49,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 49, 89],"bool"), list[9,8,49,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 49, 89].  Tensor sizes: [9, 0, 49, 89]
2025-03-05 15:23:08.284662 test begin: paddle.broadcast_to(Tensor([9, 0, 5, 53],"bool"), list[9,8,5,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 5, 53],"bool"), list[9,8,5,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 5, 53].  Tensor sizes: [9, 0, 5, 53]
2025-03-05 15:23:08.285615 test begin: paddle.broadcast_to(Tensor([9, 0, 5, 5],"bool"), list[9,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 5, 5],"bool"), list[9,8,5,5,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 5, 5].  Tensor sizes: [9, 0, 5, 5]
2025-03-05 15:23:08.286324 test begin: paddle.broadcast_to(Tensor([9, 0, 5, 89],"bool"), list[9,8,5,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 5, 89],"bool"), list[9,8,5,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 5, 89].  Tensor sizes: [9, 0, 5, 89]
2025-03-05 15:23:08.286984 test begin: paddle.broadcast_to(Tensor([9, 0, 50, 50],"bool"), list[9,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 50, 50],"bool"), list[9,8,50,50,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 50, 50].  Tensor sizes: [9, 0, 50, 50]
2025-03-05 15:23:08.287744 test begin: paddle.broadcast_to(Tensor([9, 0, 50, 53],"bool"), list[9,8,50,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 50, 53],"bool"), list[9,8,50,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 50, 53].  Tensor sizes: [9, 0, 50, 53]
2025-03-05 15:23:08.288430 test begin: paddle.broadcast_to(Tensor([9, 0, 50, 89],"bool"), list[9,8,50,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 50, 89],"bool"), list[9,8,50,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 50, 89].  Tensor sizes: [9, 0, 50, 89]
2025-03-05 15:23:08.288983 test begin: paddle.broadcast_to(Tensor([9, 0, 51, 51],"bool"), list[9,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 51, 51],"bool"), list[9,8,51,51,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 51, 51].  Tensor sizes: [9, 0, 51, 51]
2025-03-05 15:23:08.289539 test begin: paddle.broadcast_to(Tensor([9, 0, 51, 53],"bool"), list[9,8,51,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 51, 53],"bool"), list[9,8,51,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 51, 53].  Tensor sizes: [9, 0, 51, 53]
2025-03-05 15:23:08.290087 test begin: paddle.broadcast_to(Tensor([9, 0, 51, 89],"bool"), list[9,8,51,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 51, 89],"bool"), list[9,8,51,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 51, 89].  Tensor sizes: [9, 0, 51, 89]
2025-03-05 15:23:08.290638 test begin: paddle.broadcast_to(Tensor([9, 0, 52, 52],"bool"), list[9,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 52, 52],"bool"), list[9,8,52,52,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 52, 52].  Tensor sizes: [9, 0, 52, 52]
2025-03-05 15:23:08.291189 test begin: paddle.broadcast_to(Tensor([9, 0, 52, 53],"bool"), list[9,8,52,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 52, 53],"bool"), list[9,8,52,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 52, 53].  Tensor sizes: [9, 0, 52, 53]
2025-03-05 15:23:08.292213 test begin: paddle.broadcast_to(Tensor([9, 0, 52, 89],"bool"), list[9,8,52,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 52, 89],"bool"), list[9,8,52,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 52, 89].  Tensor sizes: [9, 0, 52, 89]
2025-03-05 15:23:08.293014 test begin: paddle.broadcast_to(Tensor([9, 0, 53, 53],"bool"), list[9,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 53, 53],"bool"), list[9,8,53,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 53, 53].  Tensor sizes: [9, 0, 53, 53]
2025-03-05 15:23:08.293861 test begin: paddle.broadcast_to(Tensor([9, 0, 53, 89],"bool"), list[9,8,53,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 53, 89],"bool"), list[9,8,53,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 53, 89].  Tensor sizes: [9, 0, 53, 89]
2025-03-05 15:23:08.294482 test begin: paddle.broadcast_to(Tensor([9, 0, 54, 53],"bool"), list[9,8,54,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 54, 53],"bool"), list[9,8,54,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 54, 53].  Tensor sizes: [9, 0, 54, 53]
2025-03-05 15:23:08.295112 test begin: paddle.broadcast_to(Tensor([9, 0, 54, 54],"bool"), list[9,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 54, 54],"bool"), list[9,8,54,54,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 54, 54].  Tensor sizes: [9, 0, 54, 54]
2025-03-05 15:23:08.295715 test begin: paddle.broadcast_to(Tensor([9, 0, 54, 89],"bool"), list[9,8,54,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 54, 89],"bool"), list[9,8,54,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 54, 89].  Tensor sizes: [9, 0, 54, 89]
2025-03-05 15:23:08.296324 test begin: paddle.broadcast_to(Tensor([9, 0, 55, 53],"bool"), list[9,8,55,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 55, 53],"bool"), list[9,8,55,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 55, 53].  Tensor sizes: [9, 0, 55, 53]
2025-03-05 15:23:08.296940 test begin: paddle.broadcast_to(Tensor([9, 0, 55, 55],"bool"), list[9,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 55, 55],"bool"), list[9,8,55,55,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 55, 55].  Tensor sizes: [9, 0, 55, 55]
2025-03-05 15:23:08.297539 test begin: paddle.broadcast_to(Tensor([9, 0, 55, 89],"bool"), list[9,8,55,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 55, 89],"bool"), list[9,8,55,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 55, 89].  Tensor sizes: [9, 0, 55, 89]
2025-03-05 15:23:08.298178 test begin: paddle.broadcast_to(Tensor([9, 0, 56, 53],"bool"), list[9,8,56,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 56, 53],"bool"), list[9,8,56,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 56, 53].  Tensor sizes: [9, 0, 56, 53]
2025-03-05 15:23:08.298833 test begin: paddle.broadcast_to(Tensor([9, 0, 56, 56],"bool"), list[9,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 56, 56],"bool"), list[9,8,56,56,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 56, 56].  Tensor sizes: [9, 0, 56, 56]
2025-03-05 15:23:08.299430 test begin: paddle.broadcast_to(Tensor([9, 0, 56, 89],"bool"), list[9,8,56,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 56, 89],"bool"), list[9,8,56,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 56, 89].  Tensor sizes: [9, 0, 56, 89]
2025-03-05 15:23:08.300032 test begin: paddle.broadcast_to(Tensor([9, 0, 57, 53],"bool"), list[9,8,57,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 57, 53],"bool"), list[9,8,57,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 57, 53].  Tensor sizes: [9, 0, 57, 53]
2025-03-05 15:23:08.300632 test begin: paddle.broadcast_to(Tensor([9, 0, 57, 57],"bool"), list[9,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 57, 57],"bool"), list[9,8,57,57,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 57, 57].  Tensor sizes: [9, 0, 57, 57]
2025-03-05 15:23:08.301249 test begin: paddle.broadcast_to(Tensor([9, 0, 57, 89],"bool"), list[9,8,57,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 57, 89],"bool"), list[9,8,57,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 57, 89].  Tensor sizes: [9, 0, 57, 89]
2025-03-05 15:23:08.301870 test begin: paddle.broadcast_to(Tensor([9, 0, 58, 53],"bool"), list[9,8,58,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 58, 53],"bool"), list[9,8,58,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 58, 53].  Tensor sizes: [9, 0, 58, 53]
2025-03-05 15:23:08.302470 test begin: paddle.broadcast_to(Tensor([9, 0, 58, 58],"bool"), list[9,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 58, 58],"bool"), list[9,8,58,58,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 58, 58].  Tensor sizes: [9, 0, 58, 58]
2025-03-05 15:23:08.303074 test begin: paddle.broadcast_to(Tensor([9, 0, 58, 89],"bool"), list[9,8,58,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 58, 89],"bool"), list[9,8,58,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 58, 89].  Tensor sizes: [9, 0, 58, 89]
2025-03-05 15:23:08.303671 test begin: paddle.broadcast_to(Tensor([9, 0, 59, 53],"bool"), list[9,8,59,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 59, 53],"bool"), list[9,8,59,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 59, 53].  Tensor sizes: [9, 0, 59, 53]
2025-03-05 15:23:08.304276 test begin: paddle.broadcast_to(Tensor([9, 0, 59, 59],"bool"), list[9,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 59, 59],"bool"), list[9,8,59,59,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 59, 59].  Tensor sizes: [9, 0, 59, 59]
2025-03-05 15:23:08.304896 test begin: paddle.broadcast_to(Tensor([9, 0, 59, 89],"bool"), list[9,8,59,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 59, 89],"bool"), list[9,8,59,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 59, 89].  Tensor sizes: [9, 0, 59, 89]
2025-03-05 15:23:08.305571 test begin: paddle.broadcast_to(Tensor([9, 0, 6, 53],"bool"), list[9,8,6,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 6, 53],"bool"), list[9,8,6,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 6, 53].  Tensor sizes: [9, 0, 6, 53]
2025-03-05 15:23:08.306172 test begin: paddle.broadcast_to(Tensor([9, 0, 6, 6],"bool"), list[9,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 6, 6],"bool"), list[9,8,6,6,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 6, 6].  Tensor sizes: [9, 0, 6, 6]
2025-03-05 15:23:08.306716 test begin: paddle.broadcast_to(Tensor([9, 0, 6, 89],"bool"), list[9,8,6,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 6, 89],"bool"), list[9,8,6,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 6, 89].  Tensor sizes: [9, 0, 6, 89]
2025-03-05 15:23:08.307712 test begin: paddle.broadcast_to(Tensor([9, 0, 60, 53],"bool"), list[9,8,60,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 60, 53],"bool"), list[9,8,60,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 60, 53].  Tensor sizes: [9, 0, 60, 53]
2025-03-05 15:23:08.308895 test begin: paddle.broadcast_to(Tensor([9, 0, 60, 60],"bool"), list[9,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 60, 60],"bool"), list[9,8,60,60,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 60, 60].  Tensor sizes: [9, 0, 60, 60]
2025-03-05 15:23:08.309709 test begin: paddle.broadcast_to(Tensor([9, 0, 60, 89],"bool"), list[9,8,60,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 60, 89],"bool"), list[9,8,60,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 60, 89].  Tensor sizes: [9, 0, 60, 89]
2025-03-05 15:23:08.310387 test begin: paddle.broadcast_to(Tensor([9, 0, 61, 53],"bool"), list[9,8,61,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 61, 53],"bool"), list[9,8,61,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 61, 53].  Tensor sizes: [9, 0, 61, 53]
2025-03-05 15:23:08.311050 test begin: paddle.broadcast_to(Tensor([9, 0, 61, 61],"bool"), list[9,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 61, 61],"bool"), list[9,8,61,61,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 61, 61].  Tensor sizes: [9, 0, 61, 61]
2025-03-05 15:23:08.311816 test begin: paddle.broadcast_to(Tensor([9, 0, 61, 89],"bool"), list[9,8,61,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 61, 89],"bool"), list[9,8,61,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 61, 89].  Tensor sizes: [9, 0, 61, 89]
2025-03-05 15:23:08.312503 test begin: paddle.broadcast_to(Tensor([9, 0, 62, 53],"bool"), list[9,8,62,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 62, 53],"bool"), list[9,8,62,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 62, 53].  Tensor sizes: [9, 0, 62, 53]
2025-03-05 15:23:08.313178 test begin: paddle.broadcast_to(Tensor([9, 0, 62, 62],"bool"), list[9,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 62, 62],"bool"), list[9,8,62,62,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 62, 62].  Tensor sizes: [9, 0, 62, 62]
2025-03-05 15:23:08.313900 test begin: paddle.broadcast_to(Tensor([9, 0, 62, 89],"bool"), list[9,8,62,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 62, 89],"bool"), list[9,8,62,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 62, 89].  Tensor sizes: [9, 0, 62, 89]
2025-03-05 15:23:08.314692 test begin: paddle.broadcast_to(Tensor([9, 0, 63, 53],"bool"), list[9,8,63,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 63, 53],"bool"), list[9,8,63,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 63, 53].  Tensor sizes: [9, 0, 63, 53]
2025-03-05 15:23:08.315258 test begin: paddle.broadcast_to(Tensor([9, 0, 63, 63],"bool"), list[9,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 63, 63],"bool"), list[9,8,63,63,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 63, 63].  Tensor sizes: [9, 0, 63, 63]
2025-03-05 15:23:08.315813 test begin: paddle.broadcast_to(Tensor([9, 0, 63, 89],"bool"), list[9,8,63,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 63, 89],"bool"), list[9,8,63,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 63, 89].  Tensor sizes: [9, 0, 63, 89]
2025-03-05 15:23:08.316362 test begin: paddle.broadcast_to(Tensor([9, 0, 64, 53],"bool"), list[9,8,64,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 64, 53],"bool"), list[9,8,64,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 64, 53].  Tensor sizes: [9, 0, 64, 53]
2025-03-05 15:23:08.316941 test begin: paddle.broadcast_to(Tensor([9, 0, 64, 64],"bool"), list[9,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 64, 64],"bool"), list[9,8,64,64,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 64, 64].  Tensor sizes: [9, 0, 64, 64]
2025-03-05 15:23:08.317496 test begin: paddle.broadcast_to(Tensor([9, 0, 64, 89],"bool"), list[9,8,64,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 64, 89],"bool"), list[9,8,64,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 64, 89].  Tensor sizes: [9, 0, 64, 89]
2025-03-05 15:23:08.318048 test begin: paddle.broadcast_to(Tensor([9, 0, 65, 53],"bool"), list[9,8,65,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 65, 53],"bool"), list[9,8,65,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 65, 53].  Tensor sizes: [9, 0, 65, 53]
2025-03-05 15:23:08.318601 test begin: paddle.broadcast_to(Tensor([9, 0, 65, 65],"bool"), list[9,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 65, 65],"bool"), list[9,8,65,65,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 65, 65].  Tensor sizes: [9, 0, 65, 65]
2025-03-05 15:23:08.319137 test begin: paddle.broadcast_to(Tensor([9, 0, 65, 89],"bool"), list[9,8,65,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 65, 89],"bool"), list[9,8,65,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 65, 89].  Tensor sizes: [9, 0, 65, 89]
2025-03-05 15:23:08.319728 test begin: paddle.broadcast_to(Tensor([9, 0, 66, 53],"bool"), list[9,8,66,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 66, 53],"bool"), list[9,8,66,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 66, 53].  Tensor sizes: [9, 0, 66, 53]
2025-03-05 15:23:08.320279 test begin: paddle.broadcast_to(Tensor([9, 0, 66, 66],"bool"), list[9,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 66, 66],"bool"), list[9,8,66,66,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 66, 66].  Tensor sizes: [9, 0, 66, 66]
2025-03-05 15:23:08.320841 test begin: paddle.broadcast_to(Tensor([9, 0, 66, 89],"bool"), list[9,8,66,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 66, 89],"bool"), list[9,8,66,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 66, 89].  Tensor sizes: [9, 0, 66, 89]
2025-03-05 15:23:08.321379 test begin: paddle.broadcast_to(Tensor([9, 0, 67, 53],"bool"), list[9,8,67,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 67, 53],"bool"), list[9,8,67,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 67, 53].  Tensor sizes: [9, 0, 67, 53]
2025-03-05 15:23:08.321969 test begin: paddle.broadcast_to(Tensor([9, 0, 67, 67],"bool"), list[9,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 67, 67],"bool"), list[9,8,67,67,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 67, 67].  Tensor sizes: [9, 0, 67, 67]
2025-03-05 15:23:08.322514 test begin: paddle.broadcast_to(Tensor([9, 0, 67, 89],"bool"), list[9,8,67,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 67, 89],"bool"), list[9,8,67,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 67, 89].  Tensor sizes: [9, 0, 67, 89]
2025-03-05 15:23:08.323071 test begin: paddle.broadcast_to(Tensor([9, 0, 68, 53],"bool"), list[9,8,68,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 68, 53],"bool"), list[9,8,68,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 68, 53].  Tensor sizes: [9, 0, 68, 53]
2025-03-05 15:23:08.323617 test begin: paddle.broadcast_to(Tensor([9, 0, 68, 68],"bool"), list[9,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 68, 68],"bool"), list[9,8,68,68,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 68, 68].  Tensor sizes: [9, 0, 68, 68]
2025-03-05 15:23:08.324146 test begin: paddle.broadcast_to(Tensor([9, 0, 68, 89],"bool"), list[9,8,68,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 68, 89],"bool"), list[9,8,68,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 68, 89].  Tensor sizes: [9, 0, 68, 89]
2025-03-05 15:23:08.324691 test begin: paddle.broadcast_to(Tensor([9, 0, 69, 53],"bool"), list[9,8,69,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 69, 53],"bool"), list[9,8,69,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 69, 53].  Tensor sizes: [9, 0, 69, 53]
2025-03-05 15:23:08.325223 test begin: paddle.broadcast_to(Tensor([9, 0, 69, 69],"bool"), list[9,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 69, 69],"bool"), list[9,8,69,69,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 69, 69].  Tensor sizes: [9, 0, 69, 69]
2025-03-05 15:23:08.325777 test begin: paddle.broadcast_to(Tensor([9, 0, 69, 89],"bool"), list[9,8,69,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 69, 89],"bool"), list[9,8,69,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 69, 89].  Tensor sizes: [9, 0, 69, 89]
2025-03-05 15:23:08.326339 test begin: paddle.broadcast_to(Tensor([9, 0, 7, 53],"bool"), list[9,8,7,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 7, 53],"bool"), list[9,8,7,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 7, 53].  Tensor sizes: [9, 0, 7, 53]
2025-03-05 15:23:08.326892 test begin: paddle.broadcast_to(Tensor([9, 0, 7, 7],"bool"), list[9,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 7, 7],"bool"), list[9,8,7,7,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 7, 7].  Tensor sizes: [9, 0, 7, 7]
2025-03-05 15:23:08.327416 test begin: paddle.broadcast_to(Tensor([9, 0, 7, 89],"bool"), list[9,8,7,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 7, 89],"bool"), list[9,8,7,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 7, 89].  Tensor sizes: [9, 0, 7, 89]
2025-03-05 15:23:08.327954 test begin: paddle.broadcast_to(Tensor([9, 0, 70, 53],"bool"), list[9,8,70,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 70, 53],"bool"), list[9,8,70,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 70, 53].  Tensor sizes: [9, 0, 70, 53]
2025-03-05 15:23:08.328488 test begin: paddle.broadcast_to(Tensor([9, 0, 70, 70],"bool"), list[9,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 70, 70],"bool"), list[9,8,70,70,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 70, 70].  Tensor sizes: [9, 0, 70, 70]
2025-03-05 15:23:08.329031 test begin: paddle.broadcast_to(Tensor([9, 0, 70, 89],"bool"), list[9,8,70,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 70, 89],"bool"), list[9,8,70,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 70, 89].  Tensor sizes: [9, 0, 70, 89]
2025-03-05 15:23:08.329594 test begin: paddle.broadcast_to(Tensor([9, 0, 71, 53],"bool"), list[9,8,71,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 71, 53],"bool"), list[9,8,71,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 71, 53].  Tensor sizes: [9, 0, 71, 53]
2025-03-05 15:23:08.330175 test begin: paddle.broadcast_to(Tensor([9, 0, 71, 71],"bool"), list[9,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 71, 71],"bool"), list[9,8,71,71,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 71, 71].  Tensor sizes: [9, 0, 71, 71]
2025-03-05 15:23:08.330727 test begin: paddle.broadcast_to(Tensor([9, 0, 71, 89],"bool"), list[9,8,71,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 71, 89],"bool"), list[9,8,71,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 71, 89].  Tensor sizes: [9, 0, 71, 89]
2025-03-05 15:23:08.331280 test begin: paddle.broadcast_to(Tensor([9, 0, 72, 53],"bool"), list[9,8,72,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 72, 53],"bool"), list[9,8,72,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 72, 53].  Tensor sizes: [9, 0, 72, 53]
2025-03-05 15:23:08.331850 test begin: paddle.broadcast_to(Tensor([9, 0, 72, 72],"bool"), list[9,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 72, 72],"bool"), list[9,8,72,72,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 72, 72].  Tensor sizes: [9, 0, 72, 72]
2025-03-05 15:23:08.332401 test begin: paddle.broadcast_to(Tensor([9, 0, 72, 89],"bool"), list[9,8,72,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 72, 89],"bool"), list[9,8,72,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 72, 89].  Tensor sizes: [9, 0, 72, 89]
2025-03-05 15:23:08.332964 test begin: paddle.broadcast_to(Tensor([9, 0, 73, 53],"bool"), list[9,8,73,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 73, 53],"bool"), list[9,8,73,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 73, 53].  Tensor sizes: [9, 0, 73, 53]
2025-03-05 15:23:08.333498 test begin: paddle.broadcast_to(Tensor([9, 0, 73, 73],"bool"), list[9,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 73, 73],"bool"), list[9,8,73,73,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 73, 73].  Tensor sizes: [9, 0, 73, 73]
2025-03-05 15:23:08.334083 test begin: paddle.broadcast_to(Tensor([9, 0, 73, 89],"bool"), list[9,8,73,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 73, 89],"bool"), list[9,8,73,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 73, 89].  Tensor sizes: [9, 0, 73, 89]
2025-03-05 15:23:08.334629 test begin: paddle.broadcast_to(Tensor([9, 0, 74, 53],"bool"), list[9,8,74,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 74, 53],"bool"), list[9,8,74,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 74, 53].  Tensor sizes: [9, 0, 74, 53]
2025-03-05 15:23:08.335160 test begin: paddle.broadcast_to(Tensor([9, 0, 74, 74],"bool"), list[9,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 74, 74],"bool"), list[9,8,74,74,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 74, 74].  Tensor sizes: [9, 0, 74, 74]
2025-03-05 15:23:08.335705 test begin: paddle.broadcast_to(Tensor([9, 0, 74, 89],"bool"), list[9,8,74,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 74, 89],"bool"), list[9,8,74,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 74, 89].  Tensor sizes: [9, 0, 74, 89]
2025-03-05 15:23:08.336239 test begin: paddle.broadcast_to(Tensor([9, 0, 75, 53],"bool"), list[9,8,75,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 75, 53],"bool"), list[9,8,75,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 75, 53].  Tensor sizes: [9, 0, 75, 53]
2025-03-05 15:23:08.336789 test begin: paddle.broadcast_to(Tensor([9, 0, 75, 75],"bool"), list[9,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 75, 75],"bool"), list[9,8,75,75,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 75, 75].  Tensor sizes: [9, 0, 75, 75]
2025-03-05 15:23:08.337353 test begin: paddle.broadcast_to(Tensor([9, 0, 75, 89],"bool"), list[9,8,75,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 75, 89],"bool"), list[9,8,75,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 75, 89].  Tensor sizes: [9, 0, 75, 89]
2025-03-05 15:23:08.337905 test begin: paddle.broadcast_to(Tensor([9, 0, 76, 53],"bool"), list[9,8,76,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 76, 53],"bool"), list[9,8,76,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 76, 53].  Tensor sizes: [9, 0, 76, 53]
2025-03-05 15:23:08.338436 test begin: paddle.broadcast_to(Tensor([9, 0, 76, 76],"bool"), list[9,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 76, 76],"bool"), list[9,8,76,76,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 76, 76].  Tensor sizes: [9, 0, 76, 76]
2025-03-05 15:23:08.338976 test begin: paddle.broadcast_to(Tensor([9, 0, 76, 89],"bool"), list[9,8,76,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 76, 89],"bool"), list[9,8,76,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 76, 89].  Tensor sizes: [9, 0, 76, 89]
2025-03-05 15:23:08.339592 test begin: paddle.broadcast_to(Tensor([9, 0, 77, 53],"bool"), list[9,8,77,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 77, 53],"bool"), list[9,8,77,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 77, 53].  Tensor sizes: [9, 0, 77, 53]
2025-03-05 15:23:08.340145 test begin: paddle.broadcast_to(Tensor([9, 0, 77, 77],"bool"), list[9,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 77, 77],"bool"), list[9,8,77,77,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 77, 77].  Tensor sizes: [9, 0, 77, 77]
2025-03-05 15:23:08.340690 test begin: paddle.broadcast_to(Tensor([9, 0, 77, 89],"bool"), list[9,8,77,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 77, 89],"bool"), list[9,8,77,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 77, 89].  Tensor sizes: [9, 0, 77, 89]
2025-03-05 15:23:08.341219 test begin: paddle.broadcast_to(Tensor([9, 0, 78, 53],"bool"), list[9,8,78,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 78, 53],"bool"), list[9,8,78,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 78, 53].  Tensor sizes: [9, 0, 78, 53]
2025-03-05 15:23:08.341760 test begin: paddle.broadcast_to(Tensor([9, 0, 78, 78],"bool"), list[9,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 78, 78],"bool"), list[9,8,78,78,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 78, 78].  Tensor sizes: [9, 0, 78, 78]
2025-03-05 15:23:08.342311 test begin: paddle.broadcast_to(Tensor([9, 0, 78, 89],"bool"), list[9,8,78,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 78, 89],"bool"), list[9,8,78,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 78, 89].  Tensor sizes: [9, 0, 78, 89]
2025-03-05 15:23:08.342864 test begin: paddle.broadcast_to(Tensor([9, 0, 79, 53],"bool"), list[9,8,79,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 79, 53],"bool"), list[9,8,79,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 79, 53].  Tensor sizes: [9, 0, 79, 53]
2025-03-05 15:23:08.343394 test begin: paddle.broadcast_to(Tensor([9, 0, 79, 79],"bool"), list[9,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 79, 79],"bool"), list[9,8,79,79,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 79, 79].  Tensor sizes: [9, 0, 79, 79]
2025-03-05 15:23:08.343941 test begin: paddle.broadcast_to(Tensor([9, 0, 79, 89],"bool"), list[9,8,79,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 79, 89],"bool"), list[9,8,79,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 79, 89].  Tensor sizes: [9, 0, 79, 89]
2025-03-05 15:23:08.344474 test begin: paddle.broadcast_to(Tensor([9, 0, 8, 53],"bool"), list[9,8,8,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 8, 53],"bool"), list[9,8,8,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 8, 53].  Tensor sizes: [9, 0, 8, 53]
2025-03-05 15:23:08.345026 test begin: paddle.broadcast_to(Tensor([9, 0, 8, 89],"bool"), list[9,8,8,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 8, 89],"bool"), list[9,8,8,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 8, 89].  Tensor sizes: [9, 0, 8, 89]
2025-03-05 15:23:08.345568 test begin: paddle.broadcast_to(Tensor([9, 0, 8, 8],"bool"), list[9,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 8, 8],"bool"), list[9,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 8, 8].  Tensor sizes: [9, 0, 8, 8]
2025-03-05 15:23:08.346136 test begin: paddle.broadcast_to(Tensor([9, 0, 80, 53],"bool"), list[9,8,80,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 80, 53],"bool"), list[9,8,80,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 80, 53].  Tensor sizes: [9, 0, 80, 53]
2025-03-05 15:23:08.346683 test begin: paddle.broadcast_to(Tensor([9, 0, 80, 80],"bool"), list[9,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 80, 80],"bool"), list[9,8,80,80,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 80, 80].  Tensor sizes: [9, 0, 80, 80]
2025-03-05 15:23:08.347227 test begin: paddle.broadcast_to(Tensor([9, 0, 80, 89],"bool"), list[9,8,80,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 80, 89],"bool"), list[9,8,80,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 80, 89].  Tensor sizes: [9, 0, 80, 89]
2025-03-05 15:23:08.347778 test begin: paddle.broadcast_to(Tensor([9, 0, 81, 53],"bool"), list[9,8,81,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 81, 53],"bool"), list[9,8,81,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 81, 53].  Tensor sizes: [9, 0, 81, 53]
2025-03-05 15:23:08.348351 test begin: paddle.broadcast_to(Tensor([9, 0, 81, 81],"bool"), list[9,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 81, 81],"bool"), list[9,8,81,81,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 81, 81].  Tensor sizes: [9, 0, 81, 81]
2025-03-05 15:23:08.348914 test begin: paddle.broadcast_to(Tensor([9, 0, 81, 89],"bool"), list[9,8,81,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 81, 89],"bool"), list[9,8,81,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 81, 89].  Tensor sizes: [9, 0, 81, 89]
2025-03-05 15:23:08.349466 test begin: paddle.broadcast_to(Tensor([9, 0, 82, 53],"bool"), list[9,8,82,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 82, 53],"bool"), list[9,8,82,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 82, 53].  Tensor sizes: [9, 0, 82, 53]
2025-03-05 15:23:08.350030 test begin: paddle.broadcast_to(Tensor([9, 0, 82, 82],"bool"), list[9,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 82, 82],"bool"), list[9,8,82,82,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 82, 82].  Tensor sizes: [9, 0, 82, 82]
2025-03-05 15:23:08.350572 test begin: paddle.broadcast_to(Tensor([9, 0, 82, 89],"bool"), list[9,8,82,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 82, 89],"bool"), list[9,8,82,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 82, 89].  Tensor sizes: [9, 0, 82, 89]
2025-03-05 15:23:08.351142 test begin: paddle.broadcast_to(Tensor([9, 0, 83, 53],"bool"), list[9,8,83,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 83, 53],"bool"), list[9,8,83,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 83, 53].  Tensor sizes: [9, 0, 83, 53]
2025-03-05 15:23:08.351696 test begin: paddle.broadcast_to(Tensor([9, 0, 83, 83],"bool"), list[9,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 83, 83],"bool"), list[9,8,83,83,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 83, 83].  Tensor sizes: [9, 0, 83, 83]
2025-03-05 15:23:08.352319 test begin: paddle.broadcast_to(Tensor([9, 0, 83, 89],"bool"), list[9,8,83,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 83, 89],"bool"), list[9,8,83,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 83, 89].  Tensor sizes: [9, 0, 83, 89]
2025-03-05 15:23:08.352924 test begin: paddle.broadcast_to(Tensor([9, 0, 84, 53],"bool"), list[9,8,84,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 84, 53],"bool"), list[9,8,84,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 84, 53].  Tensor sizes: [9, 0, 84, 53]
2025-03-05 15:23:08.353459 test begin: paddle.broadcast_to(Tensor([9, 0, 84, 84],"bool"), list[9,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 84, 84],"bool"), list[9,8,84,84,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 84, 84].  Tensor sizes: [9, 0, 84, 84]
2025-03-05 15:23:08.354015 test begin: paddle.broadcast_to(Tensor([9, 0, 84, 89],"bool"), list[9,8,84,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 84, 89],"bool"), list[9,8,84,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 84, 89].  Tensor sizes: [9, 0, 84, 89]
2025-03-05 15:23:08.354546 test begin: paddle.broadcast_to(Tensor([9, 0, 85, 53],"bool"), list[9,8,85,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 85, 53],"bool"), list[9,8,85,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 85, 53].  Tensor sizes: [9, 0, 85, 53]
2025-03-05 15:23:08.355102 test begin: paddle.broadcast_to(Tensor([9, 0, 85, 85],"bool"), list[9,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 85, 85],"bool"), list[9,8,85,85,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 85, 85].  Tensor sizes: [9, 0, 85, 85]
2025-03-05 15:23:08.355645 test begin: paddle.broadcast_to(Tensor([9, 0, 85, 89],"bool"), list[9,8,85,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 85, 89],"bool"), list[9,8,85,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 85, 89].  Tensor sizes: [9, 0, 85, 89]
2025-03-05 15:23:08.356185 test begin: paddle.broadcast_to(Tensor([9, 0, 86, 53],"bool"), list[9,8,86,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 86, 53],"bool"), list[9,8,86,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 86, 53].  Tensor sizes: [9, 0, 86, 53]
2025-03-05 15:23:08.356740 test begin: paddle.broadcast_to(Tensor([9, 0, 86, 86],"bool"), list[9,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 86, 86],"bool"), list[9,8,86,86,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 86, 86].  Tensor sizes: [9, 0, 86, 86]
2025-03-05 15:23:08.357277 test begin: paddle.broadcast_to(Tensor([9, 0, 86, 89],"bool"), list[9,8,86,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 86, 89],"bool"), list[9,8,86,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 86, 89].  Tensor sizes: [9, 0, 86, 89]
2025-03-05 15:23:08.357815 test begin: paddle.broadcast_to(Tensor([9, 0, 87, 53],"bool"), list[9,8,87,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 87, 53],"bool"), list[9,8,87,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 87, 53].  Tensor sizes: [9, 0, 87, 53]
2025-03-05 15:23:08.358351 test begin: paddle.broadcast_to(Tensor([9, 0, 87, 87],"bool"), list[9,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 87, 87],"bool"), list[9,8,87,87,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 87, 87].  Tensor sizes: [9, 0, 87, 87]
2025-03-05 15:23:08.358886 test begin: paddle.broadcast_to(Tensor([9, 0, 87, 89],"bool"), list[9,8,87,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 87, 89],"bool"), list[9,8,87,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 87, 89].  Tensor sizes: [9, 0, 87, 89]
2025-03-05 15:23:08.359417 test begin: paddle.broadcast_to(Tensor([9, 0, 88, 53],"bool"), list[9,8,88,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 88, 53],"bool"), list[9,8,88,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 88, 53].  Tensor sizes: [9, 0, 88, 53]
2025-03-05 15:23:08.359977 test begin: paddle.broadcast_to(Tensor([9, 0, 88, 88],"bool"), list[9,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 88, 88],"bool"), list[9,8,88,88,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 88, 88].  Tensor sizes: [9, 0, 88, 88]
2025-03-05 15:23:08.360547 test begin: paddle.broadcast_to(Tensor([9, 0, 88, 89],"bool"), list[9,8,88,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 88, 89],"bool"), list[9,8,88,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 88, 89].  Tensor sizes: [9, 0, 88, 89]
2025-03-05 15:23:08.361095 test begin: paddle.broadcast_to(Tensor([9, 0, 89, 53],"bool"), list[9,8,89,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 89, 53],"bool"), list[9,8,89,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 89, 53].  Tensor sizes: [9, 0, 89, 53]
2025-03-05 15:23:08.361649 test begin: paddle.broadcast_to(Tensor([9, 0, 89, 89],"bool"), list[9,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 89, 89],"bool"), list[9,8,89,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 89, 89].  Tensor sizes: [9, 0, 89, 89]
2025-03-05 15:23:08.362187 test begin: paddle.broadcast_to(Tensor([9, 0, 9, 53],"bool"), list[9,8,9,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 9, 53],"bool"), list[9,8,9,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 9, 53].  Tensor sizes: [9, 0, 9, 53]
2025-03-05 15:23:08.362723 test begin: paddle.broadcast_to(Tensor([9, 0, 9, 89],"bool"), list[9,8,9,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 9, 89],"bool"), list[9,8,9,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 9, 89].  Tensor sizes: [9, 0, 9, 89]
2025-03-05 15:23:08.363254 test begin: paddle.broadcast_to(Tensor([9, 0, 9, 9],"bool"), list[9,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 9, 9],"bool"), list[9,8,9,9,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 9, 9].  Tensor sizes: [9, 0, 9, 9]
2025-03-05 15:23:08.363804 test begin: paddle.broadcast_to(Tensor([9, 0, 90, 53],"bool"), list[9,8,90,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 90, 53],"bool"), list[9,8,90,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 90, 53].  Tensor sizes: [9, 0, 90, 53]
2025-03-05 15:23:08.364344 test begin: paddle.broadcast_to(Tensor([9, 0, 90, 89],"bool"), list[9,8,90,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 90, 89],"bool"), list[9,8,90,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 90, 89].  Tensor sizes: [9, 0, 90, 89]
2025-03-05 15:23:08.364930 test begin: paddle.broadcast_to(Tensor([9, 0, 90, 90],"bool"), list[9,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 90, 90],"bool"), list[9,8,90,90,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 90, 90].  Tensor sizes: [9, 0, 90, 90]
2025-03-05 15:23:08.365496 test begin: paddle.broadcast_to(Tensor([9, 0, 91, 53],"bool"), list[9,8,91,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 91, 53],"bool"), list[9,8,91,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 91, 53].  Tensor sizes: [9, 0, 91, 53]
2025-03-05 15:23:08.366054 test begin: paddle.broadcast_to(Tensor([9, 0, 91, 89],"bool"), list[9,8,91,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 91, 89],"bool"), list[9,8,91,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 91, 89].  Tensor sizes: [9, 0, 91, 89]
2025-03-05 15:23:08.366588 test begin: paddle.broadcast_to(Tensor([9, 0, 91, 91],"bool"), list[9,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 91, 91],"bool"), list[9,8,91,91,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 91, 91].  Tensor sizes: [9, 0, 91, 91]
2025-03-05 15:23:08.367123 test begin: paddle.broadcast_to(Tensor([9, 0, 92, 53],"bool"), list[9,8,92,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 92, 53],"bool"), list[9,8,92,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 92, 53].  Tensor sizes: [9, 0, 92, 53]
2025-03-05 15:23:08.367665 test begin: paddle.broadcast_to(Tensor([9, 0, 92, 89],"bool"), list[9,8,92,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 92, 89],"bool"), list[9,8,92,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 92, 89].  Tensor sizes: [9, 0, 92, 89]
2025-03-05 15:23:08.368221 test begin: paddle.broadcast_to(Tensor([9, 0, 92, 92],"bool"), list[9,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 92, 92],"bool"), list[9,8,92,92,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 92, 92].  Tensor sizes: [9, 0, 92, 92]
2025-03-05 15:23:08.368758 test begin: paddle.broadcast_to(Tensor([9, 0, 93, 53],"bool"), list[9,8,93,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 93, 53],"bool"), list[9,8,93,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 93, 53].  Tensor sizes: [9, 0, 93, 53]
2025-03-05 15:23:08.369303 test begin: paddle.broadcast_to(Tensor([9, 0, 93, 89],"bool"), list[9,8,93,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 93, 89],"bool"), list[9,8,93,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 93, 89].  Tensor sizes: [9, 0, 93, 89]
2025-03-05 15:23:08.369857 test begin: paddle.broadcast_to(Tensor([9, 0, 93, 93],"bool"), list[9,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 93, 93],"bool"), list[9,8,93,93,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 93, 93].  Tensor sizes: [9, 0, 93, 93]
2025-03-05 15:23:08.370389 test begin: paddle.broadcast_to(Tensor([9, 0, 94, 53],"bool"), list[9,8,94,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 94, 53],"bool"), list[9,8,94,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 94, 53].  Tensor sizes: [9, 0, 94, 53]
2025-03-05 15:23:08.371017 test begin: paddle.broadcast_to(Tensor([9, 0, 94, 89],"bool"), list[9,8,94,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 94, 89],"bool"), list[9,8,94,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 94, 89].  Tensor sizes: [9, 0, 94, 89]
2025-03-05 15:23:08.371555 test begin: paddle.broadcast_to(Tensor([9, 0, 94, 94],"bool"), list[9,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 94, 94],"bool"), list[9,8,94,94,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 94, 94].  Tensor sizes: [9, 0, 94, 94]
2025-03-05 15:23:08.372119 test begin: paddle.broadcast_to(Tensor([9, 0, 95, 53],"bool"), list[9,8,95,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 95, 53],"bool"), list[9,8,95,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 95, 53].  Tensor sizes: [9, 0, 95, 53]
2025-03-05 15:23:08.372670 test begin: paddle.broadcast_to(Tensor([9, 0, 95, 89],"bool"), list[9,8,95,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 95, 89],"bool"), list[9,8,95,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 95, 89].  Tensor sizes: [9, 0, 95, 89]
2025-03-05 15:23:08.373201 test begin: paddle.broadcast_to(Tensor([9, 0, 95, 95],"bool"), list[9,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 95, 95],"bool"), list[9,8,95,95,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 95, 95].  Tensor sizes: [9, 0, 95, 95]
2025-03-05 15:23:08.373749 test begin: paddle.broadcast_to(Tensor([9, 0, 96, 53],"bool"), list[9,8,96,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 96, 53],"bool"), list[9,8,96,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 96, 53].  Tensor sizes: [9, 0, 96, 53]
2025-03-05 15:23:08.374280 test begin: paddle.broadcast_to(Tensor([9, 0, 96, 89],"bool"), list[9,8,96,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 96, 89],"bool"), list[9,8,96,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 96, 89].  Tensor sizes: [9, 0, 96, 89]
2025-03-05 15:23:08.374819 test begin: paddle.broadcast_to(Tensor([9, 0, 96, 96],"bool"), list[9,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 96, 96],"bool"), list[9,8,96,96,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 96, 96].  Tensor sizes: [9, 0, 96, 96]
2025-03-05 15:23:08.375350 test begin: paddle.broadcast_to(Tensor([9, 0, 97, 53],"bool"), list[9,8,97,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 97, 53],"bool"), list[9,8,97,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 97, 53].  Tensor sizes: [9, 0, 97, 53]
2025-03-05 15:23:08.375886 test begin: paddle.broadcast_to(Tensor([9, 0, 97, 89],"bool"), list[9,8,97,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 97, 89],"bool"), list[9,8,97,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 97, 89].  Tensor sizes: [9, 0, 97, 89]
2025-03-05 15:23:08.376411 test begin: paddle.broadcast_to(Tensor([9, 0, 97, 97],"bool"), list[9,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 97, 97],"bool"), list[9,8,97,97,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 97, 97].  Tensor sizes: [9, 0, 97, 97]
2025-03-05 15:23:08.376990 test begin: paddle.broadcast_to(Tensor([9, 0, 98, 53],"bool"), list[9,8,98,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 98, 53],"bool"), list[9,8,98,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 98, 53].  Tensor sizes: [9, 0, 98, 53]
2025-03-05 15:23:08.377543 test begin: paddle.broadcast_to(Tensor([9, 0, 98, 89],"bool"), list[9,8,98,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 98, 89],"bool"), list[9,8,98,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 98, 89].  Tensor sizes: [9, 0, 98, 89]
2025-03-05 15:23:08.378084 test begin: paddle.broadcast_to(Tensor([9, 0, 98, 98],"bool"), list[9,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 98, 98],"bool"), list[9,8,98,98,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 98, 98].  Tensor sizes: [9, 0, 98, 98]
2025-03-05 15:23:08.378627 test begin: paddle.broadcast_to(Tensor([9, 0, 99, 53],"bool"), list[9,8,99,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 99, 53],"bool"), list[9,8,99,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 99, 53].  Tensor sizes: [9, 0, 99, 53]
2025-03-05 15:23:08.379168 test begin: paddle.broadcast_to(Tensor([9, 0, 99, 89],"bool"), list[9,8,99,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 99, 89],"bool"), list[9,8,99,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 99, 89].  Tensor sizes: [9, 0, 99, 89]
2025-03-05 15:23:08.379703 test begin: paddle.broadcast_to(Tensor([9, 0, 99, 99],"bool"), list[9,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([9, 0, 99, 99],"bool"), list[9,8,99,99,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 8, 99, 99].  Tensor sizes: [9, 0, 99, 99]
2025-03-05 15:23:08.380241 test begin: paddle.broadcast_to(Tensor([9, 0],"bool"), list[9,2,], )

[torch error] paddle.broadcast_to(Tensor([9, 0],"bool"), list[9,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 2].  Tensor sizes: [9, 0]
2025-03-05 15:23:08.380755 test begin: paddle.broadcast_to(Tensor([9, 0],"float32"), tuple(9,799,), )

[torch error] paddle.broadcast_to(Tensor([9, 0],"float32"), tuple(9,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 799].  Tensor sizes: [9, 0]
2025-03-05 15:23:08.381264 test begin: paddle.broadcast_to(Tensor([9, 0],"int64"), tuple(9,799,), )

[torch error] paddle.broadcast_to(Tensor([9, 0],"int64"), tuple(9,799,), ) 
 The expanded size of the tensor (799) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [9, 799].  Tensor sizes: [9, 0]
2025-03-05 15:23:08.381848 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 100],"bool"), list[9,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 100],"bool"), list[9,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 100, 100].  Tensor sizes: [9, 1, 0, 100]
2025-03-05 15:23:08.382393 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 101],"bool"), list[9,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 101],"bool"), list[9,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 101, 101].  Tensor sizes: [9, 1, 0, 101]
2025-03-05 15:23:08.382961 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 102],"bool"), list[9,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 102],"bool"), list[9,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 102, 102].  Tensor sizes: [9, 1, 0, 102]
2025-03-05 15:23:08.383514 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 103],"bool"), list[9,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 103],"bool"), list[9,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 103, 103].  Tensor sizes: [9, 1, 0, 103]
2025-03-05 15:23:08.384057 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 104],"bool"), list[9,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 104],"bool"), list[9,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 104, 104].  Tensor sizes: [9, 1, 0, 104]
2025-03-05 15:23:08.384620 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 105],"bool"), list[9,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 105],"bool"), list[9,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 105, 105].  Tensor sizes: [9, 1, 0, 105]
2025-03-05 15:23:08.385166 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 106],"bool"), list[9,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 106],"bool"), list[9,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 106, 106].  Tensor sizes: [9, 1, 0, 106]
2025-03-05 15:23:08.385719 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 107],"bool"), list[9,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 107],"bool"), list[9,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 107, 107].  Tensor sizes: [9, 1, 0, 107]
2025-03-05 15:23:08.386298 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 108],"bool"), list[9,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 108],"bool"), list[9,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 108, 108].  Tensor sizes: [9, 1, 0, 108]
2025-03-05 15:23:08.386874 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 109],"bool"), list[9,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 109],"bool"), list[9,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 109, 109].  Tensor sizes: [9, 1, 0, 109]
2025-03-05 15:23:08.387419 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 10],"bool"), list[9,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 10],"bool"), list[9,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 10, 10].  Tensor sizes: [9, 1, 0, 10]
2025-03-05 15:23:08.387966 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 110],"bool"), list[9,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 110],"bool"), list[9,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 110, 110].  Tensor sizes: [9, 1, 0, 110]
2025-03-05 15:23:08.388499 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 111],"bool"), list[9,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 111],"bool"), list[9,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 111, 111].  Tensor sizes: [9, 1, 0, 111]
2025-03-05 15:23:08.389080 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 112],"bool"), list[9,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 112],"bool"), list[9,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 112, 112].  Tensor sizes: [9, 1, 0, 112]
2025-03-05 15:23:08.389632 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 113],"bool"), list[9,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 113],"bool"), list[9,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 113, 113].  Tensor sizes: [9, 1, 0, 113]
2025-03-05 15:23:08.390177 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 114],"bool"), list[9,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 114],"bool"), list[9,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 114, 114].  Tensor sizes: [9, 1, 0, 114]
2025-03-05 15:23:08.390722 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 115],"bool"), list[9,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 115],"bool"), list[9,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 115, 115].  Tensor sizes: [9, 1, 0, 115]
2025-03-05 15:23:08.391258 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 116],"bool"), list[9,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 116],"bool"), list[9,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 116, 116].  Tensor sizes: [9, 1, 0, 116]
2025-03-05 15:23:08.391801 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 117],"bool"), list[9,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 117],"bool"), list[9,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 117, 117].  Tensor sizes: [9, 1, 0, 117]
2025-03-05 15:23:08.392341 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 118],"bool"), list[9,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 118],"bool"), list[9,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 118, 118].  Tensor sizes: [9, 1, 0, 118]
2025-03-05 15:23:08.392907 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 119],"bool"), list[9,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 119],"bool"), list[9,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 119, 119].  Tensor sizes: [9, 1, 0, 119]
2025-03-05 15:23:08.393491 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 11],"bool"), list[9,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 11],"bool"), list[9,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 11, 11].  Tensor sizes: [9, 1, 0, 11]
2025-03-05 15:23:08.394049 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 12],"bool"), list[9,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 12],"bool"), list[9,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 12, 12].  Tensor sizes: [9, 1, 0, 12]
2025-03-05 15:23:08.394590 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 13],"bool"), list[9,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 13],"bool"), list[9,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 13, 13].  Tensor sizes: [9, 1, 0, 13]
2025-03-05 15:23:08.395131 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 14],"bool"), list[9,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 14],"bool"), list[9,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 14, 14].  Tensor sizes: [9, 1, 0, 14]
2025-03-05 15:23:08.395691 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 15],"bool"), list[9,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 15],"bool"), list[9,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 15, 15].  Tensor sizes: [9, 1, 0, 15]
2025-03-05 15:23:08.396231 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 16],"bool"), list[9,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 16],"bool"), list[9,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 16, 16].  Tensor sizes: [9, 1, 0, 16]
2025-03-05 15:23:08.396798 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 17],"bool"), list[9,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 17],"bool"), list[9,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 17, 17].  Tensor sizes: [9, 1, 0, 17]
2025-03-05 15:23:08.397328 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 18],"bool"), list[9,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 18],"bool"), list[9,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 18, 18].  Tensor sizes: [9, 1, 0, 18]
2025-03-05 15:23:08.397852 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 19],"bool"), list[9,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 19],"bool"), list[9,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 19, 19].  Tensor sizes: [9, 1, 0, 19]
2025-03-05 15:23:08.398375 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 1],"bool"), list[9,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 1],"bool"), list[9,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 1, 1].  Tensor sizes: [9, 1, 0, 1]
2025-03-05 15:23:08.398905 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 20],"bool"), list[9,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 20],"bool"), list[9,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 20, 20].  Tensor sizes: [9, 1, 0, 20]
2025-03-05 15:23:08.399455 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 21],"bool"), list[9,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 21],"bool"), list[9,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 21, 21].  Tensor sizes: [9, 1, 0, 21]
2025-03-05 15:23:08.400006 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 22],"bool"), list[9,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 22],"bool"), list[9,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 22, 22].  Tensor sizes: [9, 1, 0, 22]
2025-03-05 15:23:08.400561 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 23],"bool"), list[9,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 23],"bool"), list[9,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 23, 23].  Tensor sizes: [9, 1, 0, 23]
2025-03-05 15:23:08.401123 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 24],"bool"), list[9,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 24],"bool"), list[9,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 24, 24].  Tensor sizes: [9, 1, 0, 24]
2025-03-05 15:23:08.401711 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 25],"bool"), list[9,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 25],"bool"), list[9,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 25, 25].  Tensor sizes: [9, 1, 0, 25]
2025-03-05 15:23:08.402246 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 26],"bool"), list[9,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 26],"bool"), list[9,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 26, 26].  Tensor sizes: [9, 1, 0, 26]
2025-03-05 15:23:08.402794 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 27],"bool"), list[9,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 27],"bool"), list[9,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 27, 27].  Tensor sizes: [9, 1, 0, 27]
2025-03-05 15:23:08.403327 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 28],"bool"), list[9,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 28],"bool"), list[9,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 28, 28].  Tensor sizes: [9, 1, 0, 28]
2025-03-05 15:23:08.403860 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 29],"bool"), list[9,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 29],"bool"), list[9,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 29, 29].  Tensor sizes: [9, 1, 0, 29]
2025-03-05 15:23:08.404381 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 2],"bool"), list[9,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 2],"bool"), list[9,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 2, 2].  Tensor sizes: [9, 1, 0, 2]
2025-03-05 15:23:08.404926 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 30],"bool"), list[9,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 30],"bool"), list[9,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 30, 30].  Tensor sizes: [9, 1, 0, 30]
2025-03-05 15:23:08.405457 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 31],"bool"), list[9,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 31],"bool"), list[9,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 31, 31].  Tensor sizes: [9, 1, 0, 31]
2025-03-05 15:23:08.406004 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 32],"bool"), list[9,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 32],"bool"), list[9,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 32, 32].  Tensor sizes: [9, 1, 0, 32]
2025-03-05 15:23:08.406536 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 33],"bool"), list[9,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 33],"bool"), list[9,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 33, 33].  Tensor sizes: [9, 1, 0, 33]
2025-03-05 15:23:08.407071 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 34],"bool"), list[9,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 34],"bool"), list[9,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 34, 34].  Tensor sizes: [9, 1, 0, 34]
2025-03-05 15:23:08.407612 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 35],"bool"), list[9,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 35],"bool"), list[9,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 35, 35].  Tensor sizes: [9, 1, 0, 35]
2025-03-05 15:23:08.408169 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 36],"bool"), list[9,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 36],"bool"), list[9,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 36, 36].  Tensor sizes: [9, 1, 0, 36]
2025-03-05 15:23:08.408721 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 37],"bool"), list[9,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 37],"bool"), list[9,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 37, 37].  Tensor sizes: [9, 1, 0, 37]
2025-03-05 15:23:08.409248 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 38],"bool"), list[9,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 38],"bool"), list[9,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 38, 38].  Tensor sizes: [9, 1, 0, 38]
2025-03-05 15:23:08.409855 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 39],"bool"), list[9,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 39],"bool"), list[9,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 39, 39].  Tensor sizes: [9, 1, 0, 39]
2025-03-05 15:23:08.410404 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 3],"bool"), list[9,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 3],"bool"), list[9,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 3, 3].  Tensor sizes: [9, 1, 0, 3]
2025-03-05 15:23:08.410948 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 40],"bool"), list[9,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 40],"bool"), list[9,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 40, 40].  Tensor sizes: [9, 1, 0, 40]
2025-03-05 15:23:08.411477 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 41],"bool"), list[9,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 41],"bool"), list[9,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 41, 41].  Tensor sizes: [9, 1, 0, 41]
2025-03-05 15:23:08.412021 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 42],"bool"), list[9,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 42],"bool"), list[9,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 42, 42].  Tensor sizes: [9, 1, 0, 42]
2025-03-05 15:23:08.412543 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 43],"bool"), list[9,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 43],"bool"), list[9,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 43, 43].  Tensor sizes: [9, 1, 0, 43]
2025-03-05 15:23:08.413087 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 44],"bool"), list[9,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 44],"bool"), list[9,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 44, 44].  Tensor sizes: [9, 1, 0, 44]
2025-03-05 15:23:08.413619 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 45],"bool"), list[9,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 45],"bool"), list[9,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 45, 45].  Tensor sizes: [9, 1, 0, 45]
2025-03-05 15:23:08.414153 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 46],"bool"), list[9,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 46],"bool"), list[9,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 46, 46].  Tensor sizes: [9, 1, 0, 46]
2025-03-05 15:23:08.414712 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 47],"bool"), list[9,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 47],"bool"), list[9,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 47, 47].  Tensor sizes: [9, 1, 0, 47]
2025-03-05 15:23:08.415285 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 48],"bool"), list[9,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 48],"bool"), list[9,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 48, 48].  Tensor sizes: [9, 1, 0, 48]
2025-03-05 15:23:08.415831 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 49],"bool"), list[9,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 49],"bool"), list[9,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 49, 49].  Tensor sizes: [9, 1, 0, 49]
2025-03-05 15:23:08.416410 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 4],"bool"), list[9,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 4],"bool"), list[9,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 4, 4].  Tensor sizes: [9, 1, 0, 4]
2025-03-05 15:23:08.416951 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 50],"bool"), list[9,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 50],"bool"), list[9,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 50, 50].  Tensor sizes: [9, 1, 0, 50]
2025-03-05 15:23:08.417488 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 51],"bool"), list[9,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 51],"bool"), list[9,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 51, 51].  Tensor sizes: [9, 1, 0, 51]
2025-03-05 15:23:08.418027 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 52],"bool"), list[9,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 52],"bool"), list[9,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 52, 52].  Tensor sizes: [9, 1, 0, 52]
2025-03-05 15:23:08.418559 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,1,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,1,53,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 1, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.419110 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,10,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,10,53,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 10, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.419653 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,100,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,100,53,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 100, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.420174 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,101,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,101,53,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 101, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.420711 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,102,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,102,53,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 102, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.421244 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,103,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,103,53,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 103, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.421776 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,104,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,104,53,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 104, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.422289 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,105,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,105,53,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 105, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.422871 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,106,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,106,53,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 106, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.423417 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,107,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,107,53,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 107, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.423959 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,108,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,108,53,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 108, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.424497 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,109,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,109,53,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 109, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.425059 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,11,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,11,53,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 11, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.425635 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,110,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,110,53,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 110, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.426177 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,111,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,111,53,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 111, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.426733 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,112,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,112,53,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 112, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.427281 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,113,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,113,53,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 113, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.427840 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,114,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,114,53,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 114, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.428364 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,115,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,115,53,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 115, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.428906 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,116,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,116,53,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 116, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.429472 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,117,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,117,53,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 117, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.430017 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,118,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,118,53,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 118, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.430540 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,119,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,119,53,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 119, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.431105 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,12,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,12,53,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 12, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.431654 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,13,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,13,53,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 13, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.432184 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,14,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,14,53,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 14, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.432726 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,15,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,15,53,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 15, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.433251 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,16,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,16,53,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 16, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.433838 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,17,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,17,53,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 17, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.434383 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,18,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,18,53,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 18, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.435547 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,19,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,19,53,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 19, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.436186 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,2,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,2,53,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 2, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.436746 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,20,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,20,53,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 20, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.437601 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,21,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,21,53,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 21, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.438340 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,22,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,22,53,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 22, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.438923 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,23,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,23,53,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 23, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.439481 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,24,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,24,53,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 24, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.440033 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,25,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,25,53,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 25, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.440572 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,26,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,26,53,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 26, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.441148 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,27,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,27,53,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 27, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.441790 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,28,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,28,53,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 28, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.442361 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,29,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,29,53,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 29, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.442901 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,3,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,3,53,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 3, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.443434 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,30,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,30,53,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 30, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.443977 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,31,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,31,53,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 31, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.444505 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,32,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,32,53,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 32, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.445042 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,33,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,33,53,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 33, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.445551 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,34,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,34,53,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 34, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.446072 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,35,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,35,53,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 35, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.446599 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,36,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,36,53,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 36, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.447122 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,37,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,37,53,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 37, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.447647 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,38,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,38,53,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 38, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.448154 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,39,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,39,53,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 39, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.448668 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,4,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,4,53,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 4, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.449268 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,40,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,40,53,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 40, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.449792 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,41,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,41,53,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 41, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.450293 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,42,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,42,53,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 42, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.450826 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,43,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,43,53,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 43, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.451346 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,44,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,44,53,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 44, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.451868 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,45,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,45,53,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 45, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.452432 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,46,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,46,53,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 46, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.453307 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,47,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,47,53,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 47, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.453958 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,48,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,48,53,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 48, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.454572 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,49,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,49,53,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 49, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.455188 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,5,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,5,53,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 5, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.455733 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,50,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,50,53,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 50, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.456277 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,51,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,51,53,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 51, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.456896 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,52,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,52,53,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 52, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.457444 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 53, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.458001 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,54,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,54,53,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 54, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.458543 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,55,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,55,53,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 55, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.459076 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,56,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,56,53,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 56, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.459576 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,57,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,57,53,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 57, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.460102 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,58,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,58,53,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 58, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.460681 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,59,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,59,53,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 59, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.461204 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,6,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,6,53,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 6, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.461757 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,60,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,60,53,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 60, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.462280 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,61,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,61,53,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 61, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.462796 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,62,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,62,53,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 62, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.463296 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,63,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,63,53,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 63, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.463804 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,64,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,64,53,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 64, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.464309 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,65,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,65,53,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 65, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.464861 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,66,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,66,53,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 66, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.465372 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,67,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,67,53,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 67, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.465920 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,68,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,68,53,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 68, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.466443 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,69,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,69,53,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 69, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.466974 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,7,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,7,53,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 7, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.467497 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,70,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,70,53,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 70, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.468026 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,71,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,71,53,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 71, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.468528 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,72,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,72,53,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 72, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.469127 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,73,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,73,53,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 73, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.469809 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,74,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,74,53,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 74, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.470467 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,75,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,75,53,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 75, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.471096 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,76,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,76,53,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 76, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.471640 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,77,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,77,53,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 77, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.472158 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,78,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,78,53,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 78, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.472675 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,79,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,79,53,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 79, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.473214 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,8,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,8,53,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 8, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.473732 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,80,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,80,53,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 80, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.474251 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,81,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,81,53,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 81, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.474806 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,82,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,82,53,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 82, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.475319 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,83,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,83,53,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 83, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.475833 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,84,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,84,53,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 84, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.476348 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,85,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,85,53,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 85, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.476864 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,86,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,86,53,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 86, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.477378 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,87,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,87,53,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 87, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.477948 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,88,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,88,53,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 88, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.478461 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,89,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,89,53,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 89, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.478991 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,9,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,9,53,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 9, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.479512 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,90,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,90,53,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 90, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.480023 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,91,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,91,53,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 91, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.480524 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,92,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,92,53,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 92, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.481031 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,93,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,93,53,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 93, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.481526 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,94,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,94,53,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 94, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.482058 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,95,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,95,53,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 95, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.482557 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,96,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,96,53,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 96, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.483096 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,97,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,97,53,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 97, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.483650 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,98,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,98,53,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 98, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.484181 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,99,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 53],"bool"), list[9,8,99,53,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 99, 53].  Tensor sizes: [9, 1, 0, 53]
2025-03-05 15:23:08.484758 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 54],"bool"), list[9,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 54],"bool"), list[9,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 54, 54].  Tensor sizes: [9, 1, 0, 54]
2025-03-05 15:23:08.485283 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 55],"bool"), list[9,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 55],"bool"), list[9,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 55, 55].  Tensor sizes: [9, 1, 0, 55]
2025-03-05 15:23:08.485831 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 56],"bool"), list[9,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 56],"bool"), list[9,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 56, 56].  Tensor sizes: [9, 1, 0, 56]
2025-03-05 15:23:08.486388 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 57],"bool"), list[9,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 57],"bool"), list[9,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 57, 57].  Tensor sizes: [9, 1, 0, 57]
2025-03-05 15:23:08.487127 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 58],"bool"), list[9,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 58],"bool"), list[9,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 58, 58].  Tensor sizes: [9, 1, 0, 58]
2025-03-05 15:23:08.487748 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 59],"bool"), list[9,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 59],"bool"), list[9,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 59, 59].  Tensor sizes: [9, 1, 0, 59]
2025-03-05 15:23:08.488339 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 5],"bool"), list[9,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 5],"bool"), list[9,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 5, 5].  Tensor sizes: [9, 1, 0, 5]
2025-03-05 15:23:08.488979 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 60],"bool"), list[9,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 60],"bool"), list[9,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 60, 60].  Tensor sizes: [9, 1, 0, 60]
2025-03-05 15:23:08.489569 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 61],"bool"), list[9,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 61],"bool"), list[9,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 61, 61].  Tensor sizes: [9, 1, 0, 61]
2025-03-05 15:23:08.490227 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 62],"bool"), list[9,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 62],"bool"), list[9,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 62, 62].  Tensor sizes: [9, 1, 0, 62]
2025-03-05 15:23:08.490846 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 63],"bool"), list[9,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 63],"bool"), list[9,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 63, 63].  Tensor sizes: [9, 1, 0, 63]
2025-03-05 15:23:08.491437 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 64],"bool"), list[9,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 64],"bool"), list[9,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 64, 64].  Tensor sizes: [9, 1, 0, 64]
2025-03-05 15:23:08.492058 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 65],"bool"), list[9,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 65],"bool"), list[9,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 65, 65].  Tensor sizes: [9, 1, 0, 65]
2025-03-05 15:23:08.492643 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 66],"bool"), list[9,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 66],"bool"), list[9,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 66, 66].  Tensor sizes: [9, 1, 0, 66]
2025-03-05 15:23:08.493225 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 67],"bool"), list[9,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 67],"bool"), list[9,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 67, 67].  Tensor sizes: [9, 1, 0, 67]
2025-03-05 15:23:08.493846 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 68],"bool"), list[9,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 68],"bool"), list[9,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 68, 68].  Tensor sizes: [9, 1, 0, 68]
2025-03-05 15:23:08.494428 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 69],"bool"), list[9,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 69],"bool"), list[9,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 69, 69].  Tensor sizes: [9, 1, 0, 69]
2025-03-05 15:23:08.495039 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 6],"bool"), list[9,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 6],"bool"), list[9,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 6, 6].  Tensor sizes: [9, 1, 0, 6]
2025-03-05 15:23:08.495635 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 70],"bool"), list[9,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 70],"bool"), list[9,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 70, 70].  Tensor sizes: [9, 1, 0, 70]
2025-03-05 15:23:08.496269 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 71],"bool"), list[9,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 71],"bool"), list[9,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 71, 71].  Tensor sizes: [9, 1, 0, 71]
2025-03-05 15:23:08.496869 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 72],"bool"), list[9,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 72],"bool"), list[9,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 72, 72].  Tensor sizes: [9, 1, 0, 72]
2025-03-05 15:23:08.497478 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 73],"bool"), list[9,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 73],"bool"), list[9,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 73, 73].  Tensor sizes: [9, 1, 0, 73]
2025-03-05 15:23:08.498076 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 74],"bool"), list[9,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 74],"bool"), list[9,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 74, 74].  Tensor sizes: [9, 1, 0, 74]
2025-03-05 15:23:08.498725 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 75],"bool"), list[9,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 75],"bool"), list[9,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 75, 75].  Tensor sizes: [9, 1, 0, 75]
2025-03-05 15:23:08.499332 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 76],"bool"), list[9,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 76],"bool"), list[9,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 76, 76].  Tensor sizes: [9, 1, 0, 76]
2025-03-05 15:23:08.499961 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 77],"bool"), list[9,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 77],"bool"), list[9,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 77, 77].  Tensor sizes: [9, 1, 0, 77]
2025-03-05 15:23:08.500549 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 78],"bool"), list[9,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 78],"bool"), list[9,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 78, 78].  Tensor sizes: [9, 1, 0, 78]
2025-03-05 15:23:08.501140 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 79],"bool"), list[9,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 79],"bool"), list[9,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 79, 79].  Tensor sizes: [9, 1, 0, 79]
2025-03-05 15:23:08.501721 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 7],"bool"), list[9,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 7],"bool"), list[9,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 7, 7].  Tensor sizes: [9, 1, 0, 7]
2025-03-05 15:23:08.502307 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 80],"bool"), list[9,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 80],"bool"), list[9,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 80, 80].  Tensor sizes: [9, 1, 0, 80]
2025-03-05 15:23:08.502901 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 81],"bool"), list[9,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 81],"bool"), list[9,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 81, 81].  Tensor sizes: [9, 1, 0, 81]
2025-03-05 15:23:08.503484 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 82],"bool"), list[9,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 82],"bool"), list[9,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 82, 82].  Tensor sizes: [9, 1, 0, 82]
2025-03-05 15:23:08.504565 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 83],"bool"), list[9,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 83],"bool"), list[9,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 83, 83].  Tensor sizes: [9, 1, 0, 83]
2025-03-05 15:23:08.505315 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 84],"bool"), list[9,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 84],"bool"), list[9,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 84, 84].  Tensor sizes: [9, 1, 0, 84]
2025-03-05 15:23:08.505951 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 85],"bool"), list[9,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 85],"bool"), list[9,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 85, 85].  Tensor sizes: [9, 1, 0, 85]
2025-03-05 15:23:08.506944 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 86],"bool"), list[9,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 86],"bool"), list[9,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 86, 86].  Tensor sizes: [9, 1, 0, 86]
2025-03-05 15:23:08.507574 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 87],"bool"), list[9,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 87],"bool"), list[9,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 87, 87].  Tensor sizes: [9, 1, 0, 87]
2025-03-05 15:23:08.508207 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 88],"bool"), list[9,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 88],"bool"), list[9,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 88, 88].  Tensor sizes: [9, 1, 0, 88]
2025-03-05 15:23:08.508831 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,1,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,1,89,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 1, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.509387 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,10,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,10,89,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 10, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.509934 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,100,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,100,89,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 100, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.510466 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,101,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,101,89,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 101, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.511003 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,102,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,102,89,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 102, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.511531 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,103,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,103,89,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 103, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.512104 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,104,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,104,89,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 104, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.512654 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,105,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,105,89,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 105, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.513182 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,106,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,106,89,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 106, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.513728 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,107,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,107,89,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 107, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.514262 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,108,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,108,89,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 108, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.514842 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,109,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,109,89,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 109, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.515377 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,11,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,11,89,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 11, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.515918 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,110,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,110,89,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 110, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.516449 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,111,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,111,89,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 111, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.516985 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,112,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,112,89,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 112, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.517516 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,113,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,113,89,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 113, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.518070 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,114,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,114,89,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 114, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.518619 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,115,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,115,89,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 115, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.519162 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,12,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,12,89,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 12, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.519713 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,13,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,13,89,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 13, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.520244 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,14,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,14,89,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 14, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.520797 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,15,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,15,89,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 15, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.521332 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,16,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,16,89,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 16, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.521877 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,17,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,17,89,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 17, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.522405 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,18,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,18,89,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 18, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.522934 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,19,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,19,89,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 19, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.523517 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,2,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,2,89,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 2, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.524122 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,20,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,20,89,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 20, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.524671 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,21,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,21,89,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 21, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.525219 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,22,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,22,89,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 22, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.525786 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,23,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,23,89,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 23, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.526336 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,24,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,24,89,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 24, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.526863 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,25,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,25,89,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 25, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.527396 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,26,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,26,89,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 26, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.527936 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,27,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,27,89,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 27, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.528476 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,28,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,28,89,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 28, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.529029 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,29,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,29,89,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 29, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.529560 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,3,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,3,89,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 3, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.530106 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,30,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,30,89,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 30, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.530642 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,31,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,31,89,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 31, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.531164 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,32,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,32,89,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 32, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.531714 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,33,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,33,89,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 33, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.532248 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,34,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,34,89,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 34, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.532793 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,35,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,35,89,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 35, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.533329 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,36,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,36,89,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 36, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.533890 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,37,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,37,89,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 37, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.534423 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,38,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,38,89,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 38, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.534964 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,39,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,39,89,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 39, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.535491 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,4,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,4,89,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 4, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.536034 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,40,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,40,89,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 40, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.536563 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,41,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,41,89,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 41, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.537102 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,42,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,42,89,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 42, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.537654 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,43,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,43,89,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 43, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.538226 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,44,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,44,89,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 44, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.538791 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,45,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,45,89,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 45, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.539332 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,46,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,46,89,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 46, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.539882 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,47,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,47,89,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 47, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.540435 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,48,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,48,89,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 48, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.541000 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,49,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,49,89,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 49, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.541547 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,5,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,5,89,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 5, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.542103 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,50,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,50,89,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 50, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.542709 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,51,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,51,89,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 51, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.543264 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,52,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,52,89,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 52, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.543821 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,53,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,53,89,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 53, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.544349 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,54,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,54,89,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 54, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.544911 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,55,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,55,89,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 55, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.545438 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,56,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,56,89,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 56, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.545981 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,57,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,57,89,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 57, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.546512 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,58,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,58,89,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 58, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.547053 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,59,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,59,89,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 59, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.547648 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,6,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,6,89,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 6, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.548202 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,60,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,60,89,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 60, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.548744 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,61,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,61,89,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 61, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.549267 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,62,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,62,89,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 62, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.549819 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,63,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,63,89,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 63, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.550511 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,64,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,64,89,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 64, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.551078 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,65,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,65,89,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 65, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.551674 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,66,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,66,89,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 66, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.552215 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,67,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,67,89,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 67, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.552799 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,68,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,68,89,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 68, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.553343 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,69,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,69,89,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 69, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.553892 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,7,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,7,89,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 7, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.554458 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,70,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,70,89,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 70, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.555010 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,71,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,71,89,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 71, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.555537 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,72,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,72,89,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 72, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.556076 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,73,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,73,89,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 73, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.556610 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,74,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,74,89,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 74, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.557143 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,75,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,75,89,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 75, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.557698 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,76,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,76,89,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 76, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.558275 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,77,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,77,89,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 77, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.558836 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,78,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,78,89,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 78, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.559378 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,79,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,79,89,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 79, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.559939 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,8,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,8,89,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 8, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.560481 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,80,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,80,89,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 80, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.561026 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,81,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,81,89,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 81, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.561606 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,82,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,82,89,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 82, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.562161 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,83,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,83,89,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 83, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.562699 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,84,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,84,89,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 84, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.563273 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,85,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,85,89,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 85, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.563822 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,86,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,86,89,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 86, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.564353 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,87,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,87,89,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 87, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.564919 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,88,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,88,89,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 88, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.565496 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 89, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.566052 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,9,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,9,89,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 9, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.566601 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,90,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,90,89,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 90, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.567149 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,91,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,91,89,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 91, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.567697 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,92,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,92,89,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 92, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.568240 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,93,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,93,89,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 93, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.568784 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,94,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,94,89,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 94, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.569314 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,95,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,95,89,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 95, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.569852 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,96,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,96,89,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 96, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.570407 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,97,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,97,89,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 97, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.570942 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,98,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,98,89,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 98, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.571472 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,99,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 89],"bool"), list[9,8,99,89,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 99, 89].  Tensor sizes: [9, 1, 0, 89]
2025-03-05 15:23:08.572013 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 8],"bool"), list[9,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 8],"bool"), list[9,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 8, 8].  Tensor sizes: [9, 1, 0, 8]
2025-03-05 15:23:08.572542 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 90],"bool"), list[9,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 90],"bool"), list[9,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 90, 90].  Tensor sizes: [9, 1, 0, 90]
2025-03-05 15:23:08.573081 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 91],"bool"), list[9,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 91],"bool"), list[9,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 91, 91].  Tensor sizes: [9, 1, 0, 91]
2025-03-05 15:23:08.573623 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 92],"bool"), list[9,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 92],"bool"), list[9,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 92, 92].  Tensor sizes: [9, 1, 0, 92]
2025-03-05 15:23:08.574154 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 93],"bool"), list[9,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 93],"bool"), list[9,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 93, 93].  Tensor sizes: [9, 1, 0, 93]
2025-03-05 15:23:08.574703 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 94],"bool"), list[9,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 94],"bool"), list[9,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 94, 94].  Tensor sizes: [9, 1, 0, 94]
2025-03-05 15:23:08.575230 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 95],"bool"), list[9,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 95],"bool"), list[9,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 95, 95].  Tensor sizes: [9, 1, 0, 95]
2025-03-05 15:23:08.575875 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 96],"bool"), list[9,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 96],"bool"), list[9,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 96, 96].  Tensor sizes: [9, 1, 0, 96]
2025-03-05 15:23:08.576561 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 97],"bool"), list[9,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 97],"bool"), list[9,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 97, 97].  Tensor sizes: [9, 1, 0, 97]
2025-03-05 15:23:08.587650 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 98],"bool"), list[9,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 98],"bool"), list[9,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 98, 98].  Tensor sizes: [9, 1, 0, 98]
2025-03-05 15:23:08.593329 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 99],"bool"), list[9,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 99],"bool"), list[9,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 99, 99].  Tensor sizes: [9, 1, 0, 99]
2025-03-05 15:23:08.602427 test begin: paddle.broadcast_to(Tensor([9, 1, 0, 9],"bool"), list[9,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 0, 9],"bool"), list[9,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [9, 8, 9, 9].  Tensor sizes: [9, 1, 0, 9]
2025-03-05 15:23:08.611886 test begin: paddle.broadcast_to(Tensor([9, 1, 1, 0],"bool"), list[9,8,1,1,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 1, 0],"bool"), list[9,8,1,1,], ) 
 The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 1, 1].  Tensor sizes: [9, 1, 1, 0]
2025-03-05 15:23:08.620940 test begin: paddle.broadcast_to(Tensor([9, 1, 1, 0],"bool"), list[9,8,1,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 1, 0],"bool"), list[9,8,1,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 1, 53].  Tensor sizes: [9, 1, 1, 0]
2025-03-05 15:23:08.629885 test begin: paddle.broadcast_to(Tensor([9, 1, 1, 0],"bool"), list[9,8,1,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 1, 0],"bool"), list[9,8,1,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 1, 89].  Tensor sizes: [9, 1, 1, 0]
2025-03-05 15:23:08.638738 test begin: paddle.broadcast_to(Tensor([9, 1, 10, 0],"bool"), list[9,8,10,10,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 10, 0],"bool"), list[9,8,10,10,], ) 
 The expanded size of the tensor (10) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 10, 10].  Tensor sizes: [9, 1, 10, 0]
2025-03-05 15:23:08.640159 test begin: paddle.broadcast_to(Tensor([9, 1, 10, 0],"bool"), list[9,8,10,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 10, 0],"bool"), list[9,8,10,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 10, 53].  Tensor sizes: [9, 1, 10, 0]
2025-03-05 15:23:08.641279 test begin: paddle.broadcast_to(Tensor([9, 1, 10, 0],"bool"), list[9,8,10,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 10, 0],"bool"), list[9,8,10,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 10, 89].  Tensor sizes: [9, 1, 10, 0]
2025-03-05 15:23:08.650617 test begin: paddle.broadcast_to(Tensor([9, 1, 100, 0],"bool"), list[9,8,100,100,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 100, 0],"bool"), list[9,8,100,100,], ) 
 The expanded size of the tensor (100) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 100, 100].  Tensor sizes: [9, 1, 100, 0]
2025-03-05 15:23:08.659759 test begin: paddle.broadcast_to(Tensor([9, 1, 100, 0],"bool"), list[9,8,100,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 100, 0],"bool"), list[9,8,100,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 100, 53].  Tensor sizes: [9, 1, 100, 0]
2025-03-05 15:23:08.664989 test begin: paddle.broadcast_to(Tensor([9, 1, 100, 0],"bool"), list[9,8,100,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 100, 0],"bool"), list[9,8,100,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 100, 89].  Tensor sizes: [9, 1, 100, 0]
2025-03-05 15:23:08.666074 test begin: paddle.broadcast_to(Tensor([9, 1, 101, 0],"bool"), list[9,8,101,101,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 101, 0],"bool"), list[9,8,101,101,], ) 
 The expanded size of the tensor (101) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 101, 101].  Tensor sizes: [9, 1, 101, 0]
2025-03-05 15:23:08.666961 test begin: paddle.broadcast_to(Tensor([9, 1, 101, 0],"bool"), list[9,8,101,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 101, 0],"bool"), list[9,8,101,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 101, 53].  Tensor sizes: [9, 1, 101, 0]
2025-03-05 15:23:08.670160 test begin: paddle.broadcast_to(Tensor([9, 1, 101, 0],"bool"), list[9,8,101,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 101, 0],"bool"), list[9,8,101,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 101, 89].  Tensor sizes: [9, 1, 101, 0]
2025-03-05 15:23:08.671055 test begin: paddle.broadcast_to(Tensor([9, 1, 102, 0],"bool"), list[9,8,102,102,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 102, 0],"bool"), list[9,8,102,102,], ) 
 The expanded size of the tensor (102) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 102, 102].  Tensor sizes: [9, 1, 102, 0]
2025-03-05 15:23:08.671902 test begin: paddle.broadcast_to(Tensor([9, 1, 102, 0],"bool"), list[9,8,102,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 102, 0],"bool"), list[9,8,102,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 102, 53].  Tensor sizes: [9, 1, 102, 0]
2025-03-05 15:23:08.672790 test begin: paddle.broadcast_to(Tensor([9, 1, 102, 0],"bool"), list[9,8,102,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 102, 0],"bool"), list[9,8,102,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 102, 89].  Tensor sizes: [9, 1, 102, 0]
2025-03-05 15:23:08.682275 test begin: paddle.broadcast_to(Tensor([9, 1, 103, 0],"bool"), list[9,8,103,103,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 103, 0],"bool"), list[9,8,103,103,], ) 
 The expanded size of the tensor (103) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 103, 103].  Tensor sizes: [9, 1, 103, 0]
2025-03-05 15:23:08.686283 test begin: paddle.broadcast_to(Tensor([9, 1, 103, 0],"bool"), list[9,8,103,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 103, 0],"bool"), list[9,8,103,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 103, 53].  Tensor sizes: [9, 1, 103, 0]
2025-03-05 15:23:08.689305 test begin: paddle.broadcast_to(Tensor([9, 1, 103, 0],"bool"), list[9,8,103,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 103, 0],"bool"), list[9,8,103,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 103, 89].  Tensor sizes: [9, 1, 103, 0]
2025-03-05 15:23:08.694271 test begin: paddle.broadcast_to(Tensor([9, 1, 104, 0],"bool"), list[9,8,104,104,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 104, 0],"bool"), list[9,8,104,104,], ) 
 The expanded size of the tensor (104) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 104, 104].  Tensor sizes: [9, 1, 104, 0]
2025-03-05 15:23:08.694963 test begin: paddle.broadcast_to(Tensor([9, 1, 104, 0],"bool"), list[9,8,104,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 104, 0],"bool"), list[9,8,104,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 104, 53].  Tensor sizes: [9, 1, 104, 0]
2025-03-05 15:23:08.696688 test begin: paddle.broadcast_to(Tensor([9, 1, 104, 0],"bool"), list[9,8,104,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 104, 0],"bool"), list[9,8,104,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 104, 89].  Tensor sizes: [9, 1, 104, 0]
2025-03-05 15:23:08.697812 test begin: paddle.broadcast_to(Tensor([9, 1, 105, 0],"bool"), list[9,8,105,105,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 105, 0],"bool"), list[9,8,105,105,], ) 
 The expanded size of the tensor (105) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 105, 105].  Tensor sizes: [9, 1, 105, 0]
2025-03-05 15:23:08.698976 test begin: paddle.broadcast_to(Tensor([9, 1, 105, 0],"bool"), list[9,8,105,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 105, 0],"bool"), list[9,8,105,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 105, 53].  Tensor sizes: [9, 1, 105, 0]
2025-03-05 15:23:08.699868 test begin: paddle.broadcast_to(Tensor([9, 1, 105, 0],"bool"), list[9,8,105,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 105, 0],"bool"), list[9,8,105,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 105, 89].  Tensor sizes: [9, 1, 105, 0]
2025-03-05 15:23:08.701931 test begin: paddle.broadcast_to(Tensor([9, 1, 106, 0],"bool"), list[9,8,106,106,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 106, 0],"bool"), list[9,8,106,106,], ) 
 The expanded size of the tensor (106) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 106, 106].  Tensor sizes: [9, 1, 106, 0]
2025-03-05 15:23:08.702877 test begin: paddle.broadcast_to(Tensor([9, 1, 106, 0],"bool"), list[9,8,106,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 106, 0],"bool"), list[9,8,106,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 106, 53].  Tensor sizes: [9, 1, 106, 0]
2025-03-05 15:23:08.705542 test begin: paddle.broadcast_to(Tensor([9, 1, 106, 0],"bool"), list[9,8,106,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 106, 0],"bool"), list[9,8,106,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 106, 89].  Tensor sizes: [9, 1, 106, 0]
2025-03-05 15:23:08.706514 test begin: paddle.broadcast_to(Tensor([9, 1, 107, 0],"bool"), list[9,8,107,107,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 107, 0],"bool"), list[9,8,107,107,], ) 
 The expanded size of the tensor (107) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 107, 107].  Tensor sizes: [9, 1, 107, 0]
2025-03-05 15:23:08.707517 test begin: paddle.broadcast_to(Tensor([9, 1, 107, 0],"bool"), list[9,8,107,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 107, 0],"bool"), list[9,8,107,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 107, 53].  Tensor sizes: [9, 1, 107, 0]
2025-03-05 15:23:08.708339 test begin: paddle.broadcast_to(Tensor([9, 1, 107, 0],"bool"), list[9,8,107,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 107, 0],"bool"), list[9,8,107,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 107, 89].  Tensor sizes: [9, 1, 107, 0]
2025-03-05 15:23:08.709038 test begin: paddle.broadcast_to(Tensor([9, 1, 108, 0],"bool"), list[9,8,108,108,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 108, 0],"bool"), list[9,8,108,108,], ) 
 The expanded size of the tensor (108) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 108, 108].  Tensor sizes: [9, 1, 108, 0]
2025-03-05 15:23:08.709703 test begin: paddle.broadcast_to(Tensor([9, 1, 108, 0],"bool"), list[9,8,108,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 108, 0],"bool"), list[9,8,108,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 108, 53].  Tensor sizes: [9, 1, 108, 0]
2025-03-05 15:23:08.710352 test begin: paddle.broadcast_to(Tensor([9, 1, 108, 0],"bool"), list[9,8,108,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 108, 0],"bool"), list[9,8,108,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 108, 89].  Tensor sizes: [9, 1, 108, 0]
2025-03-05 15:23:08.711018 test begin: paddle.broadcast_to(Tensor([9, 1, 109, 0],"bool"), list[9,8,109,109,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 109, 0],"bool"), list[9,8,109,109,], ) 
 The expanded size of the tensor (109) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 109, 109].  Tensor sizes: [9, 1, 109, 0]
2025-03-05 15:23:08.711572 test begin: paddle.broadcast_to(Tensor([9, 1, 109, 0],"bool"), list[9,8,109,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 109, 0],"bool"), list[9,8,109,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 109, 53].  Tensor sizes: [9, 1, 109, 0]
2025-03-05 15:23:08.712113 test begin: paddle.broadcast_to(Tensor([9, 1, 109, 0],"bool"), list[9,8,109,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 109, 0],"bool"), list[9,8,109,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 109, 89].  Tensor sizes: [9, 1, 109, 0]
2025-03-05 15:23:08.712670 test begin: paddle.broadcast_to(Tensor([9, 1, 11, 0],"bool"), list[9,8,11,11,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 11, 0],"bool"), list[9,8,11,11,], ) 
 The expanded size of the tensor (11) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 11, 11].  Tensor sizes: [9, 1, 11, 0]
2025-03-05 15:23:08.713265 test begin: paddle.broadcast_to(Tensor([9, 1, 11, 0],"bool"), list[9,8,11,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 11, 0],"bool"), list[9,8,11,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 11, 53].  Tensor sizes: [9, 1, 11, 0]
2025-03-05 15:23:08.713824 test begin: paddle.broadcast_to(Tensor([9, 1, 11, 0],"bool"), list[9,8,11,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 11, 0],"bool"), list[9,8,11,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 11, 89].  Tensor sizes: [9, 1, 11, 0]
2025-03-05 15:23:08.714341 test begin: paddle.broadcast_to(Tensor([9, 1, 110, 0],"bool"), list[9,8,110,110,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 110, 0],"bool"), list[9,8,110,110,], ) 
 The expanded size of the tensor (110) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 110, 110].  Tensor sizes: [9, 1, 110, 0]
2025-03-05 15:23:08.714868 test begin: paddle.broadcast_to(Tensor([9, 1, 110, 0],"bool"), list[9,8,110,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 110, 0],"bool"), list[9,8,110,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 110, 53].  Tensor sizes: [9, 1, 110, 0]
2025-03-05 15:23:08.715402 test begin: paddle.broadcast_to(Tensor([9, 1, 110, 0],"bool"), list[9,8,110,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 110, 0],"bool"), list[9,8,110,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 110, 89].  Tensor sizes: [9, 1, 110, 0]
2025-03-05 15:23:08.715934 test begin: paddle.broadcast_to(Tensor([9, 1, 111, 0],"bool"), list[9,8,111,111,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 111, 0],"bool"), list[9,8,111,111,], ) 
 The expanded size of the tensor (111) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 111, 111].  Tensor sizes: [9, 1, 111, 0]
2025-03-05 15:23:08.716536 test begin: paddle.broadcast_to(Tensor([9, 1, 111, 0],"bool"), list[9,8,111,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 111, 0],"bool"), list[9,8,111,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 111, 53].  Tensor sizes: [9, 1, 111, 0]
2025-03-05 15:23:08.717092 test begin: paddle.broadcast_to(Tensor([9, 1, 111, 0],"bool"), list[9,8,111,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 111, 0],"bool"), list[9,8,111,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 111, 89].  Tensor sizes: [9, 1, 111, 0]
2025-03-05 15:23:08.717665 test begin: paddle.broadcast_to(Tensor([9, 1, 112, 0],"bool"), list[9,8,112,112,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 112, 0],"bool"), list[9,8,112,112,], ) 
 The expanded size of the tensor (112) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 112, 112].  Tensor sizes: [9, 1, 112, 0]
2025-03-05 15:23:08.718190 test begin: paddle.broadcast_to(Tensor([9, 1, 112, 0],"bool"), list[9,8,112,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 112, 0],"bool"), list[9,8,112,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 112, 53].  Tensor sizes: [9, 1, 112, 0]
2025-03-05 15:23:08.718703 test begin: paddle.broadcast_to(Tensor([9, 1, 112, 0],"bool"), list[9,8,112,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 112, 0],"bool"), list[9,8,112,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 112, 89].  Tensor sizes: [9, 1, 112, 0]
2025-03-05 15:23:08.719215 test begin: paddle.broadcast_to(Tensor([9, 1, 113, 0],"bool"), list[9,8,113,113,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 113, 0],"bool"), list[9,8,113,113,], ) 
 The expanded size of the tensor (113) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 113, 113].  Tensor sizes: [9, 1, 113, 0]
2025-03-05 15:23:08.719772 test begin: paddle.broadcast_to(Tensor([9, 1, 113, 0],"bool"), list[9,8,113,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 113, 0],"bool"), list[9,8,113,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 113, 53].  Tensor sizes: [9, 1, 113, 0]
2025-03-05 15:23:08.720306 test begin: paddle.broadcast_to(Tensor([9, 1, 113, 0],"bool"), list[9,8,113,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 113, 0],"bool"), list[9,8,113,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 113, 89].  Tensor sizes: [9, 1, 113, 0]
2025-03-05 15:23:08.720830 test begin: paddle.broadcast_to(Tensor([9, 1, 114, 0],"bool"), list[9,8,114,114,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 114, 0],"bool"), list[9,8,114,114,], ) 
 The expanded size of the tensor (114) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 114, 114].  Tensor sizes: [9, 1, 114, 0]
2025-03-05 15:23:08.721348 test begin: paddle.broadcast_to(Tensor([9, 1, 114, 0],"bool"), list[9,8,114,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 114, 0],"bool"), list[9,8,114,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 114, 53].  Tensor sizes: [9, 1, 114, 0]
2025-03-05 15:23:08.721875 test begin: paddle.broadcast_to(Tensor([9, 1, 114, 0],"bool"), list[9,8,114,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 114, 0],"bool"), list[9,8,114,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 114, 89].  Tensor sizes: [9, 1, 114, 0]
2025-03-05 15:23:08.722416 test begin: paddle.broadcast_to(Tensor([9, 1, 115, 0],"bool"), list[9,8,115,115,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 115, 0],"bool"), list[9,8,115,115,], ) 
 The expanded size of the tensor (115) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 115, 115].  Tensor sizes: [9, 1, 115, 0]
2025-03-05 15:23:08.722934 test begin: paddle.broadcast_to(Tensor([9, 1, 115, 0],"bool"), list[9,8,115,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 115, 0],"bool"), list[9,8,115,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 115, 53].  Tensor sizes: [9, 1, 115, 0]
2025-03-05 15:23:08.723540 test begin: paddle.broadcast_to(Tensor([9, 1, 115, 0],"bool"), list[9,8,115,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 115, 0],"bool"), list[9,8,115,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 115, 89].  Tensor sizes: [9, 1, 115, 0]
2025-03-05 15:23:08.724454 test begin: paddle.broadcast_to(Tensor([9, 1, 116, 0],"bool"), list[9,8,116,116,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 116, 0],"bool"), list[9,8,116,116,], ) 
 The expanded size of the tensor (116) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 116, 116].  Tensor sizes: [9, 1, 116, 0]
2025-03-05 15:23:08.725073 test begin: paddle.broadcast_to(Tensor([9, 1, 116, 0],"bool"), list[9,8,116,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 116, 0],"bool"), list[9,8,116,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 116, 53].  Tensor sizes: [9, 1, 116, 0]
2025-03-05 15:23:08.725623 test begin: paddle.broadcast_to(Tensor([9, 1, 117, 0],"bool"), list[9,8,117,117,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 117, 0],"bool"), list[9,8,117,117,], ) 
 The expanded size of the tensor (117) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 117, 117].  Tensor sizes: [9, 1, 117, 0]
2025-03-05 15:23:08.726151 test begin: paddle.broadcast_to(Tensor([9, 1, 117, 0],"bool"), list[9,8,117,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 117, 0],"bool"), list[9,8,117,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 117, 53].  Tensor sizes: [9, 1, 117, 0]
2025-03-05 15:23:08.726715 test begin: paddle.broadcast_to(Tensor([9, 1, 118, 0],"bool"), list[9,8,118,118,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 118, 0],"bool"), list[9,8,118,118,], ) 
 The expanded size of the tensor (118) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 118, 118].  Tensor sizes: [9, 1, 118, 0]
2025-03-05 15:23:08.727227 test begin: paddle.broadcast_to(Tensor([9, 1, 118, 0],"bool"), list[9,8,118,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 118, 0],"bool"), list[9,8,118,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 118, 53].  Tensor sizes: [9, 1, 118, 0]
2025-03-05 15:23:08.727750 test begin: paddle.broadcast_to(Tensor([9, 1, 119, 0],"bool"), list[9,8,119,119,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 119, 0],"bool"), list[9,8,119,119,], ) 
 The expanded size of the tensor (119) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 119, 119].  Tensor sizes: [9, 1, 119, 0]
2025-03-05 15:23:08.728277 test begin: paddle.broadcast_to(Tensor([9, 1, 119, 0],"bool"), list[9,8,119,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 119, 0],"bool"), list[9,8,119,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 119, 53].  Tensor sizes: [9, 1, 119, 0]
2025-03-05 15:23:08.728845 test begin: paddle.broadcast_to(Tensor([9, 1, 12, 0],"bool"), list[9,8,12,12,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 12, 0],"bool"), list[9,8,12,12,], ) 
 The expanded size of the tensor (12) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 12, 12].  Tensor sizes: [9, 1, 12, 0]
2025-03-05 15:23:08.729365 test begin: paddle.broadcast_to(Tensor([9, 1, 12, 0],"bool"), list[9,8,12,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 12, 0],"bool"), list[9,8,12,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 12, 53].  Tensor sizes: [9, 1, 12, 0]
2025-03-05 15:23:08.729927 test begin: paddle.broadcast_to(Tensor([9, 1, 12, 0],"bool"), list[9,8,12,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 12, 0],"bool"), list[9,8,12,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 12, 89].  Tensor sizes: [9, 1, 12, 0]
2025-03-05 15:23:08.730525 test begin: paddle.broadcast_to(Tensor([9, 1, 13, 0],"bool"), list[9,8,13,13,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 13, 0],"bool"), list[9,8,13,13,], ) 
 The expanded size of the tensor (13) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 13, 13].  Tensor sizes: [9, 1, 13, 0]
2025-03-05 15:23:08.731110 test begin: paddle.broadcast_to(Tensor([9, 1, 13, 0],"bool"), list[9,8,13,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 13, 0],"bool"), list[9,8,13,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 13, 53].  Tensor sizes: [9, 1, 13, 0]
2025-03-05 15:23:08.731657 test begin: paddle.broadcast_to(Tensor([9, 1, 13, 0],"bool"), list[9,8,13,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 13, 0],"bool"), list[9,8,13,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 13, 89].  Tensor sizes: [9, 1, 13, 0]
2025-03-05 15:23:08.732188 test begin: paddle.broadcast_to(Tensor([9, 1, 14, 0],"bool"), list[9,8,14,14,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 14, 0],"bool"), list[9,8,14,14,], ) 
 The expanded size of the tensor (14) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 14, 14].  Tensor sizes: [9, 1, 14, 0]
2025-03-05 15:23:08.732735 test begin: paddle.broadcast_to(Tensor([9, 1, 14, 0],"bool"), list[9,8,14,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 14, 0],"bool"), list[9,8,14,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 14, 53].  Tensor sizes: [9, 1, 14, 0]
2025-03-05 15:23:08.733288 test begin: paddle.broadcast_to(Tensor([9, 1, 14, 0],"bool"), list[9,8,14,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 14, 0],"bool"), list[9,8,14,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 14, 89].  Tensor sizes: [9, 1, 14, 0]
2025-03-05 15:23:08.733845 test begin: paddle.broadcast_to(Tensor([9, 1, 15, 0],"bool"), list[9,8,15,15,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 15, 0],"bool"), list[9,8,15,15,], ) 
 The expanded size of the tensor (15) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 15, 15].  Tensor sizes: [9, 1, 15, 0]
2025-03-05 15:23:08.734374 test begin: paddle.broadcast_to(Tensor([9, 1, 15, 0],"bool"), list[9,8,15,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 15, 0],"bool"), list[9,8,15,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 15, 53].  Tensor sizes: [9, 1, 15, 0]
2025-03-05 15:23:08.734932 test begin: paddle.broadcast_to(Tensor([9, 1, 15, 0],"bool"), list[9,8,15,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 15, 0],"bool"), list[9,8,15,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 15, 89].  Tensor sizes: [9, 1, 15, 0]
2025-03-05 15:23:08.735443 test begin: paddle.broadcast_to(Tensor([9, 1, 16, 0],"bool"), list[9,8,16,16,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 16, 0],"bool"), list[9,8,16,16,], ) 
 The expanded size of the tensor (16) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 16, 16].  Tensor sizes: [9, 1, 16, 0]
2025-03-05 15:23:08.735989 test begin: paddle.broadcast_to(Tensor([9, 1, 16, 0],"bool"), list[9,8,16,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 16, 0],"bool"), list[9,8,16,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 16, 53].  Tensor sizes: [9, 1, 16, 0]
2025-03-05 15:23:08.736614 test begin: paddle.broadcast_to(Tensor([9, 1, 16, 0],"bool"), list[9,8,16,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 16, 0],"bool"), list[9,8,16,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 16, 89].  Tensor sizes: [9, 1, 16, 0]
2025-03-05 15:23:08.737288 test begin: paddle.broadcast_to(Tensor([9, 1, 17, 0],"bool"), list[9,8,17,17,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 17, 0],"bool"), list[9,8,17,17,], ) 
 The expanded size of the tensor (17) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 17, 17].  Tensor sizes: [9, 1, 17, 0]
2025-03-05 15:23:08.737978 test begin: paddle.broadcast_to(Tensor([9, 1, 17, 0],"bool"), list[9,8,17,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 17, 0],"bool"), list[9,8,17,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 17, 53].  Tensor sizes: [9, 1, 17, 0]
2025-03-05 15:23:08.738623 test begin: paddle.broadcast_to(Tensor([9, 1, 17, 0],"bool"), list[9,8,17,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 17, 0],"bool"), list[9,8,17,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 17, 89].  Tensor sizes: [9, 1, 17, 0]
2025-03-05 15:23:08.739689 test begin: paddle.broadcast_to(Tensor([9, 1, 18, 0],"bool"), list[9,8,18,18,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 18, 0],"bool"), list[9,8,18,18,], ) 
 The expanded size of the tensor (18) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 18, 18].  Tensor sizes: [9, 1, 18, 0]
2025-03-05 15:23:08.740373 test begin: paddle.broadcast_to(Tensor([9, 1, 18, 0],"bool"), list[9,8,18,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 18, 0],"bool"), list[9,8,18,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 18, 53].  Tensor sizes: [9, 1, 18, 0]
2025-03-05 15:23:08.741043 test begin: paddle.broadcast_to(Tensor([9, 1, 18, 0],"bool"), list[9,8,18,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 18, 0],"bool"), list[9,8,18,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 18, 89].  Tensor sizes: [9, 1, 18, 0]
2025-03-05 15:23:08.741757 test begin: paddle.broadcast_to(Tensor([9, 1, 19, 0],"bool"), list[9,8,19,19,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 19, 0],"bool"), list[9,8,19,19,], ) 
 The expanded size of the tensor (19) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 19, 19].  Tensor sizes: [9, 1, 19, 0]
2025-03-05 15:23:08.742362 test begin: paddle.broadcast_to(Tensor([9, 1, 19, 0],"bool"), list[9,8,19,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 19, 0],"bool"), list[9,8,19,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 19, 53].  Tensor sizes: [9, 1, 19, 0]
2025-03-05 15:23:08.743022 test begin: paddle.broadcast_to(Tensor([9, 1, 19, 0],"bool"), list[9,8,19,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 19, 0],"bool"), list[9,8,19,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 19, 89].  Tensor sizes: [9, 1, 19, 0]
2025-03-05 15:23:08.743684 test begin: paddle.broadcast_to(Tensor([9, 1, 2, 0],"bool"), list[9,8,2,2,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 2, 0],"bool"), list[9,8,2,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 2, 2].  Tensor sizes: [9, 1, 2, 0]
2025-03-05 15:23:08.744327 test begin: paddle.broadcast_to(Tensor([9, 1, 2, 0],"bool"), list[9,8,2,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 2, 0],"bool"), list[9,8,2,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 2, 53].  Tensor sizes: [9, 1, 2, 0]
2025-03-05 15:23:08.744952 test begin: paddle.broadcast_to(Tensor([9, 1, 2, 0],"bool"), list[9,8,2,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 2, 0],"bool"), list[9,8,2,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 2, 89].  Tensor sizes: [9, 1, 2, 0]
2025-03-05 15:23:08.745484 test begin: paddle.broadcast_to(Tensor([9, 1, 20, 0],"bool"), list[9,8,20,20,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 20, 0],"bool"), list[9,8,20,20,], ) 
 The expanded size of the tensor (20) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 20, 20].  Tensor sizes: [9, 1, 20, 0]
2025-03-05 15:23:08.746020 test begin: paddle.broadcast_to(Tensor([9, 1, 20, 0],"bool"), list[9,8,20,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 20, 0],"bool"), list[9,8,20,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 20, 53].  Tensor sizes: [9, 1, 20, 0]
2025-03-05 15:23:08.746537 test begin: paddle.broadcast_to(Tensor([9, 1, 20, 0],"bool"), list[9,8,20,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 20, 0],"bool"), list[9,8,20,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 20, 89].  Tensor sizes: [9, 1, 20, 0]
2025-03-05 15:23:08.747156 test begin: paddle.broadcast_to(Tensor([9, 1, 21, 0],"bool"), list[9,8,21,21,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 21, 0],"bool"), list[9,8,21,21,], ) 
 The expanded size of the tensor (21) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 21, 21].  Tensor sizes: [9, 1, 21, 0]
2025-03-05 15:23:08.747697 test begin: paddle.broadcast_to(Tensor([9, 1, 21, 0],"bool"), list[9,8,21,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 21, 0],"bool"), list[9,8,21,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 21, 53].  Tensor sizes: [9, 1, 21, 0]
2025-03-05 15:23:08.748229 test begin: paddle.broadcast_to(Tensor([9, 1, 21, 0],"bool"), list[9,8,21,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 21, 0],"bool"), list[9,8,21,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 21, 89].  Tensor sizes: [9, 1, 21, 0]
2025-03-05 15:23:08.748761 test begin: paddle.broadcast_to(Tensor([9, 1, 22, 0],"bool"), list[9,8,22,22,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 22, 0],"bool"), list[9,8,22,22,], ) 
 The expanded size of the tensor (22) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 22, 22].  Tensor sizes: [9, 1, 22, 0]
2025-03-05 15:23:08.749305 test begin: paddle.broadcast_to(Tensor([9, 1, 22, 0],"bool"), list[9,8,22,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 22, 0],"bool"), list[9,8,22,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 22, 53].  Tensor sizes: [9, 1, 22, 0]
2025-03-05 15:23:08.749830 test begin: paddle.broadcast_to(Tensor([9, 1, 22, 0],"bool"), list[9,8,22,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 22, 0],"bool"), list[9,8,22,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 22, 89].  Tensor sizes: [9, 1, 22, 0]
2025-03-05 15:23:08.750358 test begin: paddle.broadcast_to(Tensor([9, 1, 23, 0],"bool"), list[9,8,23,23,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 23, 0],"bool"), list[9,8,23,23,], ) 
 The expanded size of the tensor (23) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 23, 23].  Tensor sizes: [9, 1, 23, 0]
2025-03-05 15:23:08.750884 test begin: paddle.broadcast_to(Tensor([9, 1, 23, 0],"bool"), list[9,8,23,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 23, 0],"bool"), list[9,8,23,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 23, 53].  Tensor sizes: [9, 1, 23, 0]
2025-03-05 15:23:08.751406 test begin: paddle.broadcast_to(Tensor([9, 1, 23, 0],"bool"), list[9,8,23,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 23, 0],"bool"), list[9,8,23,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 23, 89].  Tensor sizes: [9, 1, 23, 0]
2025-03-05 15:23:08.751925 test begin: paddle.broadcast_to(Tensor([9, 1, 24, 0],"bool"), list[9,8,24,24,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 24, 0],"bool"), list[9,8,24,24,], ) 
 The expanded size of the tensor (24) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 24, 24].  Tensor sizes: [9, 1, 24, 0]
2025-03-05 15:23:08.752448 test begin: paddle.broadcast_to(Tensor([9, 1, 24, 0],"bool"), list[9,8,24,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 24, 0],"bool"), list[9,8,24,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 24, 53].  Tensor sizes: [9, 1, 24, 0]
2025-03-05 15:23:08.753011 test begin: paddle.broadcast_to(Tensor([9, 1, 24, 0],"bool"), list[9,8,24,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 24, 0],"bool"), list[9,8,24,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 24, 89].  Tensor sizes: [9, 1, 24, 0]
2025-03-05 15:23:08.753538 test begin: paddle.broadcast_to(Tensor([9, 1, 25, 0],"bool"), list[9,8,25,25,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 25, 0],"bool"), list[9,8,25,25,], ) 
 The expanded size of the tensor (25) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 25, 25].  Tensor sizes: [9, 1, 25, 0]
2025-03-05 15:23:08.754073 test begin: paddle.broadcast_to(Tensor([9, 1, 25, 0],"bool"), list[9,8,25,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 25, 0],"bool"), list[9,8,25,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 25, 53].  Tensor sizes: [9, 1, 25, 0]
2025-03-05 15:23:08.754577 test begin: paddle.broadcast_to(Tensor([9, 1, 25, 0],"bool"), list[9,8,25,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 25, 0],"bool"), list[9,8,25,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 25, 89].  Tensor sizes: [9, 1, 25, 0]
2025-03-05 15:23:08.755144 test begin: paddle.broadcast_to(Tensor([9, 1, 26, 0],"bool"), list[9,8,26,26,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 26, 0],"bool"), list[9,8,26,26,], ) 
 The expanded size of the tensor (26) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 26, 26].  Tensor sizes: [9, 1, 26, 0]
2025-03-05 15:23:08.755674 test begin: paddle.broadcast_to(Tensor([9, 1, 26, 0],"bool"), list[9,8,26,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 26, 0],"bool"), list[9,8,26,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 26, 53].  Tensor sizes: [9, 1, 26, 0]
2025-03-05 15:23:08.756204 test begin: paddle.broadcast_to(Tensor([9, 1, 26, 0],"bool"), list[9,8,26,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 26, 0],"bool"), list[9,8,26,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 26, 89].  Tensor sizes: [9, 1, 26, 0]
2025-03-05 15:23:08.756732 test begin: paddle.broadcast_to(Tensor([9, 1, 27, 0],"bool"), list[9,8,27,27,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 27, 0],"bool"), list[9,8,27,27,], ) 
 The expanded size of the tensor (27) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 27, 27].  Tensor sizes: [9, 1, 27, 0]
2025-03-05 15:23:08.757258 test begin: paddle.broadcast_to(Tensor([9, 1, 27, 0],"bool"), list[9,8,27,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 27, 0],"bool"), list[9,8,27,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 27, 53].  Tensor sizes: [9, 1, 27, 0]
2025-03-05 15:23:08.757778 test begin: paddle.broadcast_to(Tensor([9, 1, 27, 0],"bool"), list[9,8,27,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 27, 0],"bool"), list[9,8,27,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 27, 89].  Tensor sizes: [9, 1, 27, 0]
2025-03-05 15:23:08.758285 test begin: paddle.broadcast_to(Tensor([9, 1, 28, 0],"bool"), list[9,8,28,28,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 28, 0],"bool"), list[9,8,28,28,], ) 
 The expanded size of the tensor (28) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 28, 28].  Tensor sizes: [9, 1, 28, 0]
2025-03-05 15:23:08.758836 test begin: paddle.broadcast_to(Tensor([9, 1, 28, 0],"bool"), list[9,8,28,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 28, 0],"bool"), list[9,8,28,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 28, 53].  Tensor sizes: [9, 1, 28, 0]
2025-03-05 15:23:08.759457 test begin: paddle.broadcast_to(Tensor([9, 1, 28, 0],"bool"), list[9,8,28,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 28, 0],"bool"), list[9,8,28,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 28, 89].  Tensor sizes: [9, 1, 28, 0]
2025-03-05 15:23:08.760020 test begin: paddle.broadcast_to(Tensor([9, 1, 29, 0],"bool"), list[9,8,29,29,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 29, 0],"bool"), list[9,8,29,29,], ) 
 The expanded size of the tensor (29) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 29, 29].  Tensor sizes: [9, 1, 29, 0]
2025-03-05 15:23:08.760555 test begin: paddle.broadcast_to(Tensor([9, 1, 29, 0],"bool"), list[9,8,29,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 29, 0],"bool"), list[9,8,29,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 29, 53].  Tensor sizes: [9, 1, 29, 0]
2025-03-05 15:23:08.761114 test begin: paddle.broadcast_to(Tensor([9, 1, 29, 0],"bool"), list[9,8,29,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 29, 0],"bool"), list[9,8,29,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 29, 89].  Tensor sizes: [9, 1, 29, 0]
2025-03-05 15:23:08.761667 test begin: paddle.broadcast_to(Tensor([9, 1, 3, 0],"bool"), list[9,8,3,3,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 3, 0],"bool"), list[9,8,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 3, 3].  Tensor sizes: [9, 1, 3, 0]
2025-03-05 15:23:08.762189 test begin: paddle.broadcast_to(Tensor([9, 1, 3, 0],"bool"), list[9,8,3,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 3, 0],"bool"), list[9,8,3,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 3, 53].  Tensor sizes: [9, 1, 3, 0]
2025-03-05 15:23:08.762713 test begin: paddle.broadcast_to(Tensor([9, 1, 3, 0],"bool"), list[9,8,3,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 3, 0],"bool"), list[9,8,3,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 3, 89].  Tensor sizes: [9, 1, 3, 0]
2025-03-05 15:23:08.763237 test begin: paddle.broadcast_to(Tensor([9, 1, 30, 0],"bool"), list[9,8,30,30,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 30, 0],"bool"), list[9,8,30,30,], ) 
 The expanded size of the tensor (30) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 30, 30].  Tensor sizes: [9, 1, 30, 0]
2025-03-05 15:23:08.763803 test begin: paddle.broadcast_to(Tensor([9, 1, 30, 0],"bool"), list[9,8,30,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 30, 0],"bool"), list[9,8,30,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 30, 53].  Tensor sizes: [9, 1, 30, 0]
2025-03-05 15:23:08.764333 test begin: paddle.broadcast_to(Tensor([9, 1, 30, 0],"bool"), list[9,8,30,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 30, 0],"bool"), list[9,8,30,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 30, 89].  Tensor sizes: [9, 1, 30, 0]
2025-03-05 15:23:08.764853 test begin: paddle.broadcast_to(Tensor([9, 1, 31, 0],"bool"), list[9,8,31,31,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 31, 0],"bool"), list[9,8,31,31,], ) 
 The expanded size of the tensor (31) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 31, 31].  Tensor sizes: [9, 1, 31, 0]
2025-03-05 15:23:08.765372 test begin: paddle.broadcast_to(Tensor([9, 1, 31, 0],"bool"), list[9,8,31,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 31, 0],"bool"), list[9,8,31,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 31, 53].  Tensor sizes: [9, 1, 31, 0]
2025-03-05 15:23:08.765918 test begin: paddle.broadcast_to(Tensor([9, 1, 31, 0],"bool"), list[9,8,31,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 31, 0],"bool"), list[9,8,31,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 31, 89].  Tensor sizes: [9, 1, 31, 0]
2025-03-05 15:23:08.766451 test begin: paddle.broadcast_to(Tensor([9, 1, 32, 0],"bool"), list[9,8,32,32,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 32, 0],"bool"), list[9,8,32,32,], ) 
 The expanded size of the tensor (32) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 32, 32].  Tensor sizes: [9, 1, 32, 0]
2025-03-05 15:23:08.767010 test begin: paddle.broadcast_to(Tensor([9, 1, 32, 0],"bool"), list[9,8,32,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 32, 0],"bool"), list[9,8,32,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 32, 53].  Tensor sizes: [9, 1, 32, 0]
2025-03-05 15:23:08.767546 test begin: paddle.broadcast_to(Tensor([9, 1, 32, 0],"bool"), list[9,8,32,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 32, 0],"bool"), list[9,8,32,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 32, 89].  Tensor sizes: [9, 1, 32, 0]
2025-03-05 15:23:08.768102 test begin: paddle.broadcast_to(Tensor([9, 1, 33, 0],"bool"), list[9,8,33,33,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 33, 0],"bool"), list[9,8,33,33,], ) 
 The expanded size of the tensor (33) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 33, 33].  Tensor sizes: [9, 1, 33, 0]
2025-03-05 15:23:08.768624 test begin: paddle.broadcast_to(Tensor([9, 1, 33, 0],"bool"), list[9,8,33,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 33, 0],"bool"), list[9,8,33,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 33, 53].  Tensor sizes: [9, 1, 33, 0]
2025-03-05 15:23:08.769148 test begin: paddle.broadcast_to(Tensor([9, 1, 33, 0],"bool"), list[9,8,33,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 33, 0],"bool"), list[9,8,33,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 33, 89].  Tensor sizes: [9, 1, 33, 0]
2025-03-05 15:23:08.769689 test begin: paddle.broadcast_to(Tensor([9, 1, 34, 0],"bool"), list[9,8,34,34,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 34, 0],"bool"), list[9,8,34,34,], ) 
 The expanded size of the tensor (34) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 34, 34].  Tensor sizes: [9, 1, 34, 0]
2025-03-05 15:23:08.770210 test begin: paddle.broadcast_to(Tensor([9, 1, 34, 0],"bool"), list[9,8,34,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 34, 0],"bool"), list[9,8,34,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 34, 53].  Tensor sizes: [9, 1, 34, 0]
2025-03-05 15:23:08.770735 test begin: paddle.broadcast_to(Tensor([9, 1, 34, 0],"bool"), list[9,8,34,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 34, 0],"bool"), list[9,8,34,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 34, 89].  Tensor sizes: [9, 1, 34, 0]
2025-03-05 15:23:08.771257 test begin: paddle.broadcast_to(Tensor([9, 1, 35, 0],"bool"), list[9,8,35,35,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 35, 0],"bool"), list[9,8,35,35,], ) 
 The expanded size of the tensor (35) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 35, 35].  Tensor sizes: [9, 1, 35, 0]
2025-03-05 15:23:08.771782 test begin: paddle.broadcast_to(Tensor([9, 1, 35, 0],"bool"), list[9,8,35,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 35, 0],"bool"), list[9,8,35,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 35, 53].  Tensor sizes: [9, 1, 35, 0]
2025-03-05 15:23:08.772315 test begin: paddle.broadcast_to(Tensor([9, 1, 35, 0],"bool"), list[9,8,35,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 35, 0],"bool"), list[9,8,35,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 35, 89].  Tensor sizes: [9, 1, 35, 0]
2025-03-05 15:23:08.772843 test begin: paddle.broadcast_to(Tensor([9, 1, 36, 0],"bool"), list[9,8,36,36,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 36, 0],"bool"), list[9,8,36,36,], ) 
 The expanded size of the tensor (36) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 36, 36].  Tensor sizes: [9, 1, 36, 0]
2025-03-05 15:23:08.773359 test begin: paddle.broadcast_to(Tensor([9, 1, 36, 0],"bool"), list[9,8,36,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 36, 0],"bool"), list[9,8,36,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 36, 53].  Tensor sizes: [9, 1, 36, 0]
2025-03-05 15:23:08.773875 test begin: paddle.broadcast_to(Tensor([9, 1, 36, 0],"bool"), list[9,8,36,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 36, 0],"bool"), list[9,8,36,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 36, 89].  Tensor sizes: [9, 1, 36, 0]
2025-03-05 15:23:08.774406 test begin: paddle.broadcast_to(Tensor([9, 1, 37, 0],"bool"), list[9,8,37,37,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 37, 0],"bool"), list[9,8,37,37,], ) 
 The expanded size of the tensor (37) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 37, 37].  Tensor sizes: [9, 1, 37, 0]
2025-03-05 15:23:08.774995 test begin: paddle.broadcast_to(Tensor([9, 1, 37, 0],"bool"), list[9,8,37,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 37, 0],"bool"), list[9,8,37,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 37, 53].  Tensor sizes: [9, 1, 37, 0]
2025-03-05 15:23:08.775527 test begin: paddle.broadcast_to(Tensor([9, 1, 37, 0],"bool"), list[9,8,37,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 37, 0],"bool"), list[9,8,37,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 37, 89].  Tensor sizes: [9, 1, 37, 0]
2025-03-05 15:23:08.776081 test begin: paddle.broadcast_to(Tensor([9, 1, 38, 0],"bool"), list[9,8,38,38,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 38, 0],"bool"), list[9,8,38,38,], ) 
 The expanded size of the tensor (38) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 38, 38].  Tensor sizes: [9, 1, 38, 0]
2025-03-05 15:23:08.776606 test begin: paddle.broadcast_to(Tensor([9, 1, 38, 0],"bool"), list[9,8,38,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 38, 0],"bool"), list[9,8,38,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 38, 53].  Tensor sizes: [9, 1, 38, 0]
2025-03-05 15:23:08.777129 test begin: paddle.broadcast_to(Tensor([9, 1, 38, 0],"bool"), list[9,8,38,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 38, 0],"bool"), list[9,8,38,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 38, 89].  Tensor sizes: [9, 1, 38, 0]
2025-03-05 15:23:08.777660 test begin: paddle.broadcast_to(Tensor([9, 1, 39, 0],"bool"), list[9,8,39,39,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 39, 0],"bool"), list[9,8,39,39,], ) 
 The expanded size of the tensor (39) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 39, 39].  Tensor sizes: [9, 1, 39, 0]
2025-03-05 15:23:08.778191 test begin: paddle.broadcast_to(Tensor([9, 1, 39, 0],"bool"), list[9,8,39,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 39, 0],"bool"), list[9,8,39,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 39, 53].  Tensor sizes: [9, 1, 39, 0]
2025-03-05 15:23:08.778712 test begin: paddle.broadcast_to(Tensor([9, 1, 39, 0],"bool"), list[9,8,39,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 39, 0],"bool"), list[9,8,39,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 39, 89].  Tensor sizes: [9, 1, 39, 0]
2025-03-05 15:23:08.779234 test begin: paddle.broadcast_to(Tensor([9, 1, 4, 0],"bool"), list[9,8,4,4,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 4, 0],"bool"), list[9,8,4,4,], ) 
 The expanded size of the tensor (4) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 4, 4].  Tensor sizes: [9, 1, 4, 0]
2025-03-05 15:23:08.779754 test begin: paddle.broadcast_to(Tensor([9, 1, 4, 0],"bool"), list[9,8,4,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 4, 0],"bool"), list[9,8,4,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 4, 53].  Tensor sizes: [9, 1, 4, 0]
2025-03-05 15:23:08.780284 test begin: paddle.broadcast_to(Tensor([9, 1, 4, 0],"bool"), list[9,8,4,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 4, 0],"bool"), list[9,8,4,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 4, 89].  Tensor sizes: [9, 1, 4, 0]
2025-03-05 15:23:08.780886 test begin: paddle.broadcast_to(Tensor([9, 1, 40, 0],"bool"), list[9,8,40,40,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 40, 0],"bool"), list[9,8,40,40,], ) 
 The expanded size of the tensor (40) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 40, 40].  Tensor sizes: [9, 1, 40, 0]
2025-03-05 15:23:08.781430 test begin: paddle.broadcast_to(Tensor([9, 1, 40, 0],"bool"), list[9,8,40,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 40, 0],"bool"), list[9,8,40,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 40, 53].  Tensor sizes: [9, 1, 40, 0]
2025-03-05 15:23:08.781961 test begin: paddle.broadcast_to(Tensor([9, 1, 40, 0],"bool"), list[9,8,40,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 40, 0],"bool"), list[9,8,40,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 40, 89].  Tensor sizes: [9, 1, 40, 0]
2025-03-05 15:23:08.782481 test begin: paddle.broadcast_to(Tensor([9, 1, 41, 0],"bool"), list[9,8,41,41,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 41, 0],"bool"), list[9,8,41,41,], ) 
 The expanded size of the tensor (41) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 41, 41].  Tensor sizes: [9, 1, 41, 0]
2025-03-05 15:23:08.783013 test begin: paddle.broadcast_to(Tensor([9, 1, 41, 0],"bool"), list[9,8,41,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 41, 0],"bool"), list[9,8,41,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 41, 53].  Tensor sizes: [9, 1, 41, 0]
2025-03-05 15:23:08.783533 test begin: paddle.broadcast_to(Tensor([9, 1, 41, 0],"bool"), list[9,8,41,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 41, 0],"bool"), list[9,8,41,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 41, 89].  Tensor sizes: [9, 1, 41, 0]
2025-03-05 15:23:08.784055 test begin: paddle.broadcast_to(Tensor([9, 1, 42, 0],"bool"), list[9,8,42,42,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 42, 0],"bool"), list[9,8,42,42,], ) 
 The expanded size of the tensor (42) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 42, 42].  Tensor sizes: [9, 1, 42, 0]
2025-03-05 15:23:08.784566 test begin: paddle.broadcast_to(Tensor([9, 1, 42, 0],"bool"), list[9,8,42,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 42, 0],"bool"), list[9,8,42,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 42, 53].  Tensor sizes: [9, 1, 42, 0]
2025-03-05 15:23:08.785095 test begin: paddle.broadcast_to(Tensor([9, 1, 42, 0],"bool"), list[9,8,42,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 42, 0],"bool"), list[9,8,42,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 42, 89].  Tensor sizes: [9, 1, 42, 0]
2025-03-05 15:23:08.785671 test begin: paddle.broadcast_to(Tensor([9, 1, 43, 0],"bool"), list[9,8,43,43,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 43, 0],"bool"), list[9,8,43,43,], ) 
 The expanded size of the tensor (43) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 43, 43].  Tensor sizes: [9, 1, 43, 0]
2025-03-05 15:23:08.786215 test begin: paddle.broadcast_to(Tensor([9, 1, 43, 0],"bool"), list[9,8,43,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 43, 0],"bool"), list[9,8,43,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 43, 53].  Tensor sizes: [9, 1, 43, 0]
2025-03-05 15:23:08.786790 test begin: paddle.broadcast_to(Tensor([9, 1, 43, 0],"bool"), list[9,8,43,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 43, 0],"bool"), list[9,8,43,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 43, 89].  Tensor sizes: [9, 1, 43, 0]
2025-03-05 15:23:08.787307 test begin: paddle.broadcast_to(Tensor([9, 1, 44, 0],"bool"), list[9,8,44,44,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 44, 0],"bool"), list[9,8,44,44,], ) 
 The expanded size of the tensor (44) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 44, 44].  Tensor sizes: [9, 1, 44, 0]
2025-03-05 15:23:08.787855 test begin: paddle.broadcast_to(Tensor([9, 1, 44, 0],"bool"), list[9,8,44,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 44, 0],"bool"), list[9,8,44,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 44, 53].  Tensor sizes: [9, 1, 44, 0]
2025-03-05 15:23:08.788389 test begin: paddle.broadcast_to(Tensor([9, 1, 44, 0],"bool"), list[9,8,44,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 44, 0],"bool"), list[9,8,44,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 44, 89].  Tensor sizes: [9, 1, 44, 0]
2025-03-05 15:23:08.788921 test begin: paddle.broadcast_to(Tensor([9, 1, 45, 0],"bool"), list[9,8,45,45,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 45, 0],"bool"), list[9,8,45,45,], ) 
 The expanded size of the tensor (45) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 45, 45].  Tensor sizes: [9, 1, 45, 0]
2025-03-05 15:23:08.789436 test begin: paddle.broadcast_to(Tensor([9, 1, 45, 0],"bool"), list[9,8,45,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 45, 0],"bool"), list[9,8,45,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 45, 53].  Tensor sizes: [9, 1, 45, 0]
2025-03-05 15:23:08.789960 test begin: paddle.broadcast_to(Tensor([9, 1, 45, 0],"bool"), list[9,8,45,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 45, 0],"bool"), list[9,8,45,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 45, 89].  Tensor sizes: [9, 1, 45, 0]
2025-03-05 15:23:08.790481 test begin: paddle.broadcast_to(Tensor([9, 1, 46, 0],"bool"), list[9,8,46,46,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 46, 0],"bool"), list[9,8,46,46,], ) 
 The expanded size of the tensor (46) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 46, 46].  Tensor sizes: [9, 1, 46, 0]
2025-03-05 15:23:08.791037 test begin: paddle.broadcast_to(Tensor([9, 1, 46, 0],"bool"), list[9,8,46,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 46, 0],"bool"), list[9,8,46,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 46, 53].  Tensor sizes: [9, 1, 46, 0]
2025-03-05 15:23:08.791603 test begin: paddle.broadcast_to(Tensor([9, 1, 46, 0],"bool"), list[9,8,46,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 46, 0],"bool"), list[9,8,46,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 46, 89].  Tensor sizes: [9, 1, 46, 0]
2025-03-05 15:23:08.792145 test begin: paddle.broadcast_to(Tensor([9, 1, 47, 0],"bool"), list[9,8,47,47,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 47, 0],"bool"), list[9,8,47,47,], ) 
 The expanded size of the tensor (47) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 47, 47].  Tensor sizes: [9, 1, 47, 0]
2025-03-05 15:23:08.792727 test begin: paddle.broadcast_to(Tensor([9, 1, 47, 0],"bool"), list[9,8,47,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 47, 0],"bool"), list[9,8,47,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 47, 53].  Tensor sizes: [9, 1, 47, 0]
2025-03-05 15:23:08.793267 test begin: paddle.broadcast_to(Tensor([9, 1, 47, 0],"bool"), list[9,8,47,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 47, 0],"bool"), list[9,8,47,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 47, 89].  Tensor sizes: [9, 1, 47, 0]
2025-03-05 15:23:08.793853 test begin: paddle.broadcast_to(Tensor([9, 1, 48, 0],"bool"), list[9,8,48,48,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 48, 0],"bool"), list[9,8,48,48,], ) 
 The expanded size of the tensor (48) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 48, 48].  Tensor sizes: [9, 1, 48, 0]
2025-03-05 15:23:08.794389 test begin: paddle.broadcast_to(Tensor([9, 1, 48, 0],"bool"), list[9,8,48,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 48, 0],"bool"), list[9,8,48,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 48, 53].  Tensor sizes: [9, 1, 48, 0]
2025-03-05 15:23:08.794917 test begin: paddle.broadcast_to(Tensor([9, 1, 48, 0],"bool"), list[9,8,48,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 48, 0],"bool"), list[9,8,48,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 48, 89].  Tensor sizes: [9, 1, 48, 0]
2025-03-05 15:23:08.795449 test begin: paddle.broadcast_to(Tensor([9, 1, 49, 0],"bool"), list[9,8,49,49,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 49, 0],"bool"), list[9,8,49,49,], ) 
 The expanded size of the tensor (49) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 49, 49].  Tensor sizes: [9, 1, 49, 0]
2025-03-05 15:23:08.796001 test begin: paddle.broadcast_to(Tensor([9, 1, 49, 0],"bool"), list[9,8,49,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 49, 0],"bool"), list[9,8,49,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 49, 53].  Tensor sizes: [9, 1, 49, 0]
2025-03-05 15:23:08.796523 test begin: paddle.broadcast_to(Tensor([9, 1, 49, 0],"bool"), list[9,8,49,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 49, 0],"bool"), list[9,8,49,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 49, 89].  Tensor sizes: [9, 1, 49, 0]
2025-03-05 15:23:08.797078 test begin: paddle.broadcast_to(Tensor([9, 1, 5, 0],"bool"), list[9,8,5,5,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 5, 0],"bool"), list[9,8,5,5,], ) 
 The expanded size of the tensor (5) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 5, 5].  Tensor sizes: [9, 1, 5, 0]
2025-03-05 15:23:08.797612 test begin: paddle.broadcast_to(Tensor([9, 1, 5, 0],"bool"), list[9,8,5,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 5, 0],"bool"), list[9,8,5,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 5, 53].  Tensor sizes: [9, 1, 5, 0]
2025-03-05 15:23:08.798132 test begin: paddle.broadcast_to(Tensor([9, 1, 5, 0],"bool"), list[9,8,5,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 5, 0],"bool"), list[9,8,5,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 5, 89].  Tensor sizes: [9, 1, 5, 0]
2025-03-05 15:23:08.798668 test begin: paddle.broadcast_to(Tensor([9, 1, 50, 0],"bool"), list[9,8,50,50,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 50, 0],"bool"), list[9,8,50,50,], ) 
 The expanded size of the tensor (50) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 50, 50].  Tensor sizes: [9, 1, 50, 0]
2025-03-05 15:23:08.799200 test begin: paddle.broadcast_to(Tensor([9, 1, 50, 0],"bool"), list[9,8,50,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 50, 0],"bool"), list[9,8,50,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 50, 53].  Tensor sizes: [9, 1, 50, 0]
2025-03-05 15:23:08.799729 test begin: paddle.broadcast_to(Tensor([9, 1, 50, 0],"bool"), list[9,8,50,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 50, 0],"bool"), list[9,8,50,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 50, 89].  Tensor sizes: [9, 1, 50, 0]
2025-03-05 15:23:08.800275 test begin: paddle.broadcast_to(Tensor([9, 1, 51, 0],"bool"), list[9,8,51,51,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 51, 0],"bool"), list[9,8,51,51,], ) 
 The expanded size of the tensor (51) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 51, 51].  Tensor sizes: [9, 1, 51, 0]
2025-03-05 15:23:08.800822 test begin: paddle.broadcast_to(Tensor([9, 1, 51, 0],"bool"), list[9,8,51,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 51, 0],"bool"), list[9,8,51,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 51, 53].  Tensor sizes: [9, 1, 51, 0]
2025-03-05 15:23:08.801368 test begin: paddle.broadcast_to(Tensor([9, 1, 51, 0],"bool"), list[9,8,51,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 51, 0],"bool"), list[9,8,51,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 51, 89].  Tensor sizes: [9, 1, 51, 0]
2025-03-05 15:23:08.801899 test begin: paddle.broadcast_to(Tensor([9, 1, 52, 0],"bool"), list[9,8,52,52,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 52, 0],"bool"), list[9,8,52,52,], ) 
 The expanded size of the tensor (52) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 52, 52].  Tensor sizes: [9, 1, 52, 0]
2025-03-05 15:23:08.802417 test begin: paddle.broadcast_to(Tensor([9, 1, 52, 0],"bool"), list[9,8,52,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 52, 0],"bool"), list[9,8,52,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 52, 53].  Tensor sizes: [9, 1, 52, 0]
2025-03-05 15:23:08.802938 test begin: paddle.broadcast_to(Tensor([9, 1, 52, 0],"bool"), list[9,8,52,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 52, 0],"bool"), list[9,8,52,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 52, 89].  Tensor sizes: [9, 1, 52, 0]
2025-03-05 15:23:08.803474 test begin: paddle.broadcast_to(Tensor([9, 1, 53, 0],"bool"), list[9,8,53,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 53, 0],"bool"), list[9,8,53,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 53, 53].  Tensor sizes: [9, 1, 53, 0]
2025-03-05 15:23:08.804028 test begin: paddle.broadcast_to(Tensor([9, 1, 53, 0],"bool"), list[9,8,53,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 53, 0],"bool"), list[9,8,53,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 53, 89].  Tensor sizes: [9, 1, 53, 0]
2025-03-05 15:23:08.804560 test begin: paddle.broadcast_to(Tensor([9, 1, 54, 0],"bool"), list[9,8,54,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 54, 0],"bool"), list[9,8,54,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 54, 53].  Tensor sizes: [9, 1, 54, 0]
2025-03-05 15:23:08.805120 test begin: paddle.broadcast_to(Tensor([9, 1, 54, 0],"bool"), list[9,8,54,54,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 54, 0],"bool"), list[9,8,54,54,], ) 
 The expanded size of the tensor (54) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 54, 54].  Tensor sizes: [9, 1, 54, 0]
2025-03-05 15:23:08.805684 test begin: paddle.broadcast_to(Tensor([9, 1, 54, 0],"bool"), list[9,8,54,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 54, 0],"bool"), list[9,8,54,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 54, 89].  Tensor sizes: [9, 1, 54, 0]
2025-03-05 15:23:08.806212 test begin: paddle.broadcast_to(Tensor([9, 1, 55, 0],"bool"), list[9,8,55,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 55, 0],"bool"), list[9,8,55,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 55, 53].  Tensor sizes: [9, 1, 55, 0]
2025-03-05 15:23:08.806752 test begin: paddle.broadcast_to(Tensor([9, 1, 55, 0],"bool"), list[9,8,55,55,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 55, 0],"bool"), list[9,8,55,55,], ) 
 The expanded size of the tensor (55) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 55, 55].  Tensor sizes: [9, 1, 55, 0]
2025-03-05 15:23:08.807271 test begin: paddle.broadcast_to(Tensor([9, 1, 55, 0],"bool"), list[9,8,55,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 55, 0],"bool"), list[9,8,55,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 55, 89].  Tensor sizes: [9, 1, 55, 0]
2025-03-05 15:23:08.807808 test begin: paddle.broadcast_to(Tensor([9, 1, 56, 0],"bool"), list[9,8,56,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 56, 0],"bool"), list[9,8,56,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 56, 53].  Tensor sizes: [9, 1, 56, 0]
2025-03-05 15:23:08.808345 test begin: paddle.broadcast_to(Tensor([9, 1, 56, 0],"bool"), list[9,8,56,56,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 56, 0],"bool"), list[9,8,56,56,], ) 
 The expanded size of the tensor (56) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 56, 56].  Tensor sizes: [9, 1, 56, 0]
2025-03-05 15:23:08.808883 test begin: paddle.broadcast_to(Tensor([9, 1, 56, 0],"bool"), list[9,8,56,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 56, 0],"bool"), list[9,8,56,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 56, 89].  Tensor sizes: [9, 1, 56, 0]
2025-03-05 15:23:08.809430 test begin: paddle.broadcast_to(Tensor([9, 1, 57, 0],"bool"), list[9,8,57,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 57, 0],"bool"), list[9,8,57,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 57, 53].  Tensor sizes: [9, 1, 57, 0]
2025-03-05 15:23:08.809964 test begin: paddle.broadcast_to(Tensor([9, 1, 57, 0],"bool"), list[9,8,57,57,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 57, 0],"bool"), list[9,8,57,57,], ) 
 The expanded size of the tensor (57) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 57, 57].  Tensor sizes: [9, 1, 57, 0]
2025-03-05 15:23:08.810497 test begin: paddle.broadcast_to(Tensor([9, 1, 57, 0],"bool"), list[9,8,57,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 57, 0],"bool"), list[9,8,57,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 57, 89].  Tensor sizes: [9, 1, 57, 0]
2025-03-05 15:23:08.811029 test begin: paddle.broadcast_to(Tensor([9, 1, 58, 0],"bool"), list[9,8,58,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 58, 0],"bool"), list[9,8,58,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 58, 53].  Tensor sizes: [9, 1, 58, 0]
2025-03-05 15:23:08.811555 test begin: paddle.broadcast_to(Tensor([9, 1, 58, 0],"bool"), list[9,8,58,58,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 58, 0],"bool"), list[9,8,58,58,], ) 
 The expanded size of the tensor (58) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 58, 58].  Tensor sizes: [9, 1, 58, 0]
2025-03-05 15:23:08.812086 test begin: paddle.broadcast_to(Tensor([9, 1, 58, 0],"bool"), list[9,8,58,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 58, 0],"bool"), list[9,8,58,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 58, 89].  Tensor sizes: [9, 1, 58, 0]
2025-03-05 15:23:08.812610 test begin: paddle.broadcast_to(Tensor([9, 1, 59, 0],"bool"), list[9,8,59,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 59, 0],"bool"), list[9,8,59,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 59, 53].  Tensor sizes: [9, 1, 59, 0]
2025-03-05 15:23:08.813138 test begin: paddle.broadcast_to(Tensor([9, 1, 59, 0],"bool"), list[9,8,59,59,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 59, 0],"bool"), list[9,8,59,59,], ) 
 The expanded size of the tensor (59) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 59, 59].  Tensor sizes: [9, 1, 59, 0]
2025-03-05 15:23:08.813708 test begin: paddle.broadcast_to(Tensor([9, 1, 59, 0],"bool"), list[9,8,59,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 59, 0],"bool"), list[9,8,59,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 59, 89].  Tensor sizes: [9, 1, 59, 0]
2025-03-05 15:23:08.814240 test begin: paddle.broadcast_to(Tensor([9, 1, 6, 0],"bool"), list[9,8,6,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 6, 0],"bool"), list[9,8,6,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 6, 53].  Tensor sizes: [9, 1, 6, 0]
2025-03-05 15:23:08.814768 test begin: paddle.broadcast_to(Tensor([9, 1, 6, 0],"bool"), list[9,8,6,6,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 6, 0],"bool"), list[9,8,6,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 6, 6].  Tensor sizes: [9, 1, 6, 0]
2025-03-05 15:23:08.815282 test begin: paddle.broadcast_to(Tensor([9, 1, 6, 0],"bool"), list[9,8,6,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 6, 0],"bool"), list[9,8,6,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 6, 89].  Tensor sizes: [9, 1, 6, 0]
2025-03-05 15:23:08.815806 test begin: paddle.broadcast_to(Tensor([9, 1, 60, 0],"bool"), list[9,8,60,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 60, 0],"bool"), list[9,8,60,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 60, 53].  Tensor sizes: [9, 1, 60, 0]
2025-03-05 15:23:08.816334 test begin: paddle.broadcast_to(Tensor([9, 1, 60, 0],"bool"), list[9,8,60,60,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 60, 0],"bool"), list[9,8,60,60,], ) 
 The expanded size of the tensor (60) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 60, 60].  Tensor sizes: [9, 1, 60, 0]
2025-03-05 15:23:08.816879 test begin: paddle.broadcast_to(Tensor([9, 1, 60, 0],"bool"), list[9,8,60,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 60, 0],"bool"), list[9,8,60,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 60, 89].  Tensor sizes: [9, 1, 60, 0]
2025-03-05 15:23:08.817425 test begin: paddle.broadcast_to(Tensor([9, 1, 61, 0],"bool"), list[9,8,61,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 61, 0],"bool"), list[9,8,61,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 61, 53].  Tensor sizes: [9, 1, 61, 0]
2025-03-05 15:23:08.817958 test begin: paddle.broadcast_to(Tensor([9, 1, 61, 0],"bool"), list[9,8,61,61,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 61, 0],"bool"), list[9,8,61,61,], ) 
 The expanded size of the tensor (61) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 61, 61].  Tensor sizes: [9, 1, 61, 0]
2025-03-05 15:23:08.818477 test begin: paddle.broadcast_to(Tensor([9, 1, 61, 0],"bool"), list[9,8,61,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 61, 0],"bool"), list[9,8,61,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 61, 89].  Tensor sizes: [9, 1, 61, 0]
2025-03-05 15:23:08.819004 test begin: paddle.broadcast_to(Tensor([9, 1, 62, 0],"bool"), list[9,8,62,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 62, 0],"bool"), list[9,8,62,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 62, 53].  Tensor sizes: [9, 1, 62, 0]
2025-03-05 15:23:08.819532 test begin: paddle.broadcast_to(Tensor([9, 1, 62, 0],"bool"), list[9,8,62,62,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 62, 0],"bool"), list[9,8,62,62,], ) 
 The expanded size of the tensor (62) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 62, 62].  Tensor sizes: [9, 1, 62, 0]
2025-03-05 15:23:08.820073 test begin: paddle.broadcast_to(Tensor([9, 1, 62, 0],"bool"), list[9,8,62,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 62, 0],"bool"), list[9,8,62,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 62, 89].  Tensor sizes: [9, 1, 62, 0]
2025-03-05 15:23:08.820602 test begin: paddle.broadcast_to(Tensor([9, 1, 63, 0],"bool"), list[9,8,63,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 63, 0],"bool"), list[9,8,63,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 63, 53].  Tensor sizes: [9, 1, 63, 0]
2025-03-05 15:23:08.821139 test begin: paddle.broadcast_to(Tensor([9, 1, 63, 0],"bool"), list[9,8,63,63,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 63, 0],"bool"), list[9,8,63,63,], ) 
 The expanded size of the tensor (63) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 63, 63].  Tensor sizes: [9, 1, 63, 0]
2025-03-05 15:23:08.821664 test begin: paddle.broadcast_to(Tensor([9, 1, 63, 0],"bool"), list[9,8,63,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 63, 0],"bool"), list[9,8,63,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 63, 89].  Tensor sizes: [9, 1, 63, 0]
2025-03-05 15:23:08.822195 test begin: paddle.broadcast_to(Tensor([9, 1, 64, 0],"bool"), list[9,8,64,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 64, 0],"bool"), list[9,8,64,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 64, 53].  Tensor sizes: [9, 1, 64, 0]
2025-03-05 15:23:08.822734 test begin: paddle.broadcast_to(Tensor([9, 1, 64, 0],"bool"), list[9,8,64,64,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 64, 0],"bool"), list[9,8,64,64,], ) 
 The expanded size of the tensor (64) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 64, 64].  Tensor sizes: [9, 1, 64, 0]
2025-03-05 15:23:08.823270 test begin: paddle.broadcast_to(Tensor([9, 1, 64, 0],"bool"), list[9,8,64,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 64, 0],"bool"), list[9,8,64,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 64, 89].  Tensor sizes: [9, 1, 64, 0]
2025-03-05 15:23:08.823802 test begin: paddle.broadcast_to(Tensor([9, 1, 65, 0],"bool"), list[9,8,65,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 65, 0],"bool"), list[9,8,65,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 65, 53].  Tensor sizes: [9, 1, 65, 0]
2025-03-05 15:23:08.824331 test begin: paddle.broadcast_to(Tensor([9, 1, 65, 0],"bool"), list[9,8,65,65,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 65, 0],"bool"), list[9,8,65,65,], ) 
 The expanded size of the tensor (65) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 65, 65].  Tensor sizes: [9, 1, 65, 0]
2025-03-05 15:23:08.824922 test begin: paddle.broadcast_to(Tensor([9, 1, 65, 0],"bool"), list[9,8,65,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 65, 0],"bool"), list[9,8,65,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 65, 89].  Tensor sizes: [9, 1, 65, 0]
2025-03-05 15:23:08.825440 test begin: paddle.broadcast_to(Tensor([9, 1, 66, 0],"bool"), list[9,8,66,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 66, 0],"bool"), list[9,8,66,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 66, 53].  Tensor sizes: [9, 1, 66, 0]
2025-03-05 15:23:08.826017 test begin: paddle.broadcast_to(Tensor([9, 1, 66, 0],"bool"), list[9,8,66,66,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 66, 0],"bool"), list[9,8,66,66,], ) 
 The expanded size of the tensor (66) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 66, 66].  Tensor sizes: [9, 1, 66, 0]
2025-03-05 15:23:08.826546 test begin: paddle.broadcast_to(Tensor([9, 1, 66, 0],"bool"), list[9,8,66,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 66, 0],"bool"), list[9,8,66,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 66, 89].  Tensor sizes: [9, 1, 66, 0]
2025-03-05 15:23:08.827090 test begin: paddle.broadcast_to(Tensor([9, 1, 67, 0],"bool"), list[9,8,67,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 67, 0],"bool"), list[9,8,67,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 67, 53].  Tensor sizes: [9, 1, 67, 0]
2025-03-05 15:23:08.827624 test begin: paddle.broadcast_to(Tensor([9, 1, 67, 0],"bool"), list[9,8,67,67,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 67, 0],"bool"), list[9,8,67,67,], ) 
 The expanded size of the tensor (67) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 67, 67].  Tensor sizes: [9, 1, 67, 0]
2025-03-05 15:23:08.828145 test begin: paddle.broadcast_to(Tensor([9, 1, 67, 0],"bool"), list[9,8,67,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 67, 0],"bool"), list[9,8,67,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 67, 89].  Tensor sizes: [9, 1, 67, 0]
2025-03-05 15:23:08.828669 test begin: paddle.broadcast_to(Tensor([9, 1, 68, 0],"bool"), list[9,8,68,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 68, 0],"bool"), list[9,8,68,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 68, 53].  Tensor sizes: [9, 1, 68, 0]
2025-03-05 15:23:08.829204 test begin: paddle.broadcast_to(Tensor([9, 1, 68, 0],"bool"), list[9,8,68,68,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 68, 0],"bool"), list[9,8,68,68,], ) 
 The expanded size of the tensor (68) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 68, 68].  Tensor sizes: [9, 1, 68, 0]
2025-03-05 15:23:08.829749 test begin: paddle.broadcast_to(Tensor([9, 1, 68, 0],"bool"), list[9,8,68,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 68, 0],"bool"), list[9,8,68,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 68, 89].  Tensor sizes: [9, 1, 68, 0]
2025-03-05 15:23:08.830274 test begin: paddle.broadcast_to(Tensor([9, 1, 69, 0],"bool"), list[9,8,69,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 69, 0],"bool"), list[9,8,69,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 69, 53].  Tensor sizes: [9, 1, 69, 0]
2025-03-05 15:23:08.830793 test begin: paddle.broadcast_to(Tensor([9, 1, 69, 0],"bool"), list[9,8,69,69,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 69, 0],"bool"), list[9,8,69,69,], ) 
 The expanded size of the tensor (69) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 69, 69].  Tensor sizes: [9, 1, 69, 0]
2025-03-05 15:23:08.831315 test begin: paddle.broadcast_to(Tensor([9, 1, 69, 0],"bool"), list[9,8,69,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 69, 0],"bool"), list[9,8,69,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 69, 89].  Tensor sizes: [9, 1, 69, 0]
2025-03-05 15:23:08.831853 test begin: paddle.broadcast_to(Tensor([9, 1, 7, 0],"bool"), list[9,8,7,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 7, 0],"bool"), list[9,8,7,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 7, 53].  Tensor sizes: [9, 1, 7, 0]
2025-03-05 15:23:08.832379 test begin: paddle.broadcast_to(Tensor([9, 1, 7, 0],"bool"), list[9,8,7,7,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 7, 0],"bool"), list[9,8,7,7,], ) 
 The expanded size of the tensor (7) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 7, 7].  Tensor sizes: [9, 1, 7, 0]
2025-03-05 15:23:08.832917 test begin: paddle.broadcast_to(Tensor([9, 1, 7, 0],"bool"), list[9,8,7,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 7, 0],"bool"), list[9,8,7,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 7, 89].  Tensor sizes: [9, 1, 7, 0]
2025-03-05 15:23:08.833448 test begin: paddle.broadcast_to(Tensor([9, 1, 70, 0],"bool"), list[9,8,70,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 70, 0],"bool"), list[9,8,70,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 70, 53].  Tensor sizes: [9, 1, 70, 0]
2025-03-05 15:23:08.833977 test begin: paddle.broadcast_to(Tensor([9, 1, 70, 0],"bool"), list[9,8,70,70,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 70, 0],"bool"), list[9,8,70,70,], ) 
 The expanded size of the tensor (70) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 70, 70].  Tensor sizes: [9, 1, 70, 0]
2025-03-05 15:23:08.834505 test begin: paddle.broadcast_to(Tensor([9, 1, 70, 0],"bool"), list[9,8,70,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 70, 0],"bool"), list[9,8,70,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 70, 89].  Tensor sizes: [9, 1, 70, 0]
2025-03-05 15:23:08.835042 test begin: paddle.broadcast_to(Tensor([9, 1, 71, 0],"bool"), list[9,8,71,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 71, 0],"bool"), list[9,8,71,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 71, 53].  Tensor sizes: [9, 1, 71, 0]
2025-03-05 15:23:08.835557 test begin: paddle.broadcast_to(Tensor([9, 1, 71, 0],"bool"), list[9,8,71,71,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 71, 0],"bool"), list[9,8,71,71,], ) 
 The expanded size of the tensor (71) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 71, 71].  Tensor sizes: [9, 1, 71, 0]
2025-03-05 15:23:08.836102 test begin: paddle.broadcast_to(Tensor([9, 1, 71, 0],"bool"), list[9,8,71,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 71, 0],"bool"), list[9,8,71,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 71, 89].  Tensor sizes: [9, 1, 71, 0]
2025-03-05 15:23:08.836629 test begin: paddle.broadcast_to(Tensor([9, 1, 72, 0],"bool"), list[9,8,72,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 72, 0],"bool"), list[9,8,72,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 72, 53].  Tensor sizes: [9, 1, 72, 0]
2025-03-05 15:23:08.837192 test begin: paddle.broadcast_to(Tensor([9, 1, 72, 0],"bool"), list[9,8,72,72,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 72, 0],"bool"), list[9,8,72,72,], ) 
 The expanded size of the tensor (72) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 72, 72].  Tensor sizes: [9, 1, 72, 0]
2025-03-05 15:23:08.837741 test begin: paddle.broadcast_to(Tensor([9, 1, 72, 0],"bool"), list[9,8,72,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 72, 0],"bool"), list[9,8,72,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 72, 89].  Tensor sizes: [9, 1, 72, 0]
2025-03-05 15:23:08.838265 test begin: paddle.broadcast_to(Tensor([9, 1, 73, 0],"bool"), list[9,8,73,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 73, 0],"bool"), list[9,8,73,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 73, 53].  Tensor sizes: [9, 1, 73, 0]
2025-03-05 15:23:08.838790 test begin: paddle.broadcast_to(Tensor([9, 1, 73, 0],"bool"), list[9,8,73,73,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 73, 0],"bool"), list[9,8,73,73,], ) 
 The expanded size of the tensor (73) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 73, 73].  Tensor sizes: [9, 1, 73, 0]
2025-03-05 15:23:08.839306 test begin: paddle.broadcast_to(Tensor([9, 1, 73, 0],"bool"), list[9,8,73,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 73, 0],"bool"), list[9,8,73,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 73, 89].  Tensor sizes: [9, 1, 73, 0]
2025-03-05 15:23:08.839826 test begin: paddle.broadcast_to(Tensor([9, 1, 74, 0],"bool"), list[9,8,74,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 74, 0],"bool"), list[9,8,74,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 74, 53].  Tensor sizes: [9, 1, 74, 0]
2025-03-05 15:23:08.840340 test begin: paddle.broadcast_to(Tensor([9, 1, 74, 0],"bool"), list[9,8,74,74,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 74, 0],"bool"), list[9,8,74,74,], ) 
 The expanded size of the tensor (74) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 74, 74].  Tensor sizes: [9, 1, 74, 0]
2025-03-05 15:23:08.840875 test begin: paddle.broadcast_to(Tensor([9, 1, 74, 0],"bool"), list[9,8,74,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 74, 0],"bool"), list[9,8,74,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 74, 89].  Tensor sizes: [9, 1, 74, 0]
2025-03-05 15:23:08.841394 test begin: paddle.broadcast_to(Tensor([9, 1, 75, 0],"bool"), list[9,8,75,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 75, 0],"bool"), list[9,8,75,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 75, 53].  Tensor sizes: [9, 1, 75, 0]
2025-03-05 15:23:08.841929 test begin: paddle.broadcast_to(Tensor([9, 1, 75, 0],"bool"), list[9,8,75,75,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 75, 0],"bool"), list[9,8,75,75,], ) 
 The expanded size of the tensor (75) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 75, 75].  Tensor sizes: [9, 1, 75, 0]
2025-03-05 15:23:08.842474 test begin: paddle.broadcast_to(Tensor([9, 1, 75, 0],"bool"), list[9,8,75,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 75, 0],"bool"), list[9,8,75,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 75, 89].  Tensor sizes: [9, 1, 75, 0]
2025-03-05 15:23:08.843564 test begin: paddle.broadcast_to(Tensor([9, 1, 76, 0],"bool"), list[9,8,76,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 76, 0],"bool"), list[9,8,76,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 76, 53].  Tensor sizes: [9, 1, 76, 0]
2025-03-05 15:23:08.844358 test begin: paddle.broadcast_to(Tensor([9, 1, 76, 0],"bool"), list[9,8,76,76,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 76, 0],"bool"), list[9,8,76,76,], ) 
 The expanded size of the tensor (76) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 76, 76].  Tensor sizes: [9, 1, 76, 0]
2025-03-05 15:23:08.844943 test begin: paddle.broadcast_to(Tensor([9, 1, 76, 0],"bool"), list[9,8,76,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 76, 0],"bool"), list[9,8,76,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 76, 89].  Tensor sizes: [9, 1, 76, 0]
2025-03-05 15:23:08.845486 test begin: paddle.broadcast_to(Tensor([9, 1, 77, 0],"bool"), list[9,8,77,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 77, 0],"bool"), list[9,8,77,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 77, 53].  Tensor sizes: [9, 1, 77, 0]
2025-03-05 15:23:08.846044 test begin: paddle.broadcast_to(Tensor([9, 1, 77, 0],"bool"), list[9,8,77,77,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 77, 0],"bool"), list[9,8,77,77,], ) 
 The expanded size of the tensor (77) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 77, 77].  Tensor sizes: [9, 1, 77, 0]
2025-03-05 15:23:08.846580 test begin: paddle.broadcast_to(Tensor([9, 1, 77, 0],"bool"), list[9,8,77,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 77, 0],"bool"), list[9,8,77,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 77, 89].  Tensor sizes: [9, 1, 77, 0]
2025-03-05 15:23:08.847125 test begin: paddle.broadcast_to(Tensor([9, 1, 78, 0],"bool"), list[9,8,78,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 78, 0],"bool"), list[9,8,78,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 78, 53].  Tensor sizes: [9, 1, 78, 0]
2025-03-05 15:23:08.847663 test begin: paddle.broadcast_to(Tensor([9, 1, 78, 0],"bool"), list[9,8,78,78,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 78, 0],"bool"), list[9,8,78,78,], ) 
 The expanded size of the tensor (78) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 78, 78].  Tensor sizes: [9, 1, 78, 0]
2025-03-05 15:23:08.848232 test begin: paddle.broadcast_to(Tensor([9, 1, 78, 0],"bool"), list[9,8,78,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 78, 0],"bool"), list[9,8,78,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 78, 89].  Tensor sizes: [9, 1, 78, 0]
2025-03-05 15:23:08.848770 test begin: paddle.broadcast_to(Tensor([9, 1, 79, 0],"bool"), list[9,8,79,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 79, 0],"bool"), list[9,8,79,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 79, 53].  Tensor sizes: [9, 1, 79, 0]
2025-03-05 15:23:08.849305 test begin: paddle.broadcast_to(Tensor([9, 1, 79, 0],"bool"), list[9,8,79,79,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 79, 0],"bool"), list[9,8,79,79,], ) 
 The expanded size of the tensor (79) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 79, 79].  Tensor sizes: [9, 1, 79, 0]
2025-03-05 15:23:08.849842 test begin: paddle.broadcast_to(Tensor([9, 1, 79, 0],"bool"), list[9,8,79,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 79, 0],"bool"), list[9,8,79,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 79, 89].  Tensor sizes: [9, 1, 79, 0]
2025-03-05 15:23:08.850385 test begin: paddle.broadcast_to(Tensor([9, 1, 8, 0],"bool"), list[9,8,8,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 8, 0],"bool"), list[9,8,8,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 8, 53].  Tensor sizes: [9, 1, 8, 0]
2025-03-05 15:23:08.850936 test begin: paddle.broadcast_to(Tensor([9, 1, 8, 0],"bool"), list[9,8,8,8,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 8, 0],"bool"), list[9,8,8,8,], ) 
 The expanded size of the tensor (8) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 8, 8].  Tensor sizes: [9, 1, 8, 0]
2025-03-05 15:23:08.851925 test begin: paddle.broadcast_to(Tensor([9, 1, 8, 0],"bool"), list[9,8,8,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 8, 0],"bool"), list[9,8,8,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 8, 89].  Tensor sizes: [9, 1, 8, 0]
2025-03-05 15:23:08.852694 test begin: paddle.broadcast_to(Tensor([9, 1, 80, 0],"bool"), list[9,8,80,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 80, 0],"bool"), list[9,8,80,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 80, 53].  Tensor sizes: [9, 1, 80, 0]
2025-03-05 15:23:08.853428 test begin: paddle.broadcast_to(Tensor([9, 1, 80, 0],"bool"), list[9,8,80,80,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 80, 0],"bool"), list[9,8,80,80,], ) 
 The expanded size of the tensor (80) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 80, 80].  Tensor sizes: [9, 1, 80, 0]
2025-03-05 15:23:08.854129 test begin: paddle.broadcast_to(Tensor([9, 1, 80, 0],"bool"), list[9,8,80,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 80, 0],"bool"), list[9,8,80,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 80, 89].  Tensor sizes: [9, 1, 80, 0]
2025-03-05 15:23:08.854679 test begin: paddle.broadcast_to(Tensor([9, 1, 81, 0],"bool"), list[9,8,81,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 81, 0],"bool"), list[9,8,81,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 81, 53].  Tensor sizes: [9, 1, 81, 0]
2025-03-05 15:23:08.855197 test begin: paddle.broadcast_to(Tensor([9, 1, 81, 0],"bool"), list[9,8,81,81,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 81, 0],"bool"), list[9,8,81,81,], ) 
 The expanded size of the tensor (81) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 81, 81].  Tensor sizes: [9, 1, 81, 0]
2025-03-05 15:23:08.855732 test begin: paddle.broadcast_to(Tensor([9, 1, 81, 0],"bool"), list[9,8,81,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 81, 0],"bool"), list[9,8,81,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 81, 89].  Tensor sizes: [9, 1, 81, 0]
2025-03-05 15:23:08.856271 test begin: paddle.broadcast_to(Tensor([9, 1, 82, 0],"bool"), list[9,8,82,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 82, 0],"bool"), list[9,8,82,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 82, 53].  Tensor sizes: [9, 1, 82, 0]
2025-03-05 15:23:08.856792 test begin: paddle.broadcast_to(Tensor([9, 1, 82, 0],"bool"), list[9,8,82,82,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 82, 0],"bool"), list[9,8,82,82,], ) 
 The expanded size of the tensor (82) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 82, 82].  Tensor sizes: [9, 1, 82, 0]
2025-03-05 15:23:08.857314 test begin: paddle.broadcast_to(Tensor([9, 1, 82, 0],"bool"), list[9,8,82,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 82, 0],"bool"), list[9,8,82,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 82, 89].  Tensor sizes: [9, 1, 82, 0]
2025-03-05 15:23:08.857883 test begin: paddle.broadcast_to(Tensor([9, 1, 83, 0],"bool"), list[9,8,83,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 83, 0],"bool"), list[9,8,83,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 83, 53].  Tensor sizes: [9, 1, 83, 0]
2025-03-05 15:23:08.858397 test begin: paddle.broadcast_to(Tensor([9, 1, 83, 0],"bool"), list[9,8,83,83,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 83, 0],"bool"), list[9,8,83,83,], ) 
 The expanded size of the tensor (83) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 83, 83].  Tensor sizes: [9, 1, 83, 0]
2025-03-05 15:23:08.858906 test begin: paddle.broadcast_to(Tensor([9, 1, 83, 0],"bool"), list[9,8,83,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 83, 0],"bool"), list[9,8,83,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 83, 89].  Tensor sizes: [9, 1, 83, 0]
2025-03-05 15:23:08.859419 test begin: paddle.broadcast_to(Tensor([9, 1, 84, 0],"bool"), list[9,8,84,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 84, 0],"bool"), list[9,8,84,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 84, 53].  Tensor sizes: [9, 1, 84, 0]
2025-03-05 15:23:08.859937 test begin: paddle.broadcast_to(Tensor([9, 1, 84, 0],"bool"), list[9,8,84,84,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 84, 0],"bool"), list[9,8,84,84,], ) 
 The expanded size of the tensor (84) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 84, 84].  Tensor sizes: [9, 1, 84, 0]
2025-03-05 15:23:08.860450 test begin: paddle.broadcast_to(Tensor([9, 1, 84, 0],"bool"), list[9,8,84,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 84, 0],"bool"), list[9,8,84,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 84, 89].  Tensor sizes: [9, 1, 84, 0]
2025-03-05 15:23:08.861071 test begin: paddle.broadcast_to(Tensor([9, 1, 85, 0],"bool"), list[9,8,85,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 85, 0],"bool"), list[9,8,85,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 85, 53].  Tensor sizes: [9, 1, 85, 0]
2025-03-05 15:23:08.862170 test begin: paddle.broadcast_to(Tensor([9, 1, 85, 0],"bool"), list[9,8,85,85,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 85, 0],"bool"), list[9,8,85,85,], ) 
 The expanded size of the tensor (85) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 85, 85].  Tensor sizes: [9, 1, 85, 0]
2025-03-05 15:23:08.862807 test begin: paddle.broadcast_to(Tensor([9, 1, 85, 0],"bool"), list[9,8,85,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 85, 0],"bool"), list[9,8,85,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 85, 89].  Tensor sizes: [9, 1, 85, 0]
2025-03-05 15:23:08.863387 test begin: paddle.broadcast_to(Tensor([9, 1, 86, 0],"bool"), list[9,8,86,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 86, 0],"bool"), list[9,8,86,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 86, 53].  Tensor sizes: [9, 1, 86, 0]
2025-03-05 15:23:08.863943 test begin: paddle.broadcast_to(Tensor([9, 1, 86, 0],"bool"), list[9,8,86,86,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 86, 0],"bool"), list[9,8,86,86,], ) 
 The expanded size of the tensor (86) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 86, 86].  Tensor sizes: [9, 1, 86, 0]
2025-03-05 15:23:08.864502 test begin: paddle.broadcast_to(Tensor([9, 1, 86, 0],"bool"), list[9,8,86,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 86, 0],"bool"), list[9,8,86,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 86, 89].  Tensor sizes: [9, 1, 86, 0]
2025-03-05 15:23:08.865042 test begin: paddle.broadcast_to(Tensor([9, 1, 87, 0],"bool"), list[9,8,87,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 87, 0],"bool"), list[9,8,87,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 87, 53].  Tensor sizes: [9, 1, 87, 0]
2025-03-05 15:23:08.865580 test begin: paddle.broadcast_to(Tensor([9, 1, 87, 0],"bool"), list[9,8,87,87,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 87, 0],"bool"), list[9,8,87,87,], ) 
 The expanded size of the tensor (87) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 87, 87].  Tensor sizes: [9, 1, 87, 0]
2025-03-05 15:23:08.866137 test begin: paddle.broadcast_to(Tensor([9, 1, 87, 0],"bool"), list[9,8,87,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 87, 0],"bool"), list[9,8,87,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 87, 89].  Tensor sizes: [9, 1, 87, 0]
2025-03-05 15:23:08.866670 test begin: paddle.broadcast_to(Tensor([9, 1, 88, 0],"bool"), list[9,8,88,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 88, 0],"bool"), list[9,8,88,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 88, 53].  Tensor sizes: [9, 1, 88, 0]
2025-03-05 15:23:08.867199 test begin: paddle.broadcast_to(Tensor([9, 1, 88, 0],"bool"), list[9,8,88,88,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 88, 0],"bool"), list[9,8,88,88,], ) 
 The expanded size of the tensor (88) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 88, 88].  Tensor sizes: [9, 1, 88, 0]
2025-03-05 15:23:08.867722 test begin: paddle.broadcast_to(Tensor([9, 1, 88, 0],"bool"), list[9,8,88,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 88, 0],"bool"), list[9,8,88,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 88, 89].  Tensor sizes: [9, 1, 88, 0]
2025-03-05 15:23:08.868260 test begin: paddle.broadcast_to(Tensor([9, 1, 89, 0],"bool"), list[9,8,89,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 89, 0],"bool"), list[9,8,89,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 89, 53].  Tensor sizes: [9, 1, 89, 0]
2025-03-05 15:23:08.868794 test begin: paddle.broadcast_to(Tensor([9, 1, 89, 0],"bool"), list[9,8,89,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 89, 0],"bool"), list[9,8,89,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 89, 89].  Tensor sizes: [9, 1, 89, 0]
2025-03-05 15:23:08.869352 test begin: paddle.broadcast_to(Tensor([9, 1, 9, 0],"bool"), list[9,8,9,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 9, 0],"bool"), list[9,8,9,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 9, 53].  Tensor sizes: [9, 1, 9, 0]
2025-03-05 15:23:08.869892 test begin: paddle.broadcast_to(Tensor([9, 1, 9, 0],"bool"), list[9,8,9,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 9, 0],"bool"), list[9,8,9,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 9, 89].  Tensor sizes: [9, 1, 9, 0]
2025-03-05 15:23:08.870413 test begin: paddle.broadcast_to(Tensor([9, 1, 9, 0],"bool"), list[9,8,9,9,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 9, 0],"bool"), list[9,8,9,9,], ) 
 The expanded size of the tensor (9) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 9, 9].  Tensor sizes: [9, 1, 9, 0]
2025-03-05 15:23:08.870953 test begin: paddle.broadcast_to(Tensor([9, 1, 90, 0],"bool"), list[9,8,90,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 90, 0],"bool"), list[9,8,90,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 90, 53].  Tensor sizes: [9, 1, 90, 0]
2025-03-05 15:23:08.871470 test begin: paddle.broadcast_to(Tensor([9, 1, 90, 0],"bool"), list[9,8,90,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 90, 0],"bool"), list[9,8,90,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 90, 89].  Tensor sizes: [9, 1, 90, 0]
2025-03-05 15:23:08.872029 test begin: paddle.broadcast_to(Tensor([9, 1, 90, 0],"bool"), list[9,8,90,90,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 90, 0],"bool"), list[9,8,90,90,], ) 
 The expanded size of the tensor (90) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 90, 90].  Tensor sizes: [9, 1, 90, 0]
2025-03-05 15:23:08.872536 test begin: paddle.broadcast_to(Tensor([9, 1, 91, 0],"bool"), list[9,8,91,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 91, 0],"bool"), list[9,8,91,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 91, 53].  Tensor sizes: [9, 1, 91, 0]
2025-03-05 15:23:08.873064 test begin: paddle.broadcast_to(Tensor([9, 1, 91, 0],"bool"), list[9,8,91,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 91, 0],"bool"), list[9,8,91,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 91, 89].  Tensor sizes: [9, 1, 91, 0]
2025-03-05 15:23:08.873599 test begin: paddle.broadcast_to(Tensor([9, 1, 91, 0],"bool"), list[9,8,91,91,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 91, 0],"bool"), list[9,8,91,91,], ) 
 The expanded size of the tensor (91) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 91, 91].  Tensor sizes: [9, 1, 91, 0]
2025-03-05 15:23:08.874124 test begin: paddle.broadcast_to(Tensor([9, 1, 92, 0],"bool"), list[9,8,92,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 92, 0],"bool"), list[9,8,92,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 92, 53].  Tensor sizes: [9, 1, 92, 0]
2025-03-05 15:23:08.874649 test begin: paddle.broadcast_to(Tensor([9, 1, 92, 0],"bool"), list[9,8,92,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 92, 0],"bool"), list[9,8,92,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 92, 89].  Tensor sizes: [9, 1, 92, 0]
2025-03-05 15:23:08.875174 test begin: paddle.broadcast_to(Tensor([9, 1, 92, 0],"bool"), list[9,8,92,92,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 92, 0],"bool"), list[9,8,92,92,], ) 
 The expanded size of the tensor (92) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 92, 92].  Tensor sizes: [9, 1, 92, 0]
2025-03-05 15:23:08.875711 test begin: paddle.broadcast_to(Tensor([9, 1, 93, 0],"bool"), list[9,8,93,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 93, 0],"bool"), list[9,8,93,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 93, 53].  Tensor sizes: [9, 1, 93, 0]
2025-03-05 15:23:08.876231 test begin: paddle.broadcast_to(Tensor([9, 1, 93, 0],"bool"), list[9,8,93,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 93, 0],"bool"), list[9,8,93,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 93, 89].  Tensor sizes: [9, 1, 93, 0]
2025-03-05 15:23:08.876745 test begin: paddle.broadcast_to(Tensor([9, 1, 93, 0],"bool"), list[9,8,93,93,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 93, 0],"bool"), list[9,8,93,93,], ) 
 The expanded size of the tensor (93) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 93, 93].  Tensor sizes: [9, 1, 93, 0]
2025-03-05 15:23:08.877266 test begin: paddle.broadcast_to(Tensor([9, 1, 94, 0],"bool"), list[9,8,94,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 94, 0],"bool"), list[9,8,94,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 94, 53].  Tensor sizes: [9, 1, 94, 0]
2025-03-05 15:23:08.877822 test begin: paddle.broadcast_to(Tensor([9, 1, 94, 0],"bool"), list[9,8,94,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 94, 0],"bool"), list[9,8,94,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 94, 89].  Tensor sizes: [9, 1, 94, 0]
2025-03-05 15:23:08.878378 test begin: paddle.broadcast_to(Tensor([9, 1, 94, 0],"bool"), list[9,8,94,94,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 94, 0],"bool"), list[9,8,94,94,], ) 
 The expanded size of the tensor (94) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 94, 94].  Tensor sizes: [9, 1, 94, 0]
2025-03-05 15:23:08.878913 test begin: paddle.broadcast_to(Tensor([9, 1, 95, 0],"bool"), list[9,8,95,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 95, 0],"bool"), list[9,8,95,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 95, 53].  Tensor sizes: [9, 1, 95, 0]
2025-03-05 15:23:08.879438 test begin: paddle.broadcast_to(Tensor([9, 1, 95, 0],"bool"), list[9,8,95,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 95, 0],"bool"), list[9,8,95,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 95, 89].  Tensor sizes: [9, 1, 95, 0]
2025-03-05 15:23:08.879972 test begin: paddle.broadcast_to(Tensor([9, 1, 95, 0],"bool"), list[9,8,95,95,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 95, 0],"bool"), list[9,8,95,95,], ) 
 The expanded size of the tensor (95) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 95, 95].  Tensor sizes: [9, 1, 95, 0]
2025-03-05 15:23:08.880509 test begin: paddle.broadcast_to(Tensor([9, 1, 96, 0],"bool"), list[9,8,96,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 96, 0],"bool"), list[9,8,96,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 96, 53].  Tensor sizes: [9, 1, 96, 0]
2025-03-05 15:23:08.881049 test begin: paddle.broadcast_to(Tensor([9, 1, 96, 0],"bool"), list[9,8,96,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 96, 0],"bool"), list[9,8,96,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 96, 89].  Tensor sizes: [9, 1, 96, 0]
2025-03-05 15:23:08.881562 test begin: paddle.broadcast_to(Tensor([9, 1, 96, 0],"bool"), list[9,8,96,96,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 96, 0],"bool"), list[9,8,96,96,], ) 
 The expanded size of the tensor (96) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 96, 96].  Tensor sizes: [9, 1, 96, 0]
2025-03-05 15:23:08.882109 test begin: paddle.broadcast_to(Tensor([9, 1, 97, 0],"bool"), list[9,8,97,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 97, 0],"bool"), list[9,8,97,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 97, 53].  Tensor sizes: [9, 1, 97, 0]
2025-03-05 15:23:08.882633 test begin: paddle.broadcast_to(Tensor([9, 1, 97, 0],"bool"), list[9,8,97,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 97, 0],"bool"), list[9,8,97,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 97, 89].  Tensor sizes: [9, 1, 97, 0]
2025-03-05 15:23:08.883144 test begin: paddle.broadcast_to(Tensor([9, 1, 97, 0],"bool"), list[9,8,97,97,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 97, 0],"bool"), list[9,8,97,97,], ) 
 The expanded size of the tensor (97) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 97, 97].  Tensor sizes: [9, 1, 97, 0]
2025-03-05 15:23:08.883710 test begin: paddle.broadcast_to(Tensor([9, 1, 98, 0],"bool"), list[9,8,98,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 98, 0],"bool"), list[9,8,98,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 98, 53].  Tensor sizes: [9, 1, 98, 0]
2025-03-05 15:23:08.884235 test begin: paddle.broadcast_to(Tensor([9, 1, 98, 0],"bool"), list[9,8,98,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 98, 0],"bool"), list[9,8,98,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 98, 89].  Tensor sizes: [9, 1, 98, 0]
2025-03-05 15:23:08.884765 test begin: paddle.broadcast_to(Tensor([9, 1, 98, 0],"bool"), list[9,8,98,98,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 98, 0],"bool"), list[9,8,98,98,], ) 
 The expanded size of the tensor (98) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 98, 98].  Tensor sizes: [9, 1, 98, 0]
2025-03-05 15:23:08.885292 test begin: paddle.broadcast_to(Tensor([9, 1, 99, 0],"bool"), list[9,8,99,53,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 99, 0],"bool"), list[9,8,99,53,], ) 
 The expanded size of the tensor (53) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 99, 53].  Tensor sizes: [9, 1, 99, 0]
2025-03-05 15:23:08.885814 test begin: paddle.broadcast_to(Tensor([9, 1, 99, 0],"bool"), list[9,8,99,89,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 99, 0],"bool"), list[9,8,99,89,], ) 
 The expanded size of the tensor (89) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 99, 89].  Tensor sizes: [9, 1, 99, 0]
2025-03-05 15:23:08.886382 test begin: paddle.broadcast_to(Tensor([9, 1, 99, 0],"bool"), list[9,8,99,99,], )

[torch error] paddle.broadcast_to(Tensor([9, 1, 99, 0],"bool"), list[9,8,99,99,], ) 
 The expanded size of the tensor (99) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [9, 8, 99, 99].  Tensor sizes: [9, 1, 99, 0]
2025-03-05 15:23:08.886917 test begin: paddle.broadcast_to(x=Tensor([0, 1],"float64"), shape=list[6,2,], )

[torch error] paddle.broadcast_to(x=Tensor([0, 1],"float64"), shape=list[6,2,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 0.  Target sizes: [6, 2].  Tensor sizes: [0, 1]
2025-03-05 15:23:08.887446 test begin: paddle.broadcast_to(x=Tensor([0, 3, 3],"float64"), shape=list[3,2,3,3,], )

[torch error] paddle.broadcast_to(x=Tensor([0, 3, 3],"float64"), shape=list[3,2,3,3,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [3, 2, 3, 3].  Tensor sizes: [0, 3, 3]
2025-03-05 15:23:08.887997 test begin: paddle.broadcast_to(x=Tensor([0],"float32"), shape=list[2,6,], )

[torch error] paddle.broadcast_to(x=Tensor([0],"float32"), shape=list[2,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 6].  Tensor sizes: [0]
2025-03-05 15:23:08.888499 test begin: paddle.broadcast_to(x=Tensor([0],"float64"), shape=list[2,6,], )

[torch error] paddle.broadcast_to(x=Tensor([0],"float64"), shape=list[2,6,], ) 
 The expanded size of the tensor (6) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [2, 6].  Tensor sizes: [0]
2025-03-05 15:23:08.888999 test begin: paddle.broadcast_to(x=Tensor([0],"float64"), shape=list[5,2,], )

[torch error] paddle.broadcast_to(x=Tensor([0],"float64"), shape=list[5,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [5, 2].  Tensor sizes: [0]
2025-03-05 15:23:08.889490 test begin: paddle.broadcast_to(x=Tensor([2, 0, 3],"float64"), shape=list[3,2,3,3,], )

[torch error] paddle.broadcast_to(x=Tensor([2, 0, 3],"float64"), shape=list[3,2,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 2.  Target sizes: [3, 2, 3, 3].  Tensor sizes: [2, 0, 3]
2025-03-05 15:23:08.890009 test begin: paddle.broadcast_to(x=Tensor([2, 3, 0],"float64"), shape=list[3,2,3,3,], )

[torch error] paddle.broadcast_to(x=Tensor([2, 3, 0],"float64"), shape=list[3,2,3,3,], ) 
 The expanded size of the tensor (3) must match the existing size (0) at non-singleton dimension 3.  Target sizes: [3, 2, 3, 3].  Tensor sizes: [2, 3, 0]
2025-03-05 15:23:08.890546 test begin: paddle.broadcast_to(x=Tensor([6, 0],"float64"), shape=list[6,2,], )

[torch error] paddle.broadcast_to(x=Tensor([6, 0],"float64"), shape=list[6,2,], ) 
 The expanded size of the tensor (2) must match the existing size (0) at non-singleton dimension 1.  Target sizes: [6, 2].  Tensor sizes: [6, 0]
2025-03-05 15:23:08.891064 test begin: paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), )

[cuda error] paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.899812 test begin: paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), out_int32=True, )

[cuda error] paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), out_int32=True, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.902033 test begin: paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), right=True, )

[cuda error] paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), right=True, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.903981 test begin: paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), )

[cuda error] paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.905700 test begin: paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), out_int32=True, )

[cuda error] paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), out_int32=True, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.907360 test begin: paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), right=True, )

[cuda error] paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), right=True, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.909000 test begin: paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), )

[Pass] paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), )
2025-03-05 15:23:08.912370 test begin: paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), out_int32=True, )

[Pass] paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), out_int32=True, )
2025-03-05 15:23:08.914554 test begin: paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), right=True, )

[Pass] paddle.bucketize(Tensor([2, 4],"float64"), Tensor([0],"float64"), right=True, )
2025-03-05 15:23:08.917836 test begin: paddle.cdist(Tensor([0, 4],"float32"), Tensor([0, 4],"float32"), p=1, )

[Pass] paddle.cdist(Tensor([0, 4],"float32"), Tensor([0, 4],"float32"), p=1, )
2025-03-05 15:23:08.921035 test begin: paddle.cdist(Tensor([0, 4],"float32"), Tensor([1, 4],"float32"), p=1, )

[Pass] paddle.cdist(Tensor([0, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
2025-03-05 15:23:08.924922 test begin: paddle.cdist(Tensor([300, 0],"float32"), Tensor([1, 0],"float32"), p=1, )

[Pass] paddle.cdist(Tensor([300, 0],"float32"), Tensor([1, 0],"float32"), p=1, )
2025-03-05 15:23:08.928322 test begin: paddle.cdist(Tensor([300, 0],"float32"), Tensor([1, 4],"float32"), p=1, )

[torch error] paddle.cdist(Tensor([300, 0],"float32"), Tensor([1, 4],"float32"), p=1, ) 
 X1 and X2 must have the same number of columns. X1: 0 X2: 4
2025-03-05 15:23:08.929929 test begin: paddle.cdist(Tensor([300, 4],"float32"), Tensor([0, 4],"float32"), p=1, )

[Pass] paddle.cdist(Tensor([300, 4],"float32"), Tensor([0, 4],"float32"), p=1, )
2025-03-05 15:23:08.933180 test begin: paddle.cdist(Tensor([300, 4],"float32"), Tensor([1, 0],"float32"), p=1, )

[torch error] paddle.cdist(Tensor([300, 4],"float32"), Tensor([1, 0],"float32"), p=1, ) 
 X1 and X2 must have the same number of columns. X1: 4 X2: 0
2025-03-05 15:23:08.934351 test begin: paddle.cdist(Tensor([6380, 0],"float32"), Tensor([1, 0],"float32"), p=1, )

[Pass] paddle.cdist(Tensor([6380, 0],"float32"), Tensor([1, 0],"float32"), p=1, )
2025-03-05 15:23:08.938777 test begin: paddle.cdist(Tensor([6380, 0],"float32"), Tensor([1, 4],"float32"), p=1, )

[torch error] paddle.cdist(Tensor([6380, 0],"float32"), Tensor([1, 4],"float32"), p=1, ) 
 X1 and X2 must have the same number of columns. X1: 0 X2: 4
2025-03-05 15:23:08.939850 test begin: paddle.cdist(Tensor([6380, 4],"float32"), Tensor([0, 4],"float32"), p=1, )

[Pass] paddle.cdist(Tensor([6380, 4],"float32"), Tensor([0, 4],"float32"), p=1, )
2025-03-05 15:23:08.942558 test begin: paddle.cdist(Tensor([6380, 4],"float32"), Tensor([1, 0],"float32"), p=1, )

[torch error] paddle.cdist(Tensor([6380, 4],"float32"), Tensor([1, 0],"float32"), p=1, ) 
 X1 and X2 must have the same number of columns. X1: 4 X2: 0
2025-03-05 15:23:08.943832 test begin: paddle.ceil(Tensor([0, 1],"float32"), )

[cuda error] paddle.ceil(Tensor([0, 1],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.946634 test begin: paddle.ceil(Tensor([0, 3, 3],"float32"), )

[cuda error] paddle.ceil(Tensor([0, 3, 3],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.948485 test begin: paddle.ceil(Tensor([0, 3, 3],"float64"), )

[cuda error] paddle.ceil(Tensor([0, 3, 3],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.950253 test begin: paddle.ceil(Tensor([0, 3],"float64"), )

[cuda error] paddle.ceil(Tensor([0, 3],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.958805 test begin: paddle.ceil(Tensor([0, 6, 3, 1, 2, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([0, 6, 3, 1, 2, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.962049 test begin: paddle.ceil(Tensor([0, 6, 3, 4, 1, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([0, 6, 3, 4, 1, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:08.994378 test begin: paddle.ceil(Tensor([0],"float32"), )

[cuda error] paddle.ceil(Tensor([0],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.003531 test begin: paddle.ceil(Tensor([0],"float64"), )

[cuda error] paddle.ceil(Tensor([0],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.009366 test begin: paddle.ceil(Tensor([1, 0, 3],"float32"), )

[cuda error] paddle.ceil(Tensor([1, 0, 3],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.016808 test begin: paddle.ceil(Tensor([1, 0, 3],"float64"), )

[cuda error] paddle.ceil(Tensor([1, 0, 3],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.040352 test begin: paddle.ceil(Tensor([1, 0],"float64"), )

[cuda error] paddle.ceil(Tensor([1, 0],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.109830 test begin: paddle.ceil(Tensor([1, 3, 0],"float32"), )

[cuda error] paddle.ceil(Tensor([1, 3, 0],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.143783 test begin: paddle.ceil(Tensor([1, 3, 0],"float64"), )

[cuda error] paddle.ceil(Tensor([1, 3, 0],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.150028 test begin: paddle.ceil(Tensor([2, 0],"float32"), )

[cuda error] paddle.ceil(Tensor([2, 0],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.192531 test begin: paddle.ceil(Tensor([3, 0, 3, 1, 2, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 0, 3, 1, 2, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.237744 test begin: paddle.ceil(Tensor([3, 0, 3, 4, 1, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 0, 3, 4, 1, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.319800 test begin: paddle.ceil(Tensor([3, 6, 0, 1, 2, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 0, 1, 2, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.340775 test begin: paddle.ceil(Tensor([3, 6, 0, 4, 1, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 0, 4, 1, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.412748 test begin: paddle.ceil(Tensor([3, 6, 3, 0, 1, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 3, 0, 1, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.420869 test begin: paddle.ceil(Tensor([3, 6, 3, 0, 2, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 3, 0, 2, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.434019 test begin: paddle.ceil(Tensor([3, 6, 3, 1, 0, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 3, 1, 0, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.440038 test begin: paddle.ceil(Tensor([3, 6, 3, 1, 2, 0],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 3, 1, 2, 0],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.449427 test begin: paddle.ceil(Tensor([3, 6, 3, 4, 0, 5],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 3, 4, 0, 5],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.458445 test begin: paddle.ceil(Tensor([3, 6, 3, 4, 1, 0],"float64"), )

[cuda error] paddle.ceil(Tensor([3, 6, 3, 4, 1, 0],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.462071 test begin: paddle.ceil(x=Tensor([0, 3, 3],"float32"), )

[cuda error] paddle.ceil(x=Tensor([0, 3, 3],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.468998 test begin: paddle.ceil(x=Tensor([0, 3, 3],"float64"), )

[cuda error] paddle.ceil(x=Tensor([0, 3, 3],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.486514 test begin: paddle.ceil(x=Tensor([3, 0, 3],"float32"), )

[cuda error] paddle.ceil(x=Tensor([3, 0, 3],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.510600 test begin: paddle.ceil(x=Tensor([3, 0, 3],"float64"), )

[cuda error] paddle.ceil(x=Tensor([3, 0, 3],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.514928 test begin: paddle.ceil(x=Tensor([3, 3, 0],"float32"), )

[cuda error] paddle.ceil(x=Tensor([3, 3, 0],"float32"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.519631 test begin: paddle.ceil(x=Tensor([3, 3, 0],"float64"), )

[cuda error] paddle.ceil(x=Tensor([3, 3, 0],"float64"), ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:09.526007 test begin: paddle.chunk(Tensor([0, 1, 1, 64],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 1, 1, 64],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.544322 test begin: paddle.chunk(Tensor([0, 1, 64, 64],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 1, 64, 64],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.551306 test begin: paddle.chunk(Tensor([0, 108, 64, 64],"float16"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([0, 108, 64, 64],"float16"), 3, axis=1, )
2025-03-05 15:23:09.566908 test begin: paddle.chunk(Tensor([0, 108, 64, 64],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([0, 108, 64, 64],"float32"), 3, axis=1, )
2025-03-05 15:23:09.573574 test begin: paddle.chunk(Tensor([0, 11, 1024],"float32"), chunks=2, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 11, 1024],"float32"), chunks=2, axis=-1, )
2025-03-05 15:23:09.580715 test begin: paddle.chunk(Tensor([0, 128, 25500],"float32"), 2, axis=1, )

[Pass] paddle.chunk(Tensor([0, 128, 25500],"float32"), 2, axis=1, )
2025-03-05 15:23:09.607395 test begin: paddle.chunk(Tensor([0, 16, 128],"float32"), chunks=2, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 16, 128],"float32"), chunks=2, axis=-1, )
2025-03-05 15:23:09.686012 test begin: paddle.chunk(Tensor([0, 21, 32],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([0, 21, 32],"float32"), 3, axis=1, )
2025-03-05 15:23:09.704984 test begin: paddle.chunk(Tensor([0, 21, 8],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([0, 21, 8],"float32"), 3, axis=1, )
2025-03-05 15:23:09.711083 test begin: paddle.chunk(Tensor([0, 4, 1],"float32"), 4, axis=1, )

[Pass] paddle.chunk(Tensor([0, 4, 1],"float32"), 4, axis=1, )
2025-03-05 15:23:09.716996 test begin: paddle.chunk(Tensor([0, 4, 20, 24],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 4, 20, 24],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.721313 test begin: paddle.chunk(Tensor([0, 4, 7, 24],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 4, 7, 24],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.724576 test begin: paddle.chunk(Tensor([0, 4],"float32"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 4],"float32"), 2, axis=-1, )
2025-03-05 15:23:09.727247 test begin: paddle.chunk(Tensor([0, 56, 72],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([0, 56, 72],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.730057 test begin: paddle.chunk(Tensor([0, 6, 6],"bool"), chunks=3, axis=1, )

[Pass] paddle.chunk(Tensor([0, 6, 6],"bool"), chunks=3, axis=1, )
2025-03-05 15:23:09.733031 test begin: paddle.chunk(Tensor([0, 6, 6],"int32"), chunks=3, axis=1, )

[Pass] paddle.chunk(Tensor([0, 6, 6],"int32"), chunks=3, axis=1, )
2025-03-05 15:23:09.735902 test begin: paddle.chunk(Tensor([1, 0, 1, 64],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 0, 1, 64],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.738872 test begin: paddle.chunk(Tensor([1, 0, 1024],"float32"), chunks=2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 0, 1024],"float32"), chunks=2, axis=-1, )
2025-03-05 15:23:09.742026 test begin: paddle.chunk(Tensor([1, 0, 20, 24],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 0, 20, 24],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.744983 test begin: paddle.chunk(Tensor([1, 0, 64, 64],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 0, 64, 64],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.747435 test begin: paddle.chunk(Tensor([1, 1, 0, 64],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 1, 0, 64],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.749895 test begin: paddle.chunk(Tensor([1, 1, 1, 0],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 1, 1, 0],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.752326 test begin: paddle.chunk(Tensor([1, 1, 64, 0],"float16"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 1, 64, 0],"float16"), 2, axis=-1, )
2025-03-05 15:23:09.754666 test begin: paddle.chunk(Tensor([1, 11, 0],"float32"), chunks=2, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 11, 0],"float32"), chunks=2, axis=-1, )
2025-03-05 15:23:09.757061 test begin: paddle.chunk(Tensor([1, 4, 0, 24],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 4, 0, 24],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.759727 test begin: paddle.chunk(Tensor([1, 4, 20, 0],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([1, 4, 20, 0],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.763192 test begin: paddle.chunk(Tensor([13, 0, 128],"float32"), chunks=2, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 0, 128],"float32"), chunks=2, axis=-1, )
2025-03-05 15:23:09.766275 test begin: paddle.chunk(Tensor([13, 0, 1],"float32"), 4, axis=1, )

[Pass] paddle.chunk(Tensor([13, 0, 1],"float32"), 4, axis=1, )
2025-03-05 15:23:09.769148 test begin: paddle.chunk(Tensor([13, 0, 32],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([13, 0, 32],"float32"), 3, axis=1, )
2025-03-05 15:23:09.772027 test begin: paddle.chunk(Tensor([13, 0, 7, 24],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 0, 7, 24],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.774728 test begin: paddle.chunk(Tensor([13, 0, 72],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 0, 72],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.777574 test begin: paddle.chunk(Tensor([13, 16, 0],"float32"), chunks=2, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 16, 0],"float32"), chunks=2, axis=-1, )
2025-03-05 15:23:09.780130 test begin: paddle.chunk(Tensor([13, 21, 0],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([13, 21, 0],"float32"), 3, axis=1, )
2025-03-05 15:23:09.783051 test begin: paddle.chunk(Tensor([13, 4, 0, 24],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 4, 0, 24],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.786064 test begin: paddle.chunk(Tensor([13, 4, 0],"float32"), 4, axis=1, )

[Pass] paddle.chunk(Tensor([13, 4, 0],"float32"), 4, axis=1, )
2025-03-05 15:23:09.788970 test begin: paddle.chunk(Tensor([13, 4, 7, 0],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 4, 7, 0],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.791636 test begin: paddle.chunk(Tensor([13, 56, 0],"float32"), 3, axis=-1, )

[Pass] paddle.chunk(Tensor([13, 56, 0],"float32"), 3, axis=-1, )
2025-03-05 15:23:09.794217 test begin: paddle.chunk(Tensor([16, 0, 25500],"float32"), 2, axis=1, )

[Pass] paddle.chunk(Tensor([16, 0, 25500],"float32"), 2, axis=1, )
2025-03-05 15:23:09.797547 test begin: paddle.chunk(Tensor([16, 128, 0],"float32"), 2, axis=1, )

[Pass] paddle.chunk(Tensor([16, 128, 0],"float32"), 2, axis=1, )
2025-03-05 15:23:09.800235 test begin: paddle.chunk(Tensor([2048, 0],"float32"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([2048, 0],"float32"), 2, axis=-1, )
2025-03-05 15:23:09.802914 test begin: paddle.chunk(Tensor([4, 0, 64, 64],"float16"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 0, 64, 64],"float16"), 3, axis=1, )
2025-03-05 15:23:09.814531 test begin: paddle.chunk(Tensor([4, 0, 64, 64],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 0, 64, 64],"float32"), 3, axis=1, )
2025-03-05 15:23:09.821169 test begin: paddle.chunk(Tensor([4, 0, 6],"bool"), chunks=3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 0, 6],"bool"), chunks=3, axis=1, )
2025-03-05 15:23:09.847378 test begin: paddle.chunk(Tensor([4, 0, 6],"int32"), chunks=3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 0, 6],"int32"), chunks=3, axis=1, )
2025-03-05 15:23:09.858873 test begin: paddle.chunk(Tensor([4, 108, 0, 64],"float16"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 108, 0, 64],"float16"), 3, axis=1, )
2025-03-05 15:23:09.868343 test begin: paddle.chunk(Tensor([4, 108, 0, 64],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 108, 0, 64],"float32"), 3, axis=1, )
2025-03-05 15:23:09.941525 test begin: paddle.chunk(Tensor([4, 108, 64, 0],"float16"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 108, 64, 0],"float16"), 3, axis=1, )
2025-03-05 15:23:09.972077 test begin: paddle.chunk(Tensor([4, 108, 64, 0],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 108, 64, 0],"float32"), 3, axis=1, )
2025-03-05 15:23:10.001956 test begin: paddle.chunk(Tensor([4, 6, 0],"bool"), chunks=3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 6, 0],"bool"), chunks=3, axis=1, )
2025-03-05 15:23:10.047520 test begin: paddle.chunk(Tensor([4, 6, 0],"int32"), chunks=3, axis=1, )

[Pass] paddle.chunk(Tensor([4, 6, 0],"int32"), chunks=3, axis=1, )
2025-03-05 15:23:10.109238 test begin: paddle.chunk(Tensor([52, 0, 8],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([52, 0, 8],"float32"), 3, axis=1, )
2025-03-05 15:23:10.119800 test begin: paddle.chunk(Tensor([52, 21, 0],"float32"), 3, axis=1, )

[Pass] paddle.chunk(Tensor([52, 21, 0],"float32"), 3, axis=1, )
2025-03-05 15:23:10.173390 test begin: paddle.chunk(Tensor([8192, 0],"float32"), 2, axis=-1, )

[Pass] paddle.chunk(Tensor([8192, 0],"float32"), 2, axis=-1, )
2025-03-05 15:23:10.180465 test begin: paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=-1, )

[Pass] paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=-1, )
2025-03-05 15:23:10.188112 test begin: paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=0, )

[Pass] paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=0, )
2025-03-05 15:23:10.192307 test begin: paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=-1, )

[Pass] paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=-1, )
2025-03-05 15:23:10.197987 test begin: paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=0, )

[Pass] paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=0, )
2025-03-05 15:23:10.201067 test begin: paddle.chunk(x=Tensor([0],"bool"), chunks=3, axis=0, )

[Pass] paddle.chunk(x=Tensor([0],"bool"), chunks=3, axis=0, )
2025-03-05 15:23:10.204293 test begin: paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=-1, )

[Pass] paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=-1, )
2025-03-05 15:23:10.208881 test begin: paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=0, )

[Pass] paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=0, )
2025-03-05 15:23:10.215244 test begin: paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=-1, )

[Pass] paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=-1, )
2025-03-05 15:23:10.218627 test begin: paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=0, )

[Pass] paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=0, )
2025-03-05 15:23:10.221512 test begin: paddle.clip(Tensor([0, 1, 1024],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([0, 1, 1024],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.225543 test begin: paddle.clip(Tensor([0, 1, 128, 128],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([0, 1, 128, 128],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.228058 test begin: paddle.clip(Tensor([0, 1, 1408],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([0, 1, 1408],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.230111 test begin: paddle.clip(Tensor([0, 1, 152, 272],"float16"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([0, 1, 152, 272],"float16"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.232490 test begin: paddle.clip(Tensor([0, 1, 152, 272],"float32"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([0, 1, 152, 272],"float32"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.234520 test begin: paddle.clip(Tensor([0, 1, 1],"float32"), -10000000000.0, 4.135166556742356, )

[cuda error] paddle.clip(Tensor([0, 1, 1],"float32"), -10000000000.0, 4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.237497 test begin: paddle.clip(Tensor([0, 1, 248, 216],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([0, 1, 248, 216],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.240047 test begin: paddle.clip(Tensor([0, 1, 7, 7],"int64"), 0, 13, )

[cuda error] paddle.clip(Tensor([0, 1, 7, 7],"int64"), 0, 13, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.242394 test begin: paddle.clip(Tensor([0, 1024],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([0, 1024],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.245856 test begin: paddle.clip(Tensor([0, 1025, 107],"float32"), min=1e-07, )

[cuda error] paddle.clip(Tensor([0, 1025, 107],"float32"), min=1e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.248007 test begin: paddle.clip(Tensor([0, 107, 1025],"float32"), min=1e-07, )

[cuda error] paddle.clip(Tensor([0, 107, 1025],"float32"), min=1e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.250245 test begin: paddle.clip(Tensor([0, 107136, 1],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([0, 107136, 1],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.252259 test begin: paddle.clip(Tensor([0, 10],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([0, 10],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.255024 test begin: paddle.clip(Tensor([0, 10],"int64"), max=107, )

[cuda error] paddle.clip(Tensor([0, 10],"int64"), max=107, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.257855 test begin: paddle.clip(Tensor([0, 10],"int64"), max=255984, )

[cuda error] paddle.clip(Tensor([0, 10],"int64"), max=255984, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.259936 test begin: paddle.clip(Tensor([0, 10],"int64"), max=31984, )

[cuda error] paddle.clip(Tensor([0, 10],"int64"), max=31984, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.262028 test begin: paddle.clip(Tensor([0, 128],"float32"), -8, 7, )

[cuda error] paddle.clip(Tensor([0, 128],"float32"), -8, 7, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.264381 test begin: paddle.clip(Tensor([0, 13],"int32"), max=16, )

[cuda error] paddle.clip(Tensor([0, 13],"int32"), max=16, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.266566 test begin: paddle.clip(Tensor([0, 157920, 3],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([0, 157920, 3],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.268651 test begin: paddle.clip(Tensor([0, 157920],"int64"), min=0, max=1, )

[cuda error] paddle.clip(Tensor([0, 157920],"int64"), min=0, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.270725 test begin: paddle.clip(Tensor([0, 17, 128, 128],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([0, 17, 128, 128],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.272817 test begin: paddle.clip(Tensor([0, 17, 256, 256],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([0, 17, 256, 256],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.274884 test begin: paddle.clip(Tensor([0, 1],"float32"), max=4.135166556742356, )

[cuda error] paddle.clip(Tensor([0, 1],"float32"), max=4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.276975 test begin: paddle.clip(Tensor([0, 1],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([0, 1],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.278750 test begin: paddle.clip(Tensor([0, 1],"float32"), min=1.0, )

[cuda error] paddle.clip(Tensor([0, 1],"float32"), min=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.280813 test begin: paddle.clip(Tensor([0, 1],"float32"), min=1.1920928955078125e-07, )

[cuda error] paddle.clip(Tensor([0, 1],"float32"), min=1.1920928955078125e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.282983 test begin: paddle.clip(Tensor([0, 2, 1],"float32"), min=1e-06, )

[cuda error] paddle.clip(Tensor([0, 2, 1],"float32"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.284914 test begin: paddle.clip(Tensor([0, 2, 2],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(Tensor([0, 2, 2],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.287476 test begin: paddle.clip(Tensor([0, 256],"float16"), -127, 127, )

[cuda error] paddle.clip(Tensor([0, 256],"float16"), -127, 127, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.290917 test begin: paddle.clip(Tensor([0, 256],"float64"), -127, 127, )

[cuda error] paddle.clip(Tensor([0, 256],"float64"), -127, 127, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.293023 test begin: paddle.clip(Tensor([0, 2730],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([0, 2730],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.294956 test begin: paddle.clip(Tensor([0, 28],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([0, 28],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.296968 test begin: paddle.clip(Tensor([0, 2],"float32"), min=1.1754943508222875e-38, )

[cuda error] paddle.clip(Tensor([0, 2],"float32"), min=1.1754943508222875e-38, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.299189 test begin: paddle.clip(Tensor([0, 2],"float32"), min=1e-06, )

[cuda error] paddle.clip(Tensor([0, 2],"float32"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.301535 test begin: paddle.clip(Tensor([0, 2],"float64"), min=0.0, )

[cuda error] paddle.clip(Tensor([0, 2],"float64"), min=0.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.303450 test begin: paddle.clip(Tensor([0, 2],"float64"), min=1e-06, )

[cuda error] paddle.clip(Tensor([0, 2],"float64"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.305477 test begin: paddle.clip(Tensor([0, 3, 14, 14],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([0, 3, 14, 14],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.307288 test begin: paddle.clip(Tensor([0, 300, 4096],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([0, 300, 4096],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.309115 test begin: paddle.clip(Tensor([0, 32, 100, 2],"float16"), 0, 1, )

[cuda error] paddle.clip(Tensor([0, 32, 100, 2],"float16"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.310875 test begin: paddle.clip(Tensor([0, 32, 100, 2],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([0, 32, 100, 2],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.312961 test begin: paddle.clip(Tensor([0, 32],"int32"), max=16, )

[cuda error] paddle.clip(Tensor([0, 32],"int32"), max=16, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.315001 test begin: paddle.clip(Tensor([0, 3],"float32"), min=1e-05, )

[cuda error] paddle.clip(Tensor([0, 3],"float32"), min=1e-05, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.316762 test begin: paddle.clip(Tensor([0, 4096],"float16"), -126, 126, )

[cuda error] paddle.clip(Tensor([0, 4096],"float16"), -126, 126, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.318776 test begin: paddle.clip(Tensor([0, 499],"float32"), min=1e-10, )

[cuda error] paddle.clip(Tensor([0, 499],"float32"), min=1e-10, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.320759 test begin: paddle.clip(Tensor([0, 4],"float32"), -1, 1, )

[cuda error] paddle.clip(Tensor([0, 4],"float32"), -1, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.322938 test begin: paddle.clip(Tensor([0, 4],"float64"), -1, 1, )

[cuda error] paddle.clip(Tensor([0, 4],"float64"), -1, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.324929 test begin: paddle.clip(Tensor([0, 512],"float32"), -64, 64, )

[cuda error] paddle.clip(Tensor([0, 512],"float32"), -64, 64, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.326778 test begin: paddle.clip(Tensor([0, 7, 1],"int32"), max=83, )

[cuda error] paddle.clip(Tensor([0, 7, 1],"int32"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.329042 test begin: paddle.clip(Tensor([0, 7],"int32"), max=184, )

[cuda error] paddle.clip(Tensor([0, 7],"int32"), max=184, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.331002 test begin: paddle.clip(Tensor([0, 7],"int32"), max=50248, )

[cuda error] paddle.clip(Tensor([0, 7],"int32"), max=50248, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.333179 test begin: paddle.clip(Tensor([0, 7],"int32"), max=65, )

[cuda error] paddle.clip(Tensor([0, 7],"int32"), max=65, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.335280 test begin: paddle.clip(Tensor([0, 7],"int32"), max=83, )

[cuda error] paddle.clip(Tensor([0, 7],"int32"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.337168 test begin: paddle.clip(Tensor([0, 7],"int32"), max=84, )

[cuda error] paddle.clip(Tensor([0, 7],"int32"), max=84, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.340184 test begin: paddle.clip(Tensor([0, 7],"int64"), 3, )

[cuda error] paddle.clip(Tensor([0, 7],"int64"), 3, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.342175 test begin: paddle.clip(Tensor([0, 7],"int64"), max=240, )

[cuda error] paddle.clip(Tensor([0, 7],"int64"), max=240, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.344424 test begin: paddle.clip(Tensor([0, 7],"int64"), max=83, )

[cuda error] paddle.clip(Tensor([0, 7],"int64"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.346579 test begin: paddle.clip(Tensor([0, 7],"int64"), min=0, max=127, )

[cuda error] paddle.clip(Tensor([0, 7],"int64"), min=0, max=127, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.348709 test begin: paddle.clip(Tensor([0, 8, 8],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([0, 8, 8],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.350419 test begin: paddle.clip(Tensor([0, 8],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([0, 8],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.352772 test begin: paddle.clip(Tensor([0],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([0],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.356025 test begin: paddle.clip(Tensor([0],"float32"), max=22400, )

[cuda error] paddle.clip(Tensor([0],"float32"), max=22400, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.358166 test begin: paddle.clip(Tensor([0],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([0],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.360195 test begin: paddle.clip(Tensor([0],"float32"), min=0.001, max=100.0, )

[cuda error] paddle.clip(Tensor([0],"float32"), min=0.001, max=100.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.362220 test begin: paddle.clip(Tensor([0],"float32"), min=1, )

[cuda error] paddle.clip(Tensor([0],"float32"), min=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.364133 test begin: paddle.clip(Tensor([0],"float32"), min=1.0, )

[cuda error] paddle.clip(Tensor([0],"float32"), min=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.365958 test begin: paddle.clip(Tensor([0],"float32"), min=1.1754943508222875e-38, )

[cuda error] paddle.clip(Tensor([0],"float32"), min=1.1754943508222875e-38, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.367735 test begin: paddle.clip(Tensor([0],"float64"), min=0.0, )

[cuda error] paddle.clip(Tensor([0],"float64"), min=0.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.369507 test begin: paddle.clip(Tensor([0],"int64"), min=1, )

[cuda error] paddle.clip(Tensor([0],"int64"), min=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.371352 test begin: paddle.clip(Tensor([1, 0, 1024],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([1, 0, 1024],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.373374 test begin: paddle.clip(Tensor([1, 0, 1408],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([1, 0, 1408],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.376309 test begin: paddle.clip(Tensor([1, 0, 2],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(Tensor([1, 0, 2],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.378290 test begin: paddle.clip(Tensor([1, 0, 4096],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([1, 0, 4096],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.380670 test begin: paddle.clip(Tensor([1, 0, 7, 7],"int64"), 0, 13, )

[cuda error] paddle.clip(Tensor([1, 0, 7, 7],"int64"), 0, 13, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.382752 test begin: paddle.clip(Tensor([1, 0],"float32"), min=1.1754943508222875e-38, )

[cuda error] paddle.clip(Tensor([1, 0],"float32"), min=1.1754943508222875e-38, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.384465 test begin: paddle.clip(Tensor([1, 0],"float32"), min=1e-05, )

[cuda error] paddle.clip(Tensor([1, 0],"float32"), min=1e-05, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.386283 test begin: paddle.clip(Tensor([1, 1, 0, 7],"int64"), 0, 13, )

[cuda error] paddle.clip(Tensor([1, 1, 0, 7],"int64"), 0, 13, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.388115 test begin: paddle.clip(Tensor([1, 1, 0],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([1, 1, 0],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.390804 test begin: paddle.clip(Tensor([1, 1, 7, 0],"int64"), 0, 13, )

[cuda error] paddle.clip(Tensor([1, 1, 7, 0],"int64"), 0, 13, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.393060 test begin: paddle.clip(Tensor([1, 2, 0],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(Tensor([1, 2, 0],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.395045 test begin: paddle.clip(Tensor([1, 300, 0],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([1, 300, 0],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.397142 test begin: paddle.clip(Tensor([10, 0, 1],"float32"), min=1e-06, )

[cuda error] paddle.clip(Tensor([10, 0, 1],"float32"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.399019 test begin: paddle.clip(Tensor([10, 0],"float32"), min=1e-05, )

[cuda error] paddle.clip(Tensor([10, 0],"float32"), min=1e-05, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.400862 test begin: paddle.clip(Tensor([10, 0],"float32"), min=1e-06, )

[cuda error] paddle.clip(Tensor([10, 0],"float32"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.402698 test begin: paddle.clip(Tensor([10, 0],"float64"), min=1e-06, )

[cuda error] paddle.clip(Tensor([10, 0],"float64"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.404755 test begin: paddle.clip(Tensor([10, 2, 0],"float32"), min=1e-06, )

[cuda error] paddle.clip(Tensor([10, 2, 0],"float32"), min=1e-06, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.406883 test begin: paddle.clip(Tensor([1024, 0],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([1024, 0],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.408832 test begin: paddle.clip(Tensor([11, 0, 1],"float32"), -10000000000.0, 4.135166556742356, )

[cuda error] paddle.clip(Tensor([11, 0, 1],"float32"), -10000000000.0, 4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.410793 test begin: paddle.clip(Tensor([11, 1, 0],"float32"), -10000000000.0, 4.135166556742356, )

[cuda error] paddle.clip(Tensor([11, 1, 0],"float32"), -10000000000.0, 4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.412778 test begin: paddle.clip(Tensor([12, 0],"int32"), max=83, )

[cuda error] paddle.clip(Tensor([12, 0],"int32"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.414869 test begin: paddle.clip(Tensor([12, 0],"int64"), max=83, )

[cuda error] paddle.clip(Tensor([12, 0],"int64"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.416869 test begin: paddle.clip(Tensor([128, 0],"float32"), -8, 7, )

[cuda error] paddle.clip(Tensor([128, 0],"float32"), -8, 7, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.418703 test begin: paddle.clip(Tensor([13, 0, 1],"int32"), max=83, )

[cuda error] paddle.clip(Tensor([13, 0, 1],"int32"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.420722 test begin: paddle.clip(Tensor([13, 0],"int32"), max=16, )

[cuda error] paddle.clip(Tensor([13, 0],"int32"), max=16, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.422934 test begin: paddle.clip(Tensor([13, 0],"int32"), max=50248, )

[cuda error] paddle.clip(Tensor([13, 0],"int32"), max=50248, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.424804 test begin: paddle.clip(Tensor([13, 0],"int32"), max=65, )

[cuda error] paddle.clip(Tensor([13, 0],"int32"), max=65, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.426664 test begin: paddle.clip(Tensor([13, 0],"int32"), max=84, )

[cuda error] paddle.clip(Tensor([13, 0],"int32"), max=84, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.428559 test begin: paddle.clip(Tensor([13, 0],"int64"), 3, )

[cuda error] paddle.clip(Tensor([13, 0],"int64"), 3, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.430613 test begin: paddle.clip(Tensor([13, 0],"int64"), min=0, max=127, )

[cuda error] paddle.clip(Tensor([13, 0],"int64"), min=0, max=127, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.432611 test begin: paddle.clip(Tensor([13, 7, 0],"int32"), max=83, )

[cuda error] paddle.clip(Tensor([13, 7, 0],"int32"), max=83, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.434494 test begin: paddle.clip(Tensor([14, 0],"int64"), max=240, )

[cuda error] paddle.clip(Tensor([14, 0],"int64"), max=240, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.436393 test begin: paddle.clip(Tensor([16, 0, 1025],"float32"), min=1e-07, )

[cuda error] paddle.clip(Tensor([16, 0, 1025],"float32"), min=1e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.438374 test begin: paddle.clip(Tensor([16, 0, 107],"float32"), min=1e-07, )

[cuda error] paddle.clip(Tensor([16, 0, 107],"float32"), min=1e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.440228 test begin: paddle.clip(Tensor([16, 0],"float16"), -127, 127, )

[cuda error] paddle.clip(Tensor([16, 0],"float16"), -127, 127, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.442083 test begin: paddle.clip(Tensor([16, 0],"float64"), -127, 127, )

[cuda error] paddle.clip(Tensor([16, 0],"float64"), -127, 127, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.444017 test begin: paddle.clip(Tensor([16, 1025, 0],"float32"), min=1e-07, )

[cuda error] paddle.clip(Tensor([16, 1025, 0],"float32"), min=1e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.446014 test begin: paddle.clip(Tensor([16, 107, 0],"float32"), min=1e-07, )

[cuda error] paddle.clip(Tensor([16, 107, 0],"float32"), min=1e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.448457 test begin: paddle.clip(Tensor([192, 0, 14, 14],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([192, 0, 14, 14],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.450642 test begin: paddle.clip(Tensor([192, 3, 0, 14],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([192, 3, 0, 14],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.452571 test begin: paddle.clip(Tensor([192, 3, 14, 0],"float32"), min=-2, max=2, )

[cuda error] paddle.clip(Tensor([192, 3, 14, 0],"float32"), min=-2, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.454434 test begin: paddle.clip(Tensor([2, 0, 1],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([2, 0, 1],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.456341 test begin: paddle.clip(Tensor([2, 0, 2],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(Tensor([2, 0, 2],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.458047 test begin: paddle.clip(Tensor([2, 0, 8],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([2, 0, 8],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.459785 test begin: paddle.clip(Tensor([2, 0],"float16"), -126, 126, )

[cuda error] paddle.clip(Tensor([2, 0],"float16"), -126, 126, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.461469 test begin: paddle.clip(Tensor([2, 0],"float32"), min=1.0, )

[cuda error] paddle.clip(Tensor([2, 0],"float32"), min=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.463257 test begin: paddle.clip(Tensor([2, 0],"float32"), min=1.1754943508222875e-38, )

[cuda error] paddle.clip(Tensor([2, 0],"float32"), min=1.1754943508222875e-38, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.465003 test begin: paddle.clip(Tensor([2, 0],"int32"), max=184, )

[cuda error] paddle.clip(Tensor([2, 0],"int32"), max=184, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.467055 test begin: paddle.clip(Tensor([2, 0],"int64"), max=107, )

[cuda error] paddle.clip(Tensor([2, 0],"int64"), max=107, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.468833 test begin: paddle.clip(Tensor([2, 0],"int64"), max=255984, )

[cuda error] paddle.clip(Tensor([2, 0],"int64"), max=255984, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.472127 test begin: paddle.clip(Tensor([2, 0],"int64"), max=31984, )

[cuda error] paddle.clip(Tensor([2, 0],"int64"), max=31984, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.474434 test begin: paddle.clip(Tensor([2, 107136, 0],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([2, 107136, 0],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.476474 test begin: paddle.clip(Tensor([2, 2, 0],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(Tensor([2, 2, 0],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.478443 test begin: paddle.clip(Tensor([2, 8, 0],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([2, 8, 0],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.480280 test begin: paddle.clip(Tensor([20, 0, 152, 272],"float16"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([20, 0, 152, 272],"float16"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.481955 test begin: paddle.clip(Tensor([20, 0, 152, 272],"float32"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([20, 0, 152, 272],"float32"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.483870 test begin: paddle.clip(Tensor([20, 0],"float32"), min=1.1920928955078125e-07, )

[cuda error] paddle.clip(Tensor([20, 0],"float32"), min=1.1920928955078125e-07, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.486889 test begin: paddle.clip(Tensor([20, 1, 0, 272],"float16"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([20, 1, 0, 272],"float16"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.488885 test begin: paddle.clip(Tensor([20, 1, 0, 272],"float32"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([20, 1, 0, 272],"float32"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.490805 test begin: paddle.clip(Tensor([20, 1, 152, 0],"float16"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([20, 1, 152, 0],"float16"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.492496 test begin: paddle.clip(Tensor([20, 1, 152, 0],"float32"), 0.0001, 0.9999, )

[cuda error] paddle.clip(Tensor([20, 1, 152, 0],"float32"), 0.0001, 0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.494265 test begin: paddle.clip(Tensor([2048, 0],"float32"), max=4.135166556742356, )

[cuda error] paddle.clip(Tensor([2048, 0],"float32"), max=4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.496325 test begin: paddle.clip(Tensor([21, 0, 1],"float32"), -10000000000.0, 4.135166556742356, )

[cuda error] paddle.clip(Tensor([21, 0, 1],"float32"), -10000000000.0, 4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.498211 test begin: paddle.clip(Tensor([21, 1, 0],"float32"), -10000000000.0, 4.135166556742356, )

[cuda error] paddle.clip(Tensor([21, 1, 0],"float32"), -10000000000.0, 4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.500280 test begin: paddle.clip(Tensor([24, 0, 128, 128],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([24, 0, 128, 128],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.503195 test begin: paddle.clip(Tensor([24, 0, 256, 256],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([24, 0, 256, 256],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.505381 test begin: paddle.clip(Tensor([24, 17, 0, 128],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([24, 17, 0, 128],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.507471 test begin: paddle.clip(Tensor([24, 17, 0, 256],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([24, 17, 0, 256],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.509510 test begin: paddle.clip(Tensor([24, 17, 128, 0],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([24, 17, 128, 0],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.511512 test begin: paddle.clip(Tensor([24, 17, 256, 0],"float64"), min=0, max=2, )

[cuda error] paddle.clip(Tensor([24, 17, 256, 0],"float64"), min=0, max=2, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.513457 test begin: paddle.clip(Tensor([28, 0],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([28, 0],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.515371 test begin: paddle.clip(Tensor([4, 0, 128, 128],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([4, 0, 128, 128],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.517403 test begin: paddle.clip(Tensor([4, 0, 248, 216],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([4, 0, 248, 216],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.519187 test begin: paddle.clip(Tensor([4, 0, 3],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([4, 0, 3],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.521263 test begin: paddle.clip(Tensor([4, 0],"float32"), -1, 1, )

[cuda error] paddle.clip(Tensor([4, 0],"float32"), -1, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.523201 test begin: paddle.clip(Tensor([4, 0],"float32"), min=1.0, )

[cuda error] paddle.clip(Tensor([4, 0],"float32"), min=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.525092 test begin: paddle.clip(Tensor([4, 0],"float64"), -1, 1, )

[cuda error] paddle.clip(Tensor([4, 0],"float64"), -1, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.527935 test begin: paddle.clip(Tensor([4, 0],"int64"), min=0, max=1, )

[cuda error] paddle.clip(Tensor([4, 0],"int64"), min=0, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.529886 test begin: paddle.clip(Tensor([4, 1, 0, 128],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([4, 1, 0, 128],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.531659 test begin: paddle.clip(Tensor([4, 1, 0, 216],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([4, 1, 0, 216],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.533628 test begin: paddle.clip(Tensor([4, 1, 128, 0],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([4, 1, 128, 0],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.535648 test begin: paddle.clip(Tensor([4, 1, 248, 0],"float32"), min=0.0001, max=0.9999, )

[cuda error] paddle.clip(Tensor([4, 1, 248, 0],"float32"), min=0.0001, max=0.9999, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.537741 test begin: paddle.clip(Tensor([4, 157920, 0],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([4, 157920, 0],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.539433 test begin: paddle.clip(Tensor([5, 0],"float64"), min=0.0, )

[cuda error] paddle.clip(Tensor([5, 0],"float64"), min=0.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.542181 test begin: paddle.clip(Tensor([512, 0, 100, 2],"float16"), 0, 1, )

[cuda error] paddle.clip(Tensor([512, 0, 100, 2],"float16"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.544233 test begin: paddle.clip(Tensor([512, 0, 100, 2],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([512, 0, 100, 2],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.545978 test begin: paddle.clip(Tensor([512, 0],"float32"), -64, 64, )

[cuda error] paddle.clip(Tensor([512, 0],"float32"), -64, 64, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.547777 test begin: paddle.clip(Tensor([512, 0],"float32"), max=4.135166556742356, )

[cuda error] paddle.clip(Tensor([512, 0],"float32"), max=4.135166556742356, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.549764 test begin: paddle.clip(Tensor([512, 32, 0, 2],"float16"), 0, 1, )

[cuda error] paddle.clip(Tensor([512, 32, 0, 2],"float16"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.552338 test begin: paddle.clip(Tensor([512, 32, 0, 2],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([512, 32, 0, 2],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.554382 test begin: paddle.clip(Tensor([512, 32, 100, 0],"float16"), 0, 1, )

[cuda error] paddle.clip(Tensor([512, 32, 100, 0],"float16"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.556556 test begin: paddle.clip(Tensor([512, 32, 100, 0],"float32"), 0, 1, )

[cuda error] paddle.clip(Tensor([512, 32, 100, 0],"float32"), 0, 1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.558633 test begin: paddle.clip(Tensor([52640, 0],"float32"), min=0, )

[cuda error] paddle.clip(Tensor([52640, 0],"float32"), min=0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.560760 test begin: paddle.clip(Tensor([8, 0],"float32"), 0.0, 1.0, )

[cuda error] paddle.clip(Tensor([8, 0],"float32"), 0.0, 1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.562992 test begin: paddle.clip(Tensor([80, 0],"float32"), min=1e-10, )

[cuda error] paddle.clip(Tensor([80, 0],"float32"), min=1e-10, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.564863 test begin: paddle.clip(x=Tensor([0, 10, 10],"float64"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([0, 10, 10],"float64"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.567093 test begin: paddle.clip(x=Tensor([0, 10],"float32"), min=-0.1, max=0.8, )

[cuda error] paddle.clip(x=Tensor([0, 10],"float32"), min=-0.1, max=0.8, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.568990 test begin: paddle.clip(x=Tensor([0, 10],"float32"), min=-0.6, max=0.6, )

[cuda error] paddle.clip(x=Tensor([0, 10],"float32"), min=-0.6, max=0.6, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.570855 test begin: paddle.clip(x=Tensor([0, 10],"float64"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([0, 10],"float64"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.572737 test begin: paddle.clip(x=Tensor([0, 10],"float64"), min=-2.0, max=-1.0, )

[cuda error] paddle.clip(x=Tensor([0, 10],"float64"), min=-2.0, max=-1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.575452 test begin: paddle.clip(x=Tensor([0, 10],"float64"), min=2.0, max=2.0, )

[cuda error] paddle.clip(x=Tensor([0, 10],"float64"), min=2.0, max=2.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.577413 test begin: paddle.clip(x=Tensor([0, 1248],"float16"), min=0, max=1, )

[cuda error] paddle.clip(x=Tensor([0, 1248],"float16"), min=0, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.580198 test begin: paddle.clip(x=Tensor([0, 1248],"float32"), min=0, max=1, )

[cuda error] paddle.clip(x=Tensor([0, 1248],"float32"), min=0, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.582310 test begin: paddle.clip(x=Tensor([0, 16],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([0, 16],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.584181 test begin: paddle.clip(x=Tensor([0, 2, 3],"float32"), min=None, max=1, )

[cuda error] paddle.clip(x=Tensor([0, 2, 3],"float32"), min=None, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.586005 test begin: paddle.clip(x=Tensor([0, 2, 3],"float64"), min=None, max=1, )

[cuda error] paddle.clip(x=Tensor([0, 2, 3],"float64"), min=None, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.588042 test begin: paddle.clip(x=Tensor([0, 3, 3],"float32"), min=None, max=5, )

[cuda error] paddle.clip(x=Tensor([0, 3, 3],"float32"), min=None, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.590148 test begin: paddle.clip(x=Tensor([0, 3, 3],"float64"), min=None, max=5, )

[cuda error] paddle.clip(x=Tensor([0, 3, 3],"float64"), min=None, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.591987 test begin: paddle.clip(x=Tensor([0, 3],"float32"), min=-5.0, max=5.0, )

[cuda error] paddle.clip(x=Tensor([0, 3],"float32"), min=-5.0, max=5.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.593885 test begin: paddle.clip(x=Tensor([0, 3],"float64"), min=-5.0, max=5.0, )

[cuda error] paddle.clip(x=Tensor([0, 3],"float64"), min=-5.0, max=5.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.595658 test begin: paddle.clip(x=Tensor([0, 3],"float64"), min=0.0, max=5, )

[cuda error] paddle.clip(x=Tensor([0, 3],"float64"), min=0.0, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.597431 test begin: paddle.clip(x=Tensor([0, 3],"float64"), min=1.0, max=None, )

[cuda error] paddle.clip(x=Tensor([0, 3],"float64"), min=1.0, max=None, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.599279 test begin: paddle.clip(x=Tensor([0, 3],"float64"), min=5, max=None, )

[cuda error] paddle.clip(x=Tensor([0, 3],"float64"), min=5, max=None, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.601296 test begin: paddle.clip(x=Tensor([0, 8, 16],"float32"), min=0.0, max=0.0, )

[cuda error] paddle.clip(x=Tensor([0, 8, 16],"float32"), min=0.0, max=0.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.603184 test begin: paddle.clip(x=Tensor([0],"float32"), min=-0.1, max=0.1, )

[cuda error] paddle.clip(x=Tensor([0],"float32"), min=-0.1, max=0.1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.604939 test begin: paddle.clip(x=Tensor([0],"float64"), min=2.0, max=2.0, )

[cuda error] paddle.clip(x=Tensor([0],"float64"), min=2.0, max=2.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.606943 test begin: paddle.clip(x=Tensor([0],"float64"), min=None, max=-1, )

[cuda error] paddle.clip(x=Tensor([0],"float64"), min=None, max=-1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.609596 test begin: paddle.clip(x=Tensor([1, 0, 3],"float32"), min=None, max=1, )

[cuda error] paddle.clip(x=Tensor([1, 0, 3],"float32"), min=None, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.612301 test begin: paddle.clip(x=Tensor([1, 0, 3],"float64"), min=None, max=1, )

[cuda error] paddle.clip(x=Tensor([1, 0, 3],"float64"), min=None, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.614943 test begin: paddle.clip(x=Tensor([1, 2, 0],"float32"), min=None, max=1, )

[cuda error] paddle.clip(x=Tensor([1, 2, 0],"float32"), min=None, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.616765 test begin: paddle.clip(x=Tensor([1, 2, 0],"float64"), min=None, max=1, )

[cuda error] paddle.clip(x=Tensor([1, 2, 0],"float64"), min=None, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.618942 test begin: paddle.clip(x=Tensor([10, 0],"float32"), min=-0.1, max=0.8, )

[cuda error] paddle.clip(x=Tensor([10, 0],"float32"), min=-0.1, max=0.8, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.620746 test begin: paddle.clip(x=Tensor([10, 0],"float32"), min=-0.6, max=0.6, )

[cuda error] paddle.clip(x=Tensor([10, 0],"float32"), min=-0.6, max=0.6, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.623904 test begin: paddle.clip(x=Tensor([10, 0],"float64"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([10, 0],"float64"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.678737 test begin: paddle.clip(x=Tensor([10, 0],"float64"), min=-2.0, max=-1.0, )

[cuda error] paddle.clip(x=Tensor([10, 0],"float64"), min=-2.0, max=-1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.731809 test begin: paddle.clip(x=Tensor([10, 0],"float64"), min=2.0, max=2.0, )

[cuda error] paddle.clip(x=Tensor([10, 0],"float64"), min=2.0, max=2.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.747167 test begin: paddle.clip(x=Tensor([16, 0],"float32"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([16, 0],"float32"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.850976 test begin: paddle.clip(x=Tensor([3, 0, 3],"float32"), min=None, max=5, )

[cuda error] paddle.clip(x=Tensor([3, 0, 3],"float32"), min=None, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.893926 test begin: paddle.clip(x=Tensor([3, 0, 3],"float64"), min=None, max=5, )

[cuda error] paddle.clip(x=Tensor([3, 0, 3],"float64"), min=None, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.899552 test begin: paddle.clip(x=Tensor([3, 0],"float32"), min=-5.0, max=5.0, )

[cuda error] paddle.clip(x=Tensor([3, 0],"float32"), min=-5.0, max=5.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.902068 test begin: paddle.clip(x=Tensor([3, 0],"float64"), min=-5.0, max=5.0, )

[cuda error] paddle.clip(x=Tensor([3, 0],"float64"), min=-5.0, max=5.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.904307 test begin: paddle.clip(x=Tensor([3, 0],"float64"), min=0.0, max=5, )

[cuda error] paddle.clip(x=Tensor([3, 0],"float64"), min=0.0, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.907035 test begin: paddle.clip(x=Tensor([3, 0],"float64"), min=1.0, max=None, )

[cuda error] paddle.clip(x=Tensor([3, 0],"float64"), min=1.0, max=None, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.908969 test begin: paddle.clip(x=Tensor([3, 0],"float64"), min=5, max=None, )

[cuda error] paddle.clip(x=Tensor([3, 0],"float64"), min=5, max=None, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.910863 test begin: paddle.clip(x=Tensor([3, 3, 0],"float32"), min=None, max=5, )

[cuda error] paddle.clip(x=Tensor([3, 3, 0],"float32"), min=None, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.913651 test begin: paddle.clip(x=Tensor([3, 3, 0],"float64"), min=None, max=5, )

[cuda error] paddle.clip(x=Tensor([3, 3, 0],"float64"), min=None, max=5, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.915437 test begin: paddle.clip(x=Tensor([4, 0, 10],"float64"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([4, 0, 10],"float64"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.917476 test begin: paddle.clip(x=Tensor([4, 0, 16],"float32"), min=0.0, max=0.0, )

[cuda error] paddle.clip(x=Tensor([4, 0, 16],"float32"), min=0.0, max=0.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.920363 test begin: paddle.clip(x=Tensor([4, 10, 0],"float64"), min=-1.0, max=1.0, )

[cuda error] paddle.clip(x=Tensor([4, 10, 0],"float64"), min=-1.0, max=1.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.922234 test begin: paddle.clip(x=Tensor([4, 8, 0],"float32"), min=0.0, max=0.0, )

[cuda error] paddle.clip(x=Tensor([4, 8, 0],"float32"), min=0.0, max=0.0, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.924081 test begin: paddle.clip(x=Tensor([512, 0],"float16"), min=0, max=1, )

[cuda error] paddle.clip(x=Tensor([512, 0],"float16"), min=0, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.926933 test begin: paddle.clip(x=Tensor([512, 0],"float32"), min=0, max=1, )

[cuda error] paddle.clip(x=Tensor([512, 0],"float32"), min=0, max=1, ) 
 (External) CUDA error(9), invalid configuration argument. 
  [Hint: 'cudaErrorInvalidConfiguration'. This indicates that a kernel launch is requesting resources that can never be satisfied by the current device. Requestingmore shared memory per block than the device supports will trigger this error, as will requesting too many threads or blocks.See cudaDeviceProp for more device limitations.] (at ../paddle/fluid/pybind/eager_functions.cc:1388)

2025-03-05 15:23:10.928794 test begin: paddle.clone(Tensor([0, 100, 256],"float32"), )

[Pass] paddle.clone(Tensor([0, 100, 256],"float32"), )
2025-03-05 15:23:10.933106 test begin: paddle.clone(Tensor([0, 100, 4],"float32"), )

[Pass] paddle.clone(Tensor([0, 100, 4],"float32"), )
2025-03-05 15:23:10.936332 test begin: paddle.clone(Tensor([0, 1024, 48, 72],"float32"), )

[Pass] paddle.clone(Tensor([0, 1024, 48, 72],"float32"), )
2025-03-05 15:23:10.939301 test begin: paddle.clone(Tensor([0, 12, 1, 64],"float32"), )

[Pass] paddle.clone(Tensor([0, 12, 1, 64],"float32"), )
2025-03-05 15:23:10.946090 test begin: paddle.clone(Tensor([0, 2541],"bool"), )

[Pass] paddle.clone(Tensor([0, 2541],"bool"), )
2025-03-05 15:23:10.950699 test begin: paddle.clone(Tensor([0, 3, 96, 96, 1],"float32"), )

[Pass] paddle.clone(Tensor([0, 3, 96, 96, 1],"float32"), )
2025-03-05 15:23:10.956519 test begin: paddle.clone(Tensor([0, 4],"float32"), )

[Pass] paddle.clone(Tensor([0, 4],"float32"), )
2025-03-05 15:23:10.963746 test begin: paddle.clone(Tensor([0],"float32"), )

[Pass] paddle.clone(Tensor([0],"float32"), )
2025-03-05 15:23:10.969861 test begin: paddle.clone(Tensor([0],"int32"), )

[Pass] paddle.clone(Tensor([0],"int32"), )
2025-03-05 15:23:10.976321 test begin: paddle.clone(Tensor([1, 0, 1, 64],"float32"), )

[Pass] paddle.clone(Tensor([1, 0, 1, 64],"float32"), )
2025-03-05 15:23:10.982212 test begin: paddle.clone(Tensor([1, 0, 256],"float32"), )

[Pass] paddle.clone(Tensor([1, 0, 256],"float32"), )
2025-03-05 15:23:10.989862 test begin: paddle.clone(Tensor([1, 0, 48, 72],"float32"), )

[Pass] paddle.clone(Tensor([1, 0, 48, 72],"float32"), )
2025-03-05 15:23:10.991916 test begin: paddle.clone(Tensor([1, 0, 4],"float32"), )

[Pass] paddle.clone(Tensor([1, 0, 4],"float32"), )
2025-03-05 15:23:10.993942 test begin: paddle.clone(Tensor([1, 0, 96, 96, 1],"float32"), )

[Pass] paddle.clone(Tensor([1, 0, 96, 96, 1],"float32"), )
2025-03-05 15:23:10.996042 test begin: paddle.clone(Tensor([1, 0],"bool"), )

[Pass] paddle.clone(Tensor([1, 0],"bool"), )
2025-03-05 15:23:10.997965 test begin: paddle.clone(Tensor([1, 0],"float32"), )

[Pass] paddle.clone(Tensor([1, 0],"float32"), )
2025-03-05 15:23:11.000325 test begin: paddle.clone(Tensor([1, 100, 0],"float32"), )

[Pass] paddle.clone(Tensor([1, 100, 0],"float32"), )
2025-03-05 15:23:11.003956 test begin: paddle.clone(Tensor([1, 1024, 0, 72],"float32"), )

[Pass] paddle.clone(Tensor([1, 1024, 0, 72],"float32"), )
2025-03-05 15:23:11.006427 test begin: paddle.clone(Tensor([1, 1024, 48, 0],"float32"), )

[Pass] paddle.clone(Tensor([1, 1024, 48, 0],"float32"), )
2025-03-05 15:23:11.008850 test begin: paddle.clone(Tensor([1, 12, 0, 64],"float32"), )

[Pass] paddle.clone(Tensor([1, 12, 0, 64],"float32"), )
2025-03-05 15:23:11.010987 test begin: paddle.clone(Tensor([1, 12, 1, 0],"float32"), )

[Pass] paddle.clone(Tensor([1, 12, 1, 0],"float32"), )
2025-03-05 15:23:11.013069 test begin: paddle.clone(Tensor([1, 3, 0, 96, 1],"float32"), )

[Pass] paddle.clone(Tensor([1, 3, 0, 96, 1],"float32"), )
2025-03-05 15:23:11.015121 test begin: paddle.clone(Tensor([1, 3, 96, 0, 1],"float32"), )

[Pass] paddle.clone(Tensor([1, 3, 96, 0, 1],"float32"), )
2025-03-05 15:23:11.017144 test begin: paddle.clone(Tensor([1, 3, 96, 96, 0],"float32"), )

[Pass] paddle.clone(Tensor([1, 3, 96, 96, 0],"float32"), )
2025-03-05 15:23:11.019391 test begin: paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.022486 test begin: paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.024114 test begin: paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.026159 test begin: paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.028098 test begin: paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.029438 test begin: paddle.column_stack(list[Tensor([0, 1, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.031266 test begin: paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.033458 test begin: paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.035314 test begin: paddle.column_stack(list[Tensor([0, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.037606 test begin: paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.039677 test begin: paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 3 for tensor number 1 in the list.
2025-03-05 15:23:11.040876 test begin: paddle.column_stack(list[Tensor([0, 2],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 2],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.042669 test begin: paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.044557 test begin: paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 3 for tensor number 1 in the list.
2025-03-05 15:23:11.045828 test begin: paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.047610 test begin: paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.049424 test begin: paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 3 for tensor number 1 in the list.
2025-03-05 15:23:11.050747 test begin: paddle.column_stack(list[Tensor([0, 4, 2],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0, 4, 2],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.052546 test begin: paddle.column_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.055381 test begin: paddle.column_stack(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.056597 test begin: paddle.column_stack(list[Tensor([0],"float64"),Tensor([2, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0],"float64"),Tensor([2, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 2 for tensor number 1 in the list.
2025-03-05 15:23:11.057394 test begin: paddle.column_stack(list[Tensor([0],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([0],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 5 for tensor number 1 in the list.
2025-03-05 15:23:11.058295 test begin: paddle.column_stack(list[Tensor([0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.061188 test begin: paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.063149 test begin: paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
2025-03-05 15:23:11.066313 test begin: paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.067773 test begin: paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.069767 test begin: paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
2025-03-05 15:23:11.072813 test begin: paddle.column_stack(list[Tensor([1, 0, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.074222 test begin: paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.076131 test begin: paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
2025-03-05 15:23:11.079039 test begin: paddle.column_stack(list[Tensor([1, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.080404 test begin: paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.082335 test begin: paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.083551 test begin: paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.085568 test begin: paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.088536 test begin: paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.090093 test begin: paddle.column_stack(list[Tensor([1, 1, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.092149 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.094828 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:23:11.096250 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.098344 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.099769 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
2025-03-05 15:23:11.102787 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.104289 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.105335 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.106249 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
2025-03-05 15:23:11.108802 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.109858 test begin: paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.110773 test begin: paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.111578 test begin: paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
2025-03-05 15:23:11.114150 test begin: paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.115158 test begin: paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.115993 test begin: paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
2025-03-05 15:23:11.118355 test begin: paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.119382 test begin: paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.120196 test begin: paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], )
2025-03-05 15:23:11.122434 test begin: paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.123447 test begin: paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], )
2025-03-05 15:23:11.125780 test begin: paddle.column_stack(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.126849 test begin: paddle.column_stack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.127656 test begin: paddle.column_stack(list[Tensor([2],"float64"),Tensor([0, 1],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([2],"float64"),Tensor([0, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 2 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.128347 test begin: paddle.column_stack(list[Tensor([2],"float64"),Tensor([2, 0],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([2],"float64"),Tensor([2, 0],"float64"),], )
2025-03-05 15:23:11.130593 test begin: paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.132123 test begin: paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
2025-03-05 15:23:11.135007 test begin: paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.136307 test begin: paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.138053 test begin: paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
2025-03-05 15:23:11.140518 test begin: paddle.column_stack(list[Tensor([3, 0, 2],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 0, 2],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.141798 test begin: paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.143699 test begin: paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
2025-03-05 15:23:11.146156 test begin: paddle.column_stack(list[Tensor([3, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.147442 test begin: paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 3 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.148479 test begin: paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),], )
2025-03-05 15:23:11.150731 test begin: paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 3 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.151742 test begin: paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),], )
2025-03-05 15:23:11.154186 test begin: paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.155732 test begin: paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 2 for tensor number 1 in the list.
2025-03-05 15:23:11.156805 test begin: paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.158705 test begin: paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.160471 test begin: paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 2 for tensor number 1 in the list.
2025-03-05 15:23:11.161540 test begin: paddle.column_stack(list[Tensor([3, 4, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 4, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.163368 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.165274 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 0 but got size 5 for tensor number 1 in the list.
2025-03-05 15:23:11.166336 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),], )

[paddle error] paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:23:11.168023 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 3 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.169083 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
2025-03-05 15:23:11.171400 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 2 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.172488 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 5 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.173329 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 3 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.174129 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
2025-03-05 15:23:11.176479 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 2 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.177546 test begin: paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 0],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 5 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.178397 test begin: paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 3 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.179227 test begin: paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
2025-03-05 15:23:11.181742 test begin: paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 2 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.182821 test begin: paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 3 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.183660 test begin: paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),], )

[Pass] paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
2025-03-05 15:23:11.191569 test begin: paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 0],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 2 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.193288 test begin: paddle.column_stack(list[Tensor([5],"float64"),Tensor([0],"float64"),Tensor([5],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([5],"float64"),Tensor([0],"float64"),Tensor([5],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 5 but got size 0 for tensor number 1 in the list.
2025-03-05 15:23:11.194108 test begin: paddle.column_stack(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([0],"float64"),], )

[torch error] paddle.column_stack(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([0],"float64"),], ) 
 Sizes of tensors must match except in dimension 1. Expected size 5 but got size 0 for tensor number 2 in the list.
2025-03-05 15:23:11.194952 test begin: paddle.combinations(Tensor([0],"float32"), r=2, )

[Pass] paddle.combinations(Tensor([0],"float32"), r=2, )
2025-03-05 15:23:11.221030 test begin: paddle.combinations(Tensor([0],"float32"), r=2, with_replacement=True, )

[Pass] paddle.combinations(Tensor([0],"float32"), r=2, with_replacement=True, )
2025-03-05 15:23:11.231315 test begin: paddle.combinations(Tensor([0],"float32"), r=4, )

[Pass] paddle.combinations(Tensor([0],"float32"), r=4, )
2025-03-05 15:23:11.240077 test begin: paddle.combinations(Tensor([0],"float64"), 5, False, )

[Pass] paddle.combinations(Tensor([0],"float64"), 5, False, )
2025-03-05 15:23:11.249789 test begin: paddle.combinations(Tensor([0],"int32"), 1, True, )

[Pass] paddle.combinations(Tensor([0],"int32"), 1, True, )
2025-03-05 15:23:11.259826 test begin: paddle.combinations(Tensor([0],"int64"), 0, True, )

[Pass] paddle.combinations(Tensor([0],"int64"), 0, True, )
2025-03-05 15:23:11.283564 test begin: paddle.complex(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), )

[Pass] paddle.complex(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), )
2025-03-05 15:23:11.290943 test begin: paddle.complex(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), )

[torch error] paddle.complex(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (10) at non-singleton dimension 0
2025-03-05 15:23:11.293099 test begin: paddle.complex(Tensor([0, 3, 4],"float32"), Tensor([0, 3, 4],"float32"), )

[Pass] paddle.complex(Tensor([0, 3, 4],"float32"), Tensor([0, 3, 4],"float32"), )
2025-03-05 15:23:11.297289 test begin: paddle.complex(Tensor([0, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )

[torch error] paddle.complex(Tensor([0, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:23:11.298449 test begin: paddle.complex(Tensor([0, 3],"float32"), Tensor([0, 3],"float32"), )

[Pass] paddle.complex(Tensor([0, 3],"float32"), Tensor([0, 3],"float32"), )
2025-03-05 15:23:11.302276 test begin: paddle.complex(Tensor([0, 3],"float32"), Tensor([2, 3],"float32"), )

[torch error] paddle.complex(Tensor([0, 3],"float32"), Tensor([2, 3],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:23:11.303599 test begin: paddle.complex(Tensor([0],"float32"), Tensor([0],"float32"), )

[Pass] paddle.complex(Tensor([0],"float32"), Tensor([0],"float32"), )
2025-03-05 15:23:11.305995 test begin: paddle.complex(Tensor([0],"float32"), Tensor([2],"float32"), )

[torch error] paddle.complex(Tensor([0],"float32"), Tensor([2],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:23:11.306964 test begin: paddle.complex(Tensor([0],"float64"), Tensor([0],"float64"), )

[Pass] paddle.complex(Tensor([0],"float64"), Tensor([0],"float64"), )
2025-03-05 15:23:11.309154 test begin: paddle.complex(real=Tensor([0, 2, 3],"float32"), imag=Tensor([0, 2, 3],"float32"), )

[Pass] paddle.complex(real=Tensor([0, 2, 3],"float32"), imag=Tensor([0, 2, 3],"float32"), )
2025-03-05 15:23:11.311203 test begin: paddle.complex(real=Tensor([0, 2, 3],"float32"), imag=Tensor([9, 2, 3],"float32"), )

[torch error] paddle.complex(real=Tensor([0, 2, 3],"float32"), imag=Tensor([9, 2, 3],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (9) at non-singleton dimension 0
2025-03-05 15:23:11.312073 test begin: paddle.complex(real=Tensor([0, 2, 3],"float64"), imag=Tensor([0, 2, 3],"float64"), )

[Pass] paddle.complex(real=Tensor([0, 2, 3],"float64"), imag=Tensor([0, 2, 3],"float64"), )
2025-03-05 15:23:11.314385 test begin: paddle.complex(real=Tensor([0, 2, 3],"float64"), imag=Tensor([9, 2, 3],"float64"), )

[torch error] paddle.complex(real=Tensor([0, 2, 3],"float64"), imag=Tensor([9, 2, 3],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (9) at non-singleton dimension 0
2025-03-05 15:23:11.315314 test begin: paddle.complex(real=Tensor([0, 2],"float32"), imag=Tensor([0, 2],"float32"), )

[Pass] paddle.complex(real=Tensor([0, 2],"float32"), imag=Tensor([0, 2],"float32"), )
2025-03-05 15:23:11.317405 test begin: paddle.complex(real=Tensor([0, 2],"float32"), imag=Tensor([3, 2],"float32"), )

[torch error] paddle.complex(real=Tensor([0, 2],"float32"), imag=Tensor([3, 2],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (3) at non-singleton dimension 0
2025-03-05 15:23:11.318273 test begin: paddle.complex(real=Tensor([0, 2],"float64"), imag=Tensor([0, 2],"float64"), )

[Pass] paddle.complex(real=Tensor([0, 2],"float64"), imag=Tensor([0, 2],"float64"), )
2025-03-05 15:23:11.321299 test begin: paddle.complex(real=Tensor([0, 2],"float64"), imag=Tensor([3, 2],"float64"), )

[torch error] paddle.complex(real=Tensor([0, 2],"float64"), imag=Tensor([3, 2],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (3) at non-singleton dimension 0
2025-03-05 15:23:11.322419 test begin: paddle.complex(real=Tensor([0],"float32"), imag=Tensor([0],"float32"), )

[Pass] paddle.complex(real=Tensor([0],"float32"), imag=Tensor([0],"float32"), )
2025-03-05 15:23:11.324611 test begin: paddle.complex(real=Tensor([0],"float32"), imag=Tensor([9],"float32"), )

[torch error] paddle.complex(real=Tensor([0],"float32"), imag=Tensor([9],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (9) at non-singleton dimension 0
2025-03-05 15:23:11.325548 test begin: paddle.complex(real=Tensor([0],"float64"), imag=Tensor([0],"float64"), )

[Pass] paddle.complex(real=Tensor([0],"float64"), imag=Tensor([0],"float64"), )
2025-03-05 15:23:11.327833 test begin: paddle.complex(real=Tensor([0],"float64"), imag=Tensor([9],"float64"), )

[torch error] paddle.complex(real=Tensor([0],"float64"), imag=Tensor([9],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (9) at non-singleton dimension 0
2025-03-05 15:23:11.328780 test begin: paddle.complex(real=Tensor([3, 0],"float32"), imag=Tensor([3, 0],"float32"), )

[Pass] paddle.complex(real=Tensor([3, 0],"float32"), imag=Tensor([3, 0],"float32"), )
2025-03-05 15:23:11.331032 test begin: paddle.complex(real=Tensor([3, 0],"float32"), imag=Tensor([3, 2],"float32"), )

[torch error] paddle.complex(real=Tensor([3, 0],"float32"), imag=Tensor([3, 2],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:23:11.331907 test begin: paddle.complex(real=Tensor([3, 0],"float64"), imag=Tensor([3, 0],"float64"), )

[Pass] paddle.complex(real=Tensor([3, 0],"float64"), imag=Tensor([3, 0],"float64"), )
2025-03-05 15:23:11.334238 test begin: paddle.complex(real=Tensor([3, 0],"float64"), imag=Tensor([3, 2],"float64"), )

[torch error] paddle.complex(real=Tensor([3, 0],"float64"), imag=Tensor([3, 2],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:23:11.335090 test begin: paddle.complex(real=Tensor([3, 2],"float32"), imag=Tensor([0, 2],"float32"), )

[torch error] paddle.complex(real=Tensor([3, 2],"float32"), imag=Tensor([0, 2],"float32"), ) 
 The size of tensor a (3) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:23:11.335792 test begin: paddle.complex(real=Tensor([3, 2],"float32"), imag=Tensor([3, 0],"float32"), )

[torch error] paddle.complex(real=Tensor([3, 2],"float32"), imag=Tensor([3, 0],"float32"), ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:23:11.336480 test begin: paddle.complex(real=Tensor([3, 2],"float64"), imag=Tensor([0, 2],"float64"), )

[torch error] paddle.complex(real=Tensor([3, 2],"float64"), imag=Tensor([0, 2],"float64"), ) 
 The size of tensor a (3) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:23:11.337182 test begin: paddle.complex(real=Tensor([3, 2],"float64"), imag=Tensor([3, 0],"float64"), )

[torch error] paddle.complex(real=Tensor([3, 2],"float64"), imag=Tensor([3, 0],"float64"), ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:23:11.337837 test begin: paddle.complex(real=Tensor([9, 0, 3],"float32"), imag=Tensor([9, 0, 3],"float32"), )

[Pass] paddle.complex(real=Tensor([9, 0, 3],"float32"), imag=Tensor([9, 0, 3],"float32"), )
2025-03-05 15:23:11.341203 test begin: paddle.complex(real=Tensor([9, 0, 3],"float32"), imag=Tensor([9, 2, 3],"float32"), )

[torch error] paddle.complex(real=Tensor([9, 0, 3],"float32"), imag=Tensor([9, 2, 3],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:23:11.343137 test begin: paddle.complex(real=Tensor([9, 0, 3],"float64"), imag=Tensor([9, 0, 3],"float64"), )

[Pass] paddle.complex(real=Tensor([9, 0, 3],"float64"), imag=Tensor([9, 0, 3],"float64"), )
2025-03-05 15:23:11.345493 test begin: paddle.complex(real=Tensor([9, 0, 3],"float64"), imag=Tensor([9, 2, 3],"float64"), )

[torch error] paddle.complex(real=Tensor([9, 0, 3],"float64"), imag=Tensor([9, 2, 3],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:23:11.346373 test begin: paddle.complex(real=Tensor([9, 2, 0],"float32"), imag=Tensor([9, 2, 0],"float32"), )

[Pass] paddle.complex(real=Tensor([9, 2, 0],"float32"), imag=Tensor([9, 2, 0],"float32"), )
2025-03-05 15:23:11.349978 test begin: paddle.complex(real=Tensor([9, 2, 0],"float32"), imag=Tensor([9, 2, 3],"float32"), )

[torch error] paddle.complex(real=Tensor([9, 2, 0],"float32"), imag=Tensor([9, 2, 3],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (3) at non-singleton dimension 2
2025-03-05 15:23:11.351408 test begin: paddle.complex(real=Tensor([9, 2, 0],"float64"), imag=Tensor([9, 2, 0],"float64"), )

[Pass] paddle.complex(real=Tensor([9, 2, 0],"float64"), imag=Tensor([9, 2, 0],"float64"), )
2025-03-05 15:23:11.355092 test begin: paddle.complex(real=Tensor([9, 2, 0],"float64"), imag=Tensor([9, 2, 3],"float64"), )

[torch error] paddle.complex(real=Tensor([9, 2, 0],"float64"), imag=Tensor([9, 2, 3],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (3) at non-singleton dimension 2
2025-03-05 15:23:11.356214 test begin: paddle.complex(real=Tensor([9, 2, 3],"float32"), imag=Tensor([0, 2, 3],"float32"), )

[torch error] paddle.complex(real=Tensor([9, 2, 3],"float32"), imag=Tensor([0, 2, 3],"float32"), ) 
 The size of tensor a (9) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:23:11.356950 test begin: paddle.complex(real=Tensor([9, 2, 3],"float32"), imag=Tensor([9, 0, 3],"float32"), )

[torch error] paddle.complex(real=Tensor([9, 2, 3],"float32"), imag=Tensor([9, 0, 3],"float32"), ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:23:11.358186 test begin: paddle.complex(real=Tensor([9, 2, 3],"float32"), imag=Tensor([9, 2, 0],"float32"), )

[torch error] paddle.complex(real=Tensor([9, 2, 3],"float32"), imag=Tensor([9, 2, 0],"float32"), ) 
 The size of tensor a (3) must match the size of tensor b (0) at non-singleton dimension 2
2025-03-05 15:23:11.358998 test begin: paddle.complex(real=Tensor([9, 2, 3],"float64"), imag=Tensor([0, 2, 3],"float64"), )

[torch error] paddle.complex(real=Tensor([9, 2, 3],"float64"), imag=Tensor([0, 2, 3],"float64"), ) 
 The size of tensor a (9) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:23:11.360006 test begin: paddle.complex(real=Tensor([9, 2, 3],"float64"), imag=Tensor([9, 0, 3],"float64"), )

[torch error] paddle.complex(real=Tensor([9, 2, 3],"float64"), imag=Tensor([9, 0, 3],"float64"), ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:23:11.360947 test begin: paddle.complex(real=Tensor([9, 2, 3],"float64"), imag=Tensor([9, 2, 0],"float64"), )

[torch error] paddle.complex(real=Tensor([9, 2, 3],"float64"), imag=Tensor([9, 2, 0],"float64"), ) 
 The size of tensor a (3) must match the size of tensor b (0) at non-singleton dimension 2
2025-03-05 15:23:11.361758 test begin: paddle.complex(real=Tensor([9],"float32"), imag=Tensor([0],"float32"), )

[torch error] paddle.complex(real=Tensor([9],"float32"), imag=Tensor([0],"float32"), ) 
 The size of tensor a (9) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:23:11.362721 test begin: paddle.complex(real=Tensor([9],"float64"), imag=Tensor([0],"float64"), )

[torch error] paddle.complex(real=Tensor([9],"float64"), imag=Tensor([0],"float64"), ) 
 The size of tensor a (9) must match the size of tensor b (0) at non-singleton dimension 0
Traceback (most recent call last):
  File "/host_home/wanghuan29/APItest/PaddleAPITest/engine.py", line 1, in <module>
    from tester import TensorConfig, APIConfig, analyse_configs
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/__init__.py", line 1, in <module>
    from .base import APITestBase
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/base.py", line 2, in <module>
    from .api_config import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/__init__.py", line 1, in <module>
    from .config_analyzer import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/config_analyzer.py", line 3, in <module>
    import paddle
  File "/usr/local/lib/python3.9/dist-packages/paddle/__init__.py", line 38, in <module>
    from .base import core  # noqa: F401
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/__init__.py", line 204, in <module>
    __bootstrap__()
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/__init__.py", line 196, in __bootstrap__
    core.init_devices()
KeyboardInterrupt
2025-03-05 15:43:13.157793 test begin: paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, )

W0305 15:43:18.750229 155906 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0305 15:43:18.751051 155906 gpu_resources.cc:164] device: 0, cuDNN Version: 8.6.
[paddle error] paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 2, 3, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.309163 test begin: paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )

[paddle error] paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 2, 3, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.315032 test begin: paddle.dist(Tensor([0, 2],"float32"), Tensor([0, 2],"float32"), 0, )

[paddle error] paddle.dist(Tensor([0, 2],"float32"), Tensor([0, 2],"float32"), 0, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.319378 test begin: paddle.dist(Tensor([0, 2],"float32"), Tensor([2, 2],"float32"), 0, )

[torch error] paddle.dist(Tensor([0, 2],"float32"), Tensor([2, 2],"float32"), 0, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:43:49.321341 test begin: paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, )

[paddle error] paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 0, 3, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.325715 test begin: paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )

[paddle error] paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 0, 3, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.329585 test begin: paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), 0, )

[paddle error] paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), 0, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.332952 test begin: paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 2],"float32"), 0, )

[torch error] paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 2],"float32"), 0, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:43:49.334421 test begin: paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, )

[paddle error] paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 2, 0, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.337137 test begin: paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )

[torch error] paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 The size of tensor a (0) must match the size of tensor b (3) at non-singleton dimension 2
2025-03-05 15:43:49.339118 test begin: paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, )

[paddle error] paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 2, 3, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.343457 test begin: paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )

[paddle error] paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 2, 3, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.347637 test begin: paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, )

[torch error] paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.349298 test begin: paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, )

[torch error] paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.351047 test begin: paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, )

[torch error] paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, ) 
 The size of tensor a (3) must match the size of tensor b (0) at non-singleton dimension 2
2025-03-05 15:43:49.353617 test begin: paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, )

[torch error] paddle.dist(Tensor([2, 2, 3, 2],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 3
2025-03-05 15:43:49.355031 test begin: paddle.dist(Tensor([2, 2],"float32"), Tensor([0, 2],"float32"), 0, )

[torch error] paddle.dist(Tensor([2, 2],"float32"), Tensor([0, 2],"float32"), 0, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.356042 test begin: paddle.dist(Tensor([2, 2],"float32"), Tensor([2, 0],"float32"), 0, )

[torch error] paddle.dist(Tensor([2, 2],"float32"), Tensor([2, 0],"float32"), 0, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.357365 test begin: paddle.dist(x=Tensor([0, 1, 1, 4, 4],"float64"), y=Tensor([0, 8, 7, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([0, 1, 1, 4, 4],"float64"), y=Tensor([0, 8, 7, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 1, 1, 4, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.360788 test begin: paddle.dist(x=Tensor([0, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([0, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:43:49.363208 test begin: paddle.dist(x=Tensor([0, 1, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([0, 1, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 1, 4, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.366600 test begin: paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=-math.inf, )

[torch error] paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=-math.inf, ) 
 linalg.vector_norm cannot compute the -inf norm on an empty tensor because the operation does not have an identity
2025-03-05 15:43:49.369377 test begin: paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=0, )

[paddle error] paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=0, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 2].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.372509 test begin: paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=math.inf, )

[torch error] paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=math.inf, ) 
 linalg.vector_norm cannot compute the inf norm on an empty tensor because the operation does not have an identity
2025-03-05 15:43:49.373899 test begin: paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([2, 2],"float64"), p=-math.inf, )

[torch error] paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([2, 2],"float64"), p=-math.inf, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:43:49.375205 test begin: paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([2, 2],"float64"), p=0, )

[torch error] paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([2, 2],"float64"), p=0, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:43:49.376511 test begin: paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([2, 2],"float64"), p=math.inf, )

[torch error] paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([2, 2],"float64"), p=math.inf, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 0
2025-03-05 15:43:49.378091 test begin: paddle.dist(x=Tensor([0, 4, 1, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )

[paddle error] paddle.dist(x=Tensor([0, 4, 1, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 4, 1, 3].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.380648 test begin: paddle.dist(x=Tensor([0, 4],"float32"), y=Tensor([0, 4],"float32"), )

[paddle error] paddle.dist(x=Tensor([0, 4],"float32"), y=Tensor([0, 4],"float32"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.383406 test begin: paddle.dist(x=Tensor([0, 4],"float32"), y=Tensor([4, 4],"float32"), )

[torch error] paddle.dist(x=Tensor([0, 4],"float32"), y=Tensor([4, 4],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 0
2025-03-05 15:43:49.385516 test begin: paddle.dist(x=Tensor([0, 4],"float64"), y=Tensor([0, 4],"float64"), p=1, )

[paddle error] paddle.dist(x=Tensor([0, 4],"float64"), y=Tensor([0, 4],"float64"), p=1, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.388778 test begin: paddle.dist(x=Tensor([0, 4],"float64"), y=Tensor([4, 4],"float64"), p=1, )

[torch error] paddle.dist(x=Tensor([0, 4],"float64"), y=Tensor([4, 4],"float64"), p=1, ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 0
2025-03-05 15:43:49.390396 test begin: paddle.dist(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )

[paddle error] paddle.dist(x=Tensor([0],"float64"), y=Tensor([0],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.394216 test begin: paddle.dist(x=Tensor([0],"float64"), y=Tensor([10],"float64"), )

[torch error] paddle.dist(x=Tensor([0],"float64"), y=Tensor([10],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (10) at non-singleton dimension 0
2025-03-05 15:43:49.396063 test begin: paddle.dist(x=Tensor([0],"float64"), y=Tensor([4, 10],"float64"), )

[torch error] paddle.dist(x=Tensor([0],"float64"), y=Tensor([4, 10],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (10) at non-singleton dimension 1
2025-03-05 15:43:49.397325 test begin: paddle.dist(x=Tensor([0],"float64"), y=Tensor([4, 10],"float64"), p=4, )

[torch error] paddle.dist(x=Tensor([0],"float64"), y=Tensor([4, 10],"float64"), p=4, ) 
 The size of tensor a (0) must match the size of tensor b (10) at non-singleton dimension 1
2025-03-05 15:43:49.398330 test begin: paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), )

[paddle error] paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), ) 
 (InvalidArgument) The Input(Y) has not been initialized properly. The shape of Input(Y) = [0, 10].
  [Hint: Expected common::product(y_dims) != 0, but received common::product(y_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1382)

2025-03-05 15:43:49.400729 test begin: paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), p=4, )

[paddle error] paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), p=4, ) 
 (InvalidArgument) The Input(Y) has not been initialized properly. The shape of Input(Y) = [0, 10].
  [Hint: Expected common::product(y_dims) != 0, but received common::product(y_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1382)

2025-03-05 15:43:49.402811 test begin: paddle.dist(x=Tensor([10],"float64"), y=Tensor([0],"float64"), )

[torch error] paddle.dist(x=Tensor([10],"float64"), y=Tensor([0],"float64"), ) 
 The size of tensor a (10) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.404255 test begin: paddle.dist(x=Tensor([10],"float64"), y=Tensor([4, 0],"float64"), )

[torch error] paddle.dist(x=Tensor([10],"float64"), y=Tensor([4, 0],"float64"), ) 
 The size of tensor a (10) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.405143 test begin: paddle.dist(x=Tensor([10],"float64"), y=Tensor([4, 0],"float64"), p=4, )

[torch error] paddle.dist(x=Tensor([10],"float64"), y=Tensor([4, 0],"float64"), p=4, ) 
 The size of tensor a (10) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.406092 test begin: paddle.dist(x=Tensor([2, 0, 1, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )

[torch error] paddle.dist(x=Tensor([2, 0, 1, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 1
2025-03-05 15:43:49.406901 test begin: paddle.dist(x=Tensor([2, 0, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 0, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 0, 1, 4, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.409919 test begin: paddle.dist(x=Tensor([2, 0, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 0, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (8) at non-singleton dimension 1
2025-03-05 15:43:49.412416 test begin: paddle.dist(x=Tensor([2, 0, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 0, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (7) at non-singleton dimension 1
2025-03-05 15:43:49.418734 test begin: paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=-math.inf, )

[torch error] paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=-math.inf, ) 
 linalg.vector_norm cannot compute the -inf norm on an empty tensor because the operation does not have an identity
2025-03-05 15:43:49.420847 test begin: paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=0, )

[paddle error] paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=0, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.425032 test begin: paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=math.inf, )

[torch error] paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=math.inf, ) 
 linalg.vector_norm cannot compute the inf norm on an empty tensor because the operation does not have an identity
2025-03-05 15:43:49.426843 test begin: paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 2],"float64"), p=-math.inf, )

[torch error] paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 2],"float64"), p=-math.inf, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:43:49.428892 test begin: paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 2],"float64"), p=0, )

[torch error] paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 2],"float64"), p=0, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:43:49.430076 test begin: paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 2],"float64"), p=math.inf, )

[torch error] paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 2],"float64"), p=math.inf, ) 
 The size of tensor a (0) must match the size of tensor b (2) at non-singleton dimension 1
2025-03-05 15:43:49.431217 test begin: paddle.dist(x=Tensor([2, 1, 0, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 0, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 1, 0, 4, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.434040 test begin: paddle.dist(x=Tensor([2, 1, 0, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 0, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (7) at non-singleton dimension 2
2025-03-05 15:43:49.435888 test begin: paddle.dist(x=Tensor([2, 1, 0, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 0, 4],"float64"), y=Tensor([7, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 1, 0, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.438814 test begin: paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 0, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 0, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 1, 1, 0, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.442480 test begin: paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 1, 1, 0, 4].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.445075 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 0],"float64"), y=Tensor([2, 8, 7, 1, 0],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 1, 4, 0],"float64"), y=Tensor([2, 8, 7, 1, 0],"float64"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 1, 1, 4, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.448941 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 0],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 1, 4, 0],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 4
2025-03-05 15:43:49.450347 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([0, 8, 7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([0, 8, 7, 1, 4],"float64"), ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.451495 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(Y) has not been initialized properly. The shape of Input(Y) = [2, 0, 7, 1, 4].
  [Hint: Expected common::product(y_dims) != 0, but received common::product(y_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1382)

2025-03-05 15:43:49.453793 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(Y) has not been initialized properly. The shape of Input(Y) = [2, 8, 0, 1, 4].
  [Hint: Expected common::product(y_dims) != 0, but received common::product(y_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1382)

2025-03-05 15:43:49.455862 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 0, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 0, 4],"float64"), ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 3
2025-03-05 15:43:49.467839 test begin: paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 0],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 7, 1, 0],"float64"), ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 4
2025-03-05 15:43:49.469146 test begin: paddle.dist(x=Tensor([2, 1, 4, 0],"float64"), y=Tensor([7, 1, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 4, 0],"float64"), y=Tensor([7, 1, 4],"float64"), ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 3
2025-03-05 15:43:49.470251 test begin: paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([0, 1, 4],"float64"), )

[paddle error] paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([0, 1, 4],"float64"), ) 
 (InvalidArgument) The Input(Y) has not been initialized properly. The shape of Input(Y) = [0, 1, 4].
  [Hint: Expected common::product(y_dims) != 0, but received common::product(y_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1382)

2025-03-05 15:43:49.473225 test begin: paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([7, 0, 4],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([7, 0, 4],"float64"), ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 2
2025-03-05 15:43:49.474682 test begin: paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([7, 1, 0],"float64"), )

[torch error] paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([7, 1, 0],"float64"), ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 3
2025-03-05 15:43:49.475685 test begin: paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([0, 2],"float64"), p=-math.inf, )

[torch error] paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([0, 2],"float64"), p=-math.inf, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.476442 test begin: paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([0, 2],"float64"), p=0, )

[torch error] paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([0, 2],"float64"), p=0, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.477190 test begin: paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([0, 2],"float64"), p=math.inf, )

[torch error] paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([0, 2],"float64"), p=math.inf, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.477955 test begin: paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([2, 0],"float64"), p=-math.inf, )

[torch error] paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([2, 0],"float64"), p=-math.inf, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.478933 test begin: paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([2, 0],"float64"), p=0, )

[torch error] paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([2, 0],"float64"), p=0, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.479683 test begin: paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([2, 0],"float64"), p=math.inf, )

[torch error] paddle.dist(x=Tensor([2, 2],"float64"), y=Tensor([2, 0],"float64"), p=math.inf, ) 
 The size of tensor a (2) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.480408 test begin: paddle.dist(x=Tensor([2, 4, 0, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )

[torch error] paddle.dist(x=Tensor([2, 4, 0, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, ) 
 The size of tensor a (0) must match the size of tensor b (3) at non-singleton dimension 2
2025-03-05 15:43:49.481357 test begin: paddle.dist(x=Tensor([2, 4, 1, 0],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )

[paddle error] paddle.dist(x=Tensor([2, 4, 1, 0],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [2, 4, 1, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.483933 test begin: paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([0, 3, 1],"float64"), p=7, )

[torch error] paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([0, 3, 1],"float64"), p=7, ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.485172 test begin: paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([4, 0, 1],"float64"), p=7, )

[paddle error] paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([4, 0, 1],"float64"), p=7, ) 
 (InvalidArgument) The Input(Y) has not been initialized properly. The shape of Input(Y) = [4, 0, 1].
  [Hint: Expected common::product(y_dims) != 0, but received common::product(y_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1382)

2025-03-05 15:43:49.487553 test begin: paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([4, 3, 0],"float64"), p=7, )

[torch error] paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([4, 3, 0],"float64"), p=7, ) 
 The size of tensor a (3) must match the size of tensor b (0) at non-singleton dimension 3
2025-03-05 15:43:49.488771 test begin: paddle.dist(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )

[paddle error] paddle.dist(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [4, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.492038 test begin: paddle.dist(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )

[torch error] paddle.dist(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 1
2025-03-05 15:43:49.493261 test begin: paddle.dist(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), p=1, )

[paddle error] paddle.dist(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), p=1, ) 
 (InvalidArgument) The Input(X) has not been initialized properly. The shape of Input(X) = [4, 0].
  [Hint: Expected common::product(x_dims) != 0, but received common::product(x_dims):0 == 0:0.] (at ../paddle/phi/infermeta/binary.cc:1376)

2025-03-05 15:43:49.497334 test begin: paddle.dist(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), p=1, )

[torch error] paddle.dist(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), p=1, ) 
 The size of tensor a (0) must match the size of tensor b (4) at non-singleton dimension 1
2025-03-05 15:43:49.498970 test begin: paddle.dist(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )

[torch error] paddle.dist(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.499797 test begin: paddle.dist(x=Tensor([4, 4],"float32"), y=Tensor([4, 0],"float32"), )

[torch error] paddle.dist(x=Tensor([4, 4],"float32"), y=Tensor([4, 0],"float32"), ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.500545 test begin: paddle.dist(x=Tensor([4, 4],"float64"), y=Tensor([0, 4],"float64"), p=1, )

[torch error] paddle.dist(x=Tensor([4, 4],"float64"), y=Tensor([0, 4],"float64"), p=1, ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 0
2025-03-05 15:43:49.501306 test begin: paddle.dist(x=Tensor([4, 4],"float64"), y=Tensor([4, 0],"float64"), p=1, )

[torch error] paddle.dist(x=Tensor([4, 4],"float64"), y=Tensor([4, 0],"float64"), p=1, ) 
 The size of tensor a (4) must match the size of tensor b (0) at non-singleton dimension 1
2025-03-05 15:43:49.502252 test begin: paddle.dot(Tensor([0],"float32"), Tensor([0],"float32"), )

[accuracy error] paddle.dot(Tensor([0],"float32"), Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1 / 1 (100%)
Max absolute difference: 0.35092852
Max relative difference: inf
 x: array(0.350929, dtype=float32)
 y: array(0., dtype=float32)
2025-03-05 15:43:55.029721 test begin: paddle.dot(Tensor([0],"float32"), Tensor([1],"float32"), )

[torch error] paddle.dot(Tensor([0],"float32"), Tensor([1],"float32"), ) 
 inconsistent tensor size, expected tensor [0] and src [1] to have the same number of elements, but got 0 and 1 elements respectively
2025-03-05 15:43:55.031510 test begin: paddle.dot(Tensor([1],"float32"), Tensor([0],"float32"), )

[torch error] paddle.dot(Tensor([1],"float32"), Tensor([0],"float32"), ) 
 inconsistent tensor size, expected tensor [1] and src [0] to have the same number of elements, but got 1 and 0 elements respectively
2025-03-05 15:43:55.032276 test begin: paddle.dot(x=Tensor([0],"float32"), y=Tensor([0],"float32"), )

[accuracy error] paddle.dot(x=Tensor([0],"float32"), y=Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1 / 1 (100%)
Max absolute difference: 0.3481032
Max relative difference: inf
 x: array(0.348103, dtype=float32)
 y: array(0., dtype=float32)
2025-03-05 15:43:55.035360 test begin: paddle.dot(x=Tensor([0],"float32"), y=Tensor([6],"float32"), )

[torch error] paddle.dot(x=Tensor([0],"float32"), y=Tensor([6],"float32"), ) 
 inconsistent tensor size, expected tensor [0] and src [6] to have the same number of elements, but got 0 and 6 elements respectively
2025-03-05 15:43:55.036379 test begin: paddle.dot(x=Tensor([6],"float32"), y=Tensor([0],"float32"), )

[torch error] paddle.dot(x=Tensor([6],"float32"), y=Tensor([0],"float32"), ) 
 inconsistent tensor size, expected tensor [6] and src [0] to have the same number of elements, but got 6 and 0 elements respectively
2025-03-05 15:43:55.037101 test begin: paddle.dsplit(Tensor([0, 3, 6],"int64"), list[-1,1,3,], )

[Pass] paddle.dsplit(Tensor([0, 3, 6],"int64"), list[-1,1,3,], )
2025-03-05 15:43:55.045063 test begin: paddle.dsplit(Tensor([0, 3, 6],"int64"), list[-1,], )

[Pass] paddle.dsplit(Tensor([0, 3, 6],"int64"), list[-1,], )
2025-03-05 15:43:55.047433 test begin: paddle.dsplit(Tensor([0, 3, 6],"int64"), list[2,4,], )

[Pass] paddle.dsplit(Tensor([0, 3, 6],"int64"), list[2,4,], )
2025-03-05 15:43:55.049424 test begin: paddle.dsplit(Tensor([0, 3, 6],"int64"), tuple(2,1,3,), )

[Pass] paddle.dsplit(Tensor([0, 3, 6],"int64"), tuple(2,1,3,), )
2025-03-05 15:43:55.051449 test begin: paddle.dsplit(Tensor([4, 0, 6],"int64"), list[-1,1,3,], )

[Pass] paddle.dsplit(Tensor([4, 0, 6],"int64"), list[-1,1,3,], )
2025-03-05 15:43:55.053339 test begin: paddle.dsplit(Tensor([4, 0, 6],"int64"), list[-1,], )

[Pass] paddle.dsplit(Tensor([4, 0, 6],"int64"), list[-1,], )
2025-03-05 15:43:55.055428 test begin: paddle.dsplit(Tensor([4, 0, 6],"int64"), list[2,4,], )

[Pass] paddle.dsplit(Tensor([4, 0, 6],"int64"), list[2,4,], )
2025-03-05 15:43:55.057126 test begin: paddle.dsplit(Tensor([4, 0, 6],"int64"), tuple(2,1,3,), )

[Pass] paddle.dsplit(Tensor([4, 0, 6],"int64"), tuple(2,1,3,), )
2025-03-05 15:43:55.059034 test begin: paddle.dsplit(Tensor([4, 3, 0],"int64"), list[-1,1,3,], )

[Pass] paddle.dsplit(Tensor([4, 3, 0],"int64"), list[-1,1,3,], )
2025-03-05 15:43:55.060870 test begin: paddle.dsplit(Tensor([4, 3, 0],"int64"), list[-1,], )

[Pass] paddle.dsplit(Tensor([4, 3, 0],"int64"), list[-1,], )
2025-03-05 15:43:55.062261 test begin: paddle.dsplit(Tensor([4, 3, 0],"int64"), list[2,4,], )

[Pass] paddle.dsplit(Tensor([4, 3, 0],"int64"), list[2,4,], )
2025-03-05 15:43:55.063961 test begin: paddle.dsplit(Tensor([4, 3, 0],"int64"), tuple(2,1,3,), )

[Pass] paddle.dsplit(Tensor([4, 3, 0],"int64"), tuple(2,1,3,), )
2025-03-05 15:43:55.065767 test begin: paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.067282 test begin: paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.068634 test begin: paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.069834 test begin: paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.071014 test begin: paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.072177 test begin: paddle.dstack(list[Tensor([0, 1, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.073310 test begin: paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.074687 test begin: paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.075830 test begin: paddle.dstack(list[Tensor([0, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.076982 test begin: paddle.dstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.078197 test begin: paddle.dstack(list[Tensor([0],"float64"),Tensor([1, 2, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([0],"float64"),Tensor([1, 2, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 2 for tensor number 1 in the list.
2025-03-05 15:43:55.079220 test begin: paddle.dstack(list[Tensor([0],"float64"),Tensor([1, 2],"float64"),], )

[torch error] paddle.dstack(list[Tensor([0],"float64"),Tensor([1, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 2 for tensor number 1 in the list.
2025-03-05 15:43:55.079942 test begin: paddle.dstack(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.080770 test begin: paddle.dstack(list[Tensor([0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.081912 test begin: paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.083084 test begin: paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.084171 test begin: paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.085273 test begin: paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.086417 test begin: paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.087482 test begin: paddle.dstack(list[Tensor([1, 0, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.088641 test begin: paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.091037 test begin: paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.092274 test begin: paddle.dstack(list[Tensor([1, 0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.093973 test begin: paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.095450 test begin: paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[Pass] paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
2025-03-05 15:43:55.098514 test begin: paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.099969 test begin: paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.101341 test begin: paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[Pass] paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
2025-03-05 15:43:55.104070 test begin: paddle.dstack(list[Tensor([1, 1, 0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.105782 test begin: paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.107311 test begin: paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 0 but got size 1 for tensor number 1 in the list.
2025-03-05 15:43:55.108675 test begin: paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),], )

[paddle error] paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),], ) 
 (InvalidArgument) concat(): argument 'x' (position 0) must be list of Tensors, but got empty list (at ../paddle/fluid/pybind/eager_utils.cc:1400)

2025-03-05 15:43:55.109985 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.111240 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.112205 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[Pass] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
2025-03-05 15:43:55.114551 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.115632 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.116607 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.117553 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )

[Pass] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
2025-03-05 15:43:55.119929 test begin: paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.120990 test begin: paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.121952 test begin: paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.122945 test begin: paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], )

[Pass] paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], )
2025-03-05 15:43:55.125476 test begin: paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.126745 test begin: paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.127844 test begin: paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], )

[Pass] paddle.dstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], )
2025-03-05 15:43:55.130007 test begin: paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.130947 test begin: paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.131814 test begin: paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.132712 test begin: paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.133603 test begin: paddle.dstack(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.134434 test begin: paddle.dstack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], )

[torch error] paddle.dstack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 2 in the list.
2025-03-05 15:43:55.135259 test begin: paddle.dstack(list[Tensor([2],"float64"),Tensor([0, 2, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([2],"float64"),Tensor([0, 2, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.136000 test begin: paddle.dstack(list[Tensor([2],"float64"),Tensor([0, 2],"float64"),], )

[torch error] paddle.dstack(list[Tensor([2],"float64"),Tensor([0, 2],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 1 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.136734 test begin: paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 0, 1],"float64"),], )

[torch error] paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 0, 1],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 2 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.137946 test begin: paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 0],"float64"),], )

[torch error] paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 0],"float64"),], ) 
 Sizes of tensors must match except in dimension 2. Expected size 2 but got size 0 for tensor number 1 in the list.
2025-03-05 15:43:55.138763 test begin: paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 2, 0],"float64"),], )

[Pass] paddle.dstack(list[Tensor([2],"float64"),Tensor([1, 2, 0],"float64"),], )
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/paddle/base/multiprocess_utils.py", line 65, in _func_executor
    def _func_executor():
KeyboardInterrupt
Traceback (most recent call last):
  File "/host_home/wanghuan29/APItest/PaddleAPITest/engine.py", line 1, in <module>
    from tester import TensorConfig, APIConfig, analyse_configs
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/__init__.py", line 1, in <module>
    from .base import APITestBase
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/base.py", line 2, in <module>
    from .api_config import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/__init__.py", line 1, in <module>
    from .config_analyzer import TensorConfig, APIConfig, analyse_configs, USE_CACHED_NUMPY, cached_numpy
  File "/host_home/wanghuan29/APItest/PaddleAPITest/tester/api_config/config_analyzer.py", line 9, in <module>
    import torch
  File "/usr/local/lib/python3.9/dist-packages/torch/__init__.py", line 2016, in <module>
    from torch import _VF as _VF, functional as functional  # usort: skip
  File "/usr/local/lib/python3.9/dist-packages/torch/functional.py", line 7, in <module>
    import torch.nn.functional as F
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/__init__.py", line 8, in <module>
    from torch.nn.modules import *  # usort: skip # noqa: F403
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 680, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 846, in exec_module
  File "<frozen importlib._bootstrap_external>", line 978, in get_code
  File "<frozen importlib._bootstrap_external>", line 647, in _compile_bytecode
KeyboardInterrupt
